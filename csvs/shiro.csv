Post Link,title,Body,Tags,Score,AcceptedAnswerId
"4991084","Shiro vs. SpringSecurity","<p>I have currently evaluating Java based security frameworks, I am a Spring 3.0 user so it seemed that SpringSecurity would be the right Choice, but Spring security seems to suffer from excessive complexity, it certainly does not seem like it is making security easier to implement, Shiro seems to be much more coherent and easier to understand. I am looking for lists of pros and cons between these two frameworks.</p>
","<java><spring><spring-security><shiro>","126","4997452"
"11327631","Remove jsessionid from URL","<p>I'm working on a project with the following technologies:</p>

<ul>
<li>Spring</li>
<li>ShiroFilter</li>
<li>PrettyFaces</li>
<li>Tomcat server</li>
</ul>

<p>While I'm deploying it on tomcat server, I'm getting a <code>""JSESSIONID 456jghd787aa""</code> added at the end of the URL.</p>

<p>I was trying to resolve this but I'm not able to do that.</p>
","<spring><tomcat6><shiro><prettyfaces>","20",""
"11500646","Spring security vs Apache Shiro","<p>What I have researched so far most people are saying Apache Shiro is easy to use and easy to integrate with CAS (for SSO etc). Just to ask if anyone has experience using both of them and which one to use and why one is better than other?</p>
","<spring><apache><security><spring-security><shiro>","41","11500744"
"17755893","NoSuchMethodError: org.slf4j.impl.StaticLoggerBinder.getSingleton()","<p>The issue was caused by one of the dependencies in my pom.xml [cxf-bundle-jaxrs] which internally uses lower version of slf4j. I managed to resolve this issue by upgrading this dependency to the latest release. Thanks everyone.</p>

<p>I'm trying to add Apache Shiro to my CXF Spring web application. When I start up my tomcat 7 I get the following error</p>

<pre><code>Caused by: java.lang.NoSuchMethodError: org.slf4j.impl.StaticLoggerBinder.getSingleton()Lorg/slf4j/impl/StaticLoggerBinder;
at org.slf4j.LoggerFactory.bind(LoggerFactory.java:121)
at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:111)
at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:268)
at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:241)
at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:254)
at org.apache.shiro.spring.LifecycleBeanPostProcessor.&lt;clinit&gt;(LifecycleBeanPostProcessor.java:51)
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:100)
at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:61)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:877)
... 25 more
</code></pre>

<p>and my pom.xml for shiro and slf4j is </p>

<pre><code>&lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
        &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
        &lt;version&gt;1.6.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;log4j&lt;/groupId&gt;
        &lt;artifactId&gt;log4j&lt;/artifactId&gt;
        &lt;version&gt;1.2.16&lt;/version&gt;
        &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;/dependency&gt;
</code></pre>

<p>I have tried every possible solution by googling, but no luck.</p>
","<java><log4j><slf4j><shiro>","8",""
"19382070","keep getting javax.faces.application.ViewExpiredException: viewId with jsf 2","<p>Whatever I do I get javax.faces.application.ViewExpiredException: viewId. I know how to handle the exception (redirect to the main page again if I get the error), the issue is that any action I call from a commandButton is not executed.</p>

<p>Basically I have a simple view with a commandButton with an action.. I press it and I get the viewExpiredException or if I handle the error, I don't get the error messages but still my commandButton does not work.</p>

<p>I tried adding this:</p>

<pre><code> &lt;context-param&gt;
     &lt;param-name&gt;javax.faces.PARTIAL_STATE_SAVING&lt;/param-name&gt;
     &lt;param-value&gt;client&lt;/param-value&gt;
 &lt;/context-param&gt;
</code></pre>

<p>but it doesn't work. I don't know what is going on..</p>

<p>This is my view:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
            ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html
    xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets""
    lang=""es""&gt;
&lt;div class=""container""&gt;
    &lt;h:form id=""principal""&gt;
        &lt;h1&gt;Sistema de carga de publicaciones&lt;/h1&gt;

        &lt;h:outputText value=""Ingrese el año por el que desea buscar publicaciones"" /&gt;
        &lt;h:inputText
            id=""year""
            value=""#{publicaciones.año}"" /&gt;

        &lt;h:commandButton
            style=""display:block""
            id=""boton-codigo-facultad""
            value=""Buscar""
            type=""submit""&gt;
        &lt;/h:commandButton&gt;

        &lt;h:panelGroup id=""output""&gt;
            &lt;h:outputText
                style=""display:block""
                value=""Total publicaciones en la DB:#{publicaciones.totalPublicacionesDB}"" /&gt;
            &lt;h:outputText
                style=""display:block""
                value=""Publicaciones obtenidas desde el WS:"" /&gt;
            &lt;h:outputText
                style=""display:block""
                value=""Publicaciones nuevas:"" /&gt;
        &lt;/h:panelGroup&gt;
        &lt;h:commandButton
            style=""display:block""
            id=""insertar""
            value=""Cargar publicacion""
            action=""#{insert.insertPublicacionDB}""&gt;
        &lt;/h:commandButton&gt;
    &lt;/h:form&gt;
&lt;/div&gt;
&lt;/html&gt;
</code></pre>

<p>backing bean:</p>

<pre><code>@ManagedBean(name=""insert"")
@ViewScoped
public class comparaDatosBean implements Serializable {

    private static final long serialVersionUID = 1L;
    Map&lt;String, Object&gt; parametros=new HashMap&lt;String, Object&gt;();
    Map&lt;String, Object&gt; params2=new HashMap&lt;String, Object&gt;();

    @PostConstruct
    public void init(){
        System.out.println(""pase por aqui!!"");
    }

    public void insertPublicacionDB() throws SQLException {
        ApplicationContext applicationContext = FacesContextUtils.getWebApplicationContext(FacesContext.getCurrentInstance());
        ControllerPublicacion controlador= (ControllerPublicacion) applicationContext.getBean(""controllerPublicaciones"");
        parametros.put(""ut"",""234567876545555"");
        parametros.put(""py"", 2013);

        params2.put(""ut"", ""234567876545555"");
        params2.put(""bp"",""asjñldfkjsñd"");
        params2.put(""la"", ""Español"");
        params2.put(""ti"",""Publicacion de prueba"");
        params2.put(""py"",2013);
        params2.put(""sn"", ""234wf"");
        params2.put(""di"", ""asdfsf"");
        params2.put(""j9"", """");
        params2.put(""dt"", """");
        params2.put(""ga"", """");
        params2.put(""dt"", """");
        params2.put(""so"", """");
        params2.put(""fx"", """");
        params2.put(""ep"", """");
        params2.put(""issue"", """");
        params2.put(""parte"","""");
        params2.put(""vl"", """");
        params2.put(""rp"", """");
        params2.put(""vinculada"", null);
        params2.put(""ji"", """");
        params2.put(""pd"","""");
        params2.put(""pg"", """");
        params2.put(""pa"","""");
        params2.put(""ab"","""");
        params2.put(""pi"", """");
        params2.put(""numero_articulo"", null);
        params2.put(""tipo_carga_revista"",null);
        params2.put(""id"",null );
        params2.put(""su"", """");
        System.out.println(params2.get(""la""));
        if(controlador.existeEnDB(parametros)&gt;0){
            System.out.println(""La publicacion ya existe en la Base de Datos"");
        } else {
            controlador.insertPublicacion(params2);
            System.out.println(""la publicacion ha sido añadida"");
        }

    }

    public Map&lt;String, Object&gt; getParametros() {
        return parametros;
    }

    public void setParametros(Map&lt;String, Object&gt; parametros) {
        this.parametros = parametros;
    }

    public Map&lt;String, Object&gt; getParams2() {
        return params2;
    }

    public void setParams2(Map&lt;String, Object&gt; params2) {
        this.params2 = params2;
    }

}
</code></pre>

<p>Error message:</p>

<pre><code>GRAVE: Servlet.service() for servlet [Faces Servlet] in context with path [/test] threw exception [viewId:/main.jsf - No se pudo restablecer la vista /main.jsf.] with root cause
javax.faces.application.ViewExpiredException: viewId:/main.jsf - No se pudo restablecer la vista /main.jsf.
    at com.sun.faces.lifecycle.RestoreViewPhase.execute(RestoreViewPhase.java:212)
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)
    at com.sun.faces.lifecycle.RestoreViewPhase.doPhase(RestoreViewPhase.java:110)
    at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:312)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:619)
</code></pre>

<p>What I need is to know why this is happening, not how to handle the exception.. I can't call any action from a commandButton because nothing happens.</p>
","<jsf-2><shiro><commandbutton><viewexpiredexception>","5","19641968"
"3271676","How to easily implement ""who is online"" in Grails or Java Application?","<p>I am building a community website in grails (using Apache Shiro for security and authentication system) and I would like to implement the feature ""who is online?"". </p>

<p>This url <a href=""http://cksource.com/forums/viewonline.php"" rel=""noreferrer"">http://cksource.com/forums/viewonline.php</a> (see snapshot below if you do not have acess to this Url) gives an example of what I would like to achieve.</p>

<p>How can I do that in the most simple way? Is there any existing solution in Grails or in Java ?</p>

<p>Thank you.</p>

<p>Snapshot : <a href=""http://www.freeimagehosting.net/uploads/th.2de8468a86.png"" rel=""noreferrer"">Snapshot of Who is online page http://www.freeimagehosting.net/uploads/th.2de8468a86.png</a> or see here : <a href=""http://www.freeimagehosting.net/image.php?2de8468a86.png"" rel=""noreferrer"">http://www.freeimagehosting.net/image.php?2de8468a86.png</a></p>
","<java><grails><grails-plugin><shiro>","8",""
"7743749","Shiro Authorization Permission check using Annotation not working","<p>Platform: Shiro 1.1.0, Spring 3.0.5</p>

<p>I'm trying to secure the MVC Controller methods using Shiro annotation. However something is wrong with annotations. Regular calls are just working OK. There is nothing specific in Shiro debug also. </p>

<p>My shiro configuration:</p>

<pre><code>&lt;!-- Security Manager --&gt;
    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""sessionMode"" value=""native"" /&gt;
        &lt;property name=""realm"" ref=""jdbcRealm"" /&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;/bean&gt;

    &lt;!-- Caching --&gt;
    &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
        &lt;property name=""cacheManager"" ref=""ehCacheManager"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""ehCacheManager""
        class=""org.springframework.cache.ehcache.EhCacheManagerFactoryBean"" /&gt;

    &lt;bean id=""sessionDAO""
        class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"" /&gt;

    &lt;bean id=""sessionManager""
        class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
        &lt;property name=""sessionDAO"" ref=""sessionDAO"" /&gt;
    &lt;/bean&gt;


    &lt;!-- JDBC Realm Settings --&gt;
    &lt;bean id=""jdbcRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
        &lt;property name=""name"" value=""jdbcRealm"" /&gt;
        &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
        &lt;property name=""authenticationQuery""
            value=""SELECT password FROM system_user_accounts WHERE username=? and status=1"" /&gt;
        &lt;property name=""userRolesQuery""
            value=""SELECT role_name FROM system_roles r, system_user_accounts u, system_user_roles ur WHERE u.user_id=ur.user_id AND r.role_id=ur.role_id AND u.username=?"" /&gt;
        &lt;property name=""permissionsQuery""
            value=""SELECT permission_name FROM system_roles r, system_permissions p, system_role_permission rp WHERE r.role_id=rp.role_id AND p.permission_id=rp.permission_id AND r.role_name=?"" /&gt;
        &lt;property name=""permissionsLookupEnabled"" value=""true""&gt;&lt;/property&gt;
    &lt;/bean&gt;

    &lt;!-- Spring Integration --&gt;
    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

    &lt;!-- Enable Shiro Annotations for Spring-configured beans. Only run after 
        the lifecycleBeanProcessor has run: --&gt;
    &lt;bean id=""annotationProxy""
        class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
        depends-on=""lifecycleBeanPostProcessor"" /&gt;
    &lt;bean
        class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;/bean&gt;

    &lt;!-- Secure Spring remoting: Ensure any Spring Remoting method invocations 
        can be associated with a Subject for security checks. --&gt;
    &lt;bean id=""secureRemoteInvocationExecutor""
        class=""org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;/bean&gt;

    &lt;!-- Shiro filter --&gt;
    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""/login"" /&gt;
        &lt;property name=""successUrl"" value=""/dashboard"" /&gt;
        &lt;property name=""unauthorizedUrl"" value=""/error"" /&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt; 
                &lt;!-- !!! Order matters !!! --&gt;
                /authenticate = anon
                /login = anon
                /logout = anon
                /error = anon
                /** = authc
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>I can get the following working correctly:</p>

<pre><code>@RequestMapping(value=""/form"") 
public String viewPatientForm(Model model, @RequestParam(value=""patientId"", required=false) Long patientId){    
   if (!SecurityUtils.getSubject().isPermitted(""hc:viewPatient"")){
      logger.error(""Operation not permitted"");
      throw new AuthorizationException(""No Permission""); 
   }
}
</code></pre>

<p>But the below doesn't work:</p>

<pre><code>@RequiresPermissions(""hc:patientView"")
    @RequestMapping(value=""/form"")
    public String viewPatientForm(Model model, @RequestParam(value=""patientId"", required=false) Long patientId){    
</code></pre>

<p>Am I missing something? Please help.</p>
","<spring><shiro>","6","8305355"
"19170876","persistence.xml to import database parameters values from .properties file","<p>Edit: <a href=""https://stackoverflow.com/q/17044604/597349"">not duplicate but almost</a></p>

<p>I would like to have my app persistence.xml to be something like</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;persistence xmlns=""http://java.sun.com/xml/ns/persistence""
                xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
                xsi:schemaLocation=""http://java.sun.com/xml/ns/persistence 
                http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd""
                version=""1.0""&gt;
   &lt;persistence-unit name=""appName"" transaction-type=""RESOURCE_LOCAL""&gt;
        &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;
        &lt;properties&gt;
            &lt;property name=""hibernate.dialect"" value=""${db.dialect'}""/&gt;
            &lt;property name=""javax.persistence.jdbc.driver"" value=""${db.driver}""/&gt;
            &lt;property name=""javax.persistence.jdbc.user"" value=""${db.user}""/&gt;
            &lt;property name=""javax.persistence.jdbc.password"" value=""${db.password}""/&gt;
            &lt;property name=""javax.persistence.jdbc.url"" value=""${db.url}""/&gt;
        &lt;/properties&gt;
    &lt;/persistence-unit&gt;
&lt;/persistence&gt;
</code></pre>

<p>getting these placeholder values from a simple text file somewhere in my source folders.</p>

<p>I read about that it's possible when using Spring doing like</p>

<pre><code>&lt;bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""&gt;
    &lt;property name=""locations""&gt;
        &lt;value&gt;classpath:com/foo/jdbc.properties&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>but here we are not using Spring, just Hibernate and some Primefaces.</p>

<p>Is it possible?</p>

<p>Thanks!</p>

<p>Edit: I didn't mention some things, but for reference, I'm also using Shiro Security and Ant to do some stuff. I'll post the solution as an answer. This makes my project have 3 different files with database parameters:</p>

<ul>
<li>persistence.xml (Hibernate)</li>
<li>context.xml (Shiro)</li>
<li>database.properties (for Flyway tasks in Ant)</li>
</ul>
","<java><xml><hibernate><shiro><persistence.xml>","8","19260890"
"3905476","GORM createCriteria and list do not return the same results : what can I do?","<p>I am using <a href=""http://www.grails.org/plugin/nimble"" rel=""noreferrer"">Nimble</a> and <a href=""http://www.grails.org/plugin/shiro"" rel=""noreferrer"">Shiro</a> for my security frameworks and I've just come accross a GORM bug. Indeed :</p>

<pre><code>User.createCriteria().list { 
   maxResults 10 
} 
</code></pre>

<p>returns <strong>10 users</strong> whereas <code>User.list(max: 10)</code>  returns <strong>9 users</strong> ! </p>

<p>After further investigations, I found out that <code>createCriteria</code> <strong>returns twice the same user</strong> (admin) <strong>because admin has 2 roles</strong>!!! (I am not joking).</p>

<p>It appears that any user with more than 1 role will be returned twice in the <code>createCriteria</code> call and <code>User.list</code> will return <code>max-1</code> instances (i.e 9 users instead of 10 users) </p>

<p><strong>What workaround can I use in order to have 10 unique users returned ?</strong></p>

<p>This is a very annoying because I have no way to use pagination correctly. </p>

<hr>

<p>My domain classes are:</p>

<pre><code>class UserBase { 
   String username 
   static belongsTo = [Role, Group] 
   static hasMany = [roles: Role, groups: Group] 
   static fetchMode = [roles: 'eager', groups: 'eager'] 
   static mapping = { 
     roles cache: true, 
     cascade: 'none', 
     cache usage: 'read-write', include: 'all' 
   } 
}

class User extends UserBase { 
  static mapping = {cache: 'read-write'} 
} 

class Role { 
  static hasMany = [users: UserBase, groups: Group] 
  static belongsTo = [Group] 
  static mapping = { cache usage: 'read-write', include: 'all' 
    users cache: true 
    groups cache: true 
  } 
} 
</code></pre>
","<grails><gorm><shiro><nimble>","7","3908680"
"15969139","NoSuchMethodError: org.slf4j.helpers.MessageFormatter.format","<p>I'm getting this error when running my application:</p>

<pre><code>[ERROR] Apr 12, 2013 10:18:56 AM com.google.appengine.tools.development.ApiProxyLocalImpl log
[ERROR] INFO: javax.servlet.ServletContext log: Initializing Shiro environment
[ERROR] 1601 [main] INFO org.apache.shiro.web.env.EnvironmentLoader - Starting Shiro environment initialization.
[ERROR] 1931 [main] INFO org.apache.shiro.config.IniSecurityManagerFactory - Realms have been explicitly set on the SecurityManager instance - auto-setting of realms will not occur.
[ERROR] 1984 [main] ERROR org.apache.shiro.web.env.EnvironmentLoader - Shiro environment initialization failed
[ERROR] java.lang.NoSuchMethodError: org.slf4j.helpers.MessageFormatter.format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
[ERROR]     at org.slf4j.impl.SimpleLogger.formatAndLog(SimpleLogger.java:222)
[ERROR]     at org.slf4j.impl.SimpleLogger.info(SimpleLogger.java:258)
[ERROR]     at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:146)
[ERROR]     at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
[ERROR]     at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548)
[ERROR]     at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
[ERROR]     at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
[ERROR]     at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
[ERROR]     at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
[ERROR]     at org.mortbay.jetty.Server.doStart(Server.java:224)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at com.google.appengine.tools.development.JettyContainerService.startContainer(JettyContainerService.java:228)
[ERROR]     at com.google.appengine.tools.development.AbstractContainerService.startup(AbstractContainerService.java:255)
[ERROR]     at com.google.appengine.tools.development.AbstractServer.startup(AbstractServer.java:79)
[ERROR]     at com.google.appengine.tools.development.DevAppServerImpl$Servers.startup(DevAppServerImpl.java:451)
[ERROR]     at com.google.appengine.tools.development.DevAppServerImpl.start(DevAppServerImpl.java:198)
[ERROR]     at com.google.appengine.tools.development.gwt.AppEngineLauncher.start(AppEngineLauncher.java:97)
[ERROR]     at com.google.gwt.dev.DevMode.doStartUpServer(DevMode.java:509)
[ERROR]     at com.google.gwt.dev.DevModeBase.startUp(DevModeBase.java:1068)
[ERROR]     at com.google.gwt.dev.DevModeBase.run(DevModeBase.java:811)
[ERROR]     at com.google.gwt.dev.DevMode.main(DevMode.java:311)
[ERROR] Apr 12, 2013 10:18:56 AM com.google.apphosting.utils.jetty.JettyLogger warn
</code></pre>

<p>This is the part of my pom.xml configuration which I think relates to this:</p>

<pre><code>&lt;properties&gt;
        &lt;!-- other properties omitted --&gt;
        &lt;slf4jVersion&gt;1.5.11&lt;/slf4jVersion&gt;
&lt;/properties&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
        &lt;version&gt;${slf4jVersion}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;!-- any library that uses commons-logging will be directed to slf4j --&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;
        &lt;version&gt;${slf4jVersion}&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;!-- any library that uses slf4j will be directed to java.util.logging --&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-jdk14&lt;/artifactId&gt;
        &lt;version&gt;${slf4jVersion}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
            &lt;version&gt;${slf4jVersion}&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
        &lt;version&gt;${slf4jVersion}&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>I'm pretty sure I have the SLF4j version all setup into one version. What could be wrong in my configuration?</p>
","<java><google-app-engine><gwt><slf4j><shiro>","6","17566288"
"15936187","applicationContext classpath not found","<p>For some reason (a shiro filter) I saved my application context file in WEB-INF folder. Everything works when I run tomcat but, when I try to get an application context from a controller using :</p>

<pre><code>context = new ClassPathXmlApplicationContext(fileContext);
</code></pre>

<p>I receive always this exception: </p>

<pre><code>IOException parsing XML document from class path resource [applicationContext.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext.xml] cannot be opened because it does not exist
</code></pre>

<p>It seems that under ecplise I'm not able to include WEB-INF under classpath. I took a look to a lot questions here in stackoverflow but I didn't find yet a solution.</p>

<p>If I move the applicationContext.xml file under src/main/java folder, I'm able to get the context but, the shiro filder defined into web.xml file is not able to see the shiro bean defined under applicationContext file (I double checked and the bean is correctly worked). How can I tell to web.xml to get content from src/main/java? Or, how can I reach the applicationContext.xml </p>
","<java><spring><tomcat><filter><shiro>","4","15944747"
"23906682","Restful Web service Authentication and Authorization with Apache Shiro","<p>I am able to authenticate web based application using apache shiro  through databases using JDBC relam. Further more, I am successively able to make the use of Shiro-Filters to grant access for particular  web-resource or http urls using Shiro filter configuation in web.xml and configuration into shiro.ini.</p>

<p>Now, I want to implement the same functionality for the webservices too. In Particular, I want user to hit the login-url for getting the token, if the credentials are valid. And after that, all the successive requests for the webservices has to be validated based on that particular token for the user. 
I have no any clue to  implement this. Any suggestions, procedures,  or suggestive links could help me alot !!</p>
","<apache><web-services><rest><shiro>","8",""
"8501058","Shiro authentication with sessionId or username+password","<p>I do not have much experience in Java authentication frameworks and authentication workflow in general (only some theoretical knowledge), so for educational purposes I'm trying to create this type of authentication for my HTTP application:</p>

<ol>
<li>Client Posts login+password to <code>/login</code>. </li>
<li>Shiro logs in the user by given credentials. Server returns client his <code>sessionId</code>.</li>
<li>Client requests some kind of resource <code>/myresource?sessionId=1234567</code>.</li>
<li>Shiro logs in the Subject by given <code>sessionId</code>. Then server does the regular workflow of getting the <code>/myresource</code> (with Shiro managing method-level access rights).</li>
</ol>

<p>Basically I have these questions:</p>

<ol>
<li>I guess I have no need for HTTP sessions nor Servlet sessions. Shiro has it's own session manager which is enough for my needs. Am I wrong?</li>
<li>Is it good practice to give client the real sessionId or should I send some kind of sessionToken (which is resolved to sessionId on server side)?</li>
<li>How do I login the Subject using sessionId (which the client should store locally)?</li>
<li>Are there any other things I need to know before doing this kind of authentication?</li>
</ol>

<p>Thanks in advance.</p>
","<java><authentication><shiro>","16","8532126"
"18728360","Apache Shiro - using database to read users, roles and permissions","<p>Currently I've a Swing app and I wan't to integrate Apache Shiro in order to authenticate and delegate permissions to certain roles. I've already managed to read the users from the shiro.ini file that I've created for tests, it looks something like this:</p>

<pre><code>[users]
admin = 123456, Administrator

[role]
Administrator = *:*:*
</code></pre>

<p>However this was just for testing, now I need to read the permits from a database so I've stored in a database a table with the info I need and it looks something like this:</p>

<pre><code>users (id,password,username)
userRoles (userId, role)
rolePermission (permissionID,permission,roleID)
</code></pre>

<p>I've been trying to understand tutorials that use a JDBC realm, however they use web applications or specials frameworks to manage their connection to the Database like Apache Derby or BoneCP, and they confuse me even more with <a href=""http://meri-stuff.blogspot.com/2011/04/apache-shiro-part-2-realms-database-and.html"" rel=""nofollow noreferrer"">these</a> examples.</p>

<p>So what I'm asking it's how I need to configure the shiro.ini file if I wanna use a JDBC realm (with an Oracle database) and what classes the shiro.ini needs. Any examples or explanation will be appreciated!</p>
","<java><shiro><jdbcrealm>","10","18729149"
"22528801","Apache Shiro Token based security for Rest service","<p>I'm creating a App using Shiro as the security framework.
The app have two parts; Web and Rest. </p>

<p>The Web is using Shiro's default <code>FormAuthenticationFilter</code>. 
I'm happy with the session based approach.</p>

<p>The stand alone app which is using Rest, I want to limit from using the <code>FormAuthenticationFilter</code> and from creating a session, which I'm able to do via <code>shiro.ini</code> file</p>

<p>I need to implement Token based security on the rest service or something of the sort.
Browsing on the web I saw some blogs suggesting that you create your own Realm and filter to handle this scenario. But no details on how to do this.</p>

<p>Is it possible to implement Token based security on Apache Shiro? If so is there a blog or tutorial that shows you how to achieve this?</p>

<p>Regards </p>
","<rest><java-ee><shiro>","5","22529857"
"9663564","How to load files/properties from WEB-INF directory?","<p>It seems that in my Tapestry app, I can't load ini files nor properties file from WEB-INF directory or class path.</p>

<p>I tried several different methods which should load my file but non of them worked.</p>

<ol>
<li>ex</li>
</ol>

<p><code>realm.setResourcePath(""/WEB-INF/auth.properties"");</code></p>

<ol>
<li>ex</li>
</ol>

<p><code>realm.setResourcePath(""classpath:wip/pages/auth.properties"");</code></p>

<p>I need to load properties/ini file in order to use tapestry-security module which is based on Shiro.</p>

<p>Thanks for help !</p>
","<java><tapestry><shiro><tynamo>","1","9664393"
"25241801","How to configure Shiro with Spring Boot","<p>I have a Spring MVC web application that uses Shiro authentication using Spring configuration rather than a shiro.ini.</p>

<p>I want to transition to a Spring Boot application.</p>

<p>I have been mainly successful. The application starts in Spring Boot and my Shiro environment gets setup. However I just cannot work out how to setup the Shiro Filter correctly. I need this to be working to make sure requests end up being handled by the correct thread.</p>

<p>In the original app I configured the Shiro Filter in the web.xml like this:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>I have tried replicate this using a Java Config like this:</p>

<pre><code>  @Autowired
  private WebSecurityManager webSecurityManager;

  @Bean
  public ShiroFilterFactoryBean shiroFilterFactoryBean() {
    ShiroFilterFactoryBean shiroFilterFactoryBean = new org.apache.shiro.spring.web.ShiroFilterFactoryBean();
    shiroFilterFactoryBean.setSecurityManager(webSecurityManager);
    return shiroFilterFactoryBean;
  }

  @Bean
  public org.apache.shiro.spring.LifecycleBeanPostProcessor lifecycleBeanPostProcessor()
  {
    return new org.apache.shiro.spring.LifecycleBeanPostProcessor();
  }

  @Bean
  public Filter shiroFilter()
  {
    DelegatingFilterProxy filter = new DelegatingFilterProxy();
    filter.setTargetBeanName(""shiroFilterFactoryBean"");
    filter.setTargetFilterLifecycle(true);
    return filter;
  }
</code></pre>

<p>However I just cannot get everything to fit together and don't have enough knowledge to sort it out. I just can't see to connect the filter to the environment. I would guess it is something to do with the order things are setup.</p>

<p>Has anyone managed to use Spring Boot and Shiro together successfully?</p>
","<spring-mvc><spring-boot><shiro>","6",""
"7782720","When to move from Container managed security to alternatives like Apache Shiro, Spring Security?","<p>I am trying to secure my application which is built using JSF2.0.</p>

<p>I am confused about when do people choose to go with security alternatives like Shiro, Spring Security or owasp's esapi leaving behind container managed security. Having seen some of <a href=""https://stackoverflow.com/questions/2206911/best-way-for-user-authentication-on-javaee-6-using-jsf-2-0/2207147#2207147"">related questions</a> on Stack Overflow, where I realized that container based security was more preferred by JSF developers in past. But I have also been strongly recommended to use Apache Shiro. I am novice in terms of the security issues and have no idea what may be the relevant issues &amp; how to deal with them. Therefore I'm looking for something that handles most of the security issues through its default settings/ on its own.</p>

<p>In terms of my application requirements, I have a social application where users with different roles have access to different set of pages and can use different levels of functionality on those pages based on their roles.</p>

<p>In that case what do you think could be a good option for me to go with ?</p>

<p>I personally have been convinced to opt Shiro since it is easy to use and takes care of most of the things for the novice.</p>
","<java><security><jsf><jaas><shiro>","18","7783426"
"17441019","How to configure JDBCRealm to obtain its DataSource from JNDI","<p>How do you use a <code>JDBCRealm</code> to handle authenticating and authorizing users in servlets? The only example I can find is to create the DataSource in <code>web.xml</code> (such as <a href=""https://stackoverflow.com/questions/12894227/authentication-against-database-using-shiro-1-2-1"">Authentication against database using shiro 1.2.1</a>).</p>

<p>I do not want to include database credentials in my source tree (for obvious reasons) and would prefer to use a Context defined DataSource via JNDI as I have for every other RDBMS I have used for any other purpose in every other servlet project I have developed.</p>

<p>How do you configure a Shiro <code>JDBCRealm</code> to obtain its <code>DataSource</code> from JNDI?</p>
","<jndi><shiro><jdbcrealm>","14","17452503"
"20841870","A child container failed during start","<p>I am getting below error;</p>

<pre><code>SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/SimpleJDBCRealms]]
    at java.util.concurrent.FutureTask$Sync.innerGet(Unknown Source)
    at java.util.concurrent.FutureTask.get(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/SimpleJDBCRealms]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    ... 7 more
Caused by: java.lang.IllegalArgumentException: Servlet mapping specifies an unknown servlet name TestJDBCShiro
    at org.apache.catalina.core.StandardContext.addServletMapping(StandardContext.java:3241)
    at org.apache.catalina.core.StandardContext.addServletMapping(StandardContext.java:3220)
    at org.apache.catalina.deploy.WebXml.configureContext(WebXml.java:1367)
    at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1346)
    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)
    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:376)
    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5322)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more

Dec 30, 2013 8:19:04 PM org.apache.catalina.core.ContainerBase startInternal
SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/NewJDBCMySqlShiro]]
    at java.util.concurrent.FutureTask$Sync.innerGet(Unknown Source)
    at java.util.concurrent.FutureTask.get(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/NewJDBCMySqlShiro]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    ... 7 more
Caused by: java.lang.IllegalArgumentException: Servlet mapping specifies an unknown servlet name TestJDBCShiro
    at org.apache.catalina.core.StandardContext.addServletMapping(StandardContext.java:3241)
    at org.apache.catalina.core.StandardContext.addServletMapping(StandardContext.java:3220)
    at org.apache.catalina.deploy.WebXml.configureContext(WebXml.java:1367)
    at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1346)
    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)
    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:376)
    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5322)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more

Dec 30, 2013 8:19:04 PM org.apache.catalina.core.ContainerBase startInternal
SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost]]
    at java.util.concurrent.FutureTask$Sync.innerGet(Unknown Source)
    at java.util.concurrent.FutureTask.get(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:691)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:322)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:456)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.catalina.LifecycleException: A child container failed during start
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1131)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more

Dec 30, 2013 8:19:04 PM org.apache.catalina.startup.Catalina start
SEVERE: The required Server component failed to start so Tomcat is unable to start.
org.apache.catalina.LifecycleException: Failed to start component [StandardServer[8005]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:691)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:322)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:456)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Catalina]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 9 more
Caused by: org.apache.catalina.LifecycleException: A child container failed during start
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1131)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 11 more
</code></pre>
","<java-ee><tomcat><shiro><bonecp>","-1","20887200"
"35133863","""PKIX path building failed: unable to find valid certification path to requested target"" Only in release version","<p>The issue is something tricky. I tried to connect my war file to a Active Directory via LDAPS. While running with Debug Mode from IntelliJ IDEA, the code is working perfectly fine.</p>

<p>When I Install the war files in same or different machine, am facing this error.</p>

<pre><code>sun.security.validator.ValidatorException: PKIX path building failed:    sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
</code></pre>

<p>The certificates are self-signed. I have added the CA.crt in <code>truststore.jks</code>, LDAP.cer in <code>cacerts</code>. I also tried adding in the `jssecacerts', but same result.</p>

<p>Note: Am using Apache Shiro framework. </p>

<p>How to avoid this error? Why it is not coming in the debug mode?</p>
","<java><intellij-idea><ssl-certificate><shiro><java-security>","0",""
"20798371","Tomcat SEVERE: A child container failed during start","<pre><code>  SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/EasyShiroWeb]]
    at java.util.concurrent.FutureTask$Sync.innerGet(Unknown Source)
    at java.util.concurrent.FutureTask.get(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/EasyShiroWeb]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    ... 7 more
Caused by: java.lang.NoClassDefFoundError: org/apache/shiro/authc/UnknownAccountException
    at java.lang.Class.getDeclaredFields0(Native Method)
    at java.lang.Class.privateGetDeclaredFields(Unknown Source)
    at java.lang.Class.getDeclaredFields(Unknown Source)
    at org.apache.catalina.util.Introspection.getDeclaredFields(Introspection.java:106)
    at org.apache.catalina.startup.WebAnnotationSet.loadFieldsAnnotation(WebAnnotationSet.java:263)
    at org.apache.catalina.startup.WebAnnotationSet.loadApplicationServletAnnotations(WebAnnotationSet.java:142)
    at org.apache.catalina.startup.WebAnnotationSet.loadApplicationAnnotations(WebAnnotationSet.java:67)
    at org.apache.catalina.startup.ContextConfig.applicationAnnotationsConfig(ContextConfig.java:405)
    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:881)
    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:376)
    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5322)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more
Caused by: java.lang.ClassNotFoundException: org.apache.shiro.authc.UnknownAccountException
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1702)
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)
    ... 21 more

Dec 27, 2013 2:01:57 PM org.apache.catalina.core.ContainerBase startInternal
SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost]]
    at java.util.concurrent.FutureTask$Sync.innerGet(Unknown Source)
    at java.util.concurrent.FutureTask.get(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:691)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:322)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:456)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.catalina.LifecycleException: A child container failed during start
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1131)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more

Dec 27, 2013 2:01:57 PM org.apache.catalina.startup.Catalina start
SEVERE: The required Server component failed to start so Tomcat is unable to start.
org.apache.catalina.LifecycleException: Failed to start component [StandardServer[8005]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:691)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:322)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:456)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Catalina]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 7 more
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 9 more
Caused by: org.apache.catalina.LifecycleException: A child container failed during start
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1131)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 11 more
</code></pre>
","<html><java-ee><tomcat><shiro>","0","20820973"
"5486556","What database tables does Apache Shiro require?","<p>I want to use Apache Shiro and MySQL for my Realm. What tables and fields does Shiro need to work?</p>
","<java><apache><shiro>","11","5491194"
"27540355","Could not autowire field: can't to com.sun.proxy.$Proxy22","<pre><code>Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: protected com.cms.service.FolderService com.cms.action.BaseAction.folderService; nested exception is java.lang.IllegalArgumentException: Can not set com.cms.service.FolderService field com.cms.action.BaseAction.folderService to com.sun.proxy.$Proxy22
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:518)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:287)
    ... 30 more
Caused by: java.lang.IllegalArgumentException: Can not set com.cms.service.FolderService field com.cms.action.BaseAction.folderService to com.sun.proxy.$Proxy22
    at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:146)
    at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:150)
    at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:63)
    at java.lang.reflect.Field.set(Field.java:657)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:514)
    ... 32 more
</code></pre>

<p>this is my baseAction</p>

<pre><code>public class BaseAction {

    @Autowired
    protected FolderService folderService;

    @Autowired
    protected ArticleService fileService;

    @Autowired
    protected TemplateService themeService;

    @Autowired
    protected HeadlineService headlineService;

    protected final Logger logger = Logger.getLogger(this.getClass());
}
</code></pre>

<p>and that's my FolderService </p>

<pre><code>@Service
public class FolderService {

    protected final Logger logger = Logger.getLogger(this.getClass());

    @Autowired
    private FolderDao folderDao;

    @Autowired
    private AdminFolderDao adminFolderDao;

 ...................next is the java method

}
</code></pre>
","<spring><spring-mvc><shiro>","4","30248897"
"10401903","Shiro Authorization populate authorization with remote roles","<p>I'm using Tapestry-Security which uses Apache Shiro</p>

<p>I have a custom realm which handles authorization and authentication. Our authentication technically happens using a remote service, which returns a username and a set of roles. I just pass the username into my custom AuthenticationToken which allows me to query our local db and set the SimpleAuthenticationInfo. </p>

<p>I can't figure out how to populate the AuthorizationInfo doGetAuthorizationInfo method using the list of roles returned to me from our remote service. Below is the code I'm using to populate the realm. </p>

<p>Login.class</p>

<pre><code>//Remote authentication service
RemoteLoginClient client = new RemoteLoginClient();
RemoteSubject authenticate = client.authenticate(username, password);

//tapestry security authentication
Subject currentUser = SecurityUtils.getSubject();
CustomAuthenticationToken token = new 
    CustomAuthenticationToken(authenticate.getUsername());
System.out.println(""roles"" + authenticate.getRoles());

currentUser.login(token);
</code></pre>

<p>AuthorizationInfo method inside customRealm
    public class CustomRealm extends AuthorizingRealm {</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    CustomAuthenticationToken upToken = (CustomAuthenticationToken ) token;
    String email = upToken.getUsername();

    ApplicationUser applicationUser = (ApplicationUser) session.createCriteria(ApplicationUser.class)
            .add(Restrictions.like(""email"", email + ""%""))
            .uniqueResult();

    if (applicationUser == null) {
        throw new UnknownAccountException(""User doesn't exist in EPRS database"");
    }

    return buildAuthenticationInfo(applicationUser.getId());
}

protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
//Not sure how to populate the principle or
//read the principle to populate the SimpleAuthorizationInfo
    return new SimpleAuthorizationInfo(roleNames);
}
</code></pre>
","<java><tapestry><shiro>","4","10412815"
"14125877","How can I redirect requests to a configured Shiro loginUrl if the user is already authenticated?","<p>I have a webapp using Shiro for authentication. The relevant parts of the web.xml and shiro.ini are:</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>and</p>

<pre><code>[main]
authc.loginUrl = /authoring/login.html
authc.successUrl  = /authoring
logout.redirectUrl = /authoring/login.html

[users]
foo = foo

[urls]
/authoring/logout = logout
/authoring/** = authc
</code></pre>

<p>Shiro correctly intercepts all requests from non-authenticated clients and redirects to the configured loginUrl (and then forwards them on to the requested page after successful authentication). What I'd like to have happen is, if an authenticated client makes an explicit request to /authoring/login.html, redirect that to /authoring. This would ONLY happen if the client is authenticated.</p>

<p>For example, think of how Gmail works - trying to access mail.google.com (or even <a href=""https://accounts.google.com/ServiceLogin"">https://accounts.google.com/ServiceLogin</a>) when you've already logged in redirects you to the inbox. Is this possible with Shiro out of the box? If not, what's the right way to implement it?</p>
","<java><authentication><login><shiro>","12",""
"17778913","How do I use DB to authenticate user login in Apache Shiro?","<p>I'm new to Apache Shiro and want to use its functionality for user login authentication for my RESTful web application. I have a web form to allow user log in. Username and password are stored in MySQL database. I have the following method to process the user login authentication using Jersey:</p>

<pre><code>@Path(""/login"")
public class UserAccount {

    Realm realm = new JdbcRealm();
    SecurityManager sm = new DefaultSecurityManager(realm);

    @Path(""success"")
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response userAuth(@FormParam(""username"") String username,
            @FormParam(""password"") String password) {
        Response r = null;
        UsernamePasswordToken token = new UsernamePasswordToken(username, password);
        token.setRememberMe(true);
        SecurityUtils.setSecurityManager(sm);
        Subject currentUser = SecurityUtils.getSubject();

        try {
            currentUser.login(token);   //This throws an error upon form submission
            r = Response.ok().entity(token).build();
        } catch (IncorrectCredentialsException ice) {
            System.out.println(""Incorrect username/password!"");
        }

        return r;
    }
}
</code></pre>

<p>When I submitted the form, the line <code>currentUser.login(token);</code> caused error. I think it's because I haven't connected to my database for username and password authentication. But how do I hook up with my backend database to do authentication in Shiro? I followed the tutorial from Shiro's website but couldn't get the idea of how to authenticate with DB connection. I believe there are some missing pieces in my code to do authentication via JDBC realm.</p>

<p>I have put the Shiro configuration file <code>shiro.ini</code> under WEB-INF directory and its content is:</p>

<pre><code>[main]
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true

jdbcRealm.authenticationQuery = ""SELECT password FROM users WHERE username = ?""
jdbcRealm.userRolesQuery = ""SELECT authority FROM user_roles WHERE username = ?""

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = 123456
ds.databaseName = customer
jdbcRealm.dataSource = $ds

[users]
[roles]
[urls]
/myapp/login/** = authcBasic
</code></pre>

<p><strong>Update (added error message): The detailed error message I got after I submit the form is:</strong></p>

<pre><code>Jul 22, 2013 10:42:01 AM com.sun.jersey.spi.container.ContainerResponse mapMappableContainerException
SEVERE: The RuntimeException could not be mapped to a response, re-throwing to the HTTP container
org.apache.shiro.authc.AuthenticationException: Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - tonga, rememberMe=true].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:214)
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
    at com.example.UserAccount.userAuth(UserAccount.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
    at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
    at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
    at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
    at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
    at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
    at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
    at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
    at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1511)
    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1442)
    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1391)
    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1381)
    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)
    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:538)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:910)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:858)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:812)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
    at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
    at org.apache.shiro.realm.jdbc.JdbcRealm.doGetAuthenticationInfo(JdbcRealm.java:215)
    at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
    ... 41 more

Jul 22, 2013 10:42:01 AM org.apache.catalina.core.StandardWrapperValve invoke
SEVERE: Servlet.service() for servlet [default] in context with path [/myapp] threw exception
org.apache.shiro.authc.AuthenticationException: Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - tonga, rememberMe=true].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:214)
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
    at com.example.UserAccount.userAuth(UserAccount.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
    at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
    at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
    at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
    at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
    at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
    at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
    at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
    at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1511)
    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1442)
    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1391)
    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1381)
    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)
    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:538)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:910)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:858)
    at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:812)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
    at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
    at org.apache.shiro.realm.jdbc.JdbcRealm.doGetAuthenticationInfo(JdbcRealm.java:215)
    at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
    ... 41 more
</code></pre>
","<java><authentication><shiro>","2",""
"16352940","Is an unbound SecurityManager really an invalid application configuration in Shiro?","<p>I'm adding Apache Shiro to my application and I'm wondering if the following error message is truly accurate:</p>

<blockquote>
  <p>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.</p>
</blockquote>

<p>I've looked through the source code a bit and the impression that I get is that as long as I'm not using <code>SecurityUtils</code> and I'm willing to pass a <code>SecurityManager</code> to components that need it, I don't actually need to assign the <code>SecurityManager</code> to the static singleton used by <code>SecurityUtils</code>.</p>

<p>The specific thing I want to avoid is having Shiro put anything into <code>ThreadLocal</code> or having Shiro use its <code>ThreadContext</code> support class.  I'm using Apache Thrift and don't want to commit myself to a one-thread-per-request network design.  My requirements from Shiro are pretty minimal, so I'll show what I'm doing below.</p>

<p>I'm using Guice in my application, but I'm <strong>not</strong> using <code>shiro-guice</code> because the Shiro AOP stuff depends on having a <code>Subject</code> associated with a <code>ThreadContext</code>.  Instead, I start with an extremely simple Guice module.</p>

<pre class=""lang-java prettyprint-override""><code>public class ShiroIniModule extends AbstractModule {
    @Override
    protected void configure() {}

    @Provides
    @Singleton
    public SecurityManager provideSecurityManager() {
        return new DefaultSecurityManager(new IniRealm(""classpath:shiro.ini""));
    }
}
</code></pre>

<p>That's not exactly a production quality realm / security manager setup, but it's good enough for me to test with.  Next, I create my own manager classes with a very limited scope that are used by the components of my application.  I have two of these; a <code>ThriftAuthenticationManager</code> and a <code>ThriftAuthorizationManager</code>.  Here is the former:</p>

<pre class=""lang-java prettyprint-override""><code>@Singleton
public class ThriftAuthenticationManager {
    private final Logger log = LoggerFactory.getLogger(ThriftAuthenticationManager.class);

    private final SecurityManager securityManager;

    @Inject
    public ThriftAuthenticationManager(SecurityManager securityManager) {
        this.securityManager = securityManager;
    }

    public String authenticate(String username, String password) throws TException {
        try {
            Subject currentUser = new Subject.Builder(securityManager).buildSubject();

            if (!currentUser.isAuthenticated()) {
                currentUser.login(new UsernamePasswordToken(username, password));
            }

            String authToken = currentUser.getSession().getId().toString();
            Preconditions.checkState(!Strings.isNullOrEmpty(authToken));
            return authToken;
        }
        catch (AuthenticationException e) {
            throw Exceptions.security(SecurityExceptions.AUTHENTICATION_EXCEPTION);
        }
        catch(Throwable t) {
            log.error(""Unexpected error during authentication."", t);
            throw new TException(""Unexpected error during authentication."", t);
        }

    }
}
</code></pre>

<p>And the latter:</p>

<pre class=""lang-java prettyprint-override""><code>@Singleton
public class ThriftAuthorizationManager {
    private final Logger log = LoggerFactory.getLogger(ThriftAuthorizationManager.class);

    private final SecurityManager securityManager;

    @Inject
    public ThriftAuthorizationManager(SecurityManager securityManager) {
        this.securityManager = securityManager;
    }

    public void checkPermissions(final String authToken, final String permissions)
            throws TException {
        withThriftExceptions(new Callable&lt;Void&gt;() {
            @Override
            public Void call() throws Exception {
                securityManager.checkPermission(getPrincipals(authToken), permissions);
                return null;
            }
        });
    }

    public void checkPermission(final String authToken, final Permission permission)
            throws TException {
        withThriftExceptions(new Callable&lt;Void&gt;() {
            @Override
            public Void call() throws Exception {
                securityManager.checkPermission(getPrincipals(authToken), permission);
                return null;
            }
        });
    }

    private Subject getSubject(String authToken) {
        return new Subject.Builder(securityManager).sessionId(authToken).buildSubject();
    }

    private PrincipalCollection getPrincipals(String authToken) {
        return getSubject(authToken).getPrincipals();
    }

    private void withThriftExceptions(Callable&lt;Void&gt; callable) throws TException {
        try {
            callable.call();
        }
        catch(SessionException e) {
            throw Exceptions.security(SecurityExceptions.SESSION_EXCEPTION);
        }
        catch(UnauthenticatedException e) {
            throw Exceptions.security(SecurityExceptions.UNAUTHENTICATED_EXCEPTION);
        }
        catch(AuthorizationException e) {
            throw Exceptions.security(SecurityExceptions.AUTHORIZATION_EXCEPTION);
        }
        catch(ShiroException e) {
            throw Exceptions.security(SecurityExceptions.SECURITY_EXCEPTION);
        }
        catch(Throwable t) {
            log.error(""An unexpected error occurred during authorization."", t);
            throw new TException(""Unexpected error during authorization."", t);
        }
    }
}
</code></pre>

<p>My Thrift services use the above two classes for authentication and authorization.  For example:</p>

<pre class=""lang-java prettyprint-override""><code>@Singleton
public class EchoServiceImpl implements EchoService.Iface {
    private final Logger log = LoggerFactory.getLogger(EchoServiceImpl.class);

    private final ThriftAuthorizationManager authorizor;

    @Inject
    public EchoServiceImpl(ThriftAuthorizationManager authorizor) {
        this.authorizor = authorizor;
    }

    @Override
    public Echo echo(String authToken, Echo echo) throws TException {
        authorizor.checkPermissions(authToken, ""echo"");
        return echo;
    }
}
</code></pre>

<p>So, I guess I actually have a few questsions.</p>

<ol>
<li><p>Is the error I quoted actually an error or just an overzealous log message?</p></li>
<li><p>Do I need to worry about Shiro relying on anything in a <code>ThreadContext</code> if I never use <code>ShiroUtils</code>?</p></li>
<li><p>Is there any harm in using <code>SecurityUtils#setSecurityManager</code> if I can't guarantee a one-thread-per-request environment?</p></li>
<li><p>I haven't tried using Shiro's advanced permissions (<code>org.apache.shiro.authz.Permission</code>) yet.  Do they rely on anything in a <code>ThreadContext</code> or do anything weird that I should look into sooner than later?</p></li>
<li><p>Have I done anything else that could cause me problems or could I improve anything?</p></li>
</ol>
","<guice><thrift><shiro>","7","16378509"
"16804032","Apache Shiro for securing REST api","<p>I am attempting to integrate Shiro in my spring mvc application. 
The authentication is backed by a LDAP server and i am able to successfully authenticate against the ldap server and obtain a cookie. </p>

<p>What I am not able to perform is to then use this cookie in subsequent requests and get results. Attempting to use the cookie gives me a HTTP 302 to perform authentication again. For example:
GET on  ( <code>rest/assets/list</code> ) with header <code>Cookie: JSESSIONID=abcd</code> redirects to (<code>rest/login</code>)</p>

<p>Is this the right strategy to secure the api ? 
The api is being used by a AngularJS app and i would like to get user group based authentication enabled before I add CRUD ability.</p>

<p>Any pointers would be useful. </p>

<p>Source code as follows:</p>

<p>applicationContext.xml file is as follows</p>

<pre class=""lang-xml prettyprint-override""><code> &lt;beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd""&gt;


&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""/&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;

&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""ldapRealm"" class=""com.directv.nmsupport.security.LDAPRealm""&gt;
    &lt;property name=""contextFactory"" ref=""ldapContextFactory"" /&gt;
    &lt;property name=""userDnTemplate"" value=""uid={0},ou=DirecTV,ou=People,dc=swengdtv,dc=net"" /&gt;
&lt;/bean&gt;

&lt;bean id=""ldapContextFactory"" class=""org.apache.shiro.realm.ldap.JndiLdapContextFactory""&gt;
    &lt;property name=""url"" value=""ldap://teon:389""/&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""ldapRealm""/&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager"" /&gt;
&lt;/bean&gt;

&lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""sessionIdCookieEnabled"" value=""true"" /&gt;
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/rest/login""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /rest/login = anon
            /rest/** = user
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;/beans&gt;
</code></pre>

<p>LDAPRealm.java code is </p>

<pre class=""lang-java prettyprint-override""><code>public class LDAPRealm extends JndiLdapRealm {

@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    String username = (String) getAvailablePrincipal(principals);
    return super.doGetAuthorizationInfo(principals);    //To change body of overridden methods use File | Settings | File Templates.
}

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    return super.doGetAuthenticationInfo(token);    //To change body of overridden methods use File | Settings | File Templates.
}
</code></pre>

<p>}</p>

<p>LoginController.java is </p>

<pre class=""lang-java prettyprint-override""><code>@Controller
public class LoginController {

@RequestMapping(value = ""/login"", method = RequestMethod.POST)
public void login(@RequestBody UserCredentials user) {
    UsernamePasswordToken token = new UsernamePasswordToken(user.getUsername(), user.getPassword());
    token.setRememberMe(true);
    SecurityUtils.getSecurityManager().authenticate(token);
    Subject subject = SecurityUtils.getSubject();
    subject.getSession(true);
}

@RequestMapping(value=""/logout"")
public void logout() {
    Subject subject = SecurityUtils.getSubject();
    SecurityUtils.getSecurityManager().logout(subject);
}
</code></pre>

<p>}</p>

<p>The logging from apache shiro is </p>

<pre><code>17:47:54.428 [""http-bio-8080""-exec-7] DEBUG o.a.shiro.realm.ldap.JndiLdapRealm - Authenticating user 'afulara' through LDAP
17:47:54.428 [""http-bio-8080""-exec-7] DEBUG o.a.s.r.ldap.JndiLdapContextFactory - Initializing LDAP context using URL [ldap://teon:389] and principal [uid=afulara,ou=DirecTV,ou=People,dc=swengdtv,dc=net] with pooling disabled
17:47:54.431 [""http-bio-8080""-exec-7] DEBUG o.a.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [afulara] from doGetAuthenticationInfo
17:47:54.431 [""http-bio-8080""-exec-7] DEBUG o.a.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [afulara].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - afulara, rememberMe=true].
17:47:54.431 [""http-bio-8080""-exec-7] DEBUG o.a.s.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - afulara, rememberMe=true].  Returned account [afulara]
17:48:20.927 [""http-bio-8080""-exec-9] DEBUG o.a.shiro.web.servlet.SimpleCookie - Found 'JSESSIONID' cookie value [02b41ee8-e9e3-43e5-8ee3-aae72322fede]
17:48:24.204 [""http-bio-8080""-exec-10] DEBUG o.a.shiro.web.servlet.SimpleCookie - Found 'JSESSIONID' cookie value [02b41ee8-e9e3-43e5-8ee3-aae72322fede]
17:48:24.210 [""http-bio-8080""-exec-10] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' not supported
</code></pre>
","<apache><rest><authentication><spring-mvc><shiro>","12","28143793"
"15597274","Apache Shiro and SSO","<p>Apache Shiro is a Java security framework and support SSO. And I have multiple sub-domains, each of which has separate application running. How can I use Apache Shiro web filters(or any other) to provide single sign on.</p>

<p>Should I need a SSO server or service (like CAS?) before I use Apache Shiro ? Or Apache Shiro do not need SSO server or service (like CAS) ?</p>

<p>Thanks</p>
","<apache><single-sign-on><shiro>","7","26875767"
"20063320","SpringMVC Proxy issue","<p>I have been trying to find an answer to this problem for days, and I hope someone can point me in the right direction.  I have a SpringMVC app that uses Java Configuration and I was doing fine until I tried to integrate Apache-Shiro into it. I am able to build and run my tests.  But my deploy fails because of Proxy/CGLIB issues. </p>

<p>Here is the exception I get on deploy/restart: </p>

<pre><code> Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'menuRepository': Post-processing of the FactoryBean's object failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy69]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy69
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:165)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1454)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:306)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:550)
        at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:150)
        at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
        ... 55 more
        Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy69]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy69
            at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:217)
            at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:111)
            at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:477)
            at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
            at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:409)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1625)
            at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:162)
            ... 65 more
        Caused by: java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy69
            at org.springframework.cglib.proxy.Enhancer.generateClass(Enhancer.java:446)
            at org.springframework.cglib.transform.TransformingClassGenerator.generateClass(TransformingClassGenerator.java:33)
            at org.springframework.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)
            at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)
            at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:377)
            at org.springframework.cglib.proxy.Enhancer.create(Enhancer.java:285)
            at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
            ... 72 more
</code></pre>

<p>Here is my current setup:</p>

<p><strong>pom.xml</strong></p>

<pre><code>&lt;org.springframework.version&gt;3.2.3.RELEASE&lt;/org.springframework.version&gt;
&lt;shiro.version&gt;1.2.2&lt;/shiro.version&gt;
&lt;org.hibernate.version&gt;4.1.7.Final&lt;/org.hibernate.version&gt;

&lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;
            &lt;version&gt;3.2.3.RELEASE&lt;/version&gt;
            &lt;exclusions&gt;
                &lt;exclusion&gt;
                    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
                    &lt;groupId&gt;commons-logging&lt;/groupId&gt;
                &lt;/exclusion&gt;
            &lt;/exclusions&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
            &lt;version&gt;3.2.3.RELEASE&lt;/version&gt;
            &lt;exclusions&gt;
                &lt;!-- Exclude Commons Logging in favor of SLF4j --&gt;
                &lt;exclusion&gt;
                    &lt;groupId&gt;commons-logging&lt;/groupId&gt;
                    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
                &lt;/exclusion&gt;
            &lt;/exclusions&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-web&lt;/artifactId&gt;
            &lt;version&gt;3.2.3.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;
            &lt;version&gt;$3.2.3.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;
            &lt;version&gt;3.2.3.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;
            &lt;version&gt;3.2.3.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
          &lt;dependency&gt;
            &lt;groupId&gt;cglib&lt;/groupId&gt;
            &lt;artifactId&gt;cglib&lt;/artifactId&gt;
            &lt;version&gt;2.2&lt;/version&gt;
        &lt;/dependency&gt;
 &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
            &lt;version&gt;${shiro.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
            &lt;version&gt;${shiro.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!--&lt;dependency&gt;--&gt;
            &lt;!--&lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;--&gt;
            &lt;!--&lt;artifactId&gt;shiro-aspectj&lt;/artifactId&gt;--&gt;
            &lt;!--&lt;version&gt;${shiro.version}&lt;/version&gt;--&gt;
        &lt;!--&lt;/dependency&gt;--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
            &lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;
            &lt;version&gt;1.6.11&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
            &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;
            &lt;version&gt;1.6.12&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-ehcache&lt;/artifactId&gt;
            &lt;version&gt;${shiro.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
            &lt;version&gt;${shiro.version}&lt;/version&gt;
            &lt;/dependency&gt;
&lt;dependency&gt;
            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;
            &lt;artifactId&gt;spring-data-jpa&lt;/artifactId&gt;
            &lt;version&gt;1.0.3.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
&lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;
            &lt;version&gt;${org.hibernate.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;
            &lt;version&gt;${org.hibernate.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Hibernate metamodel annotation processor --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-jpamodelgen&lt;/artifactId&gt;
            &lt;version&gt;1.1.1.Final&lt;/version&gt;
        &lt;/dependency&gt;
...
&lt;/&gt;
</code></pre>

<p>I use this web config:</p>

<pre><code>public class EdmWebInitializer implements WebApplicationInitializer {

    private static final String DISPATCHER_SERVLET_NAME = ""dispatcher"";
    private static final String DISPATCHER_SERVLET_MAPPING = ""/*"";

    @Override
    public void onStartup(ServletContext servletContext) throws ServletException {

        // Create the 'root' Spring application context
        AnnotationConfigWebApplicationContext rootContext = new 
AnnotationConfigWebApplicationContext();

       //I have two @Configuration classes:
       rootContext.register( EdmConfiguration.class, SecurityConfig.class );

        // Manage the lifecycle of the root application context
        servletContext.addListener( new ContextLoaderListener( rootContext ) );


        // Create the dispatcher servlet's Spring application context
        AnnotationConfigWebApplicationContext dispatcherContext = new AnnotationConfigWebApplicationContext();
        dispatcherContext.setServletContext( servletContext );
        dispatcherContext.setParent( rootContext );

        // it seems I have to register the Configuration classes again or I can't @Autowire
         dispatcherContext.register( EdmConfiguration.class, SecurityConfig.class );



        // Register and map the dispatcher servlet
        ServletRegistration.Dynamic dispatcher = servletContext.addServlet( ""dispatcher"", new DispatcherServlet( dispatcherContext ) );
        dispatcher.setLoadOnStartup( 1 );
        dispatcher.addMapping( ""/"" );


        servletContext.addFilter( ""shiroFilter"", new DelegatingFilterProxy( ""shiroFilter"", dispatcherContext ) )
                .addMappingForUrlPatterns( null, false, ""/*"" );
    }  
}
</code></pre>

<p>Here is my primary Configuration class:</p>

<pre><code>@Configuration
@EnableWebMvc
@ComponentScan(basePackages = { ""com.company.product.service"", ""com.company.product.utility"",
        ""com.company.product.controller"", ""com.company.product.utility.startup"",
        ""com.company.product.security"", ""com.company.product.repository.people"" })
@EnableTransactionManagement(proxyTargetClass=false)
@ImportResource({ ""classpath:applicationContext.xml"" })
@PropertySource({ ""classpath:application.properties"", ""classpath:mail.properties"" })
public class EdmConfiguration extends WebMvcConfigurationSupport {

    @Resource
    private Environment environment;

    @Autowired
    private org.apache.shiro.web.mgt.WebSecurityManager securityManager;

    @Bean
    public DataSource dataSource() {
        BoneCPDataSource dataSource = new BoneCPDataSource();

        dataSource.setDriverClass( environment.getRequiredProperty( PROPERTY_NAME_DATABASE_DRIVER ) );
        dataSource.setJdbcUrl( environment.getRequiredProperty( PROPERTY_NAME_DATABASE_URL ) );
        dataSource.setUsername( environment.getRequiredProperty( PROPERTY_NAME_DATABASE_USERNAME ) );
        dataSource.setPassword( environment.getRequiredProperty( PROPERTY_NAME_DATABASE_PASSWORD ) );

        return dataSource;
    }

    @Bean
    public JpaTransactionManager transactionManager() throws ClassNotFoundException {
        JpaTransactionManager transactionManager = new JpaTransactionManager();

        transactionManager.setEntityManagerFactory( entityManagerFactoryBean().getObject() );

        return transactionManager;
    }

    @Bean
    public DelegatingFilterProxy springSecurityFilterChain() {
        return new DelegatingFilterProxy();
    }

    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() throws ClassNotFoundException {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();

        entityManagerFactoryBean.setDataSource( dataSource() );
        entityManagerFactoryBean.setPackagesToScan( environment
                .getRequiredProperty( PROPERTY_NAME_ENTITYMANAGER_PACKAGES_TO_SCAN ) );
        entityManagerFactoryBean.setPersistenceProviderClass( HibernatePersistence.class );

        Properties jpaProperties = new Properties();

        ...

        entityManagerFactoryBean.setJpaProperties( jpaProperties );

        return entityManagerFactoryBean;
    }

    @Bean
    public PersistenceExceptionTranslator exTranslator() {
        return new HibernateExceptionTranslator();
    }

    @Bean(initMethod = ""init"")
    public StartupListener startupListener() {
        return new StartupListener();
    }

    @Bean
    public StandardPasswordEncoder encoder() {
        return new org.springframework.security.crypto.password.StandardPasswordEncoder();
    }


    @Bean
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean shiroFilter = new org.apache.shiro.spring.web.ShiroFilterFactoryBean();
        shiroFilter.setSecurityManager( securityManager);
        shiroFilter.setLoginUrl( ""/login"" );
        shiroFilter.setUnauthorizedUrl( ""/"" );
        return shiroFilter;
    }



    @Bean
    @DependsOn(value = ""lifecycleBeanPostProcessor"")
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        DefaultAdvisorAutoProxyCreator creator = new DefaultAdvisorAutoProxyCreator();
        creator.setProxyTargetClass(true);
        return creator;
    }
}
</code></pre>

<p>And here is the other Configuration class.  It is the addition of this that causes the proxy issues.</p>

<pre><code>@Configuration
public class SecurityConfig {

    @Bean
    public SaltAwareJdbcRealm saltAwareJdbcRealm() {
        return new SaltAwareJdbcRealm();
    }

    @Bean
    public WebSecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm( saltAwareJdbcRealm() );
        return securityManager;
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    public MethodInvokingFactoryBean methodInvokingFactoryBean() {
        MethodInvokingFactoryBean methodInvokingFactoryBean = new MethodInvokingFactoryBean();
        methodInvokingFactoryBean.setStaticMethod( ""org.apache.shiro.SecurityUtils.setSecurityManager"" );
        methodInvokingFactoryBean.setArguments( new Object[]{ securityManager() } );
        return methodInvokingFactoryBean;
    }

    @Bean
    @DependsOn(value = ""lifecycleBeanPostProcessor"")
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();
        authori

zationAttributeSourceAdvisor.setSecurityManager( securityManager() );
            return authorizationAttributeSourceAdvisor;
        }       
    }
</code></pre>

<p>the offending class is just a spring jparepository:</p>

<pre><code>public interface MenuRepository extends CrudRepository&lt;Menu, Long&gt;, JpaSpecificationExecutor&lt;Menu&gt; {

...}
</code></pre>

<p>I have added the <strong><em>@EnableTransactionManagement(proxyTargetClass=false)</em></strong> which I thought would address the Proxy issue but apparently isn't.  </p>

<p>Thank you for your time in reading all this.  </p>
","<spring><spring-mvc><spring-data><shiro>","1",""
"26804398","Shiro with LDAP","<p>I am trying to validate an user using LDAP but the following settings don't work <strong>(Shiro.ini)</strong>:</p>

<pre><code>[main]
authc.loginUrl = /login.xhtml
authc.usernameParam = login.username
authc.passwordParam = login.password
authc.rememberMeParam = login.rememberMe

user = co.com.xxx.yyy.filters.FacesAjaxAwareUserFilter
user.loginUrl = /login.xhtml

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = uid={0},ou=Users,ou=Accounts,dc=aaa,dc=ggg,dc=com,dc=co
ldapRealm.contextFactory.url = ldap://ldap_server:389
ldapRealm.contextFactory.environment[java.naming.security.credentials] = ldap_password

securityManager.realms= $ldapRealm
authcStrategy = org.apache.shiro.authc.pam.AllSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

[urls]
/javax.faces.resource/** = anon
/login.xhtml = user
/** = user
</code></pre>

<p><strong>Autentication method:</strong></p>

<pre><code>SecurityUtils.getSubject().login(new UsernamePasswordToken(username, password));
</code></pre>

<p><strong>I am getting this error:</strong></p>

<pre><code>LDAP: error code 32 - No Such Object
</code></pre>

<p><strong>Frameworks:</strong></p>

<pre><code>Shiro 1.2.3
Mojarra 2.1.7
Primefaces 5.1
JDK 1.7
JBoss 7.1.1
</code></pre>

<p>What is wrong?</p>

<pre><code>08:49:45,489 ERROR [co.com.xxxxxxxx.secxxxxx.user.SecxxxxBB] (http-localhost-127.0.0.1-443-5) : org.apache.shiro.authc.AuthenticationException: LDAP naming error while attempting to authenticate user.
    at org.apache.shiro.realm.ldap.JndiLdapRealm.doGetAuthenticationInfo(JndiLdapRealm.java:303) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106) [shiro-core-1.2.3.jar:1.2.3]
    at co.com.xxxxxxxx.secxxxxx.user.SecxxxxBB.login(SecxxxxBB.java:109) [classes:]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_45]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_45]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_45]
    at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_45]
    at org.apache.el.parser.AstValue.invoke(AstValue.java:262) [jbossweb-7.0.13.Final.jar:]
    at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:278) [jbossweb-7.0.13.Final.jar:]
    at org.jboss.weld.util.el.ForwardingMethodExpression.invoke(ForwardingMethodExpression.java:39) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31]
    at org.jboss.weld.el.WeldMethodExpression.invoke(WeldMethodExpression.java:50) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31]
    at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:105) [jsf-impl-2.1.7-jbossorg-2.jar:]
    at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:88) [jboss-jsf-api_2.1_spec-2.0.1.Final.jar:2.0.1.Final]
    at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102) [jsf-impl-2.1.7-jbossorg-2.jar:]
    at net.bull.javamelody.JsfActionListener.processAction(JsfActionListener.java:65) [javamelody-core-1.46.0.jar:1.46.0]
    at javax.faces.component.UICommand.broadcast(UICommand.java:315) [jboss-jsf-api_2.1_spec-2.0.1.Final.jar:2.0.1.Final]
    at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:794) [jboss-jsf-api_2.1_spec-2.0.1.Final.jar:2.0.1.Final]
    at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1259) [jboss-jsf-api_2.1_spec-2.0.1.Final.jar:2.0.1.Final]
    at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:81) [jsf-impl-2.1.7-jbossorg-2.jar:]
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101) [jsf-impl-2.1.7-jbossorg-2.jar:]
    at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118) [jsf-impl-2.1.7-jbossorg-2.jar:]
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:593) [jboss-jsf-api_2.1_spec-2.0.1.Final.jar:2.0.1.Final]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at org.jboss.weld.servlet.ConversationPropagationFilter.doFilter(ConversationPropagationFilter.java:62) [weld-core-1.1.5.AS71.Final.jar:2012-02-10 15:31]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at net.bull.javamelody.MonitoringFilter.doFilter(MonitoringFilter.java:165) [javamelody-core-1.46.0.jar:1.46.0]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at net.bull.javamelody.MonitoringFilter.doFilter(MonitoringFilter.java:208) [javamelody-core-1.46.0.jar:1.46.0]
    at net.bull.javamelody.MonitoringFilter.doFilter(MonitoringFilter.java:181) [javamelody-core-1.46.0.jar:1.46.0]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:489) [jbossweb-7.0.13.Final.jar:]
    at org.jboss.as.jpa.interceptor.WebNonTxEmCloserValve.invoke(WebNonTxEmCloserValve.java:50) [jboss-as-jpa-7.1.1.Final.jar:7.1.1.Final]
    at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.1.1.Final.jar:7.1.1.Final]
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.13.Final.jar:]
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.13.Final.jar:]
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671) [jbossweb-7.0.13.Final.jar:]
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930) [jbossweb-7.0.13.Final.jar:]
    at java.lang.Thread.run(Thread.java:744) [rt.jar:1.7.0_45]
Caused by: javax.naming.CommunicationException: ldap.forumsys.com:389 [Root exception is java.net.ConnectException: Connection refused: connect]
    at com.sun.jndi.ldap.Connection.&lt;init&gt;(Connection.java:226) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapClient.&lt;init&gt;(LdapClient.java:136) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1608) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2698) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtx.&lt;init&gt;(LdapCtx.java:316) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:193) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtxFactory.getUsingURLs(LdapCtxFactory.java:211) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:154) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.LdapCtxFactory.getInitialContext(LdapCtxFactory.java:84) [rt.jar:1.7.0_45]
    at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:684) [rt.jar:1.7.0_45]
    at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:307) [rt.jar:1.7.0_45]
    at javax.naming.InitialContext.init(InitialContext.java:242) [rt.jar:1.7.0_45]
    at javax.naming.ldap.InitialLdapContext.&lt;init&gt;(InitialLdapContext.java:153) [rt.jar:1.7.0_45]
    at org.apache.shiro.realm.ldap.JndiLdapContextFactory.createLdapContext(JndiLdapContextFactory.java:508) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.ldap.JndiLdapContextFactory.getLdapContext(JndiLdapContextFactory.java:495) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.ldap.JndiLdapRealm.queryForAuthenticationInfo(JndiLdapRealm.java:375) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.ldap.JndiLdapRealm.doGetAuthenticationInfo(JndiLdapRealm.java:295) [shiro-core-1.2.3.jar:1.2.3]
    ... 64 more
Caused by: java.net.ConnectException: Connection refused: connect
    at java.net.TwoStacksPlainSocketImpl.socketConnect(Native Method) [rt.jar:1.7.0_45]
    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) [rt.jar:1.7.0_45]
    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) [rt.jar:1.7.0_45]
    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) [rt.jar:1.7.0_45]
    at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) [rt.jar:1.7.0_45]
    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) [rt.jar:1.7.0_45]
    at java.net.Socket.connect(Socket.java:579) [rt.jar:1.7.0_45]
    at java.net.Socket.connect(Socket.java:528) [rt.jar:1.7.0_45]
    at java.net.Socket.&lt;init&gt;(Socket.java:425) [rt.jar:1.7.0_45]
    at java.net.Socket.&lt;init&gt;(Socket.java:208) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.Connection.createSocket(Connection.java:368) [rt.jar:1.7.0_45]
    at com.sun.jndi.ldap.Connection.&lt;init&gt;(Connection.java:203) [rt.jar:1.7.0_45]
    ... 80 more
</code></pre>
","<java><ldap><shiro>","2",""
"8754800","CacheManager properties have been set- Apache Shiro","<p>How can I set cacheManager properties, while using Apache shiro. On debugging , I am getting INFO like, </p>

<pre><code>80104 [1045903843@qtp-967078155-3] INFO org.apache.shiro.realm.AuthorizingRealm - No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
</code></pre>

<p>I am using JSF2 and Google Cloud SQL.</p>
","<google-app-engine><shiro>","7",""
"27063599","Writing custom Shiro realm","<p>I am constructing my own <code>AuthorizingRealm</code> subclass, and am having a tough time wiring it up to my <code>SecurityManager</code>.</p>

<p>The essence of my realm: </p>

<pre class=""lang-java prettyprint-override""><code>public class MyRealm extends AuthorizingRealm { 
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException { 
        try { 
            // My custom logic here 

        } catch(Throwable t) { 
            System.out.println(t.getMessage()); 
        } 
        SimpleAuthenticationInfo authn = new SimpleAuthenticationInfo(new MyUser(), ""somePassword"");
        return authn;
    } 

    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { 
        try { 
            // My custom logic here 
        } catch(Throwable t) { 
            System.out.println(t.getMessage()); 
        }
        return new SimpleAuthorizationInfo();
    } 
}
</code></pre>

<p>Then in my 'shiro.ini': </p>

<pre><code># ======================= 
# Shiro INI configuration 
# ======================= 
[main] 
myRealm = com.me.myapp.security.MyRealm 
</code></pre>

<p>Then in my Driver class/main method (that I'm using for testing): </p>

<pre class=""lang-java prettyprint-override""><code>public class Driver { 
    public static void main(String[] args) { 
        Driver d = new Driver(); 
        d.test(); 
    } 

    public void test() { 
        Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini""); 
        SecurityManager securityManager = factory.getInstance(); 
        SecurityUtils.setSecurityManager(securityManager); 

        UsernamePasswordToken token = new UsernamePasswordToken("""", """"); 
        token.setRememberMe(true); 

        System.out.println(""Shiro props:""); 
        System.out.println(securityManager.getProperties()); 

        Subject currentUser = SecurityUtils.getSubject() 

        try { 
            currentUser.login(token) 

            println ""I think this worked!"" 
        } catch (UnknownAccountException uae) { 
            println ""Exception: ${uae}"" 
        } catch (IncorrectCredentialsException ice) { 
            println ""Exception: ${ice}"" 
        } catch (LockedAccountException lae) { 
            println ""Exception: ${lae}"" 
        } catch (ExcessiveAttemptsException eae) { 
            println ""Exception: ${eae}"" 
        } catch (AuthenticationException ae) { 
            println ""Exception: ${ae}"" 
        } 
    } 
} 
</code></pre>

<p>When I run this I get: </p>

<pre><code>Shiro props: 
[class:class org.apache.shiro.mgt.DefaultSecurityManager, cacheManager:null, subjectFactory:org.apache.shiro.mgt.DefaultSubjectFactory@6a2b8b42, authorizer:org.apache.shiro.authz.ModularRealmAuthorizer@50c3d082, realms:[com.me.myapp.security.MyRealm@67ae303a], subjectDAO:org.apache.shiro.mgt.DefaultSubjectDAO@5ce06503, rememberMeManager:null, authenticator:org.apache.shiro.authc.pam.ModularRealmAuthenticator@1007d798, sessionManager:org.apache.shiro.session.mgt.DefaultSessionManager@72db4460] 
Exception: org.apache.shiro.authc.AuthenticationException: Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - , rememberMe=true].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException). 
</code></pre>

<p>So it looks like its reading my shiro.ini because its picking up the correct realm, but <code>MyRealm</code> doesn't do anything except stub out dummy users that should authenticated regardless of the username/password supplied. Any ideas as to where I'm going awry?</p>
","<security><authentication><authorization><shiro>","7","27879807"
"3369955","Web-Application Security with Apache Shiro Configuration Problems","<p>I decided to use Shiro to secure my webapplication. I use a tomcat app server, maven, hibernate and jsf. Now I tried to configure Shiro but got some problems.</p>

<p>Here are my files:</p>

<p>---POM.xml---</p>

<pre><code>            &lt;dependency&gt;
                    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
                    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
                    &lt;version&gt;1.0.0-incubating&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
                    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
                    &lt;version&gt;1.0.0-incubating&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
                    &lt;artifactId&gt;shiro-aspectj&lt;/artifactId&gt;
                    &lt;version&gt;1.0.0-incubating&lt;/version&gt;
            &lt;/dependency&gt;
</code></pre>

<p>---web.xml---</p>

<pre><code> &lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;
      javax.faces.webapp.FacesServlet
    &lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;welcome.xhtml&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;

  &lt;filter&gt;
    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
    &lt;param-name&gt;config&lt;/param-name&gt;
            &lt;param-value&gt;

                  [main]

                  myrealm = com.misPartidos.web.MyRealm

         &lt;/param-value&gt;

    &lt;/init-param&gt;
        &lt;/filter&gt;

        &lt;filter-mapping&gt;
            &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;
            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;/filter-mapping&gt;
</code></pre>

<p>If I deploy to the server I get this error message:</p>

<pre><code>ERROR: Exception starting filter ShiroFilter
java.lang.ClassNotFoundException: org.apache.shiro.web.servlet.IniShiroFilter
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1645)
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1491)
        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:269)
        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:422)
        at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:115)
        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4001)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4651)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
        at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)
        at org.apache.catalina.core.StandardService.start(StandardService.java:519)
        at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
        at org.apache.catalina.startup.Catalina.start(Catalina.java:581)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)
30.07.2010 10:14:34 org.apache.catalina.core.StandardContext start
ERROR: Error filterStart
</code></pre>

<p>Where is my mistake? Do I need to implemnt something else as well?
Thank you for help
Sven</p>

<hr>

<h2>Additional</h2>

<p>I thought a bit about the problem. I think the key is to set the realm. But to test this framework I don't want to add a database or ldap. I need an easy solution...</p>

<hr>

<h2>Update</h2>

<p>I changed the web.xml as follows:</p>

<pre><code>&lt;init-param&gt;
    &lt;param-name&gt;config&lt;/param-name&gt;
        &lt;param-value&gt;

        [main]

        [users]

        tom = secret, admin
        paul = secret, user

        [roles]

        admin = *
        user = *

         &lt;/param-value&gt;

    &lt;/init-param&gt;
</code></pre>

<p>But the error remains the same :-/</p>
","<java><security><web-applications><shiro>","2","3375783"
"16823293","how to configure a shiro Realm to connect to an oracle database within a struts2 application","<p>I have been working with shiro (ki, jsecurity) now for a few days and have been able to create a test application.  I am working with struts2, off JBoss.  I have been able create a shiro.ini file with a few hard-coded users, and i have gotten that to work. It seems like the API within JAVA is extremely easy to get a grasp of, so integrating shiro to my application and making it functional hasnt been the real problem.  My real issue is that i have not been able to find any form of documentation on how to create/tie a REALM to an oracle database using this set up.  I have found several examples and tried aimlessly to adapt it to my situation.  but i have been unable. </p>

<p>I have an oracle database with a USERS table, it simply holds a username, password, and role.  If i am able to make the connection, it seems as though it should simply fit right into my current login/logoff app.</p>

<p>I added the following lines to my web.xml</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
        &lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
</code></pre>

<p>I then added shiro.ini to my WEB-INF:</p>

<pre><code>[main]

[users]
bruins = boston, admin, super, worker
rangers = newyork, super, worker
leafs = toronto, worker

[urls]
/authoring/logout = logout
/authoring/** = authc
</code></pre>

<p>after that it was simply calling the java code from within my loginAction.java:</p>

<pre><code>Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
SecurityManager securityManager = factory.getInstance();   
SecurityUtils.setSecurityManager(securityManager);   
Subject currentUser = SecurityUtils.getSubject();   
UsernamePasswordToken token = new UsernamePasswordToken(this.username, this.password);
try {   
    currentUser.login(token);   
    Session session = currentUser.getSession();   
    session.setAttribute(""user"", this.username);   
} catch (UnknownAccountException uae) {   
  ... 
} catch (IncorrectCredentialsException iae) {   
 ...
} catch (LockedAccountException lae) {   
 ... 
} catch (AuthenticationException ae) {   
  ...         
} catch (Exception e) {   
 ...
}   
ActionMessages messages = new ActionMessages();
if (currentUser.isAuthenticated()) {   
    System.out.println(""user is authenticated!!!!!"");

    if (currentUser.hasRole(""admin"")){
        System.out.println(this.username + "" can access admin functions"");
    }
    if(currentUser.hasRole(""super"")){
        System.out.println(this.username + "" can access supervisor functions"");
    }
    if(currentUser.hasRole(""worker"")){
        System.out.println(this.username + "" can only perform worker functions"");
    }
    addActionMessage(getText(""success.valid.user"", this.username));
    return SUCCESS;
} else {   
    System.out.println(""user was not authenticated!!!!!!"");
    addActionError(getText(""error.login""));
    return ERROR;
}
</code></pre>

<p>so all in all, i have the application working with hard-coded users:  my question is what is the best way for me to set up the REALM to connect to my oracle database?  I have seen it online done in several different ways, and i have been unable to adapt any of them to my set up, and i would love to get this going to that i can continue to familiarize myself with the API.</p>

<p>thanks - John</p>
","<java><oracle><struts2><jboss><shiro>","5","16843988"
"6805846","Apache Shiro ""with JSF  2.0"" ! How does it go?","<p>I am looking for frameworks/solution for authentication/ user-login management/ security  in java web application that can make the naive developer's job easier/faster and make the application relatively more secured against potential threats. </p>

<p>As some people have suggested me to consider solutions like Spring Security &amp; Apache Shiro,  I wanted to know how does it go <strong>with JSF 2.0</strong>.
Are there any downsides of using Shrino over Spring security for my case?</p>

<p>Any other better security solutions for JSF applications ? </p>

<hr>

<p>Currently I'm <strong>using JSF 2.0(with Facelets) as the front-end development framework</strong> in my web application &amp; it is <strong>backed by Cassandra, a NoSQL database</strong>. </p>
","<security><spring-security><shiro>","5","6808704"
"34596104","JAAS, Spring Security or Apache Shiro","<p>Just a quick question regarding security frameworks in java.</p>

<p>To date <strong>JAAS</strong> has always been my go to framework. Yes people complain that it is very difficult to setup and it requires hooks into your underlying system but it does it's job 
and has the added bonus of being a specification.</p>

<p>That said I have been researching other security frameworks in Java lately and the two that seem to be getting the most attention online are :</p>

<p><strong>1 - Spring Security</strong></p>

<p>Spring Security seems to be insanely popular but I found it a bit convoluted to work with. </p>

<p><strong>2 - Apache Shiro</strong></p>

<p>Apache Shiro seems to be more straight forward than Spring Security, however it seems to lack some documentation.</p>

<p>So my question is, of the frameworks mentioned above do people think I should spend time learning Spring Security or Apache Shiro? </p>

<p>(Or should I just stick with JAAS?)</p>
","<spring-security><shiro><jaas>","8","34613072"
"16240202","Apache Shiro: How would you manage Users?","<p>I want to use Shiro on my next web project but I do not know a good (if not the best) strategy to manage users ([users] in shiro.ini).</p>

<ol>
<li>Is it best to create Shiro user for every registered member?</li>
<li>Or create a single Shiro user then for every member just store it to some database and acces it via that Shiro user?</li>
</ol>

<p>If you would go for #1, how would you manage/automate it? Most of the projects I worked on opted for #2.</p>

<p>Thanks</p>
","<shiro>","6",""
"8882153","Shiro: Session already invalidated","<p>I am using Apache Shiro in a web-application. The login and authentication check works well, but I have a problem to implement a logout / re-login mechanism: The logout is done in a servlet: </p>

<pre><code>    private void logout(HttpServletRequest req, HttpServletResponse resp)
        throws ServletException, IOException {
            log.debug(""do logout"");
            Subject subject = SecurityUtils.getSubject();
            subject.logout();
            resp.sendRedirect(""end.html"");
    }
</code></pre>

<p>But after a logout and re-login I get the following error:</p>

<pre><code>org.apache.shiro.session.InvalidSessionException: java.lang.IllegalStateException:
  getAttribute: Session already invalidated
  at org.apache.shiro.web.session.HttpServletSession.removeAttribute(HttpServletSession.java:167)
at org.apache.shiro.session.ProxiedSession.removeAttribute(ProxiedSession.java:135)
at org.apache.shiro.subject.support.DelegatingSubject.clearRunAsIdentities(DelegatingSubject.java:424)
at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:246)
</code></pre>

<p>The login is done in the following way (in a method of a UI component, I use ZK as UI framework):</p>

<pre><code>  private void tryLogin(UsernamePasswordToken token) {
        Subject subject = SecurityUtils.getSubject();
        try {
              subject.login(token);
              ...
</code></pre>

<p>I do not understand the exception as the logout from shiro invalidates the session and the re-login should access a new session.</p>

<p>Thanks for help</p>
","<java><session-state><shiro>","2","8900321"
"14516851","Shiro complaining ""There is no session with id xxx"" with DefaultSecurityManager","<p>I'm using Apache Shiro 1.2.0 in a long-running application that reads messages from a queue and and takes action.  The action taken requires a Shiro authenticated session, so I've implemented an ""ActAsAuthenticationToken"" and custom credentials matcher which allows us to login in with only the username.  I'm using the DefaultSecurityManager with only my custom realm and subject factory injected.  Everything else should be default.</p>

<p>As it is configured, everything worked fine for a while, but as the application ran a long time (not that long - like a full day) I started to get this stack trace whenever I did anything that required the session:</p>

<pre><code>Caused by: org.apache.shiro.session.UnknownSessionException: There is no session with id [f5b7c3bf-2c53-40e9-a707-37f4265970aa]
    at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206)
    at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
    at com.factorlab.security.FactorlabDelegatingSubject.getUser(FactorlabDelegatingSubject.java:34)
    at com.factorlab.security.FactorlabDelegatingSubject.getUser(FactorlabDelegatingSubject.java:10)
    at com.factorlab.persistence.AbstractEntityDao.getCurrentUser(AbstractEntityDao.java:227)
    at com.factorlab.persistence.AbstractEntityDao.fireEvent(AbstractEntityDao.java:215)
    at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:190)
    at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:177)
    at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:38)
    at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:616)
    at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:196)
    at $Proxy72.saveOrUpdate(Unknown Source)
    at com.factorlab.observations.sales.OpportunityScoreUpdateServiceImpl.receiveOpportunityEvent(OpportunityScoreUpdateServiceImpl.java:83)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:616)
    at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
    at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
    at $Proxy76.receiveOpportunityEvent(Unknown Source)
    at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:616)
    at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:69)
    at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:84)
    at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:57)
    at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:102)
    at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:102)
    at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:126)
    at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:227)
    at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:127)
    at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:73)
    ... 49 more
</code></pre>

<p>The really weird part (as far as I'm concerned) is that I have a successful login (or at least an indication that I already have been authenticated right before I get the error:</p>

<pre><code>@Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.REPEATABLE_READ)
@Trace(dispatcher = true)
public void receiveOpportunityEvent(EntityEvent&lt;Opportunity&gt; event) {
    sessionFactory.getCurrentSession().refresh(event.getEntity());
    log.info(""OpportunityScoreUpdateService receiveOpportunityEvent: "" + event);

    //
    //
    // Here we see that we are either authenticated or we log in successfully
    //
    //
    if (!securityUtils.getSubject().isAuthenticated()) {
        try {
            securityUtils.getFactorlabSubject().login(new ActAsAuthenticationToken(event.getEventUsername()));
        } catch (RuntimeException e) {
            log.error(""Could not log in user "" + event.getEventUsername() + "": "" + e.getMessage(), e);
            return;
        }
    }
    if (event.getEntity() instanceof ObservedOpportunity) {
        ObservedOpportunity opportunity = (ObservedOpportunity) event.getEntity();
        opportunity = (ObservedOpportunity) opportunityDao.getById(opportunity.getId(), SkippedCheck.PERMISSION, SkippedCheck.DELETED);
        if (!opportunity.isDeleted()) {
            List&lt;Stage&gt; stages = stageDao.getAllByZone(opportunity.getZone(), SkippedCheck.PERMISSION);
            Map&lt;Stage, Double&gt; originalScoresByStage = new HashMap&lt;Stage, Double&gt;();
            Map&lt;Stage, Double&gt; newScoresByStage = new HashMap&lt;Stage, Double&gt;();
            final Double originalTotal = opportunity.getTotalScore();
            for (Stage stage : stages) {
                originalScoresByStage.put(stage, opportunity.getScoreByStage(stage));
                double score = calculator.getScoreForOpportunityAndStage(opportunity, stage);
                opportunity.setScoreByStage(stage, score);
                newScoresByStage.put(stage, opportunity.getScoreByStage(stage));
            }

            final double newTotalScore = calculator.getTotalScoreForOpportunity(opportunity);
            opportunity.setTheTotalScore(newTotalScore);
            final boolean scoreChanged = originalTotal == null ||
                    Math.round(originalTotal) != Math.round(newTotalScore) ||
                    checkStageScoresChanged(originalScoresByStage, newScoresByStage);
            if (scoreChanged) {
                opportunity.setScoreCalculated(new Date());

                //
                //
                // Here is where we get the exception
                //
                //
                opportunityDao.saveOrUpdate(opportunity, SkippedCheck.PERMISSION);
            } else {
                opportunityDao.refresh(opportunity);
            }
        }
    }
}
</code></pre>

<p>What could be causing this exception?</p>
","<security><shiro>","11","30672822"
"12496600","How to stock and use a shiro's salt from database","<p>I use shiro in application for the authenticate. I use hashed password with a salt and I store them in my database like this :</p>

<pre><code>    private User createUserWithHashedPassword(String inName, String inFirstName, String inLastName, String inPassword){

    ByteSource salt  = randomNumberGenerator.nextBytes(32);

    byte[] byteTabSalt  = salt.getBytes();

    String strSalt = byteArrayToHexString(byteTabSalt);

    String hashedPasswordBase64 = new Sha256Hash(inPassword, salt, 1024).toBase64();

    return new User(inName,inFirstName,inLastName,hashedPasswordBase64,strSalt);
}
</code></pre>

<p>I store the salt with a String in my database. Now in my realm I want to get back my datas from the database, I use a transactionnal service for this. But my salt is a Strong so I want it to turn back as ByteSource type with the static method :</p>

<pre><code>ByteSource byteSourceSalt = Util.bytes(salt); //where the salt is a String
</code></pre>

<p>But when I create my SaltedAuthenticationInfo it doesn't auth.</p>

<p>I think my problem is from my convert method :</p>

<pre><code>private String byteArrayToHexString(byte[] bArray){

        StringBuffer buffer = new StringBuffer();

        for(byte b : bArray) {
            buffer.append(Integer.toHexString(b));
            buffer.append("" "");
        }

 return buffer.toString().toUpperCase();    
}
</code></pre>

<p>Thanks for your help.</p>
","<java><database><salt><shiro>","8","21741390"
"9208996","Getting confused with Apache Shiro and Custom Authorizing Realms","<p>I am trying to create a simple Authorizing Realm for Apache Shiro for testing:</p>

<pre>
public class MyAuthRealm extends AuthorizingRealm {
    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        SimpleAuthorizationInfo sai = new SimpleAuthorizationInfo();
        sai.addRole(""kota"");
        sai.addStringPermission(""koko:*:view"");
        return sai;
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        return null;
    }
}
</pre>

<p>As you can see it doesn't care about who the user is - it just returns a role and a specific permission.</p>

<p>Now, I am trying to test that in the following snipptet:</p>

<pre>
if(SecurityUtils.getSubject().hasRole(""kota"")) {
    out.write(""kota "");
}
if(SecurityUtils.getSubject().hasRole(""kota2"")) {
    out.write(""kota2 "");
}  
if(SecurityUtils.getSubject().isPermitted(""koko:toto:view"")) {
    out.write(""koko "");
}
if(SecurityUtils.getSubject().isPermitted(""koko2:toto:view"")) {
    out.write(""koko2 "");
} 
</pre>

<p>And I receive the following output</p>

<pre>
kota koko koko2 
</pre>

<p>:(</p>

<p>So it seems that the role is configured correctly (since the user only has the role kota), but the permission is not (why is koko2 printed???) !!!! </p>

<p>Can anybody explain to me what I am doing wrong ? </p>

<p>TIA !</p>
","<java><security><shiro>","2","9229210"
"17440525","Using JDBCRealm to authenticate user with Shiro","<p>I am trying to authenticate a servlet running within Tomcat 6 using Shiro.</p>

<p>I have the following shiro.ini file:</p>

<pre><code>[main]
ps = org.apache.shiro.authc.credential.DefaultPasswordService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $ps

aa = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
sm = org.apache.shiro.authc.credential.SimpleCredentialsMatcher

jof = org.apache.shiro.jndi.JndiObjectFactory
jof.resourceName = jdbc/UserDB
jof.requiredType = javax.sql.DataSource
jof.resourceRef = true

realm = org.apache.shiro.realm.jdbc.JdbcRealm
realm.permissionsLookupEnabled = true
realm.credentialsMatcher = $pm
; Note factories are automatically invoked via getInstance(),
;   see org.apache.shiro.authc.config.ReflectionBuilder::resolveReference
realm.dataSource = $jof

securityManager.realms = $realm

[urls]
/rest/** = authcBasic
/prot/** = authcBasic
</code></pre>

<p>And the following in my database:</p>

<pre><code>mysql&gt; select * from users;
+----------+------------------+----------+----------------------------------------------+--------------------------+
| username | email            | verified | password                                     | password_salt            |
+----------+------------------+----------+----------------------------------------------+--------------------------+
| admin    | a.muys@********* |        1 | ojSiTecNwRF0MunGRvz3DRSgP7sMF9EAR77Ol/2IAY8= | eHp9XedrIUa5sECfOb+KOA== |
+----------+------------------+----------+----------------------------------------------+--------------------------+
1 row in set (0.00 sec)
</code></pre>

<p>If I use the <code>SimpleCredentialsManager</code> it authenticates fine against a plaintext password in the users table. Trying to use the <code>PasswordMatcher</code> has been extremely frustrating.</p>

<p>The password and password_salt were obtained via the shiro-tools <code>Hasher</code> utility.</p>

<p>When I try to authenticate against a basic <code>HelloWorld</code> servlet I use for testing (path=rest/hello, context=/ws), I get the following in the logs:</p>

<pre><code>15:35:38.667 [http-8080-2] TRACE org.apache.shiro.util.ClassUtils - Unable to load clazz named [ojSiTecNwRF0MunGRvz3DRSgP7sMF9EAR77Ol/2IAY8=] from class loader [WebappClassLoader
  context: /ws
  delegate: false
  repositories:
    /WEB-INF/classes/
----------&gt; Parent Classloader:
org.apache.catalina.loader.StandardClassLoader@79ddd026
]
</code></pre>

<p>(Full log at <a href=""https://gist.github.com/recurse/5915693"" rel=""noreferrer"">https://gist.github.com/recurse/5915693</a> )</p>

<p>It appears to be trying to load my hashed password as a classname. Is this a bug, or a configuration error on my part? If it is a bug, how can I work around it? If it is a configuration error, what am I missing?</p>
","<shiro><jdbcrealm>","11","17452936"
"7448460","Spring MVC and Shiro Configuration using ini files","<p>I'm trying to set up an environment with Spring MVC and Apache Shiro. I'm following articles mentioned in shiro.apache.org.</p>

<p>I'm using Spring's DelegatingFilterProxy as Shiro Filter in web.xml.</p>

<p>The current filtering is done using :</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;property name=""loginUrl"" value=""/login""/&gt;
        &lt;property name=""successUrl"" value=""/dashboard""/&gt;
        &lt;property name=""unauthorizedUrl"" value=""/unauthorized""/&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /** = authc, user, admin
                /admin/** = authc, admin
                /login = anon
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>Question is, how do I use shiro.ini file defining security settings?</p>
","<spring-mvc><shiro>","6","7449418"
"12355231","How to use the Shiro's SaltedAuthenticationInfo?","<p>I work on an authentication component for my application. I'm using the Apache Shiro API with salted password.</p>

<p>I create a new user with the salt like in this example :</p>

<pre><code>ByteSource salt = randomNumberGenerator.nextBytes(32);      
byte[] byteTabSalt = salt.getBytes();   
String strSalt = byteArrayToHexString(byteTabSalt);         
String hashedPasswordBase64 = new Sha256Hash(inPassword, salt, 512).toBase64();
</code></pre>

<p>But I'dont understand how I am suppose to use the salt to auhtenticate a user in the doGetAuthenticationInfo method. My method must return a SaltedAuthenticatedInfo but I don't understand how I'm suppose to create it.</p>

<p>I don't understand the link between the Credential Matcher and the SaltedAuthenticateInfo.</p>

<p>Do I have to inform a credential matcher when I create password salts ?</p>

<p>Thanks for your help.</p>
","<java><salt><shiro>","6","12375092"
"22826922","how to close shiro session","<p>I met an error when hardcode try to logout with shiro.
user do login and logout not through web login/logout url, but backend link.</p>

<p>when login, it works.</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
        UsernamePasswordToken token = new UsernamePasswordToken(request.getParameter(""username""), request.getParameter(""password""));
        token.setRememberMe(true);
        try {
            currentUser.login(token);
        } catch (AuthenticationException e) {
            e.printStackTrace();
        }
</code></pre>

<p>but when i try to logout, with error:</p>

<pre><code>public void userLogout(String sessionId){
    SecurityManager securityManager = SecurityUtils.getSecurityManager();
    Subject.Builder builder = new Subject.Builder(securityManager);
    builder.sessionId(sessionId);
    Subject subject = builder.buildSubject();
    if (null != subject) {
        try {
            subject.logout();
        } catch (SessionException e) {
            // TODO: handle exception
        }
    }
}
</code></pre>

<p>but met error  [org.apache.shiro.session.UnknownSessionException: There is no session with id , then how to manually colse a shiro session?</p>
","<session><logout><shiro>","1","22892459"
"14315824","Shiro standalone application","<p>This is my META-INF/spring/beans.xml</p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.mgt.DefaultSecurityManager"" /&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p>When I am trying to test it :</p>

<pre><code>public static void main(String[] args) throws Exception {

    SecurityUtils.getSecurityManager()

}
</code></pre>

<p>I got this error :</p>

<pre><code>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
</code></pre>
","<java><spring><shiro>","0","14391068"
"10783992","Spring and MongoDB: SAXParseException while reading Bean Definitions","<p>I am using MongoDB with Spring, and Apache Shiro for session management. Since I encountered the same issue mentioned in <strong><a href=""https://stackoverflow.com/questions/10503101/spring-mongodb-and-apache-shiro"">this</a></strong> question, I resorted to using MongoTemplate directly instead of extending MongoRepository for implementing Realm class required by Shiro. This realm is simply a DAO that deals with MongoDB for user &amp; role persistence.</p>

<p>At the moment, I have a strange issue with the Bean Definition XML. It throws an SAXParserException, and I cannot comprehend why.</p>

<p>I have provided some information below. Could you kindly help me with this?</p>

<p><strong>web.xml:</strong></p>

<pre><code>&lt;web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
    metadata-complete=""false""&gt;
    &lt;display-name&gt;Test Web App&lt;/display-name&gt;
&lt;/web-app&gt;
</code></pre>

<p><strong>persistence.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans"" 
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:p=""http://www.springframework.org/schema/p"" 
        xmlns:c=""http://www.springframework.org/schema/c""
        xmlns:tx=""http://www.springframework.org/schema/tx""
        xmlns:context=""http://www.springframework.org/schema/context""
        xmlns:mongo=""http://www.springframework.org/schema/data/mongo""
        xmlns:util=""http://www.springframework.org/schema/util""
        xsi:schemaLocation=""
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/data/mongo
            http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
            http://www.springframework.org/schema/util 
            http://www.springframework.org/schema/util/spring-util-3.1.xsd""&gt;

    &lt;bean id=""persistencyProps"" class=""org.springframework.beans.factory.config.PropertiesFactoryBean""
        p:location=""classpath:persistency.properties"" /&gt;

    &lt;context:property-placeholder properties-ref=""persistencyProps"" /&gt;

    &lt;!-- Activate Spring Data MongoDB repository support --&gt;
    &lt;mongo:repositories base-package=""com.test.webapp.repository"" /&gt;

    &lt;!-- MongoDB host --&gt;
    &lt;mongo:mongo host=""${mongo.host.name}"" port=""${mongo.host.port}""/&gt;

    &lt;!-- Template for performing MongoDB operations --&gt;
    &lt;bean id=""mongoTemplate"" class=""org.springframework.data.mongodb.core.MongoTemplate"" 
            c:mongo-ref=""mongo"" c:databaseName=""${mongo.db.name}""/&gt;

    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
        &lt;property name=""realm"" ref=""mongoRealm""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager""/&gt;

    &lt;bean id=""mongoRealm"" class=""com.test.webapp.login.MongoRealm/&gt;
&lt;/beans&gt;
</code></pre>

<p><strong>Webapp initialization</strong></p>

<pre><code>public class AppInit implements WebApplicationInitializer {

    private static final String DISPATCHER_SERVLET_NAME = ""dispatcher"";

    public void onStartup(ServletContext container) throws ServletException {
        container.setInitParameter(""log4jConfigLocation"", ""log4j.properties"");
        container.addListener(new Log4jConfigListener());

        AnnotationConfigWebApplicationContext rootContext = new AnnotationConfigWebApplicationContext();
        rootContext.register(AppConfig.class);

        // Manage the lifecycle of the root application context
        container.addListener(new ContextLoaderListener(rootContext));

        // Create the dispatcher servlet's Spring application context
        AnnotationConfigWebApplicationContext dispatcherContext = new AnnotationConfigWebApplicationContext();
        dispatcherContext.register(WebConfig.class);

        // Register and map the dispatcher servlet
        ServletRegistration.Dynamic dispatcher = container.addServlet(
                DISPATCHER_SERVLET_NAME, new DispatcherServlet(dispatcherContext));
        dispatcher.setLoadOnStartup(1);
        dispatcher.addMapping(""/"");

        // Filter for shiro
        javax.servlet.FilterRegistration.Dynamic filterReg = container.addFilter(""shiroFilter"", DelegatingFilterProxy.class);
        filterReg.setInitParameter(""targetFilterLifecycle"", ""true"");
        filterReg.addMappingForServletNames(null, true, DISPATCHER_SERVLET_NAME);

    }
}
</code></pre>

<p><strong>Configuration class</strong></p>

<pre><code>@Configuration
@ComponentScan( basePackages = {""com.test.webapp.controller"", ""com.test.webapp.util"", ""com.test.webapp.login""})
@ImportResource(""classpath:persistence.xml"")
public class AppConfig{

    @Bean(name = ""jsonView"")
    public MappingJacksonJsonView jsonView() {
        MappingJacksonJsonView mappingJacksonJsonView = new MappingJacksonJsonView();
        mappingJacksonJsonView.setContentType(""application/json"");
        return mappingJacksonJsonView;
    }
}
</code></pre>

<p><strong>Properties file</strong></p>

<pre><code># database properties
mongo.db.name=appkix_mas
mongo.host.name=127.0.0.1
mongo.host.port=27017
mongo.collection.user=user
</code></pre>

<p><strong>Exception chain</strong></p>

<pre><code>org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 49 in XML document from class path resource [persistence.xml] is invalid; nested exception is org.xml.sax.SAXParseException: The value of attribute ""class"" associated with an element type ""null"" must not contain the '&lt;' character.
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportedResources(ConfigurationClassBeanDefinitionReader.java:303)
    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:131)
    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:118)
    at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:294)
    at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:203)
    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:617)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:446)
    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:385)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:284)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4779)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5273)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:895)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:871)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:615)
    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:962)
    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1603)
    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.xml.sax.SAXParseException: The value of attribute ""class"" associated with an element type ""null"" must not contain the '&lt;' character.
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanAttribute(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(Unknown Source)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(Unknown Source)
    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
    at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
    ... 29 more
</code></pre>

<p>Thank you very much for your time.</p>
","<java><spring><mongodb><shiro>","1","10784379"
"16761948","Apache Shiro: redirect me to login page","<p>When I try to access some protected page like the writerPage, Shiro keep redirecting me to the loging Page</p>

<p><img src=""https://i.stack.imgur.com/Mf5zo.png"" alt=""project""></p>

<p>This is the shiro.ini file</p>

<pre><code>[users]
admin = p
mike = p, reader, writer
joe = p, writer 


[urls]
/success/** = authc
/writer/** = authc
</code></pre>

<p>And the server show some error:</p>

<pre><code>    INFO: PWC1412: WebModule[/ShiroTest3_mvn] ServletContext.log():Cleaning up Shiro Environment
    INFO: PWC1412: WebModule[/ShiroTest3_mvn] ServletContext.log():Initializing Shiro environment
    GRAVE: 105 [http-thread-pool-4848-(1)] INFO org.apache.shiro.web.env.EnvironmentLoader - Starting Shiro environment initialization.

    GRAVE: 997 [http-thread-pool-4848-(1)] INFO org.apache.shiro.web.env.EnvironmentLoader - Shiro environment initialized in 882 ms.

    INFO: Loading application com.mycompany_ShiroTest3_mvn_war_1.0-SNAPSHOT at /ShiroTest3_mvn
    INFO: com.mycompany_ShiroTest3_mvn_war_1.0-SNAPSHOT was successfully deployed in 1 606 milliseconds.
</code></pre>

<p>And this the web.xml file</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;

&lt;web-app xmlns=""http://java.sun.com/xml/ns/javaee""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
        version=""3.0""&gt;
    &lt;session-config&gt;
        &lt;session-timeout&gt;
        30
        &lt;/session-timeout&gt;
    &lt;/session-config&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;


    &lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;


    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;

&lt;/web-app&gt;
</code></pre>

<p>Do i need to add/modify something?</p>

<p>Though Shiro seems to be less complicated for a beginner compared to Spring Security, It seems it has less support :(  </p>

<p>UPDATE</p>

<p>after adding the [main] code:</p>

<p>I get this error</p>

<p>server log error </p>

<pre><code>    INFO: PWC1412: WebModule[null] ServletContext.log():Initializing Shiro environment
    GRAVE: 3155 [admin-thread-pool-4848(1)] INFO org.apache.shiro.web.env.EnvironmentLoader - Starting Shiro environment initialization.

    GRAVE: 4218 [admin-thread-pool-4848(1)] ERROR org.apache.shiro.web.env.EnvironmentLoader - Shiro environment initialization failed

    GRAVE: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
        at org.apache.commons.beanutils.ConvertUtilsBean.&lt;init&gt;(ConvertUtilsBean.java:157)
        at org.apache.commons.beanutils.BeanUtilsBean.&lt;init&gt;(BeanUtilsBean.java:117)
        at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:68)
        at org.apache.commons.beanutils.ContextClassLoaderLocal.get(ContextClassLoaderLocal.java:153)
        at org.apache.commons.beanutils.BeanUtilsBean.getInstance(BeanUtilsBean.java:80)
        at org.apache.commons.beanutils.PropertyUtilsBean.getInstance(PropertyUtilsBean.java:114)
        at org.apache.commons.beanutils.PropertyUtils.getPropertyDescriptor(PropertyUtils.java:460)
        at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:248)
        at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:491)
        at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:203)
        at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:164)
        at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:124)
        at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:170)
        at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:119)
        at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:97)
        at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:83)
        at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:41)
        at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
        at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
        at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
        at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
        at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
        at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
        at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
        at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:226)
        at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:138)
        at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
        at org.apache.catalina.core.StandardContext.contextListenerStart(StandardContext.java:4750)
        at com.sun.enterprise.web.WebModule.contextListenerStart(WebModule.java:550)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:5366)
        at com.sun.enterprise.web.WebModule.start(WebModule.java:498)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:917)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:901)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:733)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:2019)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:1669)
        at com.sun.enterprise.web.WebApplication.start(WebApplication.java:109)
        at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
        at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
        at java.lang.Thread.run(Thread.java:619)
    Caused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
        at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1509)
        at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1359)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
        ... 69 more

    GRAVE: PWC1306: Startup of context /ShiroTest3_mvn failed due to previous errors
    GRAVE: PWC1305: Exception during cleanup after start failed
    org.apache.catalina.LifecycleException: PWC2769: Manager has not yet been started
        at org.apache.catalina.session.StandardManager.stop(StandardManager.java:873)
        at org.apache.catalina.core.StandardContext.stop(StandardContext.java:5571)
        at com.sun.enterprise.web.WebModule.stop(WebModule.java:527)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:5384)
        at com.sun.enterprise.web.WebModule.start(WebModule.java:498)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:917)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:901)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:733)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:2019)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:1669)
        at com.sun.enterprise.web.WebApplication.start(WebApplication.java:109)
        at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
        at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
        at java.lang.Thread.run(Thread.java:619)

    GRAVE: ContainerBase.addChild: start: 
    org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:5389)
        at com.sun.enterprise.web.WebModule.start(WebModule.java:498)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:917)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:901)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:733)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:2019)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:1669)
        at com.sun.enterprise.web.WebApplication.start(WebApplication.java:109)
        at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
        at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
        at java.lang.Thread.run(Thread.java:619)
    Caused by: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
        at org.apache.commons.beanutils.ConvertUtilsBean.&lt;init&gt;(ConvertUtilsBean.java:157)
        at org.apache.commons.beanutils.BeanUtilsBean.&lt;init&gt;(BeanUtilsBean.java:117)
        at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:68)
        at org.apache.commons.beanutils.ContextClassLoaderLocal.get(ContextClassLoaderLocal.java:153)
        at org.apache.commons.beanutils.BeanUtilsBean.getInstance(BeanUtilsBean.java:80)
        at org.apache.commons.beanutils.PropertyUtilsBean.getInstance(PropertyUtilsBean.java:114)
        at org.apache.commons.beanutils.PropertyUtils.getPropertyDescriptor(PropertyUtils.java:460)
        at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:248)
        at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:491)
        at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:203)
        at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:164)
        at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:124)
        at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:170)
        at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:119)
        at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:97)
        at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:83)
        at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:41)
        at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
        at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
        at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
        at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
        at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
        at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
        at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
        at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:226)
        at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:138)
        at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
        at org.apache.catalina.core.StandardContext.contextListenerStart(StandardContext.java:4750)
        at com.sun.enterprise.web.WebModule.contextListenerStart(WebModule.java:550)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:5366)
        ... 39 more
    Caused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
        at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1509)
        at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1359)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
        ... 69 more

    ATTENTION: java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
    java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:921)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:901)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:733)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:2019)
        at com.sun.enterprise.web.WebContainer.loadWebModule(WebContainer.java:1669)
        at com.sun.enterprise.web.WebApplication.start(WebApplication.java:109)
        at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
        at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
        at java.lang.Thread.run(Thread.java:619)

    GRAVE: Exception while invoking class com.sun.enterprise.web.WebApplication start method
    java.lang.Exception: java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
        at com.sun.enterprise.web.WebApplication.start(WebApplication.java:138)
        at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
        at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
        at java.lang.Thread.run(Thread.java:619)

    GRAVE: Exception while loading the app
    GRAVE: Exception while loading the app : java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
</code></pre>
","<security><spring-security><java-ee-6><shiro>","4","16844294"
"27823549","Spring Boot with Apache Shiro","<p>I'm currently trying to integrate Apache Shiro to my Spring Boot restful API, but am experiencing some issues and was wondering if anyone could help.</p>

<p>My Application.class:</p>

<p></p>

<pre><code>@Configuration
@EnableTransactionManagement
@EnableAutoConfiguration
@ComponentScan(basePackages = ""org.xelamitchell.sophia.server"")
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

}
</code></pre>

<p></p>

<p>My WebConfig.class:</p>

<p></p>

<pre><code>@Configuration
@EnableWebMvc
public class WebConfig extends WebMvcConfigurerAdapter {

    @Bean
    public DispatcherServlet dispatcherServlet() {

        DispatcherServlet servlet = new DispatcherServlet();
        servlet.setDispatchOptionsRequest(true);

        return servlet;
    }

    @Bean
    public ServletRegistrationBean dispatcherRegistration(DispatcherServlet dispatcherServlet) {

        ServletRegistrationBean registration = new ServletRegistrationBean(dispatcherServlet);
        registration.addUrlMappings(""/sophia/*"");

        return registration;
    }

    @Override
    public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {

        Map&lt;String, MediaType&gt; types = new HashMap&lt;&gt;();
        types.put(""json"", APPLICATION_JSON);
        types.put(""xml"", APPLICATION_XML);

        configurer
            .defaultContentType(APPLICATION_JSON)
            .mediaTypes(types);

    }

    @Override
    public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {

        converters.add(jackson());
        converters.add(jaxb());

        super.configureMessageConverters(converters);
    }

    @Bean
    public MappingJackson2HttpMessageConverter jackson() {

        final MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter();
        converter.getObjectMapper()
            .setSerializationInclusion(JsonInclude.Include.NON_NULL)
            .setSerializationInclusion(JsonInclude.Include.NON_EMPTY)
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

        return converter;
    }

    @Bean
    public Jaxb2RootElementHttpMessageConverter jaxb() {

        final Jaxb2RootElementHttpMessageConverter converter = new Jaxb2RootElementHttpMessageConverter();

        return converter;
    }

    @Bean(name = ""shiroFilter"")
    public ShiroFilterFactoryBean shiroFilter() {

        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
        shiroFilter.setLoginUrl(""/sophia/*"");
        shiroFilter.setSecurityManager(securityManager());

        Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
        filters.put(""anon"", new FormAuthenticationFilter());
        filters.put(""authc"", new FormAuthenticationFilter());
        shiroFilter.setFilters(filters);

        return shiroFilter;
    }

    @Bean
    public org.apache.shiro.mgt.SecurityManager securityManager() {

        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(sophiaRealm());

        return securityManager;
    }

    @Bean(name = ""sophiaRealm"")
    @DependsOn(""lifecycleBeanPostProcessor"")
    public SophiaRealm sophiaRealm() {
        return new SophiaRealm();
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

}
</code></pre>

<p></p>

<p>The application start fine, and the logs do show that shiroFilter is being set:</p>

<p><code>INFO 12:44:44:271 org.springframework.boot.context.embedded.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/sophia/*]
 INFO 12:44:44:277 org.springframework.boot.context.embedded.FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]</code></p>

<p>But when I attempt to access <code>/sophia/users</code> I do not get asked to authenticate, the server simply gives me the response.</p>

<p>I was basing my shiroFilter configuration on this question: <a href=""https://stackoverflow.com/questions/25241801/how-to-configure-shiro-with-spring-boot"">How to configure Shiro with Spring Boot</a></p>
","<java><spring><spring-mvc><spring-boot><shiro>","1","28612134"
"13840678","Shiro expired session handling","<p>My standalone application uses <strong>Shiro</strong> for <strong>security management</strong>. I am encountering a problem with expired sessions. If a user session gets expired and when I try to log the user back in I get the following exception.
Could anybody help?</p>

<pre>
org.apache.shiro.session.UnknownSessionException: There is no session with id [d32af383-5f26-463f-a2f0-58a0e82c7890]
 at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
 at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
 at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
 at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
 at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105)
 at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109)
 at org.apache.shiro.session.mgt.AbstractNativeSessionManager.stop(AbstractNativeSessionManager.java:238)
 at org.apache.shiro.session.mgt.DelegatingSession.stop(DelegatingSession.java:127)
 at org.apache.shiro.session.ProxiedSession.stop(ProxiedSession.java:107)
 at org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession.stop(DelegatingSubject.java:419)
 at org.apache.shiro.session.ProxiedSession.stop(ProxiedSession.java:107)
 at org.apache.shiro.subject.support.DelegatingSubject$StoppingAwareProxiedSession.stop(DelegatingSubject.java:419)
</pre>

<p>I am using spring to configure shiro </p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.mgt.DefaultSecurityManager""&gt; 
    &lt;property name=""realm"" ref=""myRealm""/&gt;
    &lt;property name=""sessionManager.globalSessionTimeout"" value=""3600000"" /&gt;
&lt;/bean&gt; 
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt; 
&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;  
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt; 
    &lt;property name=""arguments"" ref=""securityManager""/&gt; 
&lt;/bean&gt; 
</code></pre>
","<session-timeout><shiro>","8","13844531"
"23889180","Grails asset-pipeline - nothing available","<p>I have a Grails app which currently runs under 2.2.4. I decided to upgrade it to 2.4.0, and in doing so convert it to use the asset-pipeline for my css/js/images. I placed all my old resources in the new assets/... directories.</p>

<p>I'm using IntelliJ 12.1.7 to run the app in debug-mode for development. The app starts just fine, but none of my assets seem to be available. Tomcat 7.0.52.1. Java 7.0.55. I see references such as ""main.css?compile=false"" in the raw html, but the asset itself isn't available when I try to view it directly in the browser (http:\localhost:8080\assets\stylesheets\main.css). I'll also show my ignorance here a bit and ask what the ""?compile=false"" is. That's new to me.</p>

<p>I ran ""grails clean"". Are there any changes I need to make in config.groovy or any other files? I did make the changes to remove references to the old ""resources"" system per the Grails documentation.</p>

<p>Any ideas why the assets don't seem to be getting picked up by the plugin?</p>

<p>UPDATE: something must be getting lost in the translation because when I created an app from scratch, assets loaded just fine in the way I'd expect when referenced per the documentation. I have crosschecked the settings in my BuildConfig and Config files and they match between the 2 apps. They are also using the same version of all the plugins. If I discover a solution, I'll post it here, but frankly I think my next order of business is going to be to gradually start importing the pieces from my app into the newly created one because there seems to be a setting buried somewhere that I don't know about that is getting configured during 2.4.0 creation that is not present in my old code base. Or there is some legacy ""resources"" plugin stuff that has not been removed. Fortunately not a huge app.</p>

<p>UPDATE 2: I have found the source of the issue. My app uses Apache Shiro for security and authentication. Installing the plugin doesn't cause an issue, but once I run ""grails shiro-quick-start"" the asset pipeline stops working. I'm adding a tag to this question in the hopes that someone with Shiro knowledge will be able to help. I have also created a bug over at the grails jira (<a href=""https://jira.grails.org/browse/GPSHIRO-79"" rel=""nofollow"">https://jira.grails.org/browse/GPSHIRO-79</a>)</p>

<p>Update 3: A workaround has been found and implemented. See the jira link above.</p>
","<grails><asset-pipeline><shiro>","1","23994717"
"6239016","High level Java security framework","<p>What security framework do you use in your Java projects?</p>

<p>I used Spring Security and Apache Shiro and they both look immature.</p>

<p>Spring Security flaws:</p>

<ol>
<li>no native support for permissions;</li>
<li>no ability to use explicitly in Java code (sometimes it's necessary);</li>
<li>too much focused on classic (non AJAX) web applications.</li>
</ol>

<p>Apache Shiro flaws:</p>

<ol>
<li>bugs in final release (like the problem with Spring integration);</li>
<li>no support for OpenID and some other widely used technologies;</li>
<li>performance issues reported.</li>
</ol>

<p>There is also lack of documentation for both of them.</p>

<p>Maybe most of the real projects develop their own security frameworks?</p>
","<java><security><spring-security><shiro>","18","6245290"
"17556787","Shiro resets the session after 2 min","<p>I am using Apache Shiro in my webapp. </p>

<p>I store some parameters in the session notably the primary key of an object stored in the database.</p>

<p>When the user logs in, I load the object from the database and save the primary key in the session. Then within the app the user can edit the object's data and either hit a cancel or a save button. </p>

<p>Both buttons triggers a RPC that gets the updated data to the server. The object is then updated in the database using the primary key stored in the session.</p>

<p>If the user remains active in the app (making some RPCs) everything works fine. But if he stays inactive for 3 min and subsequently makes a RPC then Shiro's <code>securityUtils.getSubject().getSession()</code> returns null.</p>

<p>The session timeout is set to 1,200,000 ms (20 min) so I don't think this is the issue. </p>

<p>When I go through the sessions stored in the cache of my session manager I can see the user's session <code>org.apache.shiro.session.mgt.SimpleSession,id=6de78f10-b58e-496c-b40a-e2a9a4ad069c</code> but when I try to get the session ID from the cookie and to call  <code>SecurityUtils.getSecurityManager().getSession(key)</code> to get the session (where key is a SessionKey implementation): I get an exception. </p>

<p>When I try building a new subject from the session ID I lose all the attributes saved in the session.</p>

<p>I am happy to post some code to help resolve the issue but I tried so many workarounds that I don't know where to start... So please let me know what you need.</p>

<p>Alternatively if someone knows a better documented framework than Shiro I am all ears (Shiro's lack of documentation makes it really too time consuming)</p>
","<session-timeout><sessionid><shiro><subject>","5","17559960"
"19654482","getting exception Authentication failed for token submission in apache shiro","<p>i am new in apache shiro.i am getting exception when i execute this statement.</p>

<pre><code>currentUser.login(token);
</code></pre>

<p>exception is</p>

<pre><code> errororg.apache.shiro.authc.AuthenticationException: Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - abc@gmail.com, rememberMe=true].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
</code></pre>

<p>i am invoking this method for login.the code is.</p>

<pre><code>  public boolean authorize(String username,String password)
{
    Boolean status=false;
    log.debug(""the user id ""+username+""passwrodD::""+password);
    Realm realm = new JdbcRealm();
    DefaultSecurityManager securityManager = new DefaultSecurityManager(realm);
    UsernamePasswordToken token = new UsernamePasswordToken(username, password);
    token.setRememberMe(true);
    SecurityUtils.setSecurityManager(securityManager);
    Subject currentUser = SecurityUtils.getSubject();

    Response r = null;
    log.debug(""before process for login"");
    try
    {
        currentUser.login(token);   //This throws an error upon form submission

        r = Response.ok().entity(token).build();            

    }
    catch (UnknownAccountException uae ) {
        //username wasn't in the system, show them an error message?
        System.out.println(""the user name is invalid"");
    } catch ( IncorrectCredentialsException ice ) {
        //password didn't match, try again?
        System.out.println(""the password name is invalid"");
    } catch ( LockedAccountException lae ) {
        //account for that username is locked - can't login.  Show them a message?

    } catch ( AuthenticationException ae ) {
        //unexpected condition - error?
        System.out.println(""unexpect error""+ae);
    }
    return status;
}
</code></pre>

<p>my shiro.ini file</p>

<pre><code> [main]
 jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
 jdbcRealm.permissionsLookupEnabled = true
 jdbcRealm.authenticationQuery =select User_Password FROM  user_master where User_id=?
 ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
 ds.serverName = localhost
 ds.user = root
 ds.password = root
 ds.databaseName = test
 jdbcRealm.dataSource = $ds
 [users]
 [roles]
 [urls]
</code></pre>

<p>i include listener and filter in my web.xml file.
i change the authenticationQuery to my query. and when i am executing i am getting this above error. and also i do know is it right way to modify or override query.</p>
","<java><shiro>","4",""
"4851071","Apache Shiro and Google Guice: Inject Dependencies into Realm","<p>I develop a rest api with Jersey and want to use Google Guice for Dependency Injection and Apache Shiro as a security framwork.</p>

<p>For Authentication i created a custom Realm to which I have to inject an custom Authenticator which is connected to the EntityManager.</p>

<p>However the dependency is not injected into the Realm.
I guess that shiro.ini (in which I have to define the used realm) is not managed by guice.</p>

<p>How can I inject dependencies into Apache Shiro, especially into the used Realm?</p>

<p>My web.xml only has a filter mapped to guice</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app version=""2.5"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""&gt;
&lt;filter&gt;
    &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.google.inject.servlet.GuiceFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;listener&gt;
    &lt;listener-class&gt;GuiceServletConfig&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;/web-app&gt;
</code></pre>

<p>My GuiceServletConfig configures all dependencies including the CustomRealm</p>

<pre><code>public class GuiceServletConfig extends GuiceServletContextListener {

@Override
protected Injector getInjector() {
    return Guice.createInjector(new DbModule(), new JerseyServletModule() {

        @Override
        protected void configureServlets() {
            // ...
            // CustomRealm is only used when i use it as an eager singleton
            bind(CustomRealm.class).asEagerSingleton();
            bind(org.apache.shiro.web.servlet.IniShiroFilter.class).in(Singleton.class);
            filter(""/*"").through(org.apache.shiro.web.servlet.IniShiroFilter.class);
            serve(""/api/*"").with(GuiceContainer.class);
        }
    });
}
}
</code></pre>

<p>The shiro ini only defines the realm</p>

<pre><code>[main]
myRealm = CustomRealm
[users] # for testing
root = secret,admin
[roles] # for testing
admin = *
[urls]
/api/** = authcBasic
</code></pre>
","<java><dependency-injection><jersey><guice><shiro>","4",""
"12247739","Shiro URL filter not working","<p>I have created a simple JSF login page and am using Apache Shiro to provide the authentication and authorisation mechanism, however the URL filters specified in the shiro.ini do not appear to be working.</p>

<p>In the root WebContent directory I have two files named ""test.xhtml"" and ""login.xhtml"" which would be accessible by anyone without the need to login. I also have a subdirectory called ""protected"" containing a file called ""success.xhtml"" which should only be accessible after the user has logged in.</p>

<p>When the [urls] section of the shiro.ini file contains <code>/protected/** = myFilter</code> the user is able to access the protected/success.xhtml page without logging in. When the [urls] section of the shiro.ini file contains <code>/** = myFilter</code> the xhtml page is not rendered by JSF and instead the user is prompted to download the xhtml file.</p>

<p>Is anyone able to suggest how I can configure Shiro to allow anyone access to the pages in the WebContent root directory but only allow users who have logged in access to pages in the protected subdirectory?</p>

<p>I am using Apache MyFaces 2.1.5 and Shiro 1.2.1.</p>

<p>The full contents of the shiro.ini file is as follows:</p>

<pre><code>[main]
myFilter = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
myFilter.loginUrl = /login.xhtml
myFilter.successUrl = /protected/success.xhtml

[users]
user01 = user01, Users
user02 = user02, Users

[roles]
Users = *

[urls]
/protected/** = myFilter
</code></pre>

<p>The contents of the web.xml file is as follows:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app id=""WebApp_ID"" version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""&gt;
    &lt;display-name&gt;FooBarWeb&lt;/display-name&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;javax.servlet.jsp.jstl.fmt.localizationContext&lt;/param-name&gt;
        &lt;param-value&gt;resources.application&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;description&gt;
        State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2&lt;/description&gt;
        &lt;param-name&gt;javax.faces.STATE_SAVING_METHOD&lt;/param-name&gt;
        &lt;param-value&gt;client&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;description&gt;

    This parameter tells MyFaces if javascript code should be allowed in
    the rendered HTML output.
    If javascript is allowed, command_link anchors will have javascript code
    that submits the corresponding form.
    If javascript is not allowed, the state saving info and nested parameters
    will be added as url parameters.
    Default is 'true'&lt;/description&gt;
        &lt;param-name&gt;org.apache.myfaces.ALLOW_JAVASCRIPT&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;description&gt;

    If true, rendered HTML code will be formatted, so that it is 'human-readable'
    i.e. additional line separators and whitespace will be written, that do not
    influence the HTML code.
    Default is 'true'&lt;/description&gt;
        &lt;param-name&gt;org.apache.myfaces.PRETTY_HTML&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;org.apache.myfaces.DETECT_JAVASCRIPT&lt;/param-name&gt;
        &lt;param-value&gt;false&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;description&gt;

    If true, a javascript function will be rendered that is able to restore the
    former vertical scroll on every request. Convenient feature if you have pages
    with long lists and you do not want the browser page to always jump to the top
    if you trigger a link or button action that stays on the same page.
    Default is 'false'
&lt;/description&gt;
        &lt;param-name&gt;org.apache.myfaces.AUTO_SCROLL&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.myfaces.webapp.StartupServletContextListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;servlet&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
        &lt;enabled&gt;true&lt;/enabled&gt;
        &lt;async-supported&gt;false&lt;/async-supported&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;
        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
        &lt;welcome-file&gt;default.html&lt;/welcome-file&gt;
        &lt;welcome-file&gt;default.htm&lt;/welcome-file&gt;
        &lt;welcome-file&gt;default.jsp&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;
&lt;/web-app&gt;
</code></pre>
","<java><jsf-2><shiro>","0","12253222"
"8377475","Setting up a JDBC realm using Apache Shiro for a Spring Roo project","<p>I have a Spring-Roo project set up using Eclipse link for my JPA persistence layer and i have created (User Roles, Users ) Table to manage my security. I was wondering if anyone has set up a realm with a Spring project to configure Apache Shiro so that it uses the database tables for username and password look up as well as saves username's and passwords?</p>

<p>Currently i have a Shiro.ini file being used with a few test roles and (username, password) combinations but i am trying to figure out how to instead configure my web.xml file using the correct filters. Below is my web.xml file and the current filters set.</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;Spring OpenEntityManagerInViewFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter&lt;/filter-class&gt;
&lt;/filter&gt;
 &lt;!-- all declarations in shiro.ini file --&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;


&lt;filter-mapping&gt;
    &lt;filter-name&gt;Spring OpenEntityManagerInViewFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Does anyone have an example of a JDBC realm using (Postgres) with Apache Shiro and Spring?</p>
","<spring-roo><shiro><jdbcrealm>","0","8377835"
"9917858","Understanding authentication in a Java Application Server","<p>I'm currently working on a project running on JBoss AS 7 that requires authentication from a variety of sources. I'm trying to get an understanding of the various components that combine to provide authentication.</p>

<p>I have some assumptions / guesses as to how this all fits together, but I need to make sure that my understanding is correct. So below is what I understand to be the authentication process for JBoss AS7.</p>

<hr>

<p>You have a security realm that defines how users are authenticated. This realm is then exposed to your application in order to secure some or all of it. In AS7 this is configured in the &lt;subsystem xmlns=""urn:jboss:domain:security:1.0""&gt; element.</p>

<p>The realm can be configured to authenticate users against a variety of sources using login-modules, such as a database, LDAP, a local file or something else. Multiple login-modules can be defined, and you can specify some combination of login-modules must ""succeed"" in order for authentication to occur.</p>

<p>The actual username and passwords are passed in via a mechanism defined in the web.xml file (for servlets), defined in the &lt;login-config&gt; element.</p>

<hr>

<p>Assuming that the above process is correct (and it may not be):</p>

<ul>
<li>Does this whole authentication process fall under a specification like JAAS, or is JAAS just a small or optional part of this procedure?</li>
<li>Do all types of &lt;auth-methods&gt;'s (i.e. BASIC, DIGEST and FORM) work with all kinds of login-modules? <a href=""https://docs.jboss.org/author/display/AS7/Securing+the+Management+Interfaces#SecuringtheManagementInterfaces-Authentication"" rel=""noreferrer"">This page</a> would seem to suggest not, but I haven't seen any clear documentation matching &lt;login-module&gt; options &lt;login-config&gt; options.</li>
<li>The username and password flow from a login-config to a login-module seems straight forward enough, but what happens with systems like OpenID or OAuth where there are intermediary steps (like redirection to external login pages)?</li>
<li>How do projects like <a href=""http://docs.jboss.org/seam/3/security/latest/reference/en-US/html_single/#security-authentication"" rel=""noreferrer"">Seam 3 Security</a>, <a href=""http://shiro.apache.org/"" rel=""noreferrer"">Apache Shiro</a> and <a href=""http://static.springsource.org/spring-security/site/"" rel=""noreferrer"">Spring Security</a> fit into this picture?</li>
</ul>
","<spring-security><jboss7.x><jaas><shiro><seam3>","13","10478330"
"22444253","How to get the user session using apache shiro with jersey RESTful","<p>Class A, I create a session using Shiro:</p>

<pre><code>Subject currentUser = null;
currentUser = SecurityUtils.getSubject();
Session session = currentUser.getSession(true);
session.setAttribute(""currentUser"", username);  
</code></pre>

<p>Class B, I have a restful web service method that is trying to get the username session:</p>

<pre><code>HttpSession session = request.getSession();
String currentUser = (String) session.getAttribute(""currentUser"");
logger.debug(""currently logged in user is: "" + currentUser);
</code></pre>

<p>logger shows <code>currentUser</code> as <code>null</code></p>

<p>Question: 
How to get the currentUser session from my code? Is this correct? I am novice with Shiro.
Can someone help?</p>

<p>I have read about shiro DefaultWebSessionManager from shiro's site tutorial but cannot understand it. Can someone give me an example of how I can achieve this? </p>
","<java><apache><session><shiro>","0",""
"16945825","Logout in Apache Shiro","<p>Am trying to add a logout functionality in Shiro, I've add this in the JSP page:</p>

<pre><code>&lt;a href=""/logout""&gt;Log Out&lt;/a&gt;
</code></pre>

<p>and the shiro.ini look like this:</p>

<pre><code>[main]
authc.loginUrl = /login.jsp
logout.redirectUrl = /logout.jsp

#[users]  
#admin = p  
#mike = p, reader
#joe = p, writer 

[urls]  
/login.jsp = authc
/logout.jsp = logout
/writer/** = user, roles[writer]
/success/** = user
#/** = anon 
</code></pre>

<p>but when I try to logout, it give me a </p>

<blockquote>
  <p>HTTP Status 404
  ...
  The requested resource () is not available.</p>
</blockquote>
","<security><jsp><shiro>","1",""
"15605038","Unable to @Inject my DAO in a Custom Apache Shiro AuthorizingRealm","<p>I'm trying to inject my UserDAO inside my custom AuthorizingRealm that Apache Shiro is using but... I get null.</p>

<p>What am I doing wrong?</p>

<p>shiro.ini</p>

<pre class=""lang-none prettyprint-override""><code>[main]
user = demo.shiro.security.FacesAjaxAwareUserFilter
realmA = demo.shiro.security.JpaRealm
credentialsMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
realmA.credentialsMatcher = $credentialsMatcher
securityManager.realms = $realmA
user.loginUrl = /pages/public/login.xhtml

[users]
admin = admin
user = user

[urls]
# public files and folders
/index.html = anon
/resources/** = anon
/pages/public/** = anon

# restricted files and folders
/pages/admin/** = user
/pages/user/** = user
</code></pre>

<p>JpaRealm.java</p>

<pre><code>public class JpaRealm extends AuthorizingRealm {

    @Inject
    private UserDao userDao;

    public JpaRealm() {
        setCredentialsMatcher(new Sha256CredentialsMatcher());
    }

    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authToken) throws AuthenticationException {
        UsernamePasswordToken token = (UsernamePasswordToken) authToken;
        User user = userDao.getForUsername(token.getUsername());
        if (user != null) {
            return new SimpleAuthenticationInfo(user.getId(), user.getPassword(), getName());
        } else {
            return null;
        }
    }

    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        Long userId = (Long) principals.fromRealm(getName()).iterator().next();
        User user = userDao.findByKey(userId);
        if (user != null) {
            SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
            for (Role role : user.getRoles()) {
                info.addRole(role.getDescription());
                for (Permition permition : role.getPermitions()) {
                    info.addStringPermission(permition.getDescription());
                }
            }
            return info;
        } else {
            return null;
        }
    }

}
</code></pre>

<p>What I must do to allow CDI to be aware of the @Inject inside my custom realm and inject my UserDAO properly?</p>
","<java><jsf><cdi><shiro>","3","15605239"
"11139653","Apache Shiro EhCache initialization exception: Another unnamed CacheManager already exists in the same VM","<p>I am trying to get EhCache configured to handle authorization caching in my Apache Shiro enabled web service. Currently I am getting the following exception: </p>

<blockquote>
  <p>org.apache.shiro.cache.CacheException: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:<br>
  1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary<br>
  2. Shutdown the earlier cacheManager before creating new one with same name. </p>
</blockquote>

<p>My shiro.ini looks like:<br>
    [main]<br>
    ...<br>
    cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager 
    cacheManager.cacheManagerConfigFile = classpath:ehcache.xml<br>
    securityManager.cacheManager = $cacheManager </p>

<p>From this StackOverflow post it looks like people using Spring have gotten around this issue by forcing the CacheManager to be a singleton: <a href=""https://stackoverflow.com/questions/10013288/another-unnamed-cachemanager-already-exists-in-the-same-vm-ehcache-2-5"">Another unnamed CacheManager already exists in the same VM (ehCache 2.5)</a>. </p>

<p>Is anybody aware of work-arounds not using Spring initialization (I'm working within the dropwizard framework and have no need to pull in Spring)? Is there some manner of enforcing singleton configuration from the shiro.ini?</p>

<p>Thank you in advance!</p>
","<apache><ehcache><shiro>","5",""
"12589837","Using Shiro's PasswordMatcher with a custom realm","<p>I'm using Apache Shiro with a custom JDBC realm to retrieve a user’s salt, password, hash algorithm name and number of hash iterations from the database which are all stored as separate columns.</p>

<p>The problem is I'm unsure how I should handle the salt that has been retrieved from the database when using the PasswordMatcher to verify the user's password matches that stored in the database.</p>

<p>When using the HashedCredentialsMatcher the salt is set using the <code>setCredentialsSalt</code> method, however it seems that this isn't the case when using the PasswordMatcher instead of the HashedCredentialsMatcher.</p>

<p>The code I'm using in the custom JDBC realm is as follows</p>

<pre><code>@Override 
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException { 

        //code to retrieve user details from database removed for brevity 

        SimpleAuthenticationInfo info = new SimpleAuthenticationInfo(username, passwdSalt.password, getName()); 
        info.setCredentialsSalt(new SimpleByteSource(passwdSalt.salt)); 

        DefaultPasswordService passwordService = new DefaultPasswordService(); 
        DefaultHashService hashService = new DefaultHashService(); 
        PasswordMatcher passwordMatcher = new PasswordMatcher(); 

        hashService.setHashAlgorithmName(passwdSalt.hashAlgorithmName); 
        hashService.setHashIterations(passwdSalt.hashIterations); 
        passwordService.setHashService(hashService); 
        passwordMatcher.setPasswordService(passwordService); 
        setCredentialsMatcher(passwordMatcher); 

        return info; 
} 
</code></pre>

<p>Having stepped through the code I've confirmed that the problem is definitely due to the salt not being used when hashing the password entered by the user in order to match it against the hashed password in the database. In DefaultPasswordService.java when the method passwordsMatch(Object submittedPlaintext, String saved) is called on line 160 the object named <code>request</code> contains the following </p>

<pre><code>algorithmName=null 
iterations=0 
salt=null 
source=cGFzc3dvcmQ= 
</code></pre>

<p>The next line of code on line 161 calls <code>computeHash(request)</code> </p>

<p>In DefaultHashService.java when the method <code>computeHash(HashRequest request)</code> is called, on lines 155 and 157 the variables algorithmName and iterations are correctly set to <code>SHA-256</code> and <code>1</code> respectively. On line 159 the method <code>getPublicSalt(request)</code> is called however it retuns null. </p>

<p>Has anyone else used Shiro's PasswordMatcher with a custom realm and if how do you tell Shiro to use the salt?</p>
","<java><authentication><shiro>","3","12902798"
"22353445","Please ensure that at least one realm can authenticate these tokens","<p>So I have set up my shiro to have two Realms.  A Username and Password Realm, using the standard UsernamePasswordToken.  I have also set up a Custom Bearer Authentication Token that works off a token passed in from the user.</p>

<p>If i just use my passwordValidatorRealm it works find, if no user is found throws unknown account, if password doesn’t match throws incorrect credentials, perfect.  But as soon as i put in my tokenValidatorRealm it throws a </p>

<pre><code>org.apache.shiro.authc.AuthenticationException: Authentication token of type [class org.apache.shiro.authc.UsernamePasswordToken] could not be authenticated by any configured realms.  
</code></pre>

<p>In this instance my tokenValidatorRealm  returns null as no token was provided, so it moves on to the passwordValidatorRealm and just breaks.</p>

<p>Any ideas why introducing a second Realm will cause my working passwordValidatorRealm to break?</p>

<p>Have tried with different authentication strategies, and no luck there.</p>

<p>Using shiro 1.2.2</p>

<p>EDIT</p>

<p>I have two implementations, one for password and one for token</p>

<p>Password:</p>

<pre><code>public class PasswordAuthorizingRealm extends AuthenticatingRealm {

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {

    if (authenticationToken instanceof UsernamePasswordToken) {
        UsernamePasswordToken usernamePasswordToken = (UsernamePasswordToken) authenticationToken;
        String username = usernamePasswordToken.getUsername();
        char[] password = usernamePasswordToken.getPassword();

        if (username == null) {
            throw new AccountException(""Null usernames are not allowed by this realm!"");
        }
        //Null password is invalid
        if (password == null) {
            throw new AccountException(""Null passwords are not allowed by this realm!"");
        }

        UserService userService = new UserServiceImpl();
        User user = userService.getUserByUsername(username);

        if (user == null) {
            throw new UnknownAccountException(""Could not authenticate with given credentials"");
        }

        SimpleAuthenticationInfo simpleAuthenticationInfo = new SimpleAuthenticationInfo(username, user.getPassword(), ""passwordValidatorRealm"");

        return simpleAuthenticationInfo;

    } else {
        return null;
    }

}
}
</code></pre>

<p>and Bearer Token</p>

<pre><code>public class TokenAuthorizingRealm extends AuthorizingRealm {

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
    if (authenticationToken instanceof BearerAuthenticationToken) {

        BearerAuthenticationToken bearerAuthenticationToken = (BearerAuthenticationToken) authenticationToken;

        String username = """" + bearerAuthenticationToken.getPrincipal();
        User user = userService.getUserByUsername(username);
        //User with such username has not found
        if (user == null) {
            throw new UnknownAccountException(""Could not authenticate with given credentials"");
        }
        BearerAuthenticationInfo bearerAuthenticationInfo = new BearerAuthenticationInfo(user);
        return bearerAuthenticationInfo;

    }

 }
</code></pre>

<p>Shiro config</p>

<pre><code>[main]

hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 500000
hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true

hashService.privateSalt = ****

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService

passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService

authc = my.BearerTokenAuthenticatingFilter

tokenValidatorRealm = my.TokenAuthorizingRealm
passwordValidatorRealm = my.PasswordAuthorizingRealm

passwordValidatorRealm.credentialsMatcher = $passwordMatcher

securityManager.realms = $tokenValidatorRealm,$passwordValidatorRealm
</code></pre>

<p>These have been stripped out a bit, removed logging and other unnecessary code</p>

<p>The BearerTokenAuthenticatingFilter, just basically checks if a token has been supplied in the header if has</p>

<pre><code>private void loginUser(ServletRequest request, ServletResponse response) throws Exception {

    BearerAuthenticationToken token = (BearerAuthenticationToken) createToken(request, response);

    if (token == null) {
        String msg = ""createToken method implementation returned null. A valid non-null AuthenticationToken ""
                + ""must be created in order to execute a login attempt."";
        throw new IllegalStateException(msg);
    }

    try {
        Subject subject = getSubject(request, response);
        subject.login(token);
        onLoginSuccess(token, subject, request, response);
    } catch (AuthenticationException e) {
        HttpServletResponse httpResponse = WebUtils.toHttp(response);
        httpResponse.sendRedirect(""login"");
    }
}
</code></pre>

<p>BearerAuthenticationInfo class</p>

<pre><code>public class BearerAuthenticationInfo implements AuthenticationInfo {

private final PrincipalCollection principalCollection;
private final User user;

public BearerAuthenticationInfo(User user) {
    this.user = user;
    this.principalCollection = buildPrincipalCollection(user);
}

public PrincipalCollection getPrincipals() {
    return principalCollection;

}

public Object getCredentials() {
    return user.getUsername();
}

private PrincipalCollection buildPrincipalCollection(User user) {
    Collection&lt;String&gt; principals = new ArrayList&lt;String&gt;();
    principals.add(user.getUsername());
    return new SimplePrincipalCollection(principals, ""tokenValidatorRealm"");
}

}
</code></pre>
","<java><authentication><shiro>","3","22919387"
"14980703","apache shiro allowing multiple roles to Access a url not working","<p>I have a simple web project. I want to have access to more than one role in this project is a URL.</p>

<p>sihor.ini section of the url</p>

<pre><code>[urls]
/login.xhtml = authc
/logout = logout
/admin/** = user, roles[admin]
/guest/** = user, roles[admin,guest]
</code></pre>

<p>I'm getting a 401 error when the role of a user admin visit to guest directory.</p>

<p>Why?</p>

<p>shiro version 1.2.1</p>
","<shiro>","9","17273285"
"7502837","How to configure Shiro + Spring MVC when @Controller REDIRECTS to a login page","<p>I have a typical Spring MVC + GWT architecture with Apache Shiro as a security layer.</p>

<p>Problem:
No matter what protocol is used for a request to the App server, pages should be returned in the protocol specified in the request's ""X-Forwarded-Proto"" header (so, app server can receive a HTTP request, but if the header says HTTPS, it should respond using HTTPS). Obviously, the configuration specified in the Shiro-Spring tutorial won't work as it has nothing to do with the protocols (login.jsp will be returned using the protocol used in request):</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
  &lt;property name=""securityManager"" ref=""securityManager""/&gt;
  &lt;property name=""loginUrl"" value=""/login.jsp""/&gt;
  &lt;property name=""filterChainDefinitions""&gt;
    &lt;value&gt;
        /** = authc
    &lt;/value&gt;
  &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
  &lt;property name=""realm"" ref=""myRealm""/&gt;
&lt;/bean&gt;

&lt;bean id=""myRealm"" class=""com.myapp.security.DBRealm""&gt;
   &lt;property name=""credentialsMatcher"" ref=""sha256Matcher""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Possible solution:</p>

<p>Use @Controller to REDIRECT to the login view with the specified protocol:</p>

<pre><code>@RequestMapping(value=""/login"", method=RequestMethod.GET)
public RedirectView doLogin(HttpServletRequest req) throws MalformedURLException {
  URL originalURL = new URL(req.getRequestURL().toString());
  return new RedirectView(new URL(req.getHeader(""X-Forwarded-Proto""), originalURL.getHost(), ""/login.jsp"").toString());
}
</code></pre>

<p>and change the loginUrl in shiro configuration to point to /login, so that @controller catches it:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
  &lt;property name=""securityManager"" ref=""securityManager""/&gt;
  &lt;property name=""loginUrl"" value=""/login""/&gt;
  ... leave everything else the same
&lt;/bean&gt;
</code></pre>

<p>But with this configuration, although I get the same login page, the <em>myRealm</em> (com.myapp.security.DBRealm) is not triggered at all (meaning, the credentials are not checked), and login always fails. Seems like the redirected page loses the ""hook"" to the realm. </p>

<p>Any ideas on what I am doing wrong? </p>
","<spring-mvc><http-headers><spring-webflow><shiro>","2","7508317"
"17405804","How to deal with hierachical roles/permissions using Apache Shiro?","<p>I'm trying to use Apache Shiro framework to secure my web application (UI is based on Vaadin 6). Looked through all the examples on Shiro's site and also googled for hours, but I can't find a clean way to deal with the following requirements.</p>

<p>Assuming application is a kind of project management tool, where users are creating activities, which belongs to particular departments in company hierarchy. Each user may work in several departments and has different security roles in each department. Example:</p>

<pre>
Department A       - User is 'Manager' here
Department B
  Department C     - User is 'Admin' here
    Department D
</pre>

<p>User is 'Manager' in Department A
User is 'Admin' in Department C
User should also inherit 'Admin' role for Department D (which is ancestor of Department C). </p>

<p>So, basic permission check (assuming I want to view activity belonging to some department) would be to:</p>

<ol>
<li>Check if activity user is trying to view belongs to department user has a role in;</li>
<li>Check that user has required permission basing on his role <strong>in this department</strong>.</li>
</ol>

<p>I'm current stuck in understanding of how to implement not only just ""system wide role"", but ""role in this particular department"" concept.</p>

<p>How can I transform above example to permission string like ""activity:view:123""? And how will I check the permission in my business logic?</p>

<p>One more doubt is implementation with Shiro, I'd like to use some out-of-the-box solution will minimal efforts of providing my own implementations. However, it seems that Shiro's built-in implementations are designed for simple cases only. Is there any example of complex authorization implementation to start with (which can cover above case)? </p>
","<security><vaadin><shiro><rbac>","10","17738715"
"13374919","Integrate Apache Shiro Security Library with Dropwizard based JAX-RS application","<p>I am trying to change Dropwizard to support Shiro. </p>

<p>I have read documentation and am little puzzled. I would like to utilize Shiro in conjunction with form login authentication and Apache Shiro Annotations. I think that I need to use Jersey Filters to support Shiro.</p>

<p>Is this the correct way to support Shiro annotations at Jersey instead of classic Shiro Filter approach? </p>

<p>Since Jersey Filters have decent access to resources with annotations, it seems perfect for me to use annotations. </p>

<p>I rather not use the AOP approach, and It could be really great to have on the fly integration with JAX-RS as a separated module.</p>
","<java><rest><jax-rs><shiro><dropwizard>","4","17020747"
"11265216","Shiro Spring with filterchain definitions equivalent for @RequiresRoles logical.OR","<p>I am trying to enhance my spring-enabled web-app's security using Apache Shiro and am thus configuring filterchain definitions into a spring-configured file.
How do i achieve the equivalent of </p>

<pre><code>@Controller
@RequestMapping(""/mywebapp"")
// @RequiresAuthentication (is this possible ? wish i could do this !)
public class MyWebAppController  {

@RequiresRoles(value={""Role1"",""Role2"",""Role3""},logical=Logical.OR)
@RequestMapping(value=""/home"", method = RequestMethod.GET)
public String home() { return .. }
</code></pre>

<p>and my spring-config file contains this : 
assume that my dispatcherservlet is mapped to /rest/*</p>

<pre><code>  &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/rest/secure/windowslogin""/&gt;
    &lt;property name=""successUrl"" value=""/mywebapp/rest/menu""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/mywebapp/rest/unauthorized""/&gt;
    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""anon""&gt;
                &lt;bean class=""org.apache.shiro.web.filter.authc.AnonymousFilter""/&gt;
            &lt;/entry&gt;
            &lt;entry key=""authc""&gt;
       &lt;!-- why is this not invoked ? --&gt;
                &lt;bean class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
                &lt;/bean&gt;
            &lt;/entry&gt;
            &lt;entry key=""roles""&gt;
                &lt;bean class=""org.apache.shiro.web.filter.authz.RolesAuthorizationFilter""/&gt;
            &lt;/entry&gt;
        &lt;/util:map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /rest/secure/** = anon
            /rest/mywebapp/** = authc, roles[Role1,Role2,Role3]
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>In the code above i need a logical.OR kind of mapping to the <code>/rest/mywebapp/**</code> using the roles mentioned. This is possible via shiro annotations and it works but rather than specifying at every method i would rather handle it here (since i dont think shiro supports class level annotations yet ?) .
Is this possible ?</p>

<p>Also on a side note why is the authc filter not invoked ?
( for now we assume that the windows login can serve as authentication, using shiro only for authorization )</p>

<pre><code>home page = meta refresh to /rest/secure/windowslogin/
             if within intranet -&gt; login ...
             else /rest/secure/login ... login page.
</code></pre>

<p>Is it because the loginurl is different ? How do i circumvent this ? Note that my realm's getAuthorizationInfo is invoked though using the roles[ .. ] part specified in the config file.. but i was assuming that there should be a check to see if the request is 'authc' ? (which probably means that the filter is invoked and SubjectUtils.getSubject() is checked for authentication). Am i missing something in the flow or configuration ?</p>
","<spring-mvc><annotations><shiro>","1","12089385"
"5716242","How to implement row-level security in Java?","<p>I am currently evaluating authentication / authorization frameworks.</p>

<p>Apache Shiro seems to be very nice but I am <strong>missing row-level security</strong> features.</p>

<p>E.g. there might be special rows in a database which should only visible and accessible by users with special privileges.
To avoid unnecessary round-trips, we currently modify the SQL queries to join with our authorization data to get only the visible rows for the current user.</p>

<p>But this concepts doesn't feel 'right' to me, because we <strong>mix business code with security related code</strong> which should be orthogonal and independent from each other.</p>

<ul>
<li><strong>What solutions are available/possible?</strong></li>
<li><strong>How do you implement row-level security</strong> (especially in combination with jpa)<strong>?</strong></li>
</ul>

<p><strong>UPDATE:</strong></p>

<p>Target database is mostly Oracle 10g/11g <br>
- but a database independent solution would be preferred if there are no big drawbacks</p>
","<java><sql><security><shiro><row-level-security>","8",""
"5887603","Configuring Apache Shiro with Google Guice Servlet","<p>I'm starting to use Guice/Shiro instead of Spring/Spring Security. I have looked examples from Shiro site, and all configuration examples are made as INI-file examples. Is it possible to configure Shiro in plain Java, as Guice Servlets are meant to be configured?</p>
","<guice><shiro><guice-servlet>","8","5888695"
"12173492","Shiro JndiLdapRealm authorization against LDAP","<p>The <a href=""http://shiro.apache.org/static/current/apidocs/org/apache/shiro/realm/ldap/JndiLdapRealm.html"" rel=""nofollow"">JavaDoc for Shiro class JndiLdapRealm</a> explicitly says that authorization is by default disabled and that authorization against an LDAP server should be implemented by the user by subclassing and overriding the <strong><a href=""http://grepcode.com/file/repo1.maven.org/maven2/org.apache.shiro/shiro-core/1.2.2/org/apache/shiro/realm/ldap/JndiLdapRealm.java#JndiLdapRealm.doGetAuthorizationInfo%28org.apache.shiro.subject.PrincipalCollection%29"" rel=""nofollow""><code>JndiLdapRealm#doGetAuthorizationInfo</code></a></strong> method.
Is there sample code on how to do that including handling the communication / protocol with the LDAP server available anywhere?</p>
","<ldap><shiro>","4","13573046"
"20283058","How to redirect already authenticated user from login page to home page","<p>I'm developing JSF application with Apache Shiro. I autenticate the user with Shiro and redirect her to home page there is no problem with that. After the authentication when I try to access login page, it doesn't redirect me the homepage. I can login again even when there is already loggedin user. I'm doing <a href=""http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html#ProgrammaticLogin"" rel=""noreferrer"">Programmatic Login</a> as BalusC mentioned in his blog post.</p>

<pre><code>[main]
credentialsMatcher = org.apache.shiro.authc.credential.PasswordMatcher
myRealm = com.example.security.myRealm
myRealm.credentialsMatcher = $credentialsMatcher
securityManager.realms = $myRealm
user = com.example.web.filter.FacesAjaxAwareUserFilter
user.loginUrl = /login.xhtml

[urls]
/login.xhtml = user
</code></pre>

<p>This filter is written from the blog post.</p>

<pre><code>public class FacesAjaxAwareUserFilter extends UserFilter {

private static final String FACES_REDIRECT_XML = ""&lt;?xml version=\""1.0\"" encoding=\""UTF-8\""?&gt;""
        + ""&lt;partial-response&gt;&lt;redirect url=\""%s\""&gt;&lt;/redirect&gt;&lt;/partial-response&gt;"";

@Override
protected void redirectToLogin(ServletRequest request, ServletResponse response) throws IOException {
    HttpServletRequest req = (HttpServletRequest) request;
    if (""partial/ajax"".equals(req.getHeader(""Faces-Request""))) {
        response.setContentType(""text/xml"");
        response.setCharacterEncoding(""UTF-8"");
        response.getWriter().printf(FACES_REDIRECT_XML, req.getContextPath() + getLoginUrl());
    }
    else {
        super.redirectToLogin(request, response);
    }
}
</code></pre>

<p>}</p>

<p>What is the problem and how can I redirect the user if she is already authenticated?</p>

<p><strong>EDIT:</strong> For now I'm using PostConstruct annotation to redirect if the user is already authenticated. I'm open to any good solution. </p>
","<jsf-2><servlet-filters><shiro>","6","20285344"
"18824670","How to do role-based authorization with Apache Shiro depending on HTTP request method","<p>I'm struggling to figure out how I can do role-based authorization depending on what HTTP method a request is using. I use HTTP basic auth and depending on the users role and the HTTP method used a request should succeed or fail.</p>

<p>Example:</p>

<ul>
<li>a GET request to <code>http://localhost/rest/</code> should always be allowed, even to non-authenticated users (anon access)</li>
<li>a PUT request to <code>http://localhost/rest/</code> (same resource!) should only be allowed if user is <strong>authenticated</strong></li>
<li>a DELETE request to <code>http://localhost/rest/</code> (same resource!) should only be allowed if user is <strong>authenticated</strong> and <strong>has the role ADMINISTRATOR</strong></li>
</ul>

<p>My current (non-working) attempt of configuring <code>shiro.ini</code> looks like this:</p>

<pre><code>/rest = authcBasic[PUT], roles[SERVICE_PROVIDER]
/rest = authcBasic[POST], roles[EXPERIMENTER]
/rest = authcBasic[DELETE], roles[ADMINISTRATOR]
/rest = authcBasic
</code></pre>

<p><strong>Update</strong></p>

<p>I've just found <a href=""https://issues.apache.org/jira/browse/SHIRO-107"" rel=""nofollow"">https://issues.apache.org/jira/browse/SHIRO-107</a> and updated my shiro.ini to be</p>

<pre><code>/rest/**:put    = authcBasic, roles[SERVICE_PROVIDER]
/rest/**:post   = authcBasic, roles[EXPERIMENTER]
/rest/**:delete = authcBasic, roles[ADMINISTRATOR]
/rest/**        = authcBasic
</code></pre>

<p>but it still doesn't work. It seems that only the last rule matches. Also, the commit comment also seems to indicate that this only works with permission-based authorization. Is there no equivalent implementation for role-based authz?</p>
","<rest><basic-authentication><shiro>","3","18831490"
"21095471","How to check that user has already logged in using Apache Shiro?","<p>The question is very simple. I'd like to restrict user access with same login from different machines/browsers: only one live user session is possible.</p>

<p><code>Apache shiro</code> library is used for user authentification and managment.</p>

<p>Of course this could be done using simple synchornized maps and etc. But the question is: Has <code>Apache Shiro</code> special mechanisms for that or not? </p>

<p>Another variant of this question: how to reveice the list of all subjects who are logged in the system using <code>apache shiro</code>?</p>

<p><strong>UPD:</strong> </p>

<p>To clarify my question. My desire is to have some code like this (I known, that there isn't such class exception, but the idea must be more clean):</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
UsernamePasswordToken token = new UsernamePasswordToken(login, password);
try {
    currentUser.login(token);
} catch (AlreadyAuthenticatedException aae) {
    errorMsg = ""You should logoff on another machine!"";
}
</code></pre>
","<java><apache><shiro>","1","21133092"
"17881188","org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code","<p>i have a junit test case that runs a code like:</p>

<pre><code>if (SecurityUtil.isAuthenticated()) { 

}
</code></pre>

<p>and it gives an exception:</p>

<pre><code>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
</code></pre>

<p>My Test Class configuration is as follows:</p>

<pre><code>@RunWith(SpringJUnit4ClassRunner.class)
@TestExecutionListeners({ WebContextTestExecutionListener.class,
        DependencyInjectionTestExecutionListener.class,
        DirtiesContextTestExecutionListener.class,
        TransactionalTestExecutionListener.class })
@ActiveProfiles(""test"")
@DirtiesContext
@ContextConfiguration(loader = AnnotationConfigContextLoader.class, classes = {
        SpringConfig.class, SpringTestingConfig.class,
        SpringLocalContainerJPAConfig.class, CustomConfiguration.class })
public class MyTestClass { }
</code></pre>

<p>please advise how to fix this error, thanks.</p>
","<spring><junit><shiro>","0","17882822"
"5388687","Spring MVC, RESTful Services & Apache Shiro Strategy","<p>I am busy working on a project that needs a REST API to allow users to access their information on a server. I have the system working using Spring MVC and the <code>MappingJacksonJsonView</code> to return JSON where needed.</p>

<p>I now want to include security in the system to firstly, ensure users authenticate themselves and have the correct permissions to access a resource and secondly I want to have enough fine-grained control of the data to make sure that a user can only access publicly available portions of a resource or if they have the correct permissions the entire resource. </p>

<p>So for example:</p>

<p><strong>Scenario A:</strong> User A wants to access their list of messages, as well as their name and phone number. They would then get authenticated and their permissions would allow them to access all of their own information. </p>

<p><strong>Scenario B:</strong> User A wants to access User B's phone number - therefore excluding User B's list of messages in the response as A doesn't have permissions to access that portion of info.</p>

<ul>
<li><strong>Q1:</strong> Is there a neat way of going
about doing this using Apache Shiro
and Spring MVC?  </li>
<li><strong>Q2:</strong> Does anybody
have an example or link to a tutorial
on how somebody else has achieved
this? </li>
<li><strong>Q3:</strong> What sort of permissions
scheme, using Shiro, would be most
efficient to allow this type of fine
grained control?</li>
</ul>

<p>I haven't worked with Shiro before, but from playing with examples and reading the documentation it looks like this is possible and that Shiro would be the best fit for the solution. I am open to other solutions though.</p>

<p><strong>Edit:</strong> One solution, and I have no idea if this is possible with Shiro &amp; Jackson, is to annotate properties in my POJO's that I can mark as public or private. Or even better, mark them with the permission necessary to access them. Then when Jackson prints out the JSON representation of the object it can inspect the permissions for the current property and decide whether to print the property or not from its annotation.</p>
","<java><spring><rest><spring-mvc><shiro>","2","5482841"
"25400646","How to integrate Apache Shiro with AngularJS","<p>I am having REST API with JPA and for login framework I am using Apache Shiro. Is it possible to <strong>integrate Apache Shiro with AngularJS</strong> and <strong>If YES</strong> Please give some example to workout with it.</p>

<p>Thanks</p>
","<java><angularjs><rest><jpa><shiro>","3",""
"2207065","Secure some, but not all pages in a Grails application with the Shiro plugin","<p>Might be just me, but I have a hard time understanding how to secure just some of the pages in a Grails application with the Shiro Plugin.</p>

<p>I use this in my security filter:</p>

<pre>class SecurityFilters {
  def filters = {
    all(uri: ""/**"") {
      before = {
        // Ignore direct views (e.g. the default main index page).
        if (!controllerName) return true

        // Access control by convention.
        accessControl ( auth:false)
      }
    }
  }
}
</pre>

<p>and I have created a user in my bootstrap:</p>

<pre>
    def adminRole = new Role(name: ""Administrator"")
    adminRole.addToPermissions(""secured1"")
    adminRole.addToPermissions(""secured2:create,save,edit,update"")
    adminRole.save()

    def user = new User(username: ""admin"", passwordHash: new Sha512Hash(""***"").toHex())
    user.addToRoles Role.findByName('Administrator')
    user.save()
</pre>

<p>and it works. Problem is, that it also secures all controllers/actions.</p>

<p>I was hoping, that it would be possible to NOT specify the actions I want to protect in my SecurityFilter, but only in the permissions.. But is this possible?</p>
","<grails><groovy><shiro>","0","2207800"
"12894227","Authentication against database using shiro 1.2.1","<p>I am using Apache Shiro in my project. Currently I am using 1.1.0 version and now I am trying to migrate Shiro components to latest version 1.2.1. But when I try to do user authentication against a db it not working for some reason and I am not getting any errors but authentication is not happening.</p>

<p>Following are the database details I had given in shiro.ini file.</p>

<pre><code>[main]
cacheManager = com.cacheManager.ShiroCacheManager
securityManager.cacheManager = $cacheManager

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm

jdbcRealm.authenticationQuery = select user_pass from users where user_name = ?
jdbcRealm.userRolesQuery = select role_name from user_roles where user_name = ?

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = 192.168.0.75
ds.port  = 3306
ds.user = test
ds.databaseName = appfuse
jdbcRealm.dataSource = $ds
</code></pre>

<p>But still it is not hitting the database. I am using tomcat server and trying to use guice and shiro integration example...</p>

<p>Any help in this regard is really appreciated and thanks in advance for your help!</p>

<p>Thanks &amp; Regards, 
<br />Gupta Katakam</p>
","<java><security><authentication><guice><shiro>","4",""
"31388445","Apache Shiro JdbcRealm with JavaConfig and Spring Boot","<p>I'm trying to configure my Spring Boot application to use Apache Shiro as its security framework. I have everything working with a PropertiesRealm, now I'm trying to get it working with a JdbcRealm and Spring Boot's built-in H2 database. Here's my dependencies in my pom.xml:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;1.2.3&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
    &lt;version&gt;1.2.3&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;1.2.3&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.h2database&lt;/groupId&gt;
    &lt;artifactId&gt;h2&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>

<p>My schema.sql:</p>

<pre><code>create table if not exists users (
  username varchar(256),
  password varchar(256),
  enabled boolean
);

create table if not exists user_roles (
  username varchar(256),
  role_name varchar(256)
);
</code></pre>

<p>My data.sql:</p>

<pre><code>insert into users (username, password, enabled) values ('user', '04f8996da763b7a969b1028ee3007569eaf3a635486ddab211d512c85b9df8fb', true);

insert into user_roles (username, role_name) values ('user', 'guest');
</code></pre>

<p>And my WebSecurityConfig.java class that configures everything:</p>

<pre><code>package security;

import org.apache.shiro.authc.credential.HashedCredentialsMatcher;
import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.realm.jdbc.JdbcRealm;
import org.apache.shiro.spring.LifecycleBeanPostProcessor;
import org.apache.shiro.spring.web.ShiroFilterFactoryBean;
import org.apache.shiro.web.filter.authc.AnonymousFilter;
import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;
import org.apache.shiro.web.filter.authc.LogoutFilter;
import org.apache.shiro.web.filter.authc.UserFilter;
import org.apache.shiro.web.filter.authz.RolesAuthorizationFilter;
import org.apache.shiro.web.mgt.DefaultWebSecurityManager;
import org.h2.server.web.WebServlet;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.embedded.ServletRegistrationBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.DependsOn;

import javax.servlet.Filter;
import javax.sql.DataSource;
import java.util.HashMap;
import java.util.Map;

@Configuration
public class WebSecurityConfig {

    @Bean(name = ""shiroFilter"")
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
        Map&lt;String, String&gt; filterChainDefinitionMapping = new HashMap&lt;&gt;();
        filterChainDefinitionMapping.put(""/api/health"", ""authc,roles[guest],ssl[8443]"");
        filterChainDefinitionMapping.put(""/login"", ""authc"");
        filterChainDefinitionMapping.put(""/logout"", ""logout"");
        shiroFilter.setFilterChainDefinitionMap(filterChainDefinitionMapping);
        shiroFilter.setSecurityManager(securityManager());
        shiroFilter.setLoginUrl(""/login"");
        Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
        filters.put(""anon"", new AnonymousFilter());
        filters.put(""authc"", new FormAuthenticationFilter());
        LogoutFilter logoutFilter = new LogoutFilter();
        logoutFilter.setRedirectUrl(""/login?logout"");
        filters.put(""logout"", logoutFilter);
        filters.put(""roles"", new RolesAuthorizationFilter());
        filters.put(""user"", new UserFilter());
        shiroFilter.setFilters(filters);
        return shiroFilter;
    }

    @Bean(name = ""securityManager"")
    public DefaultWebSecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(jdbcRealm());
        return securityManager;
    }

    @Autowired
    private DataSource dataSource;

    @Bean(name = ""realm"")
    @DependsOn(""lifecycleBeanPostProcessor"")
    public JdbcRealm jdbcRealm() {
        JdbcRealm realm = new JdbcRealm();
        HashedCredentialsMatcher credentialsMatcher = new HashedCredentialsMatcher();
        credentialsMatcher.setHashAlgorithmName(Sha256Hash.ALGORITHM_NAME);
        realm.setCredentialsMatcher(credentialsMatcher);
        realm.setDataSource(dataSource);
        realm.init();
        return realm;
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    public ServletRegistrationBean h2servletRegistration() {
        ServletRegistrationBean registration = new ServletRegistrationBean(new WebServlet());
        registration.addUrlMappings(""/console/*"");
        return registration;
    }
}
</code></pre>

<p>I'm not seeing any errors in my logs. I tried cranking up the logging my adding the following to my application.properties, but it doesn't help much.</p>

<pre><code>logging.level.org.apache.shiro=debug
</code></pre>

<p>Thanks,</p>

<p>Matt</p>
","<java><spring-boot><shiro><spring-java-config>","2","31412419"
"9268523","Multi tenancy in Shiro","<p>We are evaluating Shiro for a custom Saas app that we are building. Seems like a great framework does does 90% of what we want, out of the box. My understanding of Shiro is basic, and here is what I am trying to accomplish.</p>

<ul>
<li>We have multiple clients, each with an identical database </li>
<li>All authorization (Roles/Permissions) will be configured by the clients
within their own dedicated database </li>
<li>Each client will have a unique
Virtual host eg. client1.mycompany.com, client2.mycompany.com etc</li>
</ul>

<hr>

<p><strong>Scenario 1</strong></p>

<pre><code>Authentication done via LDAP (MS Active Directory)
Create unique users in LDAP, make app aware of LDAP users, and have client admins provision them into whatever roles..
</code></pre>

<p><strong>Scenario 2</strong></p>

<pre><code>Authentication also done via JDBC Relam in their database
</code></pre>

<hr>

<blockquote>
  <p>Questions:</p>
  
  <p><strong>Common to Sc 1 &amp; 2</strong> How can I tell Shiro which database to use? I
  realize it has to be done via some sort of custom authentication
  filter, but can someone guide me to the most logical way ? Plan to use
  the virtual host url to tell shiro and mybatis which DB to use.</p>
  
  <p>Do I create one realm per client?</p>
  
  <p><strong>Sc 1</strong> (User names are unique across clients due to LDAP) If user jdoe
  is shared by client1 and client2, and he is authenticated via client1
  and tries to access a resource of client2, will Shiro permit or have
  him login again?</p>
  
  <p><strong>Sc 2</strong> (User names unique within database only) If both client 1 and
  client 2 create a user called jdoe, then will Shiro be able to
  distinguish between jdoe in Client 1 and jdoe in Client 2 ?</p>
</blockquote>

<p><strong>My Solution based on Les's input..</strong></p>

<pre><code>public class MultiTenantAuthenticator extends ModularRealmAuthenticator {

    @Override
    protected AuthenticationInfo doAuthenticate(AuthenticationToken authenticationToken) throws AuthenticationException {
        assertRealmsConfigured();
        TenantAuthenticationToken tat = null;
        Realm tenantRealm = null;

        if (!(authenticationToken instanceof TenantAuthenticationToken)) {
            throw new AuthenticationException(""Unrecognized token , not a typeof TenantAuthenticationToken "");
        } else {
            tat = (TenantAuthenticationToken) authenticationToken;
            tenantRealm = lookupRealm(tat.getTenantId());
        }

        return doSingleRealmAuthentication(tenantRealm, tat);

    }

    protected Realm lookupRealm(String clientId) throws AuthenticationException {
        Collection&lt;Realm&gt; realms = getRealms();
        for (Realm realm : realms) {
            if (realm.getName().equalsIgnoreCase(clientId)) {
                return realm;
            }
        }
        throw new AuthenticationException(""No realm configured for Client "" + clientId);
    }
}
</code></pre>

<p>New Type of token..</p>

<pre><code>public final class TenantAuthenticationToken extends UsernamePasswordToken {

       public enum TENANT_LIST {

            CLIENT1, CLIENT2, CLIENT3 
        }
        private String tenantId = null;

        public TenantAuthenticationToken(final String username, final char[] password, String tenantId) {
            setUsername(username);
            setPassword(password);
            setTenantId(tenantId);
        }

        public TenantAuthenticationToken(final String username, final String password, String tenantId) {
            setUsername(username);
            setPassword(password != null ? password.toCharArray() : null);
            setTenantId(tenantId);
        }

        public String getTenantId() {
            return tenantId;
        }

        public void setTenantId(String tenantId) {
            try {
                TENANT_LIST.valueOf(tenantId);
            } catch (IllegalArgumentException ae) {
                throw new UnknownTenantException(""Tenant "" + tenantId + "" is not configured "" + ae.getMessage());
            }
            this.tenantId = tenantId;
        }
    }
</code></pre>

<p>Modify my inherited JDBC Realm</p>

<pre><code>public class TenantSaltedJdbcRealm extends JdbcRealm {

    public TenantSaltedJdbcRealm() {
        // Cant seem to set this via beanutils/shiro.ini
        this.saltStyle = SaltStyle.COLUMN;
    }

    @Override
    public boolean supports(AuthenticationToken token) {
        return super.supports(token) &amp;&amp; (token instanceof TenantAuthenticationToken);
    }
</code></pre>

<p>And finally use the new token when logging in</p>

<pre><code>// This value is set via an Intercepting Servlet Filter
String client = (String)request.getAttribute(""TENANT_ID"");

        if (!currentUser.isAuthenticated()) {
            TenantAuthenticationToken token = new TenantAuthenticationToken(user,pwd,client);
            token.setRememberMe(true);
            try {
                currentUser.login(token);
            } catch (UnknownAccountException uae) {
                log.info(""There is no user with username of "" + token.getPrincipal());
            } catch (IncorrectCredentialsException ice) {
                log.info(""Password for account "" + token.getPrincipal() + "" was incorrect!"");
            } catch (LockedAccountException lae) {
                log.info(""The account for username "" + token.getPrincipal() + "" is locked.  ""
                        + ""Please contact your administrator to unlock it."");
            } // ... catch more exceptions here (maybe custom ones specific to your application?
            catch (AuthenticationException ae) {
                //unexpected condition?  error?
                ae.printStackTrace();
            }
        }

}
</code></pre>
","<multi-tenant><shiro>","8","9332764"
"17631448","Shiro configuration","<p>I'm trying a tutorial on how to create a login for only the admin using shiro. I got stacked up while doing the shiro configurations. I have only two pages: an admin page and a main login page for the admin.</p>

<pre><code>&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
             xmlns=""http://java.sun.com/xml/ns/j2ee""
             xmlns:web=""http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
             xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
             version=""2.4""&gt;
        &lt;display-name&gt;LoginTutorial&lt;/display-name&gt;
        &lt;filter&gt;
            &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
            &lt;filter-class&gt;org.apache.shiro.web.servlet.iniShiroFilter&lt;/filter-class&gt;
            &lt;init-param&gt;
                &lt;param-name&gt;config&lt;/param-name&gt;
                &lt;param-value&gt;
                    [main]
                    realm = 
                    securityManager.realm = $realm
                    authc.loginUrl = /loginpage.jsp 

                    [user]
                    Admin = password,ROLE_ADMIN

                    [roles]
                    ROLE_ADMIN = *

                    [url]
                    &lt;!--/account/** =authc--&gt;
                    /adminpage = roles[ROLE_ADMIN]
                &lt;/param-value&gt;
            &lt;/init-param&gt;
        &lt;/filter&gt;

        &lt;filter-mapping&gt;
            &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
            &lt;url-pattern&gt;/&lt;/url-pattern&gt;
        &lt;/filter-mapping&gt;
        ...
&lt;/web-app&gt;
</code></pre>
","<spring-mvc><spring-data-jpa><shiro>","3",""
"5193477","JSESSION/HTTPSession vs. application-crafted session ID","<p>In a web application based on propraietery MVC and authorization model, we have recently migrated to Spring MVC.
As part of that move, we are also looking at moving away from a locally created GUID that is passed with each request to a cookie based Session ID.</p>

<p>On the face of it, it looks as if in our case, doing so will be a big disadvantage as the standard JSESSION/HttpSession seems to be the root of all security evils:</p>

<ol>
<li>Session Fixation (In existing code session is only created after succesful login, so we need never invalidate() a sessions.</li>
<li>CSRF - Session is never passed as a cookie so this is never a risk (and god, it's a problematic one to handle since there is no real framework or generic solution out therem checked HDIV and CSRFGuard).</li>
<li>Testing Useability - QA can easily have multiple users with multiple roles connecting to the same Server, not possible with JSESSION.</li>
<li>In consistent HTTPSession creation and invalidation in various Containers (Weblogic, JBOSS and Websphere)</li>
<li>Inconsistent JSession handling when moving between HTTP to HTTPS.</li>
</ol>

<p>So, other than the obvious advantage of ""being standard"", Any clues as to why would I want to go the JSESSION route?</p>
","<java><spring><servlets><spring-security><shiro>","4","5505428"
"19124192","How do concepts of User (UserAccount) and Realm relate in Apache Shiro?","<p>I'm reading up on <a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a> and like to see if I got this mental model right. </p>

<blockquote>
  <p>From the <a href=""http://shiro.apache.org/realm.html"" rel=""nofollow"">docs</a>: ""A <code>Realm</code> is a component that can access application-specific security data such as <code>users</code>, <code>roles</code>, and <code>permissions</code>"". .. ""Realms usually have a 1-to-1 correlation with a data source such as a relational database, LDAP directory, file system, or other similar resource. "" </p>
</blockquote>

<p>Moreover, I've read that an <code>application</code> may include multiple <code>realms</code> for its authentication and authorization purposes.</p>

<p>Ok so great, but how do this <code>Realms</code> relate to the concept of a User? </p>

<ul>
<li>is every <code>Realm</code> expected to be a partition over the user-space? I.e: a <code>User</code> may only ever occur in 1 <code>Realm</code></li>
<li>or, and this is what I'm expecting, <code>Realms</code> can be used to layer authentication &amp; authorization on top of eachother and <em>may</em> work on the same <code>User</code>. However in that case, where is the <code>User</code> managed? It should be somewhere external to a <code>Realm</code> I guess, but where?</li>
</ul>

<p>Perhaps I'm confused by this because I'm thinking of <code>User</code> as a single entity (e.g: of me there can be only one) . And should instead be thinking of <code>User</code> as a <code>UserAccount</code>. I.e.: Each <code>Realm</code> manages it's own <code>Useraccounts</code> (in the docs called <code>User</code>), but a <code>User</code> may have multiple <code>UserAcounts</code>. Is that correct? </p>

<p>Assuming the above is correct: </p>

<ul>
<li>is there any logic that enables me to query for all <code>UserAccounts</code> of a given User? I.e: basically merging all <code>Useraccounts</code> together to get a complete view of the <code>User</code>?</li>
<li>does the concept of <code>User</code> in this case (1 <code>User</code> possibly having multiple <code>UserAccounts</code>) even exist in Shiro?  </li>
</ul>
","<java><shiro>","5","19176762"
"8584671","access control, role and permission in grails","<p>I am working on a grails application for the first time and I now want to protect some pages to be viewed only by admins, and give some permissions to other users.</p>

<p>I am using Apache Shiro plugin for grails.</p>

<p>My sample code in the bootstrap looks like this</p>

<pre><code>class BootStrap {

def init = { servletContext -&gt;
    def adminRole

    if(ShiroRole.findByName(""Admin"".isEmpty())){
        adminRole = new ShiroRole(name: ""Administrator"")
        adminRole.addToPermissions(""*:*"")
        adminRole.addToPermissions(""admin"")

        adminRole.save()
</code></pre>

<p>// 'user' now has all administrator rights
        }</p>

<pre><code>    if (ShiroUser.findAllByUsername(""user"").isEmpty()) {
        def user = new ShiroUser(username: ""user"", passwordHash: new Sha256Hash(""pass"").toHex())
        user.addToPermissions(""*:*"")
        user.addToRoles(adminRole)

        user.save()

    }

    if (ShiroUser.findAllByUsername(""Guest"").isEmpty()) {
        def user = new ShiroUser(username: ""Guest"", passwordHash: new Sha256Hash(""pass"").toHex())
        user.addToPermissions(""inventory:*"")
        user.save()
    }


}
def destroy = {
}
</code></pre>

<p>}</p>

<p>My ShiroSecurityFilters  looks like </p>

<pre><code>class ShiroSecurityFilters {
def filters = {
    all(uri: ""/**"") {
        before = {
            // Ignore direct views (e.g. the default main index page).
            if (!controllerName) return true

            // Access control by convention.
            accessControl()

        }
    }
}
</code></pre>

<p>}</p>

<p>I wanted to give to ""Guest"" access to <strong>inventory</strong> scaffold only. However in my application once the user ""Guest"" logged in its able to access other controllers butI don't want that to happen. I appreciate your help.</p>

<p>If there is an better of using Shiro role, access control and/or permissions, please let me know about it.</p>

<p>Thank you</p>
","<grails><permissions><roles><access-control><shiro>","2","8748738"
"16483590","Centralized API provider - oAuth or not?","<p>I am a bit lost with the overflow of information and I need some guidance on the best way I can support providing APIs access only to trusted clients.</p>

<p><strong>Current environment:</strong></p>

<p>We currently have a centralized server that handles user authentication/authorization via Apache Shiro. <br /><br />
We have in-house APIs that communicate internally with the centralized server to authenticate and manage tokens. (Thus enabling SSO).</p>

<p>Communication between our client applications and APIs are secured over SSL. <br /> 
Token-based authentication is used.</p>

<p><strong>Target:</strong></p>

<p>Our target is to allow 3rd party applications and APIs to communicate with our centralized authentication server. But our main concern is phishing, as we only want ""valid"" parties to communicate with us, and preferably disallow exposing the authentication information on the 3rd party's side.</p>

<p><strong>Questions:</strong></p>

<p>1- What is the best way to implement such an architecture? Should we go ahead with OAuth? If yes, is there a good way to integrate it with Shiro?</p>

<p>2- Would OAuth do its job well on Mobile applications as well? (e.g Restrict access to REST API unless the application is trusted)</p>

<p>3- Is there an OAuth provider library I can use with Java, or is OAuth simply a ""standard"" that I have to implement myself? (Such as, for example, implementing RESTful APIs)</p>

<p>4- Is SSO easily support with OAuth?</p>

<p>Sorry for vague questions. I just need general guidance and advice.</p>
","<java><oauth><oauth-2.0><openid><shiro>","7","16527574"
"18507629","Inject CDI managed bean in custom Shiro AuthorizingRealm","<p>In an app I'm building we're using straight Java 6 EE and JBoss (no Spring, etc), with JPA/Hibernate, JSF, CDI and EJBs.</p>

<p>I haven't found many good general security solutions (recommendations are welcome), but the best bet I found is Apache Shiro.</p>

<p>However this seems to have a number of shortcomings. Some of which you can read about at <a href=""http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow noreferrer"">Balus C's</a> site:</p>

<p><a href=""http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow noreferrer"">http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a></p>

<p>But I've stumbled on another big problem which is already mentioned <a href=""http://grokbase.com/t/shiro/user/124tt60vrk/realm-can-not-be-managed-by-cdi"" rel=""nofollow noreferrer"">here</a> regarding dependency injection and proxying.</p>

<p>Basically I have a nicely written JPA-based UserDAO that provides everything necessary for authentication. My database is neatly configured in persistence.xml and mydatabase-ds.xml (for JBoss).</p>

<p>It seems silly to duplicate all this config info a second time and add user tables queries into shiro.ini. So this is why I have opted to write my own Realm instead of using JdbcRealm.</p>

<p>My first attempt at this was to subclass AuthorizingRealm...something like:</p>

<pre><code>@Stateless
public MyAppRealm extends AuthorizingRealm {
    @Inject private UserAccess userAccess;

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(
        AuthenticationToken token) throws AuthenticationException {

        UsernamePasswordToken userPassToken = (UsernamePasswordToken) token;

        User user = userAccess.getUserByEmail(userPassToken.getUsername());
        if (user == null) {
            return null;
        }

        AuthenticationInfo info = new SimpleAuthenticationInfo();
        // set data in AuthenticationInfo based on data from the user object

        return info;

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        // TODO
        return null;
    }
}
</code></pre>

<p>So this fails pretty bad, because MyAppRealm cannot be proxied because there is a final init() method in a parent class up the class hierarchy.</p>

<p>My second attempt was to have MyAppRealm implement all the needed interfaces and just delegate them to instance of AuthorizingRealm. I didn't like this, but might as well give it a try.</p>

<p>This gets me further, the webapp starts up, but still falls short. The reason is in the config file, shiro.ini, I specify the class for my realm:</p>

<pre><code>myAppRealm = com.myapp.MyAppRealm
</code></pre>

<p>This pretty much tells me that Shiro will be responsible for creating the MyAppRealm instance. Therefore it will not be CDI managed and thus not injected, which is exactly what I'm seeing.</p>

<p>I've seen this SO <a href=""https://stackoverflow.com/questions/15605038/unable-to-inject-my-dao-in-a-custom-apache-shiro-authorizingrealm"">answer</a>, but I don't see how it could possibly work because again a subclass of AuthorizingRealm will inherit a final init() method meaning the subclass cannot be proxied.</p>

<p>Any thoughts on how I can get around this?</p>
","<java-ee><cdi><shiro>","11",""
"12217495","How Do I Authenticate a User With Shiro?","<p>I've gone over and over on how to have a user login with Shiro, but it still seems like a vital piece is missing: How does shiro authenticate a given username and password against stored usernames and passwords? The most I've figured out is <code>It is each Realm's responsibility to match submitted credentials with those stored in the Realm's backing data store</code> <a href=""http://shiro.apache.org/realm.html#Realm-authentication"" rel=""nofollow"">from here</a>. But how is that done?</p>

<p>Below is what I've tried, but the result is still an invalid authentication.</p>

<p>LoginController</p>

<pre><code>@RequestMapping(value = ""/login.htm"", method = RequestMethod.POST)
protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response, Object cmd, BindException errors) throws Exception {

    LoginCommand command = (LoginCommand) cmd;
    UsernamePasswordToken token = new UsernamePasswordToken(command.getUsername(), command.getPassword());
    System.out.println(""onSubmit"");
    System.out.println(token.getUsername());
    System.out.println(token.getPassword());

    try
    {
        SecurityUtils.getSubject().login(token);
    } catch (AuthenticationException e) {
        errors.reject(""error.invalidLogin"", ""The username or password was not correct."");
    }

    if (errors.hasErrors()) {
        return showForm(request, response, errors);
    } else {
        return new ModelAndView(""accessTest"");
    }
}
</code></pre>

<p>Realm</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken) throws AuthenticationException {
    UsernamePasswordToken token = (UsernamePasswordToken) authcToken;

    System.out.println(""doGetAuthenticationInfo"");
    System.out.println(user.getUsername());
    System.out.println(user.getPassword());

    // user is a test object in place of a database
    if( user != null ) {
        return new SimpleAuthenticationInfo(user.getUsername(), user.getPassword(), getName());
    } else {
        return null;
    }
}
</code></pre>
","<shiro>","4","12324847"
"10727987","shiro redirects me back to login.jsp","<p>was just tying to integrate apache shiro with another application. but shiro is not authenticating and redirecting me back to login.jsp. Follow is the explanation</p>

<p>I created a test application with apache shiro, that is using jdbcrealm and working fine. the redirect to login page and successful authentication is happening. below is shiro.ini</p>

<pre><code>[main]
authc.loginUrl = /login.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember
authc.successUrl  = /p/explorer

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = select PWD_ as password from act_id_user where ID_ = ?
jdbcRealm.userRolesQuery = select GROUP_ID_ as role_name from act_id_membership where USER_ID_ = ?
jdbcRealm.permissionsQuery = select permission from roles_permissions where GROUP_ID_ = ?

ds = org.apache.commons.dbcp.BasicDataSource
ds.url = jdbc:mysql://localhost:3306/activiti
ds.driverClassName = com.mysql.jdbc.Driver
ds.username=user
ds.password=pass
ds.maxActive = 3

securityManager.realms = $jdbcRealm
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager

jdbcRealm.dataSource = $ds

sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
jdbcRealm.credentialsMatcher = $sha256Matcher


[urls]
# enable authc filter for all application pages
/p/**=authc
</code></pre>

<p>please note the above configuration is working in my test application (run using mvn jetty:run).</p>

<p>I then copied the same configuration, login.jsp and filter settings from web.xml to another application (namely signavio activiti-modeler), upon accessing the URL it is redirecting me to login page but submitting doesn't result in exception and/or erorr in logs but still its redirecting me back to login.jsp. here is web.xml (shiro is the first filter in filter-chain)</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
id=""WebApp_ID"" version=""2.5""&gt;
&lt;display-name&gt;Signavio Platform&lt;/display-name&gt;

&lt;distributable /&gt;


&lt;context-param&gt;
    &lt;description&gt;Define a reg exp for all user agents which are supported for the editor&lt;/description&gt;
    &lt;param-name&gt;supportedBrowserEditor&lt;/param-name&gt;
    &lt;param-value&gt;Firefox[\/\s]((3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20)\.\d+)|AppleWebKit|Opera.9\.\d+&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;!-- To load the Spring context --&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;


&lt;!--FILTER --&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;RequestExceptionFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.signavio.platform.filters.RequestExceptionFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;HandlerFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.signavio.platform.filters.HandlerFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;EncodingFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.signavio.platform.filters.EncodingFilter&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;encoding&lt;/param-name&gt;
            &lt;param-value&gt;
                UTF-8
            &lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;


    &lt;filter&gt;
        &lt;filter-name&gt;AuthenticationFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.signavio.platform.filters.AuthenticationFilter&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;param-name&gt;requiresNoAuthorization&lt;/param-name&gt;
            &lt;param-value&gt;
            &lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ParseParametersFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.signavio.platform.filters.ParseParametersFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;!--FILTER MAPPING --&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;RequestExceptionFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;HandlerFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;EncodingFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;


    &lt;filter-mapping&gt;
        &lt;filter-name&gt;AuthenticationFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ParseParametersFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;!--SERVLETS --&gt;
    &lt;servlet&gt;
        &lt;display-name&gt;Dispatcher&lt;/display-name&gt;
        &lt;servlet-name&gt;Dispatcher&lt;/servlet-name&gt;
        &lt;servlet-class&gt;com.signavio.platform.servlets.DispatcherServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;!--SERVLET MAPPING --&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Dispatcher&lt;/servlet-name&gt;
        &lt;url-pattern&gt;
            /p/*
        &lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;!--LISTENER --&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;com.signavio.platform.listeners.EntryPoint&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;!--SESSION CONFIG --&gt;
    &lt;session-config&gt;
        &lt;session-timeout&gt;1440&lt;/session-timeout&gt;
    &lt;/session-config&gt;

    &lt;!--ERROR PAGES --&gt;

    &lt;!--MIME MAPPING --&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;svg&lt;/extension&gt;
        &lt;mime-type&gt;image/svg+xml&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;json&lt;/extension&gt;
        &lt;mime-type&gt;text/plain&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;css&lt;/extension&gt;
        &lt;mime-type&gt;text/css&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;ico&lt;/extension&gt;
        &lt;mime-type&gt;image/x-icon&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;

    &lt;security-role&gt;
        &lt;role-name&gt;admin&lt;/role-name&gt;
    &lt;/security-role&gt;

    &lt;!--WELCOME FILE LIST --&gt;
    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;welcome&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;

    &lt;!-- Servlets from the Oryx Editor --&gt;
    &lt;servlet&gt;
        &lt;display-name&gt;BPMN Layouter&lt;/display-name&gt;
        &lt;servlet-name&gt;BPMNLayouterServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.BPMNLayouterServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;BPMN2BPEL Servlet&lt;/display-name&gt;
        &lt;servlet-name&gt;BPMN2BPELServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.BPMN2BPELServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;Step Through&lt;/display-name&gt;
        &lt;servlet-name&gt;StepThrough&lt;/servlet-name&gt;
        &lt;servlet-class&gt;de.hpi.diagram.stepthrough.StepThroughServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;XForms Export&lt;/display-name&gt;
        &lt;servlet-name&gt;XFormsExportServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.XFormsExportServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;XForms Import&lt;/display-name&gt;
        &lt;servlet-name&gt;XFormsImportServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.XFormsImportServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;Oryx Legacy File Download Servlet&lt;/display-name&gt;
        &lt;servlet-name&gt;DownloadServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;
            org.oryxeditor.server.MultiDownloader
        &lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;Alternatives Renderer&lt;/display-name&gt;
        &lt;servlet-name&gt;AlternativesRenderer&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.AlternativesRenderer&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;Oryx syntax checker&lt;/display-name&gt;
        &lt;servlet-name&gt;SyntaxChecker&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.SyntaxCheckerServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;Oryx Validator&lt;/display-name&gt;
        &lt;servlet-name&gt;Validator&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.ValidatorServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet&gt;
        &lt;display-name&gt;RDF 2 JSON Servlet&lt;/display-name&gt;
        &lt;servlet-name&gt;RDF2JSONServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.oryxeditor.server.RDF2JSONServlet&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;BPMNLayouterServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/bpmnlayouter&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;BPMN2BPELServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/bpmn2bpel&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;StepThrough&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/stepthrough&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;XFormsExportServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/xformsexport&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;XFormsImportServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/xformsimport&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;SyntaxChecker&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/syntaxchecker&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Validator&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/validator&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;DownloadServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/download&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;AlternativesRenderer&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/pdf&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;RDF2JSONServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/editor/rdf2json&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;
&lt;/web-app&gt;
</code></pre>

<p>Please again note that this settings is working simple/test webapplication my doubts are..
client/server redirection and/or filter chain sequence.</p>

<p>Thanks in advance.</p>
","<shiro>","3",""
"12099262","JSF 2 + Spring 3 + Shiro - Session Timeout doesn't redirect to login page","<p>I have this JSF 2.0/Spring app that added Apache Shiro to and a redirect after session timeout never occurs when a user clicks on a command button or triggers an AJAX request.  It does work when they refresh the browser.  This is happening in all browsers.  Here's my applicationContext.xml:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""/index.faces""/&gt;
        &lt;property name=""filterChainDefinitions""&gt;
                &lt;value&gt;
                        /* = authc 
                &lt;/value&gt;
        &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realm"" ref=""opacsRealm"" /&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean id=""sha512Matcher"" class=""org.apache.shiro.authc.credential.HashedCredentialsMatcher""&gt;

        &lt;property name=""hashAlgorithmName"" value=""SHA-256"" /&gt;
        &lt;property name=""hashIterations"" value=""1024"" /&gt;
&lt;/bean&gt;



&lt;bean id=""opacsRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
        &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
        &lt;property name=""authenticationQuery"" 
                value=""select PASSWORD, SALT from SEC_USERS where NAME = ?"" /&gt;
        &lt;property name=""userRolesQuery"" 
                value=""SELECT ROLE_NAME FROM SEC_USERS_ROLES WHERE USER_NAME = ?"" /&gt;
        &lt;property name=""permissionsQuery"" 
                value=""SELECT permission FROM SEC_ROLES_PERMISSIONS WHERE ROLE_NAME = ?"" /&gt;
        &lt;property name=""permissionsLookupEnabled"" value=""true"" /&gt;
        &lt;property name=""saltStyle"" value=""COLUMN"" /&gt;
        &lt;property name=""credentialsMatcher"" ref=""sha512Matcher""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Am I doing something wrong in the setup?  The web.xml looks like this:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
&lt;session-config&gt;
  &lt;!-- web.xml expects the session timeout in minutes: --&gt;
  &lt;session-timeout&gt;1&lt;/session-timeout&gt;
&lt;/session-config&gt;
</code></pre>
","<spring><jsf-2><shiro>","0",""
"11368956","Securing an Apache CXF Webservice with Apache Shiro using INI","<p>Desperately need help here securing a simple Apache CXF web service.  Attempts with Spring Security is taking me no where so I need to find a different strategy.  This is to implement authorization on a legacy Java service implemented for some of our clients.</p>

<p>This simple Apache CXF web service was created using Maven's cxf-jaxws-javafirst prototype.
It produced a web.xml and beans.xml file and sample code.  Besides beans.xml which remains in default state, I have modified these entities as follows:</p>

<p><strong>web.xml:</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""ISO-8859-1""?&gt;

&lt;!DOCTYPE web-app
    PUBLIC ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN""
    ""http://java.sun.com/dtd/web-app_2_3.dtd""&gt;


&lt;web-app&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;WEB-INF/beans.xml&lt;/param-value&gt;
    &lt;/context-param&gt;
     &lt;context-param&gt;
     &lt;param-name&gt;shiroConfigLocations&lt;/param-name&gt;
        &lt;param-value&gt;WEB-INF/shiro.ini&lt;/param-value&gt;
      &lt;/context-param&gt;  

     &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;       
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;listener&gt;      
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt; 

    &lt;listener&gt;
        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;      
    &lt;/listener&gt;


    &lt;servlet&gt;
        &lt;servlet-name&gt;CXFServlet&lt;/servlet-name&gt;
        &lt;display-name&gt;CXF Servlet&lt;/display-name&gt;
        &lt;servlet-class&gt;
            org.apache.cxf.transport.servlet.CXFServlet
        &lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;CXFServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>and my Shiro.ini file looks like this:</p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]
authc = org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter

[users]
o = o, OPERATOR
a = a, ADMIN
s = s, SUPERVISOR

[roles]
SUPERVISOR = *
ADMIN = sayHiAdmin
OPERATOR = deleteAccounts
</code></pre>

<p>My simple webservice code is as follows:</p>

<pre><code>import javax.jws.WebService;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.Permission;
import org.apache.shiro.authz.UnauthorizedException;
import org.apache.shiro.subject.Subject;

@WebService(endpointInterface = ""org.myCo.com.CxfShiroSecuredService.HelloWorld"")
public class HelloWorldImpl implements HelloWorld {

    public String sayHi(String text) {              

        if (isAuthorized(""sayHi"")) {
            return ""Successfully said hi "" + text;
        }               

        if (hasRole(""OPERATOR"")){
            return ""User is OPERATOR"";
        }
        if (hasRole(""ADMIN"")){
            return ""User is OPERATOR"";
        }
        throw new UnauthorizedException(""Logged user does not have OPERATOR's permission"");                             
    }    

    public String sayHiAdmin(String text) {         

        if (isAuthorized(""sayHiAdmin"")) {
            return ""Successfully said hi Admin "" + text;
        }               

        throw new UnauthorizedException(""Logged user does not have ADMIN permission"");
    }

    public String deleteAccounts(String text) {             

        if (isAuthorized(""deleteAccounts"")) {
            return ""Successfully deleted accounts "" + text;
        }               

        throw new UnauthorizedException(""Logged user does not have SUPERVISOR permission"");
    }

    private Boolean isAuthorized(String operation){
        Subject currentUser = SecurityUtils.getSubject();       
        return currentUser.isPermitted(operation);  //currentUser.isAuthenticated(); // &amp;&amp; currentUser.isPermitted(operation);      
    }

    private Boolean hasRole(String role){
        Subject currentUser = SecurityUtils.getSubject();       
        return currentUser.hasRole(role);       
    }
}
</code></pre>

<p>I have a C# test client that passes authentication information in the SOAP header before invoking webservice like so:</p>

<pre><code> private void OnButtonClick(object sender, RoutedEventArgs e)
        {
            var client = new HelloWorldClient();
            var response = """";

            using (new OperationContextScope(client.InnerChannel))
            {
                var httpRequestProperty = new HttpRequestMessageProperty();
                httpRequestProperty.Headers[System.Net.HttpRequestHeader.Authorization] = ""Basic "" +
                Convert.ToBase64String(Encoding.ASCII.GetBytes(UserName.Text + "":"" + Password.Text));
                OperationContext.Current.OutgoingMessageProperties[HttpRequestMessageProperty.Name] = httpRequestProperty;

                try
                {
                    response = client.sayHi(""hi "" + UserName.Text);
                }
                catch (TimeoutException tex)
                {
                    response = tex.Message;
                }
                catch (CommunicationException cex)
                {
                    response = cex.Message;
                }
            }

            TextBox.Text = response;

        }
</code></pre>

<p>I have used this same strategy for other web services that require Basic authentication 
before invoking method calls with success but this service does not seem to be recognizing my credentials. For each method call invoked, regardless of username/password combination, I get the UnAuthorizedException thrown.  Can someone shed me some light?</p>

<p>Thanks in advance.</p>
","<web-services><cxf><shiro>","2","11369749"
"12810999","Shiro annotation not working on JavaEE6 project","<p>Question: Where is the implementation for JavaEE6?</p>

<p>I'm currently working on a JavaEE6 project and I found out that Shiro's annotation is not working out of the box even though I already configured web.xml and shiro.ini base on the documentation.</p>

<p>This is what I have:</p>

<p>1.) A page:</p>

<pre><code>&lt;h:form&gt;
  &lt;h:commandLink action=""#{userBean.action1()}"" value=""Action 1""&gt;&lt;/h:commandLink&gt;
&lt;/h:form&gt;
</code></pre>

<p>2.) Backing bean:</p>

<pre><code>@Stateless
@Named
public class UserBean {
    @Inject
    private Logger log;

    @RequiresAuthentication
    public void action1() {
        log.debug(""action.1"");
    }
}
</code></pre>

<p>3.) web.xml</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>4.) shiro.ini</p>

<pre><code>[main]
# listener = org.apache.shiro.config.event.LoggingBeanListener

shiro.loginUrl = /login.xhtml

[users]
# format: username = password, role1, role2, ..., roleN
root = secret,admin
guest = guest,guest
presidentskroob = 12345,president
darkhelmet = ludicrousspeed,darklord,schwartz
lonestarr = vespa,goodguy,schwartz

[roles]
# format: roleName = permission1, permission2, ..., permissionN
admin = *
schwartz = lightsaber:*
goodguy = winnebago:drive:eagle5

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/login.xhtml = authc
/logout = logout
/account/** = authc
/remoting/** = authc, roles[b2bClient], perms[""remote:invoke:lan,wan""]
</code></pre>

<p>But when I click the button, it still performs the action. It should throw unauthorizede exception right? The same is true with other shiro annotations.</p>

<p>Note that if I manually performs the check, it works:</p>

<pre><code>public void action1() {
    Subject currentUser = SecurityUtils.getSubject();
    AuthenticationToken token = new UsernamePasswordToken(""guest"", ""guest"");
    currentUser.login(token);

    log.debug(""user."" + currentUser);
    if (currentUser.isAuthenticated()) {
        log.debug(""action.1"");
    } else {
        log.debug(""not authenticated"");
    }
}
</code></pre>

<p>Thanks,
<br />czetsuya</p>
","<security><jsf-2><java-ee-6><shiro>","3","12833594"
"17177124","How to use GWT with Apache Shiro hashed and salted","<p>In this small tutorial I show you how to build a GWT Module which is responsible for registration and login.</p>

<p>The password gets hashed with Sha256 and salted.</p>
","<mysql><gwt><salt><shiro>","4","17177125"
"16730844","How to resolve grails plugins dependencies","<p>My grails app should work with two plugins: <a href=""http://grails.org/plugin/shiro"" rel=""nofollow"">shiro</a> and <a href=""http://grails.org/plugin/quartz2"" rel=""nofollow"">quartz2</a>.</p>

<p>I'm add both of plugins to <strong>BuildConfig.groovy</strong>:</p>

<ul>
<li>compile "":shiro:1.1.4""</li>
<li>compile "":quartz2:2.1.6.2""</li>
</ul>

<p><em>(after that ide downloaded them)</em></p>

<p>The problem in dependencies: shiro depends from <strong>shiro-quartz:1.2.0</strong> and <strong>shiro-quartz</strong> from <strong>org.opensymphony.quartz 1.6.1</strong></p>

<p>I wonder why but quartz2 looking for methods implementation to <strong>quartz-1.6.1.jar</strong>.
Quartz2 cannot find implementations and that's why project cannot be build.
I think quartz2 should search methods implementations in ""normal"" quartz lib, like <strong>quartz:1.0-RC7</strong>, but he do not.</p>

<p>So, how can i solve shiro and quartz2 plugins conflict?</p>

<p>I heard about dependency excluding, but i not sure about this sugesstion.</p>

<p>P.S. with quartz(not quartz2) the same problem occurred</p>
","<grails><quartz-scheduler><grails-plugin><dependency-management><shiro>","3","16737208"
"8928262","Instance level access control in Apache Shiro","<p>I found really a flexible security framework Apache Shiro. I successfully implemented authentication and authorization using Shiro. </p>

<p>One of appealing features of the framework is instance based security. I just copied example from Shiro website. </p>

<p>The following permissions are stored in the database.</p>

<pre><code>printer:query:lp7200
printer:print:epsoncolor
</code></pre>

<p>The following code check if for a given printer instance, the current authenticated user has permission or not.</p>

<pre><code>if ( SecurityUtils.getSubject().isPermitted(""printer:query:lp7200"") {
 // Return the current jobs on printer lp7200
}
</code></pre>

<p>My question is that ""Is this how permissions are stored in database?""
Is there a better way to store instance based permissions?</p>

<p>Please let me know.</p>

<p>Thanks</p>
","<java><shiro>","6","8946311"
"12614525","Configuring Shiro to allow anonymous access to resource folders (JS, CSS etc)","<p>I'm having a problem configuring Apache Shiro to disable anonymous access to all pages except /js and /resources because that breaks the site design and layout before the user is logged in.</p>

<p>My current shiro-context.xml file has the following section:</p>

<pre><code>/**=authc
/js/** =anon
/resources/** =anon
</code></pre>

<p>This will require authentication for all pages and redirect the user to /login page, but as I previously said, it will break access to resource files. It's as if doesn't pick up the 2nd and the 3rd line instructing it to allow anon access.</p>

<p>Am I doing something wrong? Should I perhaps prefix the path to all secure pages with something like /secure/ and allow anonymous access to everything above that folder?</p>
","<java><authentication><spring-mvc><shiro>","8","12615643"
"24546396","Multiple realms to handle authentication for different sets of urls in Spring MVC and shiro","<p>I am trying to find a best practice solution for my situation. I have two different sets of urls in my webapp that need to be secured/authenticated against two different sets of user bases.</p>

<p>For example, the /foo/* urls are to be accessible only to a certain set of users based on username/pwd tokens. And another set /bar/* urls are to be accessible only to a set of users (stored in a different database table from the first set) via username/pwd token mechanism.</p>

<p>I want to understand how to structure the shiro filter(s) in my web.xml and the corresponding shiro filter bean definition in my applicationContext.xml. Should I be using two different shiro filters (one for each url pattern), mapping to two different bean in the context file, where each bean has its own security manager that is configured with its own realm (each realm responsible for authenticating against the corresponding user base table).</p>

<p>Here I am following this two links:</p>

<p><a href=""https://stackoverflow.com/questions/9268523/multi-tenancy-in-shiro/24545588#24545588"">multi-tenancy-in-shiro</a></p>

<p><a href=""http://shiro-user.582556.n2.nabble.com/Multiple-security-managers-and-realms-to-handle-authentication-for-different-sets-of-urls-td7445068.html#a7579763"" rel=""nofollow noreferrer"">Multiple-security-managers...</a></p>

<p>but I am getting errors in my application. Here I am pasting some sample code.</p>

<p>ApplicationContext-shiro.xml
    </p>

<pre><code>    &lt;!-- Single realm app (realm configured next, below). If you have multiple 
        realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realms""&gt;
        &lt;util:list&gt;
            &lt;ref bean=""adminAuthRealm"" /&gt;
            &lt;ref bean=""vendorAuthRealm"" /&gt;              
        &lt;/util:list&gt;
    &lt;/property&gt;

    &lt;!-- &lt;property name=""authenticator""&gt;
        &lt;bean class=""com.yatra.mp.security.MultiLoginAuthenticator""/&gt;
    &lt;/property&gt; --&gt;

    &lt;property name=""cacheManager"" ref=""cacheManager"" /&gt;
    &lt;!-- Uncomment this next property if you want heterogenous session access 
        or clusterable/distributable sessions. The default value is 'http' which 
        uses the Servlet container's HttpSession as the underlying Session implementation. --&gt;
&lt;/bean&gt;`&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/permissionDenied.do"" /&gt;

    &lt;!-- The 'filters' property is usually not necessary unless performing 
        an override, which we want to do here (make authc point to a PassthruAuthenticationFilter 
        instead of the default FormAuthenticationFilter: --&gt;

    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""adminAuthc"" value-ref=""adminAuthc"" /&gt;
            &lt;entry key=""vendorAuthc"" value-ref=""vendorAuthc"" /&gt;
            &lt;entry key=""adminUser"" value-ref=""adminUser"" /&gt;
        &lt;/util:map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /admin/welcome.do = anon
            /vendor/welcome.do = anon
            /vendor/signup.do = anon
            /admin/signup.do = anon
            /assets/** = anon
            /admin/** = adminAuthc
            /vendor/** = vendorAuthc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""adminAuthc""
    class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/admin/login.do"" /&gt;
    &lt;property name=""successUrl"" value=""/admin/home.do"" /&gt;
&lt;/bean&gt;
&lt;bean id=""vendorAuthc""
    class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/vendor/login.do"" /&gt;
    &lt;property name=""successUrl"" value=""/vendor/home.do"" /&gt;
&lt;/bean&gt;
&lt;bean id=""adminUser"" class=""org.apache.shiro.web.filter.authc.UserFilter""&gt;
    &lt;property name=""loginUrl"" value=""/admin/login.do"" /&gt;
&lt;/bean&gt;

&lt;bean id=""vendorUser"" class=""org.apache.shiro.web.filter.authc.UserFilter""&gt;
    &lt;property name=""loginUrl"" value=""/vendor/login.do"" /&gt;
&lt;/bean&gt;`
</code></pre>

<p>MultiLoginAuthenticator.java</p>

<pre><code>public class MultiLoginAuthenticator extends ModularRealmAuthenticator {

@Override
protected AuthenticationInfo doAuthenticate(AuthenticationToken authenticationToken) throws AuthenticationException {
    assertRealmsConfigured();   &lt;------- Here I am getting null getRealms(). So I am getting exceptions
    MultiLoginAuthenticationToken mlat = null;
    Realm loginRealm = null;

    if (!(authenticationToken instanceof MultiLoginAuthenticationToken)) {
        throw new AuthenticationException(""Unrecognized token , not a typeof MultiLoginAuthenticationToken "");
    } else {
        mlat = (MultiLoginAuthenticationToken) authenticationToken;
        loginRealm = lookupRealm(mlat.getRealmName());
    }

    return doSingleRealmAuthentication(loginRealm, mlat);

}

protected Realm lookupRealm(String realmName) throws AuthenticationException {
    Collection&lt;Realm&gt; realms = getRealms();
    for (Realm realm : realms) {
        if (realm.getName().equalsIgnoreCase(realmName)) {
            return realm;
        }
    }
    throw new AuthenticationException(""No realm configured for Client "" + realmName);
}
</code></pre>

<p>}</p>

<p>while i am configuring MultiLoginAuthenticator, i am getting null in getReamls() method. So it is throwing IllegalStateException.</p>

<p>If I remove this Authenticator configuration from applicationContext.xml file, then it is able to login correctly but it is calling different Realm for ""<strong>doGetAuthorizationInfo</strong>"" method. So It is not assigning any role and permission to that current Subject.</p>

<p>This is my Realm file (both Realms are same. Difference is both are calling different datasource.)</p>

<pre><code>@Override
public boolean supports(AuthenticationToken token) {
    if (token instanceof MultiLoginAuthenticationToken) {
        return ((MultiLoginAuthenticationToken)token).getRealmName().equalsIgnoreCase(""VendorAuthRealm"");
    }
    return false;
}

@Override
protected AuthorizationInfo doGetAuthorizationInfo(
        PrincipalCollection principals) {
    logger.debug(""authorization info....."");
    logger.debug(""realm size is : {}"", principals.fromRealm(getName()).size());
    logger.debug(""realm name is : {}"", principals.fromRealm(getName()));

    int userId = (Integer) principals.fromRealm(getName()).iterator().next();

    VendorUser vendorUser = vendorUserService.getVendorUser(userId);
    if(vendorUser != null) {
        logger.debug(""vendor user first name is : {}"", vendorUser.getFirstName());
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
        if(vendorUser.getVendorProducts() != null){
            logger.debug(""vendor users products and rate types..."");
            info.addRoles(VendorYatraUtil.getProductSet(vendorUser.getVendorProducts()));
            info.addStringPermissions(VendorYatraUtil.getCarRateTypeSet(vendorUser.getVendorCarRateTypes()));
        }
        return info;
    }
    return null;
}

@Override
protected AuthenticationInfo doGetAuthenticationInfo(
        AuthenticationToken authcToken) throws AuthenticationException {
    MultiLoginAuthenticationToken token = (MultiLoginAuthenticationToken) authcToken;
    logger.debug(""username is : {}"", token.getUsername());

    if(vendorUserService.findVendorUser(token.getUsername()) != null){
        VendorUser vendorUser = vendorUserService.findVendorUser(token.getUsername()); 
        if (vendorUser != null){
            return new SimpleAuthenticationInfo(vendorUser.getId(),
                    vendorUser.getPassword(), getName());
        }
    }

    return null;
}
</code></pre>

<p>Thanks,
Ankit</p>
","<java><spring-mvc><authentication><web.xml><shiro>","2",""
"24674976","Apache Shiro + Spring MVC","<p>I have a project Spring MVC + Apache Shiro. Getting error while configurin Shiro in applicationContext.xml and web.xml. </p>

<p>ApplicationContext.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xmlns:p=""http://www.springframework.org/schema/p""
   xmlns:aop=""http://www.springframework.org/schema/aop""
   xmlns:tx=""http://www.springframework.org/schema/tx""
   xmlns:context=""http://www.springframework.org/schema/context""
   xmlns:mvc=""http://www.springframework.org/schema/mvc""
   xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc
                       http://www.springframework.org/schema/mvc/spring-mvc.xsd""&gt;

&lt;!--bean id=""propertyConfigurer""
      class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""
      p:location=""/WEB-INF/jdbc.properties"" /&gt;

&lt;bean id=""dataSource""
class=""org.springframework.jdbc.datasource.DriverManagerDataSource""
p:driverClassName=""${jdbc.driverClassName}""
p:url=""${jdbc.url}""
p:username=""${jdbc.username}""
p:password=""${jdbc.password}"" /--&gt;

&lt;!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) --&gt;

&lt;context:annotation-config /&gt;
&lt;context:component-scan base-package=""test.hs.controllers"" /&gt;
&lt;mvc:annotation-driven /&gt;

&lt;bean id=""employeeHelper"" class=""test.hs.utils.EmployeeHelper"" /&gt;





&lt;!--
    SHIRO CONFIGURATION
--&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;

        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realm"" ref=""myRealm""/&gt;
    &lt;!-- By default the servlet container sessions will be used.  Uncomment this line
    to use shiro's native sessions (see the JavaDoc for more): --&gt;
    &lt;!-- &lt;property name=""sessionMode"" value=""native""/&gt; --&gt;
&lt;/bean&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Define the Shiro Realm implementation you want to use to connect to your back-end --&gt;
&lt;!-- security datasource: --&gt;
&lt;bean id=""myRealm"" class=""...""&gt;

&lt;/bean&gt;


&lt;!-- 
    ENABLE SHIRO ANNOTATIONS
--&gt;
&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean   class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p></p>

<p>Web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""&gt;
&lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;2&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.jpg&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.png&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.gif&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;session-config&gt;
    &lt;session-timeout&gt;
        30
    &lt;/session-timeout&gt;
&lt;/session-config&gt;
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;redirect.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml --&gt;
&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;!-- Make sure any request you want accessible to Shiro is filtered. /* catches all --&gt;
&lt;!-- requests.  Usually this filter mapping is defined first (before all others) to --&gt;
&lt;!-- ensure that Shiro works in subsequent filters in the filter chain:             --&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>I got the error:</p>

<pre><code>Jul 10, 2014 2:40:58 PM org.apache.catalina.core.ApplicationContext log
INFO: No Spring WebApplicationInitializer types detected on classpath
Jul 10, 2014 2:40:58 PM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring root WebApplicationContext
Jul 10, 2014 2:40:59 PM org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
java.lang.NoClassDefFoundError: org/apache/shiro/web/filter/mgt/FilterChainManager
at java.lang.Class.getDeclaredConstructors0(Native Method)
at java.lang.Class.privateGetDeclaredConstructors(Class.java:2493)
at java.lang.Class.getDeclaredConstructors(Class.java:1901)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:230)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:972)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:945)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:753)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:389)
at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:294)
at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)
at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4887)
at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5381)
at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)
at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)
at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)
at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:656)
at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:535)
at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1461)
at sun.reflect.GeneratedMethodAccessor66.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1445)
at org.apache.catalina.manager.ManagerServlet.deploy(ManagerServlet.java:860)
at org.apache.catalina.manager.ManagerServlet.doGet(ManagerServlet.java:357)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
at org.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)
at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.ClassNotFoundException: org.apache.shiro.web.filter.mgt.FilterChainManager
at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1714)
at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1559)
... 59 more
</code></pre>

<p>Can anybody help to solve it? I've googled it, no success. This configuration I got from <a href=""http://shiro.apache.org/spring.html"" rel=""nofollow"">Apache Shiro website</a></p>
","<spring-mvc><shiro>","3","24675332"
"20324873","how to show session is about to timeout dialog before 1 min in jsp?","<p>I am trying to show session is about to timeout dialog in my <code>shiro</code> based application here is my code what i tried but its not working yet...</p>

<pre><code>   &lt;%
        Subject user = SecurityUtils.getSubject();
        Session usersession = user.getSession(true);
        if(user.isAuthenticated()){

                    Date startTime = usersession.getStartTimestamp(); //login time
                    Date lastAccessTime = usersession.getLastAccessTime(); //last active time
                    Date currentTime = new Date(); // current time
                    long diffInSec = (currentTime.getTime()- lastAccessTime.getTime())/1000 ; // calculate idle time of user
                    long timeout = (long)(usersession.getTimeout()* 0.001); // get sessiontime out in seconds
                    long oneMinleft = timeout - 60 ; // get time to show timeout dialog before 1 min of session timeout
                    System.out.println(""startTime :""+startTime);
                    System.out.println(""lastAccessTime :""+lastAccessTime);
                    System.out.println(""currentTime :""+currentTime);
                    System.out.println(""diffInSec :""+diffInSec);
                    System.out.println(""Timeout:""+timeout);
                    System.out.println(""Seconds left to timeout:""+oneMinleft);
                    System.out.println();

                        if(diffInSec &gt;= oneMinleft){ %&gt;
                          &lt;script type=""text/javascript""&gt;                                
                                    showTimeout(); // show dialog
                          &lt;/script&gt;
                       &lt;% 
                        }
        }

    %&gt;
</code></pre>

<p>Any help is appreciated</p>

<p>Thanks &amp; regards</p>
","<java><jsp><session-timeout><shiro>","2","20325065"
"16076398","Social authentication with Apache Shiro","<p>What is the best way to integrate social authentication with Apache Shiro?<br>
I've search this site as other sites and couldn't find an answer. </p>
","<social-networking><shiro>","5",""
"5108589","JSF 2.0 and Apache Shiro","<p>Do you know some reference project or guide how to use Apache Shiro with JSF 2.0?</p>

<p>B.R Carl</p>
","<jsf-2><shiro>","4",""
"16633219","Cas 3.5.2 audit failed","<p>I am a new-hander to cas. 
I download cas-server-3.5.2 and cas-client-3.2.1,then I deploy the cas server to tomcat 6 and 7.
I change the configuration in deployementConfig.xml and some other file to disable ssl and enable mysql db.
when I open the cas server page: http:// pc-name:8080/cas/login, I can <strong>sigin on correct</strong>.
but when I want to sign onto http:// pc-name:8080/cas/services. it always prompt <strong>access denied:UsernameNotFoundException::y2</strong></p>

<p>Then I integrate the cas to my Java webapp with shiro-cas. It can be redirected to the login page as following</p>

<p>http:// pc-name:8080/cas/login?service=http:// pc-name:8080/grsp/shiro-cas 
but it display as following in cosole and be redirected to error page been fixed up.</p>

<pre><code>2013-05-19 17:09:30,443 INFO [org.jasig.cas.authentication.AuthenticationManagerImpl] -&lt;org.jasig.cas.adaptors.jdbc.QueryDatabaseAuthenticationHandler successfully authenticated [username: y2]&gt;
2013-05-19 17:09:30,458 INFO [org.jasig.cas.authentication.AuthenticationManagerImpl] - &lt;Resolved principal y2&gt;
2013-05-19 17:09:30,458 INFO [org.jasig.cas.authentication.AuthenticationManagerImpl] - &lt;org.jasig.cas.adaptors.jdbc.QueryDatabaseAuthenticationHandler@13abee1 authenticated y2 with credential [username: y2].&gt;
2013-05-19 17:09:30,458 INFO [com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager] -    &lt;Audit trail record BEGIN
=============================================================
WHO: [username: y2]
WHAT: supplied credentials: [username: y2]
ACTION: AUTHENTICATION_SUCCESS
APPLICATION: CAS
WHEN: Sun May 19 17:09:30 CST 2013
CLIENT IP ADDRESS: 127.0.0.1
SERVER IP ADDRESS: 127.0.0.1
=============================================================

&gt;
2013-05-19 17:09:30,458 INFO [com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager] -    &lt;Audit trail record BEGIN
=============================================================
WHO: [username: y2]
WHAT: TGT-4-B0Zkj9xcuURQmKIRvdb1UGbpKiqZtZP7f0SxAmotRDEYfaGieO-yeyz-pc
ACTION: TICKET_GRANTING_TICKET_CREATED
APPLICATION: CAS
WHEN: Sun May 19 17:09:30 CST 2013
CLIENT IP ADDRESS: 127.0.0.1
SERVER IP ADDRESS: 127.0.0.1
=============================================================

&gt;
2013-05-19 17:09:30,458 INFO [org.jasig.cas.CentralAuthenticationServiceImpl] - &lt;Granted service ticket [ST-7-9c3DcdatknxA0fc1ZF6d-yeyz-pc] for service [http:// yeyz-pc:8080/grsp/shiro-cas] for user [y2]&gt;
2013-05-19 17:09:30,458 INFO [com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager] -    &lt;Audit trail record BEGIN
=============================================================
WHO: y2
WHAT: ST-7-9c3DcdatknxA0fc1ZF6d-yeyz-pc for http:// yeyz-pc:8080/grsp/shiro-cas
ACTION: SERVICE_TICKET_CREATED
APPLICATION: CAS
WHEN: Sun May 19 17:09:30 CST 2013
CLIENT IP ADDRESS: 127.0.0.1
SERVER IP ADDRESS: 127.0.0.1
=============================================================

&gt;
2013-05-19 17:09:30,522 ERROR [org.jasig.cas.CentralAuthenticationServiceImpl] - &lt;ServiceTicket [ST-7-9c3DcdatknxA0fc1ZF6d-yeyz-pc] with service [http://yeyz-pc:8080/grsp/shiro-cas does not match supplied service [http:// yeyc-pc:8080/grsp/shiro-cas]&gt;
2013-05-19 17:09:30,522 INFO [com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager] -    &lt;Audit trail record BEGIN
=============================================================
WHO: audit:unknown
WHAT: ST-7-9c3DcdatknxA0fc1ZF6d-yeyz-pc
ACTION: SERVICE_TICKET_VALIDATE_FAILED
APPLICATION: CAS
WHEN: Sun May 19 17:09:30 CST 2013
CLIENT IP ADDRESS: 127.0.0.1
SERVER IP ADDRESS: 127.0.0.1
=============================================================

&gt;
</code></pre>

<p>my deployerConfigContext.xml is as following:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;!--

Licensed to Jasig under one or more contributor license
agreements. See the NOTICE file distributed with this work
for additional information regarding copyright ownership.
Jasig licenses this file to you under the Apache License,
Version 2.0 (the ""License""); you may not use this file
except in compliance with the License.  You may obtain a
copy of the License at the following location:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.

--&gt;
&lt;!--
| deployerConfigContext.xml centralizes into one file some of the declarative configuration that
| all CAS deployers will need to modify.
|
| This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.  
| The beans declared in this file are instantiated at context initialization time by the Spring 
| ContextLoaderListener declared in web.xml.  It finds this file because this
| file is among those declared in the context parameter ""contextConfigLocation"".
|
| By far the most common change you will need to make in this file is to change the last bean
| declaration to replace the default SimpleTestUsernamePasswordAuthenticationHandler with
| one implementing your approach for authenticating usernames and passwords.
+--&gt;

&lt;beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xmlns:p=""http://www.springframework.org/schema/p""
   xmlns:tx=""http://www.springframework.org/schema/tx""
   xmlns:sec=""http://www.springframework.org/schema/security""
   xsi:schemaLocation=""http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd""&gt;
&lt;!--
    | This bean declares our AuthenticationManager.  The CentralAuthenticationService service bean
    | declared in applicationContext.xml picks up this AuthenticationManager by reference to its id, 
    | ""authenticationManager"".  Most deployers will be able to use the default AuthenticationManager
    | implementation and so do not need to change the class of this bean.  We include the whole
    | AuthenticationManager here in the userConfigContext.xml so that you can see the things you will
    | need to change in context.
    +--&gt;
&lt;bean id=""authenticationManager""
    class=""org.jasig.cas.authentication.AuthenticationManagerImpl""&gt;

    &lt;!-- Uncomment the metadata populator to allow clearpass to capture and cache the password
         This switch effectively will turn on clearpass.
    &lt;property name=""authenticationMetaDataPopulators""&gt;
       &lt;list&gt;
          &lt;bean class=""org.jasig.cas.extension.clearpass.CacheCredentialsMetaDataPopulator""&gt;
             &lt;constructor-arg index=""0"" ref=""credentialsCache"" /&gt;
          &lt;/bean&gt;
       &lt;/list&gt;
    &lt;/property&gt;
     --&gt;

    &lt;!--
        | This is the List of CredentialToPrincipalResolvers that identify what Principal is trying to authenticate.
        | The AuthenticationManagerImpl considers them in order, finding a CredentialToPrincipalResolver which 
        | supports the presented credentials.
        |
        | AuthenticationManagerImpl uses these resolvers for two purposes.  First, it uses them to identify the Principal
        | attempting to authenticate to CAS /login .  In the default configuration, it is the DefaultCredentialsToPrincipalResolver
        | that fills this role.  If you are using some other kind of credentials than UsernamePasswordCredentials, you will need to replace
        | DefaultCredentialsToPrincipalResolver with a CredentialsToPrincipalResolver that supports the credentials you are
        | using.
        |
        | Second, AuthenticationManagerImpl uses these resolvers to identify a service requesting a proxy granting ticket. 
        | In the default configuration, it is the HttpBasedServiceCredentialsToPrincipalResolver that serves this purpose. 
        | You will need to change this list if you are identifying services by something more or other than their callback URL.
        +--&gt;
    &lt;property name=""credentialsToPrincipalResolvers""&gt;
        &lt;list&gt;
            &lt;!--
                | UsernamePasswordCredentialsToPrincipalResolver supports the UsernamePasswordCredentials that we use for /login 
                | by default and produces SimplePrincipal instances conveying the username from the credentials.
                | 
                | If you've changed your LoginFormAction to use credentials other than UsernamePasswordCredentials then you will also
                | need to change this bean declaration (or add additional declarations) to declare a CredentialsToPrincipalResolver that supports the
                | Credentials you are using.
                +--&gt;
            &lt;bean class=""org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver"" &gt;
                &lt;property name=""attributeRepository"" ref=""attributeRepository"" /&gt;
            &lt;/bean&gt;
            &lt;!--
                | HttpBasedServiceCredentialsToPrincipalResolver supports HttpBasedCredentials.  It supports the CAS 2.0 approach of
                | authenticating services by SSL callback, extracting the callback URL from the Credentials and representing it as a
                | SimpleService identified by that callback URL.
                |
                | If you are representing services by something more or other than an HTTPS URL whereat they are able to
                | receive a proxy callback, you will need to change this bean declaration (or add additional declarations).
                +--&gt;
            &lt;bean
                class=""org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver"" /&gt;
        &lt;/list&gt;
    &lt;/property&gt;

    &lt;!--
        | Whereas CredentialsToPrincipalResolvers identify who it is some Credentials might authenticate, 
        | AuthenticationHandlers actually authenticate credentials.  Here we declare the AuthenticationHandlers that
        | authenticate the Principals that the CredentialsToPrincipalResolvers identified.  CAS will try these handlers in turn
        | until it finds one that both supports the Credentials presented and succeeds in authenticating.
        +--&gt;
    &lt;property name=""authenticationHandlers""&gt;
        &lt;list&gt;
            &lt;!--
                | This is the authentication handler that authenticates services by means of callback via SSL, thereby validating
                | a server side SSL certificate.
                +--&gt;
            &lt;bean class=""org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler""
                p:httpClient-ref=""httpClient"" p:requireSecure=""false"" /&gt;
            &lt;!--
                | This is the authentication handler declaration that every CAS deployer will need to change before deploying CAS 
                | into production.  The default SimpleTestUsernamePasswordAuthenticationHandler authenticates UsernamePasswordCredentials
                | where the username equals the password.  You will need to replace this with an AuthenticationHandler that implements your
                | local authentication strategy.  You might accomplish this by coding a new such handler and declaring
                | edu.someschool.its.cas.MySpecialHandler here, or you might use one of the handlers provided in the adaptors modules.
                +--&gt;
            &lt;!-- yyz comment it.
            &lt;bean class=""org.jasig.cas.authentication.handler.support.SimpleTestUsernamePasswordAuthenticationHandler"" /&gt;
            --&gt;
            &lt;bean class=""org.jasig.cas.adaptors.jdbc.QueryDatabaseAuthenticationHandler""&gt;
               &lt;property name=""dataSource"" ref=""casDataSource"" /&gt;
               &lt;property name=""sql"" value=""select pwd from user where username = ?"" /&gt; 
               &lt;!-- for encrypt pwd &lt;property name=""passwordEncoder"" ref=""passwordEncoder"" /&gt;  --&gt;
            &lt;/bean&gt;

        &lt;/list&gt;
    &lt;/property&gt;
&lt;/bean&gt;


&lt;!--
This bean defines the security roles for the Services Management application.  Simple deployments can use the in-memory version.
More robust deployments will want to use another option, such as the Jdbc version.

The name of this should remain ""userDetailsService"" in order for Spring Security to find it.
 --&gt;
&lt;!-- &lt;sec:user name=""@@THIS SHOULD BE REPLACED@@"" password=""notused"" authorities=""ROLE_ADMIN"" /&gt;--&gt;

&lt;sec:user-service id=""userDetailsService""&gt;
    &lt;sec:user name=""@@THIS SHOULD BE REPLACED@@"" password=""notused"" authorities=""ROLE_ADMIN"" /&gt;
&lt;/sec:user-service&gt;
&lt;!-- yyz add for supportting DB DataSource --&gt;
&lt;bean id=""casDataSource"" class=""org.apache.commons.dbcp.BasicDataSource""&gt;  
    &lt;property name=""driverClassName""&gt;&lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;&lt;/property&gt;  
    &lt;property name=""url""&gt;&lt;value&gt;jdbc:mysql://localhost/test&lt;/value&gt;&lt;/property&gt;      
    &lt;property name=""username""&gt;&lt;value&gt;test&lt;/value&gt;&lt;/property&gt;  
    &lt;property name=""password""&gt; &lt;value&gt;test&lt;/value&gt;&lt;/property&gt;  
&lt;/bean&gt;  
&lt;bean id=""dataSource"" class=""org.apache.commons.dbcp.BasicDataSource""&gt;  
    &lt;property name=""driverClassName""&gt;&lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;&lt;/property&gt;  
    &lt;property name=""url""&gt;&lt;value&gt;jdbc:mysql://localhost/test&lt;/value&gt;&lt;/property&gt;      
    &lt;property name=""username""&gt;&lt;value&gt;test&lt;/value&gt;&lt;/property&gt;  
    &lt;property name=""password""&gt; &lt;value&gt;test&lt;/value&gt;&lt;/property&gt;  
&lt;/bean&gt;  
&lt;!-- 无 &lt;bean class=""org.jasig.cas.authentication.handler.Md5PasswordEncoder"" /&gt; MD5--&gt;
&lt;bean id=""passwordEncoder"" class=""org.jasig.cas.authentication.handler.DefaultPasswordEncoder""&gt;
  &lt;constructor-arg index=""0"" value=""SHA"" /&gt;
&lt;/bean&gt;
&lt;!-- end by yyz --&gt;
&lt;!-- yyz comment :- http://www.blogjava.net/tufanshu/archive/2011/01/21/343290.html 
        :- http://stackoverflow.com/questions/4882298/getting-more-attributes-from-cas-than-just-user-id 
Bean that defines the attributes that a service may return.  This example uses the Stub/Mock version.  A real implementation
may go against a database or LDAP server.  The id should remain ""attributeRepository"" though.
&lt;bean id=""attributeRepository""
    class=""org.jasig.services.persondir.support.StubPersonAttributeDao""&gt;
    &lt;property name=""backingMap""&gt;
        &lt;map&gt;
            &lt;entry key=""uid"" value=""uid"" /&gt;
            &lt;entry key=""eduPersonAffiliation"" value=""eduPersonAffiliation"" /&gt; 
            &lt;entry key=""groupMembership"" value=""groupMembership"" /&gt;
        &lt;/map&gt;
    &lt;/property&gt;
&lt;/bean&gt; --&gt;
&lt;bean id=""attributeRepository"" class=""org.jasig.services.persondir.support.jdbc.SingleRowJdbcPersonAttributeDao""&gt;
    &lt;constructor-arg index=""0"" ref=""casDataSource"" /&gt;
    &lt;!-- &lt;constructor-arg index=""1"" value=""select id as UId, pwd as ph from user where username=?"" /&gt; --&gt;
    &lt;constructor-arg index=""1"" value=""select * from user where {0}"" /&gt;
    &lt;property name=""queryAttributeMapping""&gt;
        &lt;map&gt;
            &lt;entry key=""username"" value=""username""/                              &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=""resultAttributeMapping""&gt;
        &lt;map&gt;
            &lt;entry key=""id"" value=""uid"" /&gt;          &lt;entry key=""pwd"" value=""ph"" /&gt; 
            &lt;entry key=""id"" value=""userid""/&gt; --&gt;
            &lt;entry key=""username"" value=""username""/&gt;
        &lt;/map&gt;
    &lt;/property&gt;
&lt;/bean&gt; 
&lt;!-- commented by yyz according to: https://wiki.jasig.org/display/CASUM/Configuring
Sample, in-memory data store for the ServiceRegistry. A real implementation
would probably want to replace this with the JPA-backed ServiceRegistry DAO
The name of this bean should remain ""serviceRegistryDao"".--&gt;

&lt;bean id=""serviceRegistryDao"" class=""org.jasig.cas.services.InMemoryServiceRegistryDaoImpl""&gt;
        &lt;property name=""registeredServices""&gt;
            &lt;list&gt;
                &lt;bean class=""org.jasig.cas.services.RegexRegisteredService""&gt;
                    &lt;property name=""id"" value=""0"" /&gt;
                    &lt;property name=""name"" value=""HTTP and IMAP"" /&gt;
                    &lt;property name=""description"" value=""Allows HTTP(S) and IMAP(S) protocols"" /&gt;
                    &lt;property name=""serviceId"" value=""^(https?|imaps?)://.*"" /&gt;
                    &lt;property name=""evaluationOrder"" value=""10000001"" /&gt;
                &lt;/bean&gt;
                &lt;!--
                Use the following definition instead of the above to further restrict access
                to services within your domain (including subdomains).
                Note that example.com must be replaced with the domain you wish to permit.
                --&gt;
                &lt;!--
                &lt;bean class=""org.jasig.cas.services.RegexRegisteredService""&gt;
                    &lt;property name=""id"" value=""1"" /&gt;
                    &lt;property name=""name"" value=""HTTP and IMAP on example.com"" /&gt;
                    &lt;property name=""description"" value=""Allows HTTP(S) and IMAP(S) protocols on example.com"" /&gt;
                    &lt;property name=""serviceId"" value=""^(https?|imaps?)://([A-Za-z0-9_-]+\.)*example\.com/.*"" /&gt;
                    &lt;property name=""evaluationOrder"" value=""0"" /&gt;
                &lt;/bean&gt;
                --&gt;
            &lt;/list&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
 &lt;!-- yyz added to replace the above - - &gt;
&lt;bean id=""serviceRegistryDao"" class=""org.jasig.cas.services.JpaServiceRegistryDaoImpl""   
    p:entityManagerFactory-ref=""entityManagerFactory"" /&gt;  
&lt;bean id=""entityManagerFactory"" class=""org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean""&gt;        
    &lt;property name=""dataSource"" ref=""dataSource""/&gt;        
    &lt;property name=""jpaVendorAdapter""&gt;            
        &lt;bean class=""org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter""&gt;                
            &lt;property name=""generateDdl"" value=""true""/&gt;                
            &lt;property name=""showSql"" value=""true"" /&gt;            
        &lt;/bean&gt;        
    &lt;/property&gt;        
    &lt;property name=""jpaProperties""&gt;            
        &lt;props&gt;                
            &lt;prop key=""hibernate.dialect""&gt;org.hibernate.dialect.MYSQLDialect&lt;/prop&gt;                
            &lt;prop key=""hibernate.hbm2ddl.auto""&gt;update&lt;/prop&gt;            
        &lt;/props&gt;        
    &lt;/property&gt;    
&lt;/bean&gt;     
&lt;bean id=""transactionManager"" class=""org.springframework.orm.jpa.JpaTransactionManager""&gt;        
    &lt;property name=""entityManagerFactory"" ref=""entityManagerFactory""/&gt;    
&lt;/bean&gt;     
&lt;tx:annotation-driven transaction-manager=""transactionManager""/&gt;
&lt; ! - - yyz added end --&gt;
</code></pre>

<p></p>

<p>
    
      
        
        
        
      
    
     
    </p>
","<spring><cas><shiro>","0","16661306"
"10503101","Spring MongoDB and Apache Shiro","<p>I am attempting to use Apache Shiro with Spring and MongoDB.  I am using Spring Data Repositories which are autowired.  I have created my own custom realm for Shiro which uses a Spring Data repository to talk to Mongo:</p>

<pre><code>public class PlatformRealm extends AuthorizingRealm {

    @Autowired(required = true)
    protected UserRepository userRepository = null;

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
         ...
    }
}
</code></pre>

<p>The problem I'm seeing is the userRepository isn't being autowired.  I get the following line in my console output referring to the PlatformRealm:</p>

<pre><code>INFO  org.springframework.web.context.support.XmlWebApplicationContext  - Bean 'platformRealm' of type [class com.resonance.platform.core.security.PlatformRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
</code></pre>

<p>This is because of the Apache Shiro ShiroFilterFactoryBean.  What is happening is this bean and all of its dependencies are being loaded up immediately when the container is started.  It doesn't wait for my persistence beans to be initialized prior to resolving dependencies.  This causes the repository reference to be null.</p>

<p>The following bean configurations are loaded via the contextConfigLocation parameter:</p>

<pre><code>&lt;context-param&gt; 
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; 
    &lt;param-value&gt;
        /WEB-INF/web-platform-persistence.xml,
        /WEB-INF/web-platform-services.xml
    &lt;/param-value&gt; 
&lt;/context-param&gt; 
</code></pre>

<p>Services bean configuration:</p>

<pre><code>&lt;beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:context=""http://www.springframework.org/schema/context""
xmlns:util=""http://www.springframework.org/schema/util""
xsi:schemaLocation=""http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd""&gt;

&lt;bean id=""userSession""
    class=""com.resonance.platform.web.core.services.ShiroUserSessionService"" /&gt;

&lt;!-- Shiro (Security) --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""/login"" /&gt;
    &lt;property name=""successUrl"" value=""/"" /&gt;
    &lt;!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
        bean --&gt;
    &lt;!-- defined will be automatically acquired and available via its beanName 
        in chain --&gt;
    &lt;!-- definitions, but you can perform instance overrides or name aliases 
        here if you like: --&gt;
    &lt;!-- &lt;property name=""filters""&gt; &lt;util:map&gt; &lt;entry key=""anAlias"" value-ref=""someFilter""/&gt; 
        &lt;/util:map&gt; &lt;/property&gt; --&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            # some example chain definitions:
            /admin/** = passThruFilter, roles[admin]
            /** = passThruFilter
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""passThruFilter""
    class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"" /&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;!-- Single realm app. If you have multiple realms, use the 'realms' property 
        instead. --&gt;
    &lt;property name=""realm"" ref=""platformRealm"" /&gt;
    &lt;!-- By default the servlet container sessions will be used. Uncomment 
        this line to use shiro's native sessions (see the JavaDoc for more): --&gt;
    &lt;!-- &lt;property name=""sessionMode"" value=""native""/&gt; --&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
    depends-on=""lifecycleBeanPostProcessor"" /&gt;

&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;!-- Define the Shiro Realm implementation you want to use to connect to 
    your back-end --&gt;
&lt;!-- security datasource: --&gt;
&lt;bean id=""platformRealm"" class=""com.resonance.platform.core.security.PlatformRealm"" /&gt;
</code></pre>

<p></p>

<p>Persistence bean config:</p>

<pre><code>&lt;beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:context=""http://www.springframework.org/schema/context""
xmlns:mongo=""http://www.springframework.org/schema/data/mongo""
xmlns:util=""http://www.springframework.org/schema/util""
xsi:schemaLocation=""http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/data/mongo
      http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-3.0.xsd""&gt;

&lt;mongo:mongo id=""mongo"" /&gt;

&lt;bean id=""mongoTemplate"" class=""org.springframework.data.mongodb.core.MongoTemplate""&gt;
    &lt;constructor-arg ref=""mongo"" /&gt;
    &lt;constructor-arg value=""platform"" /&gt;
    &lt;property name=""writeConcern""&gt;
        &lt;util:constant static-field=""com.mongodb.WriteConcern.SAFE"" &gt;&lt;/util:constant&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;mongo:repositories base-package=""com.resonance.platform.core.data.repositories"" /&gt;
</code></pre>

<p></p>

<p>User Repository:</p>

<pre><code>package com.resonance.platform.core.data.repositories;

import org.bson.types.ObjectId;
import org.springframework.data.repository.CrudRepository;

import com.resonance.platform.core.entities.User;

/**
 * A repository used to manage User entities.
 * @author Kyle
 */
public interface UserRepository extends CrudRepository&lt;User, ObjectId&gt; {

    /**
     * Gets a user by the specified login.
     * @param login
     * @return
     */
    User getByLogin(String login);

}
</code></pre>

<p>My question is, how can I get the userRepository dependency to resolved properly?  I understand that the ShiroFilterFactoryBean has to be initialized before the other dependencies and whatnot, but there must be a way to get the userRepository dependency to be resolved.</p>

<p>EDIT: Added User Repository code.</p>
","<java><spring><spring-mvc><shiro>","4",""
"10692285","I am using apache shiro under camel and I cannot map groups to roles with ldap/active directory","<p>I am using shiro with camel. I can authenticate an user with activedirectory (ldap) but I am not able to map user groups in roles to user permissions. And camel needs absolutely permissions to work.</p>

<p>Here is my config.ini:</p>

<pre><code>[main]
authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy


activeDirectoryRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
activeDirectoryRealm.systemUsername=cn=padl,cn=Users,dc=comune,dc=prato,dc=local
activeDirectoryRealm.systemPassword=xxxxxxxxxxxxxxxxxxxxxxx
activeDirectoryRealm.url = ldap://172.16.1.98:389
activeDirectoryRealm.groupRolesMap = ""CN=menu_ufficiomobile_ania,OU=Menu,OU=Gruppi,OU=ComuneDiPrato,DC=comune,DC=prato,DC=local"":""menu_ufficiomobile_ania""

securityManager.realms = $activeDirectoryRealm
[users]

test = test,menu_ufficiomobile_passicarrabili, menu_ufficiomobile_rubati,menu_ufficiomobile_ordinanze, menu_ufficiomobile_ztl, menu_ufficiomobile_cciaa,  menu_ufficiomobile_ania, menu_ufficiomobile_anagrafe, menu_ufficiomobile_mctc, menu_ufficiomobile_pra


[roles]

menu_ufficiomobile_anagrafe = prato:anagrafe
menu_ufficiomobile_mctc = prato:mctc
menu_ufficiomobile_pra = prato:pra
menu_ufficiomobile_ania = prato:ania
menu_ufficiomobile_cciaa = prato:cacomm
menu_ufficiomobile_ztl = prato:ztl
menu_ufficiomobile_ordinanze = prato:ordinanze
menu_ufficiomobile_rubati = prato:rubati
menu_ufficiomobile_passicarrabili = prato:permessi
</code></pre>

<p>My security injection code:</p>

<pre><code>ShiroSecurityToken shiroSecurityToken = new ShiroSecurityToken(qr.getUserName(),qr.getPassword());
ShiroSecurityTokenInjector shiroSecurityTokenInjector = new ShiroSecurityTokenInjector(shiroSecurityToken, passPhrase);
arg0.getIn().setHeader(""SHIRO_SECURITY_TOKEN"", shiroSecurityTokenInjector.encrypt());
</code></pre>

<p>And the routing code that uses permissions:</p>

<pre><code>from(""seda:interrogaANIA"").threads(1)
 .setHeader(""db"", constant(Database.ANIA)).policy(aniaS)
 .to(""bean:interrogaANIA?method=interrogaBancaDati"")
 .to(""seda:prefilter""); 
</code></pre>

<p>Thanks,
Mario</p>
","<java><authentication><active-directory><shiro>","2","10694046"
"25391871","Shiro with HTTP Basic Auth or Anonymous access to same URI","<p>I've a set of APIs under /api. If my shiro.ini lists this as:</p>

<pre><code>/api/** = authcBasic
</code></pre>

<p>Then basic auth is required. If anon is present in place of authcBasic then no auth is required. I'd like to be able to use the APIs with basic auth so I can e.g. programatically check the user is authenticated for POSTs and yet still allow anonymous access to GETs on the same URI. Alternatively to hide restricted data at the same URI for anonymous users and reveal it for auth'd users.</p>

<p>Is this possible?</p>
","<java><authentication><basic-authentication><shiro>","4","25399530"
"9266539","how to get/set the salt for a JdbcRealm","<p>I am attempting to use the Shiro JdbcRealm and SHA256 hashedcredentialsMatcher.   I need to update a legacy database and assign the appropriate salt for each user (via a batch routine).  </p>

<p>how do I get/set the salt for a given account using the Shiro framework?</p>
","<salt><shiro><jdbcrealm>","2",""
"19689382","Apache shiro: Use ldap for user authentication and database for roles/permissions?","<p>we just started with apache shiro and it works fine in a simple jdbc or ldap based environment.</p>

<p>Be our requirements are the following:</p>

<ul>
<li>Authentication of the users agains a ldap server</li>
<li>Roles+Permissions should be stored inside a database</li>
</ul>

<p>Has anyone some pointers on how this can be done?</p>
","<jdbc><ldap><shiro><mixed>","4","19712028"
"10303464","Shiro doesn't redirect to unauthorizedUrl w/invalid login - Shiro with Spring and Tiles","<p>I'm using Spring MVC, Tiles and Shiro. </p>

<p>This is how my unauthorizedUrl property is configured:
<code>&lt;property name=""unauthorizedUrl"" value=""/unauthorized""/&gt;</code></p>

<p>My expectation is that when <code>MyAuthorizingRealm</code> finds invalid credentials, that Shiro will redirect to <code>/unauthorized</code>.</p>

<p>But, that doesn't happen for me on form submission. I have a login <code>@Controller</code> that is mapped to handle GET and POST actions for <code>/login</code>. For accesses to the url <code>/lists</code> the login form is displayed. So it seems to work in one case but not the other.</p>

<pre class=""lang-java prettyprint-override""><code>@Controller
@RequestMapping(value = ""/login"")
public class LoginController {

    @RequestMapping(method = RequestMethod.GET)
    public String getLoginFormView(Model model) {
        return ""login"";
    }

    // if this method doesn't exist a Post not supported exception is thrown
    @RequestMapping(method = RequestMethod.POST)
    public String handlePost() {
        return ""this view doesn't exist"";
    }
}
</code></pre>

<p>Even if I throw <code>AuthenticationException</code> from <code>MyAuthorizingRealm.doGetAuthenticationInfo()</code> I still can't get Shiro to redirect to <code>/unauthorized</code>. It always ends up continuing with the filter chain and executes the POST method in the <code>@Controller</code>; and of course I expect a redirect instead.</p>

<p>Here is my <code>webapp-context.xml</code>:
<a href=""http://pastebin.com/XZaCKqEC"" rel=""nofollow"">http://pastebin.com/XZaCKqEC</a></p>

<p>And here is my <code>web.xml</code>:
<a href=""http://pastebin.com/5H81Tm8A"" rel=""nofollow"">http://pastebin.com/5H81Tm8A</a></p>

<p>Following is some TRACE log output from Shiro. Shiro works when you try to access <code>/lists</code>. But, when the login form is submitted the redirect to <code>/unauthorized</code> never happens. Note, the login submission is detected:
<a href=""http://pastebin.com/ZEK3CTdJ"" rel=""nofollow"">http://pastebin.com/ZEK3CTdJ</a></p>

<p>So, the login submission is detected but the original filter chain is executed anyway instead of redirecting to <code>/unauthorized</code></p>

<p>I'm stumped. Many thanks for any help and if you need more info please let me know.</p>
","<redirect><spring-mvc><tiles><shiro>","2",""
"10332421","Apache Shiro vs Java EE native APIs","<p>What advantages are there by going to <strong>Apache Shiro</strong>, and leaving <strong>Java EE</strong>'s native APIs for security and session management?</p>

<p>I found that all security roles and sessions can be done in Apache Shiro but the same thing can also be done using Java EE security without any external dependency jars.</p>

<p>So suggest me some pros and cons of going to Apache Shiro.</p>
","<apache><java-ee><shiro>","10",""
"20742666","shiro with jdbc and hashed passwords","<p>Here is my shiro config </p>

<pre><code>[main]
authc.loginUrl = /site/index.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember
authc.successUrl = /site/home.jsp


jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled=true
jdbcRealm.authenticationQuery = select password from users where username = ?
jdbcRealm.userRolesQuery = select role from users where username = ?

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = true
credentialsMatcher.hashIterations = 5000
jdbcRealm.credentialsMatcher = $credentialsMatcher



jof = org.apache.shiro.jndi.JndiObjectFactory
jof.resourceName = jdbc/postgres
jof.requiredType = javax.sql.DataSource
jof.resourceRef = true
jdbcRealm.dataSource = $jof
securityManager.realms = jdbcRealm

[urls]
/theme/** = anon
/site/** = authc
/site/cards.jsp = roles[smoto,admin]
/site/jobs.jsp = roles[admin]
</code></pre>

<p>I created the hash like this for admin password admin</p>

<pre><code>String hashedPassword = new Sha256Hash(""admin"", """",5000).toHex();
</code></pre>

<p>I inserted the hash into the db but my authentication fails every time, does anyone have any experience with this kind of setup with shiro? Also how would I enable debugging or logging for shiro?</p>

<p>EDIT:
here is the correct set up for this kind of authentication, found it in another stackoverflow post </p>

<pre><code>[main]
authc.loginUrl = /site/index.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember
authc.successUrl = /site/home.jsp

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled=false
jdbcRealm.authenticationQuery = select password from users where username = ?
jdbcRealm.userRolesQuery = select role from users where username = ?

ps = org.apache.shiro.authc.credential.DefaultPasswordService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $ps

jof = org.apache.shiro.jndi.JndiObjectFactory
jof.resourceName = jdbc/postgres
jof.requiredType = javax.sql.DataSource
jof.resourceRef = true

jdbcRealm.dataSource = $jof
jdbcRealm.credentialsMatcher = $pm

#securityManager.realms = jdbcRealm

[urls]
/theme/** = anon
/site/** = authc
/site/cards.jsp = roles[smoto,admin]
/site/jobs.jsp = roles[admin]
</code></pre>

<p>The trick is to use the hashing tool that shiro provides and copy the exact output into database field ""password"", the whole string will contain info on what algorithm is used how many iteration etc, example:</p>

<pre><code>$shiro1$SHA-256$500000$salthere$hashhere
</code></pre>
","<java><jsp><jdbc><hash><shiro>","3","21070797"
"27645499","Error creating bean with name 'shiroFilter'","<pre><code>Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilter' defined in URL [file:/E:/Git/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sample-web/WEB-INF/classes/spring-conf/applicationContext.xml]: Cannot resolve reference to bean 'securityManager' while setting bean property 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in URL [file:/E:/Git/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sample-web/WEB-INF/classes/spring-conf/applicationContext.xml]: Cannot resolve reference to bean 'shiroDbRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroDbRealm': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cms.dao.AdminDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
    at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:746)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:457)
    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in URL [file:/E:/Git/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sample-web/WEB-INF/classes/spring-conf/applicationContext.xml]: Cannot resolve reference to bean 'shiroDbRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroDbRealm': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cms.dao.AdminDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
    ... 23 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroDbRealm': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cms.dao.AdminDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
    ... 33 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cms.dao.AdminDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
    at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
    ... 41 more
</code></pre>

<p>i have no idea what is wrong with it</p>
","<spring><spring-mvc><shiro>","0",""
"8177548","Spring data JPA repository not found when Apache Shiro annotations enabled in spring","<p>Here is the problem.</p>

<p>I have spring 3.0.5, using its new DATA JPA repository module (interfaces extending
<code>CrudRepository&lt;T, ID extends Serializable&gt;</code>).</p>

<p>I have Apache Shiro 1.1.0 as a security solution for my app. Apache shiro is configured
in the spring bean defintion xml file as follows:</p>

<pre><code>&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt; 

&lt;!-- Define the realm you want to use to connect to your back-end security datasource: --&gt;
&lt;bean id=""securityDAORealm"" class=""com.bilto.archiweb.security.SecurityDAORealm"" /&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.mgt.DefaultSecurityManager""&gt;
    &lt;!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realm"" ref=""securityDAORealm""/&gt;
&lt;/bean&gt;

&lt;!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, --&gt;
&lt;!-- make the securityManager bean a static singleton.  DO NOT do this in web         --&gt;
&lt;!-- applications - see the 'Web Applications' section below instead.                 --&gt;
&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt; 
</code></pre>

<p>Please note that my app is a standalone application and this Apachoe Shiro configuration reflects it.</p>

<p>Configuration for spring jpa repositories as well as standard spring configurations (annotations scanning) is configured in others files, they do not seem to be relevant for this problem, so i will skip printing them.</p>

<p>My <code>SecurityDAORealm</code> class is autowiring <code>CredentialsRepository</code> as its jpa repository controller interface (<code>CredentialsRepository extends CrudRepository&lt;T, ID extends Serializable&gt;</code>) that serves for accessing the database where credentials are stored.</p>

<pre><code>@Component
public class SecurityDAORealm extends AuthorizingRealm {

@Autowired
CredentialRepository credentialRepository;
...
}
</code></pre>

<p>Now for the problem.</p>

<p>When Apache Shiro annotation scanning is configured, the autowired bean of type <code>CredentialsRepository</code> is not found and thus not wired. When annotation scanning is turned off CredentialsRepository variable is autowired and all works properly.</p>

<p>The part that anables Apache Shiro annotation processing is this</p>

<pre><code>    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt; 
</code></pre>

<p>By commenting out its central peace</p>

<pre><code>&lt;!-- &lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt; --&gt;
</code></pre>

<p>Annotations are turned off, uncommenting it will switch them on again.</p>

<p>As a test I tried to auto-wire a simple pojo instead of my <code>CredentialsRepository</code>, this works well in both cases (annotations on/off).</p>

<p>I do not see much into spring internals. What might be happening here is that the <code>CredentialsRepository</code> variable is not getting auto-wired as Spring does not get a chance to create its appropriate implementation (<code>SimpleJpaRepository</code>) on its backend.</p>

<p>The workaround exist here simply by auto-wiring some ""full class"" JPA controller instead of a spring managed interface implementation. </p>

<p>However I am curious whether this is a bug that need to be fixed or whether some additional spring magic exist here that could make it work also with spring data interfaces.</p>
","<spring><repository><shiro>","2","9228619"
"15705910","apache shiro: how to set the authenticationStrategy using spring applicationcontext?","<p>I've been struggling with authenticationStrategy settings with shiro 1.2.1 in a spring based web application. I have 2 realms. One authenticates against <code>database</code> and one against ldap. both <code>realms</code> are working fine just that i wanted a <code>FirstSuccessfulStrategy</code> but it seems both realms are still being called. here is my security-application-context:</p>

<pre><code>&lt;bean id=""passwordService"" class=""org.apache.shiro.authc.credential.DefaultPasswordService""&gt;
    &lt;property name=""hashService"" ref=""hashService"" /&gt;

&lt;/bean&gt;

&lt;bean id=""hashService"" class=""org.apache.shiro.crypto.hash.DefaultHashService""&gt;
    &lt;property name=""hashAlgorithmName"" value=""SHA-512"" /&gt;
    &lt;property name=""hashIterations"" value=""500000"" /&gt;
&lt;/bean&gt;


&lt;bean id=""SaltedSha512JPARealm"" class=""bla.bla.webapp.security.SaltedSha512JPARealm""&gt;
    &lt;property name=""credentialsMatcher""&gt;
        &lt;bean class=""org.apache.shiro.authc.credential.PasswordMatcher""&gt;
            &lt;property name=""passwordService"" ref=""passwordService""/&gt;
        &lt;/bean&gt;
    &lt;/property&gt;

&lt;/bean&gt;


&lt;bean id=""ldapContextFactory"" class=""org.apache.shiro.realm.ldap.JndiLdapContextFactory""&gt;
    &lt;property name=""url"" value=""${user.ldap.connection.url}""/&gt;
    &lt;property name=""authenticationMechanism"" value=""${user.ldap.connection.auth_mecanism}""/&gt;
&lt;/bean&gt;

&lt;bean id=""ldapRealm"" class=""bla.bla.webapp.security.LDAPRealm""&gt;
    &lt;property name=""userDnTemplate"" value=""${user.ldap.connection.userDnTemplate}""/&gt;
    &lt;property name=""contextFactory"" ref=""ldapContextFactory"" /&gt;

&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager"" depends-on=""roleRepository,roleRightRepository,rightRepository,userRepository""&gt;

    &lt;property name=""realms""&gt;
        &lt;list&gt;
            &lt;ref local=""ldapRealm""/&gt;
            &lt;ref local=""SaltedSha512JPARealm""/&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name=""authenticator.authenticationStrategy""&gt;
        &lt;bean class=""org.apache.shiro.authc.pam.FirstSuccessfulStrategy""/&gt;
    &lt;/property&gt;

&lt;/bean&gt;
</code></pre>

<p>is there anything there that i am not doing well?</p>
","<spring><java-ee><web><shiro><realm>","2",""
"5815401","how to implement Shiro Security of Grails in my Project","<p>i m new to Grails and using some Shiro security. 
I have made a little site with login page and if login successful it redirects me to another loggedin page.</p>

<p>now i want to implement Shiro Security. I have run that plugin and quick start app of Shiro on new Grails Project. </p>

<p>what i want to achieve is that how can i implement my security on my own pages using the Quick Start Files and code. Please guide. a little.  which files should i use from that quick start and what changing should i made. ? </p>

<p>waiting for some positive response :)</p>
","<grails><shiro>","4","5828869"
"21512791","Spring service with cacheable methods gets initialized without cache when autowired in Shiro realm","<p>After spending 2 days on this issue I really can't make any more progress on my own. I am working on a standard web application with Spring for dependency injection and the likes. I am also using Spring to cache several expensive methods I use a lot.</p>

<p>After I introduced Apache Shiro for the security layer, I was experiencing a strange issue where <code>@Cacheable</code> methods in a certain service no longer got cached. To this point, I was able to strip the problem down to its core, but there's still a lot of code for you to look at - sorry for that...</p>

<p>First, I configure all relevant packages (all classes shown in the following are in one of those).</p>

<pre><code>@Configuration
@ComponentScan(basePackages = {
        ""my.package.config"",
        ""my.package.controllers"",
        ""my.package.security"",
        ""my.package.services"",
})
public class AppConfiguration {

}
</code></pre>

<p>Here is the configuration file for caching.</p>

<pre><code>@Configuration
@EnableCaching
public class CacheConfiguration {
    @Bean(name = ""cacheManager"")
    public SimpleCacheManager cacheManager() {
        SimpleCacheManager simpleCacheManager = new SimpleCacheManager();
        simpleCacheManager.setCaches(Arrays.asList(
                new ConcurrentMapCache(""datetime"")
        ));
        return simpleCacheManager;
    }
}
</code></pre>

<p>For my minimal example, I am using a very simple service that only returns the current timestamp. The <code>Impl</code> class is as simple as you would imagine.</p>

<pre><code>public interface DateService {
    @Cacheable(""datetime"")
    LocalDateTime getCurrent();
}
</code></pre>

<p>I inject this service into a controller.</p>

<pre><code>@Controller
@RequestMapping(""/v1/date"")
public class DateController {
    @Autowired
    DateService dateService;

    @RequestMapping(value = ""/current"", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity&lt;String&gt; getCurrent() {
        Subject s = SecurityUtils.getSubject();
        s.login(new MyToken());
        return new ResponseEntity&lt;&gt;(dateService.getCurrent().toString(), HttpStatus.OK);
    }
}
</code></pre>

<p>The application is set up and started via Jetty, and everything works as expected so far. When calling <code>&lt;api-url&gt;/v1/date/current</code> for the first time the current timestamp is returned, but afterwards one always receives the cached result.</p>

<p>Now, I introduce Shiro with yet another config file.</p>

<pre><code>@Configuration
public class ShiroSecurityConfiguration {

    @Bean
    @Autowired
    public DefaultSecurityManager securityManager(MyRealm realm) {
        List&lt;Realm&gt; realms = new ArrayList&lt;&gt;();
        // MyToken is a static stub for this example
        realm.setAuthenticationTokenClass(MyToken.class);
        realms.add(realm);
        DefaultSecurityManager manager = new DefaultSecurityManager(realms);
        SecurityUtils.setSecurityManager(manager);
        return manager;
    }

    // other Shiro related beans that are - at least to me - irrelevant here

    // EDIT 2: I figured out that the described problem only occurs with this bean
    // (transitively depending on DateService) in the application
    // the bean is required for annotations such as @RequiresAuthentication to work
    @Bean
    @Autowired
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(DefaultSecurityManager securityManager) {
        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();
        advisor.setSecurityManager(securityManager);
        return advisor;
    }
}
</code></pre>

<p>Finally, here comes the realm which also depends on my service.</p>

<pre><code>@Component
public class MyRealm extends AuthenticatingRealm {
    private static final String REALM_NAME = ""MyRealm"";
    @Autowired
    private DateService dateService;

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        System.out.println(""User authenticated at ""+dateService.getCurrent());
        return new SimpleAuthenticationInfo("""",token.getCredentials(),REALM_NAME);
    }
}
</code></pre>

<p>With that, the caching is broken in my entire application. There is no error message, it just doesn't use the cache anymore. I was able to implement a workaround, but I am now seeking for a better solution and maybe also some advice to better understand the essence of my issue. So, here comes the workaround.</p>

<pre><code>@Component
public class MyRealm extends AuthenticatingRealm {
    private static final String REALM_NAME = ""MyRealm"";
    private DateService dateService;
    @Autowired
    private ApplicationContext applicationContext;

    private void wireManually() {
        if (dateService == null) {
            dateService = applicationContext.getBean(DateService.class);
        }
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        wireManually();
        System.out.println(""User authenticated at ""+dateService.getCurrent());
        return new SimpleAuthenticationInfo("""",token.getCredentials(),REALM_NAME);
    }
}
</code></pre>

<p>Now it's back to working, and I was able to debug the reason for that. Shiro and hence <code>MyRealm</code> gets initialized very early, even before the whole caching with my <code>SimpleCacheManager</code> and all the related stuff (cacheInterceptor etc.) is loaded. Therefore, there is no proxy to wrap around the service when it gets initialized before the realm when using <code>@Autowired</code>. With the workaround shown above, the service is not injected before everything is set up properly and the first request is being served,  and then there is no problem.</p>

<p>Simply put, as soon as I make <code>MyRealm</code> dependent on <code>DateService</code> (annotating the last version of <code>MyRealm</code> with <code>@DependsOn(""dateServiceImpl"")</code> is enough to break the application) it gets initialized too early (i.e. before caching is set up).</p>

<p>So I would need to either postpone the initialization of <code>MyRealm</code>, but I don't know how to do that. I tried <code>@DependsOn(""cacheManager"")</code>, but that doesn't help as the other beans required for caching are loaded later nonetheless. Or - which is the same from another perspective - I could make sure the whole caching infrastructure (I am not enough of an expert to describe it in detail) is initialized earlier. Unfortunately, I also don't know how to do that...</p>

<p>Thanks in advance to everyone who made it to this point. Looking forward to any input, no matter if it's an idea to fix the code in a better way or an explanation why exactly Spring can't get this right on its own. </p>
","<spring><caching><autowired><shiro>","4","21625199"
"14499703","Apache Shiro - form based authentication doesn't seem to work for me","<p>I have got problems with implementing form based authentication. I created a simple web application and before openening a page (/jsp/index.jsp) I want to check the user's rights and open a login page if it is necessary.</p>

<p>Unfortunately if I try to open the link of index.jsp (<em>http://localhost:8080/mywebapp/jsp/index.jsp</em>) the index.jsp is turning up immediately but I expected the login.jsp first! Here are the importan files:</p>

<p>Shiro.ini</p>

<pre><code>[main]
# specify login page
authc.loginUrl = /login.jsp
# name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = user
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = passw
# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
authc.rememberMeParam = remember
[url]
# enable authc filter for all application pages
/jsp/** = authc
[users]
adminstrator=throttling,Administrator
</code></pre>

<p>web.xml</p>

<pre><code>&lt;web-app id=""starter"" version=""2.4"" xmlns=""http://java.sun.com/xml/ns/j2ee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>This the directory structure of <strong>maven project / src / main</strong></p>

<pre><code>├───java
├───resources
│       log4j.properties
│       Shiro.ini
│
└───webapp
    │   login.jsp
    │
    ├───jsp
    │       index.jsp
    │
    └───WEB-INF
        │   web.xml
        │
        └───lib
</code></pre>

<p>I added these two dependencies to the pom.xml</p>

<pre><code>    &lt;dependency&gt;
      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
      &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
      &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
      &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
      &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>Hopefully I wrote any of the important information! Could anyone help me why it doesn't work for me?
Thanks, V.</p>

<p>log4j.properties</p>

<pre><code>log4j.rootLogger=TRACE, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %-5p [%c]: %m%n
log4j.logger.net.sf.ehcache=WARN
log4j.logger.org.apache=WARN
log4j.logger.org.quartz=WARN
log4j.logger.org.apache.shiro=TRACE
log4j.logger.org.apache.shiro.util.ThreadContext=INFO
</code></pre>
","<security><shiro>","3","15742522"
"5789784","need some tutorials on Grails Shiro Security","<p>hey all 
i need some good tutorials demonstrating all the aspects of grails shiro securty, that how to use them using some example.
i already have read the tutorials explained in grails site but i need some tutorials with examples. 
Please help friends... </p>

<p>m waiting for some positive response.</p>
","<grails><shiro>","4","5794948"
"9273631","Apache shiro LDAP multiple OUs","<p>I am trying to configure apache shiro to authenticate using our LDAP server. I am not very familiar with LDAP so forgive my ignorance please!</p>

<p>Using the following option in shiro.ini is working ok (users are authenticated):</p>

<pre>
ldapRealm.userDnTemplate = uid={0},ou=users,dc=mycompany,dc=com
</pre>

<p>However we have more than one organization unit (ou) in our company. How can I make the ou parameter take multiple values ? Can I use something this </p>

<pre>
ldapRealm.userDnTemplate = uid={0},ou=*,dc=mycompany,dc=com
</pre>

<p>I just want to try all organization units until the login is successfull.</p>

<p>What about adding extra ldap realms having different ou like this:</p>

<pre>
#ldapRealm1
ldapRealm1 = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm1.userDnTemplate = uid={0},ou=users1,dc=mycompany,dc=com
ldapRealm1.contextFactory.url = ldap://test.com:389
#ldapRealm2
ldapRealm2 = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm2.userDnTemplate = uid={0},ou=users2,dc=mycompany,dc=com
ldapRealm2.contextFactory.url = ldap://test.com:389
#ldapRealm3
ldapRealm3 = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm3.userDnTemplate = uid={0},ou=users3,dc=mycompany,dc=com
ldapRealm3.contextFactory.url = ldap://test.com:389
</pre>

<p>Will this work ?</p>

<p>Also is it possible to add a dropdown in the login page to allow the users select their organization unit and pass it as a paremeter to the ldapRealm ? How should I proceed with that ? </p>

<p>TIA,
Serafeim</p>
","<java><ldap><shiro>","1","9299840"
"27244378","Shiro.ini file configuration but in Java class?","<p>I want to know if its possible to configure Shiro without the shiro.ini file, I mean, instead of using the INI file, what if I need to make the Shiro config to be hardcoded in a Java class?</p>
","<java><shiro>","5","27245360"
"16676721","How to use separate realms for authentication and authorization with Shiro and CAS?","<p>I'm working on a web application where multiple applications authenticates through a CAS SSO Server. Howerver, each application should maintain their respective roles and these roles are stored in a database specific to the application. So, I need to have 2 realms, one for CAS (for authc) and another for DB (for authz).</p>

<p>This is my current shiro config. I'm getting the redirection to the CAS working properly, but the logged in user (Subject) doesn't seems to have the roles/permission loaded in it (e.g. SecurityUtil.isPermitted() not working as expected)</p>

<pre><code>&lt;bean id=""jdbcRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
        &lt;property name=""name"" value=""jdbcRealm"" /&gt;
        &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
        &lt;property name=""authenticationQuery""
            value=""SELECT password FROM system_user_accounts WHERE username=? and status=10"" /&gt;
        &lt;property name=""userRolesQuery""
            value=""SELECT role_code FROM system_roles r, system_user_accounts u, system_user_roles ur WHERE u.user_id=ur.user_id AND r.role_id=ur.role_id AND u.username=?"" /&gt;
        &lt;property name=""permissionsQuery""
            value=""SELECT code FROM system_roles r, system_permissions p, system_role_permission rp WHERE r.role_id=rp.role_id AND p.permission_id=rp.permission_id AND r.role_code=?"" /&gt;

        &lt;property name=""permissionsLookupEnabled"" value=""true""&gt;&lt;/property&gt;
        &lt;property name=""cachingEnabled"" value=""true"" /&gt;
        &lt;property name=""credentialsMatcher"" ref=""passwordMatcher"" /&gt;
    &lt;/bean&gt;

    &lt;!-- For CAS --&gt;
    &lt;bean id=""casRealm"" class=""org.apache.shiro.cas.CasRealm""&gt;
        &lt;property name=""defaultRoles"" value=""ROLE_USER"" /&gt;
        &lt;property name=""casServerUrlPrefix"" value=""http://localhost:7080/auth"" /&gt;
        &lt;property name=""casService"" value=""http://localhost:8080/hawk-hck-web/shiro-cas"" /&gt;
        &lt;property name=""validationProtocol"" value=""SAML"" /&gt;
        &lt;property name=""cachingEnabled"" value=""true""&gt;&lt;/property&gt;
    &lt;/bean&gt;
    &lt;bean id=""casSubjectFactory"" class=""org.apache.shiro.cas.CasSubjectFactory"" /&gt;

&lt;!-- Security Manager --&gt;
    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realms""&gt;
            &lt;list&gt;
                &lt;ref bean=""casRealm"" /&gt;
                &lt;ref bean=""jdbcRealm"" /&gt;
            &lt;/list&gt;
        &lt;/property&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
        &lt;property name=""subjectFactory"" ref=""casSubjectFactory"" /&gt;
    &lt;/bean&gt;

&lt;bean id=""casFilter"" class=""org.apache.shiro.cas.CasFilter""&gt;
        &lt;property name=""failureUrl"" value=""/error""&gt;&lt;/property&gt;
    &lt;/bean&gt;

&lt;!-- Shiro filter --&gt;
    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""http://localhost:7080/auth/login?service=http://localhost:8080/hawk-hck-web/shiro-cas"" /&gt;
        &lt;property name=""successUrl"" value=""/home/index"" /&gt;
        &lt;property name=""unauthorizedUrl"" value=""/error"" /&gt;
        &lt;property name=""filters""&gt;
            &lt;util:map&gt;
                    &lt;entry key=""casFilter"" value-ref=""casFilter"" /&gt; 
            &lt;/util:map&gt;
        &lt;/property&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt; 
                &lt;!-- !!! Order matters !!! --&gt;
                /shiro-cas = casFilter
                /login = anon
                /logout = logout
                /error = anon
                /static/** = anon
                /** = authc
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>The way I register the realms with the securityManager should be in correct. I can't really find a good example of the setup.</p>

<p>I have 2 questions here:</p>

<ol>
<li>What is correct setup/configuration to achieve above mentioned scenario?</li>
<li>What is the best practice to manage users and roles across different/seperate applications?</li>
</ol>
","<spring><security><cas><shiro>","3",""
"9829649","Shiro in a multi-threaded environment","<p>The basic way that I understand Shiro's SecurityUtils.getSubject() to work is that it returns the subject which is bound to the currently executing thread.  However, this just seems at odds with a servlet container like Tomcat which is using a thread pool to service requests.</p>

<p>If Tomcat is say using ThreadA to handle requests, any calls to SecurityUtils.getSubject() should work fine.  But, as soon as ThreadB is selected, the user is lost, getSubject returns null and isAuthenticated is now false.  This is even though the user is still logged in.</p>

<p>I have confirmed this in my application.  I am using Shiro Core 1.2 and notice that my user is just miraculously being inauthenticated when I navigate through my app.  If I look at the logs, the problem happens as soon as a different thread is used to service the request.</p>

<p>So, do I have Shiro configured incorrectly?  It seems like the 'current user' should be bound to something a bit more longer-lasting than the current thread.  I would expect it to be session-based.  I know that Shiro has session management, but in all examples I've found, it says to get the current user by calling getSubject, which looks at the ThreadContext.  Am I missing something?</p>
","<java><security><tomcat><servlets><shiro>","6","9842637"
"15419686","Apache Shiro takes me back to login page after authentication","<p>I am replacing Siteminder with Apache Shiro in my web application. I noticed that shiro logs me in successfully and takes me to the home page. When i click on any other link on the home page, I am taken back to the login page. I login again and i am forwarded to the page i was looking to goto. How can i fix this?</p>

<p>Here is my shiro.ini</p>

<pre><code>[main]
authc.loginUrl = /login.jsp
ssl.enabled=false

[users]
user=admin

[urls]
/css/** = anon
/images/** = anon
/js/** = anon
/login.jsp = authc
/logout = logout
/** = authc
</code></pre>

<p>A section from my web.xml</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;       
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;      
&lt;/filter-mapping&gt;
</code></pre>

<p>Printing out currentUser.isAuthenticated() in my User Class displays 'true'.</p>

<p>Is there any other info i can provide?</p>
","<shiro>","2","15507441"
"11826975","Apache Shiro with JdbcRealm and JndiObjectFactory throws IllegalArgumentException","<p>I'm trying to use Apache Shiro (v1.2) in a JavaEE6 web application on a GlassFish v3.1.2 application server.</p>

<p>In GlassFish I've set up a datasource (<code>jdbc/myds</code>) which I have tested to work through JPA2.</p>

<p>I would like to use the same datasource for authenticating users using the Shiro JDBC realm.</p>

<p>I've got the following in shiro.ini:</p>

<pre><code># DataSource config
ds                = org.apache.shiro.jndi.JndiObjectFactory 
ds.requiredType   = javax.sql.DataSource
ds.resourceName   = jdbc/myds

# JDBC realm config
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.authenticationQuery = SELECT password FROM user_account WHERE email = ?
jdbcRealm.userRolesQuery = SELECT role_name FROM user_group_membership WHERE email = ?
jdbcRealm.dataSource = $ds
</code></pre>

<p>When I deploy the application I get the following Exception (summarised):</p>

<pre><code>FINE: Encountered object reference '$ds'.  Looking up object with id 'ds'
FINEST: Applying property [dataSource] value [org.apache.shiro.jndi.JndiObjectFactory@2ca061] on object of type [org.apache.shiro.realm.jdbc.JdbcRealm]
SEVERE: Unable to start Filter: [Unable to set property 'dataSource' with value [$ds] on object of type org.apache.shiro.realm.jdbc.JdbcRealm.  If '$ds' is a reference to another (previously defined) object, prefix it with '$' to indicate that the referenced object should be used as the actual value.  For example, $$ds].
org.apache.shiro.config.ConfigurationException: Unable to set property 'dataSource' with value [$ds] on object of type org.apache.shiro.realm.jdbc.JdbcRealm.  If '$ds' is a reference to another (previously defined) object, prefix it with '$' to indicate that the referenced object should be used as the actual value.  For example, $$ds
at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:373)
at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:198)
at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:159)
at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:119)
...
...
Caused by: java.lang.IllegalArgumentException: Cannot invokeorg.apache.shiro.realm.jdbc.JdbcRealm.setDataSource on bean class 'class org.apache.shiro.realm.jdbc.JdbcRealm' - argument type mismatch - had objects of type ""org.apache.shiro.jndi.JndiObjectFactory"" but expected signature ""javax.sql.DataSource""
at org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(PropertyUtilsBean.java:2235)
at org.apache.commons.beanutils.PropertyUtilsBean.setSimpleProperty(PropertyUtilsBean.java:2151)
at org.apache.commons.beanutils.PropertyUtilsBean.setNestedProperty(PropertyUtilsBean.java:1957)
...
</code></pre>

<p>If instead I define an actual MySQL data source it works fine, e.g.</p>

<pre><code>ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource 
ds.serverName = localhost
ds.user = root
ds.password = root
ds.databaseName = mydb
</code></pre>

<p>Any help is much appreciated.</p>
","<java-ee-6><shiro>","3","11829164"
"4504762","Shiro FormAuthenticationFilter basics question","<p>I can find plenty of examples that show how to configure a URL to use the authc filter, but I cannot find any examples of a simple login page that would be appropriate.  I am using Spring integration to Shiro, but I don't think that has anything to do with my problem.</p>

<p>From reading the documentation, I set up my filter factory like this:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""loginUrl"" value=""/login.jsp"" /&gt;
        &lt;property name=""successUrl"" value=""/Reports.jsp"" /&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""filterChainDefinitionMap""&gt;
                &lt;map&gt;
                        &lt;entry key=""/ws/**"" value=""authc"" /&gt;
                        &lt;entry key=""/Reports.jsp"" value=""authc"" /&gt;
                        &lt;entry key=""/**"" value=""anon"" /&gt;
                &lt;/map&gt;
        &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>I'll spare you the entire xml file.  I can tell that it's picking up the right filter, because when I do this:</p>

<pre><code>&gt; curl -v localhost:8080/factorlab-web/Reports.jsp
</code></pre>

<p>I get this response:</p>

<pre><code>&lt; HTTP/1.1 302 Found
&lt; Expires: Thu, 01 Jan 1970 00:00:00 GMT
&lt; Set-Cookie: JSESSIONID=19gdgnmukynb3;Path=/factorlab-web
&lt; Location: http://localhost:8080/factorlab-web/login.jsp;jsessionid=19gdgnmukynb3
&lt; Content-Length: 0
&lt; Server: Jetty(6.1.21)
&lt;
</code></pre>

<p>So far, so good, right? However, if I submit the username and password, I should get the content of Reports.jsp, right?  I don't.  If I do this:
* curl -v -d ""username=demo&amp;password=demo&amp;rememberMe=false"" <a href=""http://localhost:8080/factorlab-web/Reports.jsp"" rel=""nofollow"">http://localhost:8080/factorlab-web/Reports.jsp</a></p>

<p>I get the same response as before:</p>

<pre><code>&lt; HTTP/1.1 302 Found
&lt; Expires: Thu, 01 Jan 1970 00:00:00 GMT
&lt; Set-Cookie: JSESSIONID=qnidg37bqo9f;Path=/factorlab-web
&lt; Location: http://localhost:8080/factorlab-web/login.jsp;jsessionid=qnidg37bqo9f
&lt; Content-Length: 0
&lt; Server: Jetty(6.1.21)
&lt;
</code></pre>

<p>Clearly I'm confused either about configuration or about how it's supposed to work.  First, can anyone tell me just what I should expect from the second curl command, or why I don't see what I'm expecting?</p>

<p>Second, is there a small sample with a login.jsp (or similar) where I could see what happens when a user:
* Goes explicitly to the login page
* Is automatically directed to the login page (e.g. logging in takes you back to the original attempted page).
* Submits bad username and password from the login page. </p>
","<authentication><forms-authentication><shiro>","1","6025011"
"5736077","How can I delegate JAAS authorization checks to Shiro?","<p>I'm developing a server-side application that needs authentication and authorization based on objects. I like Shiro's simplicity, but for being compatible with JAAS, I wrote a LoginModule that uses Apache Shiro as the underlying mechanism.</p>

<p>But my problem is that I couldn't find a way to delegate JAAS authorization checks to Shiro. How can I achieve this?</p>
","<java><authorization><authentication><jaas><shiro>","56",""
"21701646","Apache Shiro : how to manually login and create session?","<p>I have succesfully applied how to integrate facebook user logins with facebook based on this <a href=""http://mrdwnotes.wordpress.com/2011/11/28/using-apache-shiro-security-to-allow-login-via-facebook-part-2/"" rel=""nofollow"">article</a>, which revolves around creating a custom auth-token, realm, auth info and an empty credential-matcher for facebook.</p>

<p>The problem i'm having right now is that although i can successfully do a login, i cannot seem to get the session started, as can be seen from my custom session storage. Note that using the 'normal-non-facebook' login works, the sessions are created. </p>

<p>My guess is that the problem has something to do with <em>shiroFilter + the loginUrl</em> being able to create the native session, and manually doing <em>SecurityUtils.getSubject().login(token)</em> cannot create the native session.</p>

<p>When i do this in hope to create the session after login manually :</p>

<pre><code>SecurityUtils.getSubject().login(facebookToken);
SecurityUtils.getSubject().getSession(true);
</code></pre>

<p>I get this exception :</p>

<blockquote>
  <p>org.apache.shiro.subject.support.DisabledSessionException: Session
  creation has been disabled for the current subject.  This exception
  indicates that there is either a programming error (using a session
  when it should never be used) or that Shiro's configuration needs to
  be adjusted to allow Sessions to be created for the current Subject. 
  See the org.apache.shiro.subject.support.DisabledSessionException
  JavaDoc for more.</p>
</blockquote>

<p>Here's my session related configs :</p>

<pre><code>&lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""globalSessionTimeout"" value=""xxx"" /&gt;
    &lt;property name=""sessionDAO"" ref=""sessionDAO"" /&gt;
    &lt;property name=""sessionValidationSchedulerEnabled"" value=""false"" /&gt;
    &lt;property name=""sessionIdCookie.domain"" value=""xxx.com"" /&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""sessionMode"" value=""native"" /&gt;
    &lt;property name=""realms""&gt;
        &lt;list&gt;
            &lt;ref bean=""mainRealm"" /&gt;
            &lt;ref bean=""fbRealm"" /&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager"" /&gt;
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/login""/&gt;
    &lt;property name=""successUrl"" value=""/""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/signup""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /login = ssl, authc
            /logout = noSessionCreation, logout
            /** = noSessionCreation, anon
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p>So in the end, how should i login in a way that automatically creates the session and returns the session cookie to the browser ?</p>
","<shiro>","1","21722987"
"6859432","Spring AOP and apache shiro configuration.Annotations not been scanned","<p>I've been struggling with a configuration which requires a knowledge in AOP.  </p>

<p>i must admit that AOP is that part i'm trying to get for a while without success.
It seems that my shiro annotations are not scanned and thus are ignored.  </p>

<p>i've tried using shiro 1.1.0+ maven3+spring 3.0.5.RELEASE, hibernate 3.6.1.Final with ZK 5.0.6.
i got my hibernaterealm working , talking to database, i got the authentication working, i successfully(i believe) get the roles and permission loaded.  </p>

<p>so to test the authorization side i have somewhere in my code this :</p>

<pre><code>  Subject currentUser = SecurityUtils.getSubject();
   if (!currentUser.isPermitted(""businessaccount:list"")) {
    throw new AuthorizationException(""User not authorized"");
  }
</code></pre>

<p>and it works fine.<br>
So i know my permissions were loaded.i'll be convenient for me using annotations to i've put it in implementation class, because i didn't plan on using interface at first place with my controller classes which are extending ZK GenericForwardController.</p>

<p>i've seen this <a href=""https://issues.apache.org/jira/browse/SHIRO-185"" rel=""nofollow"">bug</a>  and i've decided to do a try with one interface with the @RequiresPersmissions on methods.</p>

<p>apparently it's still not working as in it's giving access to unauthorized subject.there is no error in my log.Maybe i'm doing something wrong here are snippet of the codes:</p>

<pre><code>@Component(""layouteventhandler"")
public class LayoutEventHandlerImpl extends GenericForwardComposer implements     LayoutEventHandler {

Logger logger = Logger.getLogger(LayoutEventHandlerImpl.class);
Menuitem logout;

//...


@Override
public void onClick$pAccounts() {
    try {
        execution.sendRedirect(""/accounts/personal/list"");
    } catch (Exception ex) {
        logger.info(""Error redirecting to personal accounts"", ex);
    }
}


@Override
public void onClick$bAccounts() {
  try {
        execution.sendRedirect(""/accounts/business/list"");
    } catch (Exception ex) {
        logger.info(""Error redirecting to business accounts"", ex);
    }
}
//.....
} 
</code></pre>

<p>its interface it :</p>

<pre><code>public interface LayoutEventHandler {

@RequiresPermissions(value=""personalaccount:list"")
public void onClick$pAccounts();

@RequiresPermissions(value=""businessaccount:list"")
public void onClick$bAccounts();
//.....

 }
</code></pre>

<p>here is my shiro applicationcontext  </p>

<pre><code>&lt;bean id=""hibernateRealm"" class=""com.personal.project.admin.webapp.security.DatabaseRealm"" /&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""hibernateRealm"" /&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
      depends-on=""lifecycleBeanPostProcessor""&gt;
 &lt;!--          &lt;property name=""proxyTargetClass"" value=""true"" /&gt;--&gt;
&lt;/bean&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;!-- Secure Spring remoting:  Ensure any Spring Remoting method invocations can be associated
     with a Subject for security checks. --&gt;
&lt;bean id=""secureRemoteInvocationExecutor"" class=""org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
&lt;!-- ... --&gt;
</code></pre>

<p>is it in there something that i should do? thanks for reading and helping out</p>
","<spring><spring-aop><shiro>","2",""
"7071902","Small differences in SHA1 hashes","<p>A project I am working on uses Apache Shiro as a security framework. Passwords are SHA1 hashed (no salt, no iterations). Login is SSL secured. However, the remaining part of the application is not SSL secured. In this context (no SSL) there should be a form where a user can change the password.
Since it wouldn't be a good idea to transmit it plainly it should be hashed on the client and then transmitted to the server. As the client is GWT (2.3) based, I am trying this library <a href=""http://code.google.com/p/gwt-crypto"" rel=""nofollow"">http://code.google.com/p/gwt-crypto</a>, which uses code from bouncycastle.
However, in many cases (not all) the hashes generated by both frameworks differ in 1-4(?) characters.
For instance ""happa3"" is hashed to</p>

<pre><code>""fe7f3cffd8a5f0512a5f1120f1369f48cd6f47c2""
</code></pre>

<p>by both implementations, whereas just ""happa"" is hashed to</p>

<pre><code>""fb3c3a741b4e07a87d9cb68f3db020d6fbfed00a""
</code></pre>

<p>by the Shiro implementation and to </p>

<pre><code>""fb3c3a741b4e07a87d9cb63f3db020d6fbfed00a""
</code></pre>

<p>by the gwt-crypto implementation (23rd character differs).
I wonder whether there is a ""correct""/standard SHA1 hashing and whether there is a bug in one of the libraries or maybe my usage of them is flawed.
One of my first thoughts was related to different encodings or strange conversions due to different transport mechanisms (RPC vs. Post). To my knowledge though (and what puzzles me most), SHA1 hashes should differ completely with a high probability if there is just a difference of a single bit. So different encodings shouldn't be the issue here.
I am using this code on the client (GWT) for hashing:</p>

<pre><code>String hashed = toHex(createSHA1Hash(""password""));
...
private String createSHA1Hash(String passwordString){
    SHA1Digest sha1 = new SHA1Digest();
    byte[] bytes;
    byte[] result = new byte[sha1.getDigestSize()];
    try {
        bytes = passwordString.getBytes();
        sha1.update(bytes, 0, bytes.length);
        int val = sha1.doFinal(result, 0);
    } catch (UnsupportedEncodingException e) {}
    return new String(result);
}

public String toHex(String arg) {
    return new BigInteger(1, arg.getBytes()).toString(16);
}
</code></pre>

<p>And this on the server (Shiro):</p>

<pre><code> String hashed = new Sha1Hash(""password"").toHex()
</code></pre>

<p>which afaics does something very similar behind the scenes (had a quick view on the source code).
Did I miss something obvious here?</p>

<p>EDIT: Seems like the GWT code does not run natively for some reason (i.e. just in development mode) and silently fails (it does compile, though). Have to find out why...</p>

<p>Edit(2): ""int val = sha1.doFinal(result, 0);"" is the line that makes trouble, i.e. if present, the whole code does not run natively (JS) but only in dev-mode (with wrong results)</p>
","<gwt><encoding><hash><sha><shiro>","3",""
"6842616","Can I use expressions in Apache Shiro security annotations?","<p>I've been doing some comparisons between Apache Shiro and Spring Security - I'm really loving the security model that Shiro uses and believe it to be far cleaner that Spring Security.</p>

<p>However, one big nice-to-have would be to be able to reference method parameters from within the method-level security annotations. For example, right now I could so something like:</p>

<pre><code>@RequiresPermissions(""account:send:*"")
public void sendEmail( EmailAccount account, String to, String subject, String message) { ... }
</code></pre>

<p>Within the context of this example, this means that the authenticated user must have the permission to send emails on email accounts.</p>

<p>However, this is not fine-grained enough, as I want instance level permissions! In this context, assume that users can have permissions on instances of email accounts. So, I'd like to write the previous code something like this:</p>

<pre><code>@RequiresPermissions(""account:send:${account.id}"")
public void sendEmail( EmailAccount account, String to, String subject, String message) { ... }
</code></pre>

<p>In this way, the permission string is referencing a parameter passed into the method such that the method can be secured against a particular instance of EmailAccount.</p>

<p>I know I could easily do this from plain Java code within the method, but it would be great to achieve the same thing using annotations - I know Spring Security supports Spring EL expressions in its annotations.</p>

<p>Is this definitely not a feature of Shiro and thus will I have to write my own custom annotations?</p>

<p>Thanks,</p>

<p>Andrew</p>
","<spring><security><annotations><shiro>","32",""
"13154114","Shiro Intermittent Subject.getPrincipal","<p>I've created a JavaEE6 project and currently I'm using Shiro for authentication and authorization. Using this article as a reference (<a href=""http://spring-java-ee.blogspot.com/2011/04/using-shiro-for-authorization-via-cdi.html"" rel=""nofollow"">Using Shiro for Authorization via CDI Interceptors then Easily Test with Arquillian</a>), I've integrated Shiro with CDI. Everything works fine except for sometimes Subject.getPrincipal is null.</p>

<p>Further, investigations shows that sometimes I have at least 2 Subject.getSession().getId().</p>

<p>How I encounter the problem:</p>

<ol>
<li>Login -> ok with sessionA</li>
<li>Click a link that is secured (pageA) -> ok</li>
<li>Tried to insert a record in the database that failed</li>
<li>Click the same secured link (pageA) -> failed, looking at the trace it produced a different session id sessionB</li>
<li>Refresh and refresh until page (pageA) is ok. Got the same session id during login sessionA.</li>
</ol>

<p>What could be wrong?</p>

<p>My shiro.ini file</p>

<pre><code>[main]
saltedJdbcRealm=com.sido.commons.web.security.shiro.JdbcRealmImpl

# any object property is automatically configurable in Shiro.ini file
saltedJdbcRealm.jndiDataSourceName=Portal 

# the realm should handle also authorization
saltedJdbcRealm.permissionsLookupEnabled=true

# If not filled, subclasses of JdbcRealm assume ""select password from users where username = ?""
# first result column is password, second result column is salt 
saltedJdbcRealm.authenticationQuery = SELECT password, salt FROM users WHERE username = ?

# If not filled, subclasses of JdbcRealm assume ""select role_name from user_roles where username = ?""
saltedJdbcRealm.userRolesQuery = SELECT name FROM roles a INNER JOIN user_roles b ON a.id=b.role_id INNER JOIN users c ON c.id=b.user_id WHERE c.username = ?

# If not filled, subclasses of JdbcRealm assume ""select permission from roles_permissions where role_name = ?""
saltedJdbcRealm.permissionsQuery = SELECT action FROM permissions WHERE role = ?

# password hashing specification, put something big for hasIterations
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
sha256Matcher.hashIterations=1
saltedJdbcRealm.credentialsMatcher = $sha256Matcher

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO 

cacheManager=org.apache.shiro.cache.ehcache.EhCacheManager 
cacheManager.cacheManagerConfigFile=classpath:shiro-ehcache.xml
securityManager.cacheManager=$cacheManager 

shiro.loginUrl = /login.xhtml

[urls]
/login.xhtml = authc
/logout = logout
</code></pre>

<p>web.xml</p>

<pre><code>&lt;context-param&gt;
    &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
    &lt;param-value&gt;Production&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;context-param&gt;
    &lt;param-name&gt;primefaces.THEME&lt;/param-name&gt;
    &lt;param-value&gt;south-street&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;!-- Welcome page --&gt;
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;home.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;!-- Map these files with JSF --&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.jsf&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.faces&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>SecurityProducer, a Singleton bean where I instantiate the security manager. It should be available and unique to the entire application right?</p>

<pre><code>@Singleton
public class SecurityProducer {
    @Inject
    private Logger log;
    private SecurityManager securityManager;

    @PostConstruct
    public void init() {
        final String iniFile = ""classpath:shiro.ini"";
        log.debug(""Initializing Shiro INI SecurityManager using "" + iniFile);
        securityManager = new IniSecurityManagerFactory(iniFile).getInstance();
        SecurityUtils.setSecurityManager(securityManager);
    }
    ..
}
</code></pre>

<p>Binding the SecurityManager nor Subject on initialization (Singleton bean) doesn't fixed the problem.</p>

<pre><code>final String iniFile = ""classpath:shiro.ini"";
securityManager = new IniSecurityManagerFactory(iniFile).getInstance();
SecurityUtils.setSecurityManager(securityManager);
ThreadContext.bind(SecurityUtils.getSubject()); or ThreadContext.bind(securityManager);
</code></pre>

<p>Thanks,
<br />czetsuya</p>
","<java-ee-6><shiro>","3","13188770"
"19839556","SpringMVC, Shiro, and Java Configuration","<p>I am trying to use Shiro 1.2.2 with my SpringMVC 3.2.3   I have seen several examples of how to configure Shiro using ini files.  But we are using JavaConfig and I have only found one partial example on that.  I have several @Configuration files:</p>

<pre><code>public class EdmWebInitializer implements WebApplicationInitializer {

    private static final String DISPATCHER_SERVLET_NAME = ""dispatcher"";
    private static final String DISPATCHER_SERVLET_MAPPING = ""/*"";

    @Override
    public void onStartup(ServletContext servletContext) throws ServletException {
        AnnotationConfigWebApplicationContext root = new AnnotationConfigWebApplicationContext();
    root.scan( ""com.company.config"" );
    root.register( EdmConfiguration.class, SecurityConfig.class );
    servletContext.addListener( new ContextLoaderListener( root ) );

    ServletRegistration.Dynamic appServlet = servletContext.addServlet( DISPATCHER_SERVLET_NAME,
            new DispatcherServlet( root ) );
    appServlet.setLoadOnStartup( 1 );

    Set&lt;String&gt; mappingConflicts = appServlet.addMapping( DISPATCHER_SERVLET_MAPPING );
    servletContext
            .addFilter( ""shiroFilter"", new DelegatingFilterProxy( ""shiroFilter"", root ) )
            .addMappingForUrlPatterns( null, false, DISPATCHER_SERVLET_MAPPING );

    servletContext.addFilter( ""Spring OpenEntityManagerInViewFilter"",
            org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.class ).addMappingForUrlPatterns(
            null, false, ""/*"" );
</code></pre>

<p>My beans are defined here:</p>

<pre><code>@Configuration
@EnableWebMvc
@ComponentScan(basePackages = { ""com.company.service"", ""com.company.utility"",
        ""com.company.controller"", ""com.company.utility.startup"",
        ""com.company.security"", ""com.company.security.model"" })
@EnableTransactionManagement
@ImportResource({ ""classpath:applicationContext.xml""})
@PropertySource({ ""classpath:application.properties"", ""classpath:mail.properties"" })
public class EdmConfiguration extends WebMvcConfigurationSupport {


    @Resource
    private Environment environment;

    @Autowired
    private org.apache.shiro.web.mgt.WebSecurityManager securityManager;

    @Bean
    public DataSource dataSource() {
        BoneCPDataSource dataSource = new BoneCPDataSource();

    ...
        return dataSource;
    }

    @Bean
    public JpaTransactionManager transactionManager() throws ClassNotFoundException {
        JpaTransactionManager transactionManager = new JpaTransactionManager();

        transactionManager.setEntityManagerFactory( entityManagerFactoryBean().getObject() );

        return transactionManager;
    }

    @Bean
    public DelegatingFilterProxy springSecurityFilterChain() {
        return new DelegatingFilterProxy();
    }

    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() throws ClassNotFoundException {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();

        entityManagerFactoryBean.setDataSource( dataSource() );
        entityManagerFactoryBean.setPackagesToScan( environment
                .getRequiredProperty( PROPERTY_NAME_ENTITYMANAGER_PACKAGES_TO_SCAN ) );
        entityManagerFactoryBean.setPersistenceProviderClass( HibernatePersistence.class );

        Properties jpaProperties = new Properties();
        ...
        entityManagerFactoryBean.setJpaProperties( jpaProperties );

        return entityManagerFactoryBean;
    }

    @Bean
    public PersistenceExceptionTranslator exTranslator() {
        return new HibernateExceptionTranslator();
    }

    @Bean(initMethod = ""init"")
    public StartupListener startupListener() {
        return new StartupListener();
    }




    @Bean
    public ContentNegotiationManagerFactoryBean contentNegotiationManager() {
        Properties properties = new Properties();
        properties.setProperty( ""xml"", ""application/xml"" );
        properties.setProperty( ""json"", ""application/json"" );
        properties.setProperty( ""html"", ""application/html"" );

        ContentNegotiationManagerFactoryBean contentNegotiationManager = new ContentNegotiationManagerFactoryBean();
        contentNegotiationManager.setFavorParameter( true );
        contentNegotiationManager.setMediaTypes( properties );
        contentNegotiationManager.setDefaultContentType( MediaType.APPLICATION_JSON );

        return contentNegotiationManager;
    }



    @Bean
    public JavaMailSenderImpl mailSender() {
        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
        int port = Integer.parseInt( environment.getRequiredProperty( ""mail.smtp.socketFactory.port"" ) );
        mailSender.setHost( environment.getRequiredProperty( ""mail.smtp.host"" ) );
        mailSender.setPort( port );
        mailSender.setUsername( environment.getRequiredProperty( ""mail.login.username"" ) );
        mailSender.setPassword( environment.getRequiredProperty( ""mail.login.password"" ) );

        Properties properties = new Properties();
        properties.setProperty( ""mail.smtp.auth"", environment.getRequiredProperty( ""mail.smtp.auth"" ) );
        properties.setProperty( ""mail.smtp.starttls.enable"", ""true"" );
        mailSender.setJavaMailProperties( properties );

        return mailSender;
    }


    @Bean
    public VelocityEngine getVelocityEngine() throws VelocityException, IOException {
        VelocityEngineFactory factory = new VelocityEngineFactory();
        Properties props = new Properties();
        props.put( ""resource.loader"", ""class"" );
        props.put( ""class.resource.loader.class"", ""org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader"" );
        factory.setVelocityProperties( props );
        factory.setResourceLoaderPath( ""/com/edelweissco/dental/templates"" );
        factory.setPreferFileSystemAccess( false );
        return factory.createVelocityEngine();
    }

    @Bean
    public StandardPasswordEncoder encoder() {
        return new org.springframework.security.crypto.password.StandardPasswordEncoder();
    }

    @Bean
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean shiroFilter = new org.apache.shiro.spring.web.ShiroFilterFactoryBean();
        shiroFilter.setSecurityManager( securityManager);
        return shiroFilter;
    }

    @Bean
    @DependsOn(value = ""lifecycleBeanPostProcessor"")
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        DefaultAdvisorAutoProxyCreator creator = new DefaultAdvisorAutoProxyCreator();
        creator.setProxyTargetClass(true); // it's false by default
        return creator;
    }
</code></pre>

<p>I have broken the Shiro configuraton into its own file:</p>

<pre><code>    @Configuration
public class SecurityConfig {

    @Bean
    public CustomSecurityRealm customSecurityRealm() {
        return new CustomSecurityRealm();
    }

    @Bean
    public SaltAwareJdbcRealm saltAwareJdbcRealm() {
        return new SaltAwareJdbcRealm();
    }

    @Bean
    public org.apache.shiro.authc.credential.DefaultPasswordService passwordService() {
        return new DefaultPasswordService();
    }

    @Bean
    public TempFixPasswordMatcher passwordMatcher() {
        TempFixPasswordMatcher tempFixPasswordMatcher = new TempFixPasswordMatcher();
        tempFixPasswordMatcher.setPasswordService( passwordService() );
        return tempFixPasswordMatcher;
    }


    @Bean
    public WebSecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm( saltAwareJdbcRealm() );
        return securityManager;
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    public MethodInvokingFactoryBean methodInvokingFactoryBean() {
        MethodInvokingFactoryBean methodInvokingFactoryBean = new MethodInvokingFactoryBean();
        methodInvokingFactoryBean.setStaticMethod( ""org.apache.shiro.SecurityUtils.setSecurityManager"" );
        methodInvokingFactoryBean.setArguments( new Object[]{ securityManager() } );
        return methodInvokingFactoryBean;
    }

    @Bean
    @DependsOn(value = ""lifecycleBeanPostProcessor"")
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        return new DefaultAdvisorAutoProxyCreator();
    }

    @Bean
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();
        authorizationAttributeSourceAdvisor.setSecurityManager( securityManager() );
        return authorizationAttributeSourceAdvisor;
    }
</code></pre>

<p>When I try to deploy I get exceptions such as :</p>

<p>This is the full stack trace I get once I remove the @Transaction from my OfficeService:</p>

<pre><code>org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'menuService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'menuRepository': Post-processing of the FactoryBean's object failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy68]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy68
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1116)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:389)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:294)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4937)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)
    at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1551)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:835)
    at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:771)
    at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:622)
    at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:569)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:835)
    at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:771)
    at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1455)
    at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:75)
    at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1296)
    at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1388)
    at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:819)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:303)
    at sun.rmi.transport.Transport$1.run(Transport.java:159)
    at java.security.AccessController.doPrivileged(Native Method)
    at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
    at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
    at java.lang.Thread.run(Thread.java:680)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'menuRepository': Post-processing of the FactoryBean's object failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy68]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy68
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:165)
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1454)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:550)
    at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:150)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
    at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
    ... 55 more
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy68]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy68
    at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:217)
    at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:111)
    at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:477)
    at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
    at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:409)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1625)
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:162)
    ... 65 more
Caused by: java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy68
    at org.springframework.cglib.proxy.Enhancer.generateClass(Enhancer.java:446)
    at org.springframework.cglib.transform.TransformingClassGenerator.generateClass(TransformingClassGenerator.java:33)
    at org.springframework.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)
    at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)
    at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:377)
    at org.springframework.cglib.proxy.Enhancer.create(Enhancer.java:285)
    at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
    ... 72 more
Nov 9, 2013 4:10:04 PM org.apache.catalina.core.ApplicationContext log
INFO: Closing Spring root WebApplicationContext
</code></pre>
","<spring-mvc><shiro>","0",""
"8056869","Not able to get proper results using Apache Shiro configuration","<p>I am trying to use apache shiro into my project as I have to create a role based mechanism into my project. I created a demo project with following configurations...</p>

<p>I created following files into my project - </p>

<p><strong>index.jsp</strong></p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
pageEncoding=""ISO-8859-1""%&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
&lt;title&gt;Shiro Web Test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;This is a test for Shiro Web Framework&lt;/h1&gt;

&lt;a href = ""success.jsp""&gt;Click Here!&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>login.jsp</strong></p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
pageEncoding=""ISO-8859-1""%&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
&lt;title&gt;Shiro Web Test : Login Page&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;%! String errorMessage = null; %&gt;
&lt;% 
errorMessage = (String) request.getAttribute(""shiroLoginFailure"");
if (errorMessage != null) { %&gt;
&lt;font color=""red""&gt;Invalid Login: ${errorMessage}&lt;/font&gt;&lt;br/&gt;
&lt;font color=""black""&gt;&lt;h3&gt;Enter login information...&lt;/h3&gt;&lt;/font&gt;
&lt;% } else { %&gt;
&lt;font color=""black""&gt;&lt;h3&gt;Enter login information...&lt;/h3&gt;&lt;/font&gt;
&lt;% } %&gt;

&lt;form action=""loginTest.do"" method=""POST""&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;Username:&lt;/td&gt;
&lt;td&gt;&lt;input type=""text"" name=""username"" placeholder=""username"" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Password:&lt;/td&gt;
&lt;td&gt;&lt;input type=""password"" name=""password"" placeholder=""password"" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;input type=""checkbox"" value=""true"" name=""rememberMe"" /&gt;Remember Me?&lt;br /&gt;
&lt;input type=""submit"" value=""Sign In"" /&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>success.jsp</strong><br/>
<strong>denied.jsp</strong><br/>
<strong>logout.jsp</strong><br/>
<strong>showUser.jsp</strong></p>

<p>My <strong>shiro.ini</strong> configuration is as follows - </p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]
authc = org.apache.shiro.web.filter.authc.FormAuthenticationFilter
roles = org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
authc.loginUrl = /login.jsp
authc.failureKeyAttribute = shiroLoginFailure
roles.unauthorizedUrl = /denied.jsp

[users]
admin = password, ROLE_ADMIN
member = password, ROLE_MEMBER

[roles]
ROLE_ADMIN = *

[urls]
/success.jsp = authc, roles[ROLE_MEMBER]
/secret.jsp = roles[ROLE_ADMIN]
</code></pre>

<p>I am using a servlet <strong>LoginTestServlet.java</strong> to dispatch to <strong>login.jsp</strong> page or <strong>success.jsp</strong> after authentication is successful/unsuccessful - </p>

<pre><code>public class LoginTestServlet extends HttpServlet {
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        generateResponse(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        generateResponse(request, response);
    }

    protected void generateResponse(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
        UserCredentials user = new UserCredentials();
        user.setUserName(request.getParameter(""username""));
        user.setPassword(request.getParameter(""password""));

        if (user.getUserName() != null &amp;&amp; user.getPassword() != null) {
            Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
            SecurityManager securityManager = factory.getInstance();
            SecurityUtils.setSecurityManager(securityManager);
            Subject currentUser = SecurityUtils.getSubject();

            UsernamePasswordToken token = new UsernamePasswordToken(user.getUserName(), user.getPassword());

            try {
                currentUser.login(token);
                Session session = currentUser.getSession();
                session.setAttribute(""user"", user.getUserName());
            } catch (UnknownAccountException uae) {
                request.setAttribute(""shiroLoginFailure"", uae.getMessage());
                System.err.println(""Exception type: "" + uae.getClass().getName());
                System.err.println(""Error due to: "" + uae.getMessage());
            } catch (IncorrectCredentialsException iae) {
                request.setAttribute(""shiroLoginFailure"", iae.getMessage());
                System.err.println(""Exception type: "" + iae.getClass().getName());
                System.err.println(""Error due to: "" + iae.getMessage());
            } catch (LockedAccountException lae) {
                request.setAttribute(""shiroLoginFailure"", lae.getMessage());
                System.err.println(""Exception type: "" + lae.getClass().getName());
                System.err.println(""Error due to: "" + lae.getMessage());
            } catch (AuthenticationException ae) {
                request.setAttribute(""shiroLoginFailure"", ae.getMessage());
                System.err.println(""Exception type: "" + ae.getClass().getName());
                System.err.println(""Error due to: "" + ae.getMessage());
            } catch (Exception e) {
                request.setAttribute(""shiroLoginFailure"", e.getMessage());
                System.err.println(""Exception type: "" + e.getClass().getName());
                System.err.println(""Error due to: "" + e.getMessage());
            }

            RequestDispatcher view = null;

            if (currentUser.isAuthenticated() &amp;&amp; currentUser.hasRole(""ROLE_MEMBER"")) {
                view = request.getRequestDispatcher(""success.jsp"");
                view.forward(request, response);
            } else if (currentUser.isAuthenticated() &amp;&amp; currentUser.hasRole(""ROLE_ADMIN"")) {
                view = request.getRequestDispatcher(""secret.jsp"");
                view.forward(request, response);
            } else {
                view = request.getRequestDispatcher(""login.jsp"");
                view.forward(request, response);
            }
        }
    }//end of generateResponse()

}//end of class
</code></pre>

<p>I am using TOMCAT 6.0.</p>

<p>My problem is - </p>

<ol>
<li>Whenever I am trying to enter credentials at <strong>login.jsp</strong> page, its automatically taking me to the respective page for the credentials I enter. Ex., if I try to enter ROLE_MEMBER credentials after clicking for <strong>success.jsp</strong>, its taking me to <strong>success.jsp</strong> page. But if I try to enter ROLE_ADMIN after clicking for same <strong>success.jsp</strong>, its automatically taking me to <strong>secret.jsp</strong> as per the servlet code written instead of going to <strong>denied.jsp</strong>.</li>
<li>How to make a generic code without writing a separate servlet for each resource to show login success or denied page?</li>
</ol>

<p>Also, is there any way to create custom permissions in shiro for every resource? If yes, then how. If there is any link to this, I would be grateful to you.</p>

<p>Thanks all.</p>
","<java><apache><shiro><security-roles>","0","8057545"
"26223179","Table schema for Shiro JdbcRealm Authorization?","<p>I would like my app to use <a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a> for both authentication and authorization. I would like to start simple and have a relational database be the data source for both of these. This means I need to use the <a href=""https://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/realm/jdbc/JdbcRealm.html"" rel=""nofollow"">JdbcRealm</a>.</p>

<p>After reading the docs, it is not clear to me what table schema is required for any ""user tables"", including any tables that link users to their permissions/roles.</p>

<p>So I ask: <strong>using Shiro's <code>JdbcRealm</code>, how/where do I link user's to their respective permissions/roles?</strong></p>

<p>It can't be in the <code>shiro.ini</code> file because that is a static config file and wouldn't be feasible for connecting to a JDBC data source where users info is stored.</p>
","<java><authorization><shiro><jdbcrealm>","4","26223486"
"2095979","Problem authenticating with shiro in grails app","<p>I have a grails 1.2 app and I want to use declarative security in order to restrict accesses based on roles. I decided to try shiro, installed the plugin, but when I try to authenticate, the message <em>""Invalid username and/or password""</em> shows up in the header. I check the db entry and the user is there with the sha'ed password. No messages are shown neither in the console nor in the stacktrace file. I added <em>""warn 'org.jsecurity'""</em> to Config.groovy with no results. Any hints/tricks to troubleshoot this ?</p>
","<grails><shiro>","0","3435854"
"16609382","convert java webapp to use SAML2 authentication","<p>I'm having some problems trying to understand how to accomplish this task:</p>

<p>1) existing simple webapp with database authentication. (simple custom code)</p>

<p>2) convert simple webapp to use SAML2 authentication to an external IDP (such as google apps(?))</p>

<p>I believe the terms are to turn my webapp into a service provider (SP) for SAML2, register my SP with the IDP.</p>

<p>But I'm stuck on the very beginning, I was hoping to include apache shiro, or spring security, or picketlink with some stock configuration (say to google apps IDP) to at least get started, but I'm not seeing anything like that.</p>

<p>(it doesn't have to be google apps, just the only public IDP that is SAML2 that I'm aware of, other examples of free online IDP that use SAML2 that can be registered for dev/testing would be great (I do not <em>want to setup</em>/stuck spending all my time seeting up an IDP until I can confirm the apps can be ready))</p>

<p>Please help!</p>
","<spring-security><single-sign-on><shiro><saml-2.0>","2",""
"22770980","Jsessionid cookie doesn't expire after Chrome closing","<p>I use Shiro framework for authentication.</p>

<p>The problem is: when I close Chrome browser and open it again I still can get access to protected URLs. If I delete <strong>jsessionid</strong> cookie by hand all is ok, access to protected URLs becomes forbidden. In the settings of jsessionid I see: <strong>Expires: When the browsing session ends</strong>. So, it should be expired, but it doesn't. Also I did this manipulation in firefox and have no that problems. I have no idea even which way investigate for.</p>

<p>P.S. I don't use shiro remember-me functionality. But, any way, while using, Shiro create another cookie (that named rememberMe).</p>
","<java><security><cookies><shiro><jsessionid>","1","22776628"
"9291595","Combinining shiro:hasPermission tags","<p>I am using the tag</p>

<pre>
&lt;shiro:hasPermission name=""content:view""&gt;
</pre>

<p>in various places in my JSPs to show or hide content depending on the permissions the current user has.</p>

<p>However, sometimes I need to combine permissions, for instance</p>

<pre>
&lt;shiro:hasPermission name=""content:view OR content:edit""&gt;
</pre>

<p>or</p>

<pre>
&lt;shiro:hasPermission name=""content:view AND content:edit""&gt;
</pre>

<p>How could I do this ? Can I use hasPermission in 
    &lt;c:if&gt;
tags ? Does shiro has something available for this or should I implement my own EL functions ?</p>

<p>TIA,</p>

<p>Serafeim</p>
","<java><jsp><el><shiro>","3","16894746"
"19320159","how to redirect user to his personal page after login using apache shiro","<p>I want to redirect user after login to his personal page ? .
I have 3 users for e.g</p>

<ol>
<li>admin have access to all pages </li>
<li>student have access to pages under student directory</li>
<li>teacher have access to pages under teacher directory</li>
</ol>

<p>how to do this? </p>

<p>Any help or idea ?</p>

<p><strong>Update</strong>
here is my shiro.ini</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.requiredType   = javax.sql.DataSource
ds.resourceName = jdbc/myDataSource
ds.resourceRef = true
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm 

# password hashing specification
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
jdbcRealm.credentialsMatcher = $sha256Matcher

jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ? 
jdbcRealm.userRolesQuery = SELECT role_name FROM user_roles WHERE username = ? 
jdbcRealm.permissionsQuery = SELECT roleper FROM roles_permissions WHERE role_name = ? 

jdbcRealm.dataSource = $ds
authc = com.java.MyFilter
jdbcRealm.authorizationCachingEnabled = false

# specify login page 
authc.loginUrl = /login.jsp 

# redirect after successful login
authc.successUrl = /home.jsp

# roles filter: redirect to error page if user does not have access rights
roles.unauthorizedUrl = /accessdenied.jsp


# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
authc.failureKeyAttribute = simpleShiroApplicationLoginFailure


[urls] 


/login.jsp = authc

# only users with some roles are allowed to use role-specific pages 
/admin/** = authc,roles[admin]
/stu/** = authc,roles[student]
/teach/** = authc,roles[teacher]


# enable authc filter for all application pages
/ApacheShiroDemo/** = authc
</code></pre>
","<java><shiro>","2",""
"14794926","How configure threashold for Apache Shiro Excessive Failed Login Attempts?","<p>Apache Shiro documentation implies some desired capabilities for trapping successive failed login attempts (among others) however, I cannot find concrete documentation for this.  Presently I can execute currentUser.login(token); with invalid pw infinite times and does not trap and throw this error.  I am struggling to find where this is implemented in source.  </p>

<p>Is this actually working? Is the threshold configured in shiro.ini?  Can anyone point me to the documentation for this (or confirm that it doesn't exist)?  </p>

<p>Thanks</p>

<p>Environment Details: Shiro core 1.2.1 and jdbc realm</p>

<p>Begin Documentation
Step 3: Handling Success or Failure
If the login method returns quietly, that's it - we're done! The Subject has been authenticated. The application thread can continue uninterrupted and all further calls to SecurityUtils.getSubject() will return the authenticated Subject instance, and any calls to subject.isAuthenticated() will return true.</p>

<p>But what happens if the login attempt failed? For example, what if the end-user supplied an incorrect password, or accessed the system too many times and maybe their account is locked?</p>

<p>Shiro has a rich runtime AuthenticationException hierarchy that can indicate exactly why the attempt failed. You can wrap login in a try/catch block and catch any exception you wish and react to them accordingly. For example:</p>

<pre><code>try {
    currentUser.login(token);
} catch ( UnknownAccountException uae ) { ...
} catch ( IncorrectCredentialsException ice ) { ...
} catch ( LockedAccountException lae ) { ...
} catch ( **ExcessiveAttemptsException** eae ) { ...
} ... catch your own ...
} catch ( AuthenticationException ae ) {
    //unexpected error?
}

//No problems, continue on as expected...
</code></pre>

<p>If one of the existing exception classes do not meet your needs, custom AuthenticationExceptions can be created to represent specific failure scenarios
//No problems, continue on as expected...
End Documentaion</p>
","<shiro>","4","14820950"
"20526919","Securing RESTful web service using Apache Shiro","<p>I am currently in the process of building RESTful web services using Jersey framework as a backend (for an Ipad\Iphone application) using Java, at the POINT I was trying to figure out a security( Authentication and Authorization) implementation of my the API, I came across Basic, digest and Oauth but at the point as my APIs are still not fully developed so I think Oauth seems to be a bit of an overkill to me...</p>

<p>My question is though Apache Shiro looks easy to grasp and start with is something that can usedfor securing RESTful web services like in the long run as my APIs logic grows?</p>
","<apache><security><rest><jersey><shiro>","1","20527454"
"32800313","Not able to pull from Mongo db using Morphia - No usable constructor","<p>So i'm trying to save the password in sha265 into mongo db and use <code>Apache Shiro</code> framework in order to authorize the user login, while trying to pull from the DB i'm getting morphia run time exception, here is the code :</p>

<p>User class:</p>

<pre><code>public class User implements Serializable{

        @Id 
        private ObjectId id; 
        private String name; 
        private String password;
        private SimpleByteSource passwordSalt;

        @Embedded 
        private TenantId tenantId; 
        private Set&lt;String&gt; roles = new HashSet&lt;&gt;();



        @Override
        public String toString() {
            return ""User [id="" + id + "", name="" + name + "", password=""
                    + password + "", passwordSalt="" + passwordSalt
                    + "", tenantId="" + tenantId + "", roles="" + roles + ""]"";
        }
        public SimpleByteSource getPasswordSalt() {
            return passwordSalt;
        }
        public void setPasswordSalt(SimpleByteSource passwordSalt) {
            this.passwordSalt = passwordSalt;
        }
        public ObjectId getId() {
            return id;
        }
        public void setId(ObjectId id) {
            this.id = id;
        }
        public String getName() {
            return name;
        }
        public void setName(String name) {
            this.name = name;
        }
        public String getPassword() {
            return password;
        }
        public void setPassword(String password) {
            this.password = password;
        }
        public TenantId getTenantId() {
            return tenantId;
        }
        public void setTenantId(TenantId tenantId) {
            this.tenantId = tenantId;
        }
        public Set&lt;String&gt; getRoles() {
            return roles;
        }
        public void setRoles(Set&lt;String&gt; roles) {
            this.roles = roles;
        } 

}
</code></pre>

<p>test class:</p>

<pre><code>public static void main(String[] args) {
        MongoClient m_mongoClient = new MongoClient(""127.0.0.1"",27017);
        Morphia  m_morphiaMongoDB = new Morphia();
        Datastore ds = m_morphiaMongoDB.createDatastore(m_mongoClient, ""test"");

        RandomNumberGenerator rng = new SecureRandomNumberGenerator();
        SimpleByteSource salt = (SimpleByteSource) rng.nextBytes();
        String hashedPasswordBase64 = new Sha256Hash(""1234"", salt, 1024).toBase64();
        User temp = new User();

        temp.setName(""Myname"");
        //temp.setPassword(""1234"");
        temp.setPassword(hashedPasswordBase64);
        temp.setPasswordSalt(salt);

        ds.save(temp);

        User user = ds.find(User.class).field(""name"").equal(""Myname"").get();
        System.out.println(user);

    }
</code></pre>

<p>I'm using <code>Shiro</code> and Morphia, this is what i'm getting:</p>

<pre><code>Exception in thread ""main"" java.lang.RuntimeException: org.mongodb.morphia.mapping.MappingException: No usable constructor for org.apache.shiro.util.SimpleByteSource
    at org.mongodb.morphia.mapping.EmbeddedMapper.fromDBObject(EmbeddedMapper.java:171)
    at org.mongodb.morphia.mapping.Mapper.readMappedField(Mapper.java:617)
    at org.mongodb.morphia.mapping.Mapper.fromDb(Mapper.java:592)
    at org.mongodb.morphia.mapping.Mapper.fromDBObject(Mapper.java:306)
    at org.mongodb.morphia.query.MorphiaIterator.convertItem(MorphiaIterator.java:79)
    at org.mongodb.morphia.query.MorphiaIterator.processItem(MorphiaIterator.java:65)
    at org.mongodb.morphia.query.MorphiaIterator.next(MorphiaIterator.java:60)
    at org.mongodb.morphia.query.QueryImpl.get(QueryImpl.java:421)
    at com.roi.shiro.realm.temp.main(temp.java:31)
Caused by: org.mongodb.morphia.mapping.MappingException: No usable constructor for org.apache.shiro.util.SimpleByteSource
    at org.mongodb.morphia.mapping.DefaultCreator.getNoArgsConstructor(DefaultCreator.java:140)
    at org.mongodb.morphia.mapping.DefaultCreator.createInst(DefaultCreator.java:109)
    at org.mongodb.morphia.mapping.DefaultCreator.createInstance(DefaultCreator.java:27)
    at org.mongodb.morphia.mapping.DefaultCreator.createInstance(DefaultCreator.java:35)
    at org.mongodb.morphia.mapping.DefaultCreator.createInstance(DefaultCreator.java:45)
    at org.mongodb.morphia.mapping.EmbeddedMapper.fromDBObject(EmbeddedMapper.java:161)
    ... 8 more
Caused by: java.lang.NoSuchMethodException: org.apache.shiro.util.SimpleByteSource.&lt;init&gt;()
    at java.lang.Class.getConstructor0(Class.java:3074)
    at java.lang.Class.getDeclaredConstructor(Class.java:2170)
    at org.mongodb.morphia.mapping.DefaultCreator.getNoArgsConstructor(DefaultCreator.java:136)
    ... 13 more
</code></pre>

<p>SimpleByteSource has the following constructor:</p>

<pre><code> public SimpleByteSource(byte[] bytes) {
        this.bytes = bytes;
    } 
</code></pre>

<p>any idea? </p>
","<java><mongodb><shiro><morphia>","3","32801819"
"20626520","How to configure Shiro with Shiro.ini when using Spring's Java Configuration?","<p>I am using Apache Shiro with Spring and using Spring's Java config only. (no xml).
Below is a portion of my config class: </p>

<pre><code>@Configuration
public class AppConfig {

@Bean
public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
    return new LifecycleBeanPostProcessor();
}

@Bean
public ShiroFilterFactoryBean shiroFilter(DefaultWebSecurityManager securityManager) {
    ShiroFilterFactoryBean factoryBean = new ShiroFilterFactoryBean();
    factoryBean.setSecurityManager(securityManager);

    String shiroIniContents = readFile(new ClassPathResource(""shiro.ini"").getFile().toPath());
    factoryBean.setFilterChainDefinitions(shiroIniContents);//only reads the [urls] section

    factoryBean.setLoginUrl(""/rest/login"");

    return factoryBean;
}


@Bean
public DefaultWebSecurityManager securityManager()  {
    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
    securityManager.setRealm(stormpathRealm());
    return securityManager;
}
}
</code></pre>

<p>As you can see, I am trying to load <code>shiro.ini</code> by passing it to <code>ShiroFilterFactoryBean.setFilterChainDefinitions()</code>. </p>

<p>But that method only loads the contents of the <code>[urls]</code> section. So anything in the <code>[main]</code> section is left untouched.</p>

<p>So then, how/where do I configure shiro using the full contents of shiro.ini?</p>
","<java><spring><security><shiro><spring-java-config>","2","20626615"
"11835687","Securing EJBs with Apache Shiro possible?","<p>I want to know if I can use Apache Shiro to secure the business tier of an (container managed) Java EE application. I'm asking because I haven't found any examples but only statements like ""it works in web, EJB, and IoC environments"".</p>

<p>Apache Shiro, in comparison with the default Java role-based access control, seams to have more extensive ways to authorize users (e.g. permission strings), which I hope one can use as a replacement to secure the methods of session beans in an annotation based manner.</p>

<p>Is this possible and has anyone tried it? Are there restrictions?  An example or tutorial would be nice, too.</p>
","<authorization><ejb-3.0><shiro>","3","12091474"
"17932156","How to get current user name in jsf page with shiro?","<p>i am using shiro for security management in my jsf application and i was wondering how to get the current user name in jsf page, please advise.</p>

<p>i tried <code>&lt;shiro:principal/&gt;</code> but it always returns empty string although user is logged in.</p>
","<jsf-2><shiro>","0","17932308"
"6019331","Best practices for entitlement using spring security and/or shiro","<p>I'm interested in opinions on the best way to handle the concept of ""entitlement"" using either Spring Security or Shiro.</p>

<p>For example, imagine, say, a JAX-RS endpoint that has a signature like this:</p>

<pre><code>AccountDetails getAccountDetails(String accountId);
</code></pre>

<p>Using Spring Security, I might annotate an implementation like:</p>

<pre><code>@Secured(AUTHORIZED_USER)
public AccountDetails getAccountDetails(String accountId) { ... }
</code></pre>

<p>or using Shiro,</p>

<pre><code>@RequiresAuthentication
public AccountDetails getAccountDetails(String accountId) { ... }
</code></pre>

<p>What I am looking for, however, is some recommendations on ""best practices"" for how to ensure that the user has permission to access the particular account id (which I think is called ""entitlement management"").</p>

<p>I could imagine a couple of different approaches:</p>

<pre><code>@Secured(AUTHORIZED_USER)
@AccountEntitled
public AccountDetails getAccountDetails(@Account String accountId) { ... }
</code></pre>

<p>(which strikes me as not completely straightforward using Spring Security, but I'd love to be wrong).</p>

<p>Or, I could imagine introducing an <code>AccountId</code> domain object, and a factory which will only succeed in turning a <code>String</code> into an <code>AccountId</code> if the principle held by the current security context allows that users to see that account. But that starts to get a bit messy.</p>

<p>On the whole, I don't want to invent new concepts here; this seems like bread &amp; butter stuff, but I've not had much luck finding credible recommendations around best practices here.</p>

<p>Thanks for any suggestions.</p>
","<java><spring-security><shiro>","2","17222815"
"2240122","Security in Grails-app: Acegi or Shiro","<p>i'm developing a Grails based web-application and i need to choose one of these two frameworks for <strong>authentication</strong>. In your opinion, what criterions favor the choice for Acegi and what criterions favor the choice for Apache Shiro? </p>
","<authentication><grails><spring-security><shiro>","3","2243362"
"21891877","Returning a login error message using Shiro","<p>Filters and redirects are not my strong point.</p>

<p>I have Shiro set up and working in Spring except that I'd like to return an error message on an invalid login while staying of the same page. So I'm causing a invalid login. I've got ShiroFilterFactoryBean set with a property that should send it to /ldapLoginErr which then I map to login.jsp and then process in a error function in my Controller. But I'm getting a 404 and the url is pointing to my base url instead /ldapLoginErr or /ldapLogin.</p>

<pre><code>   class=""org.springframework.web.servlet.view.InternalResourceViewResolver""&gt;
    &lt;property name=""prefix"" value=""/WEB-INF/jsp/"" /&gt;
    &lt;property name=""suffix"" value="".jsp"" /&gt;
&lt;/bean&gt;

&lt;mvc:view-controller path=""/ldapLogin"" view-name=""ldapLogin"" /&gt; 
&lt;mvc:view-controller path=""/ldapLoginSuccess"" view-name=""ldapLogin"" /&gt; 
&lt;mvc:view-controller path=""/ldapLoginErr"" view-name=""ldapLogin"" /&gt; 


          &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""successUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            [urls]
            /** = ssl[8443],authc, customAuthFilter
            [main]
            /logout = logout
        &lt;/value&gt;
    &lt;/property&gt;   
&lt;/bean&gt;


      @RequestMapping(value = ""/ldapLogin"", method = RequestMethod.GET)
public ModelAndView login(Model model, HttpSession session){
    logger.debug(""start login controller function"");

    ModelAndView mav = new ModelAndView();
    return mav;  
}

@RequestMapping(value = ""/ldapLoginErr"", method = RequestMethod.GET)
public ModelAndView loginErr(Model model, HttpSession session){
        ModelAndView mav = new ModelAndView();
    mav.addObject(""errorMessage"", msgSrc.getMessage(""auth.notauth"", null, null, null));

    return mav;  
}

@RequestMapping(value = ""/ldapLoginSuccess"", method = RequestMethod.GET)
public ModelAndView loginSuccess(Model model, HttpSession session){

  }


  The following didn't work either:

      &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/ldapLoginErr""/&gt;
    &lt;property name=""successUrl"" value=""/ldapLoginSuccess""/&gt;
</code></pre>

<p>Thanks for any help</p>
","<spring-mvc><shiro>","1","22542226"
"7169461","Grails - ShiroSecurity - manually login user","<p>I am trying to do relatively simple thing: log in user manually. I am using FacebookGraph plugin to connect to facebook. If user logs in via Facebook, i get his ID and I want to authenticate him in ShiroSecurity. Of course such trivial thing like</p>

<pre><code>session.user = user
</code></pre>

<p>does not work.
I have found the code in the wiki, which should do the trick:</p>

<pre><code>Object userIdentity = user.email
String realmName = ""username"";
PrincipalCollection principals = new SimplePrincipalCollection(userIdentity, realmName);
Subject subject = new Subject.Builder().principals(principals).buildSubject();
</code></pre>

<p>However it does not work. I still get redirected to auth/login with log.debug message that ShiroSubject is null. Maybe it be because I invoke this code in a service.
Any ideas how to make this work?</p>

<p>UPDATE:</p>

<pre><code> def authenticate(authToken) {
    log.info ""Attempting to authenticate ${authToken.username} in DB realm...""+authToken.encodeAsJSON()
    def username = authToken.username

    // Null username is invalid
    if (username == null) {
        throw new AccountException(""Null usernames are not allowed by this realm."")
    }

    // Get the user with the given username. If the user is not
    // found, then they don't have an account and we throw an
    // exception.
    log.debug ""reached this point2""
    def user = ShiroUser.findByUsername(username)
    log.debug ""reached this point""
    if (!user) {
        throw new UnknownAccountException(""No account found for user [${username}]"")
    }

    log.info ""Found user '${user.username}' in DB""

    // Now check the user's password against the hashed value stored
    // in the database.
    def account = new SimpleAccount(username, user.passwordHash, ""ShiroDbRealm"")
    if (!credentialMatcher.doCredentialsMatch(authToken, account)) {
        log.info ""Invalid password (DB realm)""
        throw new IncorrectCredentialsException(""Invalid password for user '${username}'"")
    }

    return account
}
</code></pre>
","<grails><shiro>","1","7176388"
"22485916","SSO between Webapp and REST API using apache shiro","<p>I'm trying to set up a SSO between a webapp and a REST API, to do this I'm using Apache Shiro + Jasig CAS but now I'm having a problem related to the authentication of the REST API.
I'm using CASRealm + CASFilter in the Webapp and trying to use the session created there to access the REST API, I've tried 2 approaches:</p>

<ol>
<li><p>propagating the CAS service ticket from the webapp to the REST API through the request header (does not work, it says the service ticket is invalid because it belongs to another app, maybe the TGT would work)</p></li>
<li><p>store the username and password in the webapp and use them in http basic authentication (this might be a big security flaw, I'm trying to avoid it)</p></li>
</ol>

<p>What other approach can I use to authenticate the user in the REST API?</p>

<p>I guess this is mainly an architecture issue. 
Please ask questions if you didn't understand my question (or my english)</p>
","<java><rest><single-sign-on><cas><shiro>","0","22501796"
"14371777","Can't understand Shiro behavior on custom login page request","<p>I'm using Apache Shiro to secure my Spring MVC application. This is my config:</p>

<pre><code>&lt;!-- Shiro --&gt;
&lt;bean id = ""hibernateRealm"" class = ""com.bidapp.presentation.shiro.HibernateRealm"" /&gt;

&lt;bean id = ""securityManager"" class = ""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name = ""realm"" ref = ""hibernateRealm"" /&gt;
&lt;/bean&gt;

&lt;bean id = ""lifecycleBeanPostProcessor"" class = ""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean id = ""shiroFilter"" class = ""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name = ""securityManager"" ref = ""securityManager"" /&gt;
&lt;/bean&gt;
&lt;!-- Shiro --&gt;
</code></pre>

<p>In web.xml (among other things)</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>My login page is at <code>context/account/login</code>. When I try to submit the form, I get a 400 HTTP error code with message <code>The request sent by the client was syntactically incorrect ().</code> and the following is logged by Shiro</p>

<pre><code>365348 [http-bio-8080-exec-5] TRACE o.a.s.w.s.OncePerRequestFilter - Filter 'shiroFilter' not yet executed.  Executing now. 
365349 [http-bio-8080-exec-5] TRACE o.a.s.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning. 
365349 [http-bio-8080-exec-5] TRACE o.a.s.mgt.DefaultSecurityManager - No identity (PrincipalCollection) found in the context.  Looking for a remembered identity. 
365349 [http-bio-8080-exec-5] TRACE o.a.shiro.web.servlet.SimpleCookie - No 'rememberMe' cookie value 
365349 [http-bio-8080-exec-5] TRACE o.a.s.mgt.DefaultSecurityManager - No remembered identity found.  Returning original context. 
365349 [http-bio-8080-exec-5] TRACE o.a.s.s.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false 
365349 [http-bio-8080-exec-5] TRACE o.a.s.s.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false 
365349 [http-bio-8080-exec-5] TRACE o.a.s.s.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false 
365349 [http-bio-8080-exec-5] TRACE o.a.s.s.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false 
365349 [http-bio-8080-exec-5] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.web.subject.support.WebDelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] to thread [http-bio-8080-exec-5] 
365349 [http-bio-8080-exec-5] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] for key [org.apache.shiro.util.ThreadContext_SECURITY_MANAGER_KEY] to thread [http-bio-8080-exec-5] 
365349 [http-bio-8080-exec-5] TRACE o.a.s.w.servlet.AbstractShiroFilter - No FilterChain configured for the current request.  Using the default. 
365351 [http-bio-8080-exec-5] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [http-bio-8080-exec-5] 
365351 [http-bio-8080-exec-5] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.web.subject.support.WebDelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [http-bio-8080-exec-5] 
365351 [http-bio-8080-exec-5] TRACE o.a.s.s.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false 
</code></pre>

<p>The really weird thing is that I can click <code>back</code> and then <code>forward</code> on my browser and it brings me to the correct <strong>authenticated</strong> web page. I tried debugging and my <code>Controller</code> never even gets called. But how can that be if clicking <code>back</code> and the <code>forward</code> bring me to the correct page?</p>

<p>I don't have any other filters in my web.xml and don't use any of Shiro's default filters, not knowingly anyway. </p>

<p>What is going on?</p>

<p>Not that it makes any difference I'm developing on Eclipse Indigo. And this is the code that should be called but isn't (in debug mode).</p>

<pre><code>    @RequestMapping(value = ""/account/login"", method = RequestMethod.POST, params = ""login"")
    public String login(@RequestParam(""username"") String username, 
            @RequestParam(""password"") String password,
            @RequestParam(""remember"") boolean rememberMe,
            Model model) {
        Subject currentUser = SecurityUtils.getSubject();

        if (!currentUser.isAuthenticated()) {

            UsernamePasswordToken token = new UsernamePasswordToken(username, password);
            token.setRememberMe(rememberMe);
            currentUser.login(token);

            return ""redirect:/account/profile"";
        }

        return ""home"";

    }
</code></pre>
","<java><spring-mvc><servlet-filters><shiro>","0","14420607"
"5459534","How to use Shiro for authenticating cookie based or facebook user?","<p>In my web application, I do not have user registrations/login. What I have is the user account is automatically created when the user visits the site first time based on the cookie. How can I use Shiro for this purpose to authenticate such a user ( and also take advantage of its other web security features)?</p>

<p>If the user chooses to login via Facebook connect, then how can I use Shiro for this scenario?</p>
","<facebook><apache><security><authentication><shiro>","11",""
"5262842","Apache shiro implied permissions","<p>If a user has a permissions <code>user:edit:1</code> and I'm using the annotation driven <code>@RequiresPermissions(""user:edit"")</code> why is shiro throwing an exception?  Shouldn't that permission be implied by the fact that they have <code>user:edit:1</code>?  If I put <code>@RequriesPermissions(""user:edit:1"")</code> then it works fine but during the context of operation I won't know what 1 is yet so that will be checked later in the method, but I'd like to avoid going into the method at all if they don't have the <code>user:edit</code> permission at all.</p>
","<java><annotations><shiro>","0","5281900"
"21544851","Initialize Exception Error in Apache Shiro","<p>I am getting the following error when running the test. I dont understand this as i am new  to the shiro.Please Help me</p>

<pre><code>enter code herejava.lang.ExceptionInInitializerError
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:534)
at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.apache.shiro.config.ConfigurationException: Unable to instantiate class [javax.sql.DataSource] for object named 'ds'.  Please ensure you've specified the fully qualified class name correctly.
at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:151)
at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:119)
at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:161)
at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:124)
at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:102)
at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:88)
at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
at com.advi.test.shiro.TestShiro.&lt;clinit&gt;(TestShiro.java:23)
... 22 more
Caused by: org.apache.shiro.util.InstantiationException: Unable to instantiate class [javax.sql.DataSource]
at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:179)
at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:164)
at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:144)
... 30 more
Caused by: java.lang.InstantiationException: javax.sql.DataSource
at java.lang.Class.newInstance(Class.java:359)
at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:177)
... 32 more
</code></pre>

<p>and this is shiro.ini file .Please let me know what mistake i have done</p>

<pre><code>#myRealm = MyRealm
#myRealm.credentialsMatcher = $myRealmCredentialsMatcher


ps = org.apache.shiro.authc.credential.DefaultPasswordService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $ps

aa = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
sm = org.apache.shiro.authc.credential.SimpleCredentialsMatcher

#jof = org.apache.shiro.jndi.JndiObjectFactory
#jof.resourceName = jdbc/UserDB
#jof.requiredType = javax.sql.DataSource
#jof.resourceRef = true
#; Note factories are automatically invoked via getInstance(),
#;   see org.apache.shiro.authc.config.ReflectionBuilder::resolveReference
#jdbcRealm.dataSource = $jof

ds = javax.sql.DataSource
ds.url = jdbc:mysql://192.168.1.111:3306/Test
ds.user = dbuser
ds.password = dbuser

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
#realm.permissionsLookupEnabled = true
jdbcRealm.credentialsMatcher = $pm
jdbcRealm.dataSource = $ds

securityManager.realms = $jdbcRealm


jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

#ds = javax.sql.DataSource
#ds.url = jdbc:mysql://192.168.1.111:3306/Test
#ds.user = dbuser
#ds.password = dbuser
#jdbcRealm.dataSource = $ds

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = select pass from users where name = ?;
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
# enable matcher in iniRealm (object responsible for authentication)
iniRealm.credentialsMatcher = $sha256Matcher
</code></pre>

<p>It says the its unable initiate java.sql.datasource..what should i do to initiate that</p>
","<java><mysql><jdbc><shiro>","0",""
"2119698","What makes nimble better than shiro?","<p>What makes nimble a better choice than shiro?</p>

<p>I'm trying to decide between nimble and shiro for a new grails project right now and I'm curious what makes nimble the better choice.</p>
","<grails><grails-plugin><shiro><nimble>","8","2238898"
"17895169","Apache shiro Property 'sessionManager.globalSessionTimeout' does not exist","<p>I am facing another problem when I try to set session timeout in <code>shiro.ini</code> like this:</p>

<pre><code>securityManager.sessionManager.globalSessionTimeout = 3600000
</code></pre>

<p>I get an exception:</p>

<blockquote>
  <p>11:19:44,363 INFO  [stdout] (MSC service thread 1-4)
  org.apache.shiro.config.ConfigurationException: Property
  'sessionManager.globalSessionTimeout' does not exist for object of
  type org.apache.shiro.web.mgt.DefaultWebSecurityManager.</p>
</blockquote>

<p>I am using shiro 1.2.2, if you are familiar with this exception please advise.</p>
","<apache><security><java-ee><web><shiro>","3",""
"30504563","Step by step guide for SSO implementation using Shiro","<p>I am new to Apache Shiro. I know the basic concepts of SSO.
I need to create a POC (at my localhost using Tomcat) for SSO something similar to mentioned at <a href=""http://shiro.apache.org/cas.html"" rel=""nofollow"">http://shiro.apache.org/cas.html</a></p>

<p>I am not sure how and where to start.</p>

<p>When I downloaded source code ""shiro-root-1.2.3"" I saw there are many sample projects and cas is also there.</p>

<p>Kindly help me and let me know if there are any step by step instructions for implementing SSO?</p>

<p>I could run web and spring projects using ""mvn clean jetty:run"" command and ""samples/quickstart"" project using ""mvn compile exec:java"" command.</p>

<p>I could not find the way to run ""cas"" project.</p>

<p>Please let me know how to run existing cas project and use that in web/spring projects?</p>

<p>Regards,
Krishan Babbar</p>
","<single-sign-on><cas><shiro>","0",""
"20047594","Supplying apache-shiro as a module for JBoss-7, WildFly-8","<p>Unluckily my attempts in creating a module for JBoss7 (and WildFly8.0.0.Beta2) failed and I can't see the mistake I made, what I did was:</p>

<p>1.) Creating a directory at <code>&lt;wf-root&gt;/modules/org/apache/shiro/main</code>,</p>

<p>2.) Copying the files <code>shiro-core-1.2.2.jar</code>, <code>shiro-ehcache-1.2.2.jar</code> and <code>shiro-web-1.2.2.jar</code> into it</p>

<p>3.) Creating a file called <code>module.xml</code> with following contents:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;module xmlns=""urn:jboss:module:1.0"" name=""org.apache.shiro""&gt;  
    &lt;resources&gt;  
        &lt;resource-root path=""shiro-core-1.2.2.jar""/&gt;  
        &lt;resource-root path=""shiro-ehcache-1.2.2.jar""/&gt;  
        &lt;resource-root path=""shiro-web-1.2.2.jar""/&gt;  
    &lt;/resources&gt;
&lt;/module&gt;
</code></pre>

<p>Next I started up my server. Unluckily deploying an EAR file, which requires shiro failed deploying with the following error (snipplet):</p>

<pre><code>Caused by: java.lang.NoClassDefFoundError: org/apache/shiro/mgt/SecurityManager
    at java.lang.ClassLoader.defineClass1(Native Method) [rt.jar:1.7.0_25]
    at java.lang.ClassLoader.defineClass(ClassLoader.java:792) [rt.jar:1.7.0_25]
    at org.jboss.modules.ModuleClassLoader.doDefineOrLoadClass(ModuleClassLoader.java:345) [jboss-modules.jar:1.3.0.Final]
    at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:423) [jboss-modules.jar:1.3.0.Final]
    ... 31 more
</code></pre>

<p>Any ideas?</p>
","<java><jboss><shiro><wildfly>","2","21769133"
"14671147","Get apache shiro to work in netbeans without maven","<p>I want to use apache shiro to secure my JSF application that I have made in netbeans. After adding shiro-core and shiro-web jar files to library and configuring web.xml and shiro.ini as follows I get an Error when deploying my application. I suppose it does not find the classes but I don't know what is missing.</p>

<p>web.xml</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>shiro.ini</p>

<pre><code>[users]
admin = password

[urls]

/admin/** = authBasic
</code></pre>

<p>Glassfish server log:</p>

<pre><code>    [#|2013-02-03T10:16:24.138+0300|SEVERE|glassfish3.1.2|javax.enterprise.system.tools.admin.org.glassfish.deployment.admin|_ThreadID=66;_ThreadName=Thread-2;|Exception while invoking class com.sun.enterprise.web.WebApplication start method
java.lang.Exception: java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.IllegalArgumentException: javax.servlet.ServletException: com.sun.enterprise.container.common.spi.util.InjectionException: Error creating managed object for class: class org.apache.shiro.web.env.EnvironmentLoaderListener
    at com.sun.enterprise.web.WebApplication.start(WebApplication.java:138)
    at org.glassfish.internal.data.EngineRef.start(EngineRef.java:130)
    at org.glassfish.internal.data.ModuleInfo.start(ModuleInfo.java:269)
    at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:301)
    at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)
    at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)
    at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)
    at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)
    at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)
    at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)
    at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)
    at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)
    at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:354)
    at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195)
    at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860)
    at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757)
    at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056)
    at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229)
    at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
    at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
    at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
    at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
    at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
    at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
    at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
    at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
    at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
    at java.lang.Thread.run(Thread.java:722)
</code></pre>

<p>Thanks in advance for any help.</p>
","<jsf><netbeans><shiro>","1","14781864"
"22706632","How to clear cache for a subject in Shiro","<p>Shiro provides cache feature but in my case, I'm using dynamic roles and permissions for the users. I need to expire the cache for a particular user if any so that changes in permissions immediately affect to user.</p>

<p>There is a method in Realm, but how I get an instance of associated realm to invoke method to clear cache.</p>
","<permissions><shiro><cache-invalidation>","2",""
"7587251","Apache Shiro & Java Security for Novices","<p>I know next-to-nothing about Java's security model, including XML configuration, policy-setting, any security framework components, tools (such as keystore, etc.) and everything in between.</p>

<p>Although I understand it will eventually become <em>essential</em> for me to roll up my sleeves and learn Java security in-depth, I was wondering if using something like Apache Shiro would help ease the transition a bit. As such, I have a few concerns with it.</p>

<p>Is Shiro, essentially, a ""turnkey, catchall wrapper"" for implementing security in Java applications (and more particularly, web apps). Meaning, can one configure Shiro with their project and essentially tune it do all the same configuration, policy settings, etc. that one would have to do ""manually"" (piecemeal) without it?  If not, what shortcomings does Shiro have (what are some <em>big things</em> Shiro can't do for me that are vital)? Are there any large vulnerabilities that Shiro doesn't address at all?</p>

<p>Along the same lines, I've heard good things about OWASP's ESAPI framework. Aybody have experience with both? Can ESAPI and Shiro be configured to work together or is it simply a binary ""one or the other"" type deal?</p>

<p>Thanks in advance!</p>
","<java><security><apache><shiro><owasp>","7","7636919"
"10033929","Shiro always redirects me to login.jsp","<p><strong>Here is the config from shiro.ini</strong></p>

<blockquote>
  <p>shiro.loginUrl = /login.jsp</p>
  
  #########  URL CONFIG ################### [urls] /login.jsp = anon /public/login/**  = anon /public/app/**  = authc
</blockquote>

<p><strong>Stripes</strong>...</p>

<pre><code>@UrlBinding(""/public/app/"")
public class CalculatorActionBean implements ActionBean {
.....

}

@UrlBinding(""/public/login/"")
public class UserAuthenticateBean implements ActionBean {

    private static final transient Logger log = LoggerFactory.getLogger(UserAuthenticateBean.class);
    private ActionBeanContext context;
    private String username;
    private String password;
    private String message;

    public ActionBeanContext getContext() {
        return context;
    }

    public void setContext(ActionBeanContext context) {
        this.context = context;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @DefaultHandler
    @DontValidate
    public Resolution defaultHander() {
        return new ForwardResolution(""/login.jsp"");
    }

    public Resolution login() {

        Subject currentUser = SecurityUtils.getSubject();
        log.info(""CU="" + currentUser.toString());


        if (!currentUser.isAuthenticated()) {
            TenantAuthenticationToken token = new TenantAuthenticationToken(username, password, ""jdbcRealm"");
            //UsernamePasswordToken token = new UsernamePasswordToken(""akumar"", ""ash"");
            token.setRememberMe(true);
            try {
                currentUser.login(token);
            } catch (UnknownAccountException uae) {
                log.info(""There is no user with username of "" + token.getPrincipal());
            } catch (IncorrectCredentialsException ice) {
                log.info(""Password for account "" + token.getPrincipal() + "" was incorrect!"");
            } catch (LockedAccountException lae) {
                log.info(""The account for username "" + token.getPrincipal() + "" is locked.  ""
                        + ""Please contact your administrator to unlock it."");
            } // ... catch more exceptions here (maybe custom ones specific to your application?
            catch (AuthenticationException ae) {
                //unexpected condition?  error?
                ae.printStackTrace();
            }
        }

        if (currentUser.isAuthenticated()) {
            message = ""Success"";
        } else {
            message = ""Fail"";
        }

        System.out.println(message);


        message += getUsername() + getPassword();
        return new ForwardResolution(""/logged_in.jsp"");
    }
}
</code></pre>

<p>logged_in.jsp</p>

<pre><code>&lt;a href =""/oc/public/app""&gt;app&lt;/a&gt;
</code></pre>

<p>Now if I remove the line 
/public/app/**  = authc 
from shiro.ini, I can access /public/app for a logged in user and guest</p>

<p>If I keep the line, then noone can access the page and it goes back to login.jsp</p>

<p>Driving me nuts!</p>

<p>help!!</p>
","<stripes><shiro>","3","10037069"
"2267959","Error in shiro configuration in a Grails-app","<p>i'm using the Apache Shiro as the framework for athetication of my application. I was following the reference at <a href=""http://www.grails.org/plugin/shiro"" rel=""nofollow noreferrer"">http://www.grails.org/plugin/shiro</a>
and my application throws the exception:</p>

<p><strong>No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration.</strong></p>

<p>java.lang.IllegalStateException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration.
at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:115)
at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:57)
at br.netsoft.ShiroDbRealmTests.testAutenticarComDadosCorretos(ShiroDbRealmTests.groovy:58)
at junit.framework.Test$run.call(Unknown Source)</p>

<p>What i can do?</p>
","<grails><grails-plugin><shiro>","4",""
"12761124","JSF change session time out in shiro","<p>I need to change the default session time out in my jsf application that uses shiro for security and session management. It defaults to 30 minutes.   </p>

<p>Following is my shiro configuration</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;config&lt;/param-name&gt;
        &lt;param-value&gt;
        [main]

        authc = com.foo.bar
        authcRealm = com.foo.barAuthenticatingRealm
        sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
        securityManager.sessionManager = $sessionManager
        securityManager.sessionManager.globalSessionTimeout = 20000

        unAuthc = com.foo.UnauthorisedFilter



        /** = authc

        &lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>On using the above config, I am logged out immediately on login. Removing the following lines defaults the timeout to 30 mins</p>

<pre><code>        sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
        securityManager.sessionManager = $sessionManager
        securityManager.sessionManager.globalSessionTimeout = 20000
</code></pre>
","<session><jsf-2><primefaces><session-timeout><shiro>","3","12772475"
"12896592","Having trouble with apache shiro saltedauthentication.hashProvidedCredentials not given expected hash","<p>This is the second time I'm using <code>apache shiro</code> in a project but the first time am <code>salting</code> the password.this time around i use <code>apache shiro 1.2.0</code> . I'm using shiro in a web application using jsp, spring, JPA(spring-data-jpa) and using <code>SHA256</code> for encryption then <code>base64</code> before saving to database. I have a <code>SaltedJPARealm</code>, a <code>Sha256CredentialMatcher</code> which implements a HashedCredentialMatcher. this is how i do</p>

<p><strong>creating a user in my controller</strong></p>

<pre><code>RandomNumberGenerator rng = new SecureRandomNumberGenerator();
ByteSource salt = rng.nextBytes(10);              
        String hashedPasswordBase64 = new Sha256Hash(signupForm.getPassword(),salt).toBase64();

userService.createUser(signupForm.getFullName(), signupForm.getEmail(), hashedPasswordBase64, salt.toBase64());
</code></pre>

<p>so supposed my password is <code>password1234</code> and the generated salt is <code>/ZFfGOcSxYhy+g==</code> so in my database i have password: <code>whb+0AihIGJ4n8QwULj1tR6qSwCrA+1BUvnoe4q4Cy4=</code> the salt in the <code>salt field in the database</code> is the same.</p>

<p>In my configuration in spring is:</p>

<pre><code>&lt;!--....--&gt;
 &lt;bean id=""saltedJPARealm"" class=""bla.bla.webapp.security.SaltedJPARealm""&gt;
    &lt;constructor-arg  ref=""credMatcher""/&gt;
&lt;/bean&gt;

    &lt;bean id=""credMatcher"" class=""bla.bla.webapp.security.Sha256CredentialMatcher""&gt;
        &lt;property name=""storedCredentialsHexEncoded"" value=""false"" /&gt;
        &lt;property name=""hashAlgorithmName"" value=""SHA-256"" /&gt;
        &lt;!--&lt;property name=""hashIterations"" value=""1024"" /&gt;--&gt;
    &lt;/bean&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager"" depends-on=""userRepository""&gt;
    &lt;property name=""realm"" ref=""saltedJPARealm"" /&gt;
&lt;/bean&gt;
&lt;!--....--&gt;
</code></pre>

<p><strong>login user</strong></p>

<pre><code> Subject currentUser = SecurityUtils.getSubject();
 if (!currentUser.isAuthenticated()) {
            UsernamePasswordToken token = new UsernamePasswordToken(loginForm.getEmail(), loginForm.getPassword(), loginForm.isRememberMe());
  SecurityUtils.getSubject().login(token);
        }
</code></pre>

<p>The <code>SaltedJPARealm's doGetAuthenticationInfo(AuthenticationToken at)</code> returns <code>SaltedAuthenticationInfo</code> after getting the user from the database :</p>

<pre><code>ByteSource salt = ByteSource.Util.bytes(user.getSalt());           
return new SimpleAuthenticationInfo(user, user.getPassword().toCharArray(),salt,this.getName());
</code></pre>

<p>the <code>doCredentialsMatch</code> of Sha256CredentialMatcher looks like :</p>

<pre><code>    Object tokenfromSubmition = hashProvidedCredentials(token.getCredentials(),((SaltedAuthenticationInfo)info).getCredentialsSalt(),0);
    Object passwordFromStorage =this.getCredentials(info);

    Boolean match = equals(tokenfromSubmition, passwordFromStorage);
    return match;
</code></pre>

<p>full code is available <a href=""http://pastie.org/5061920"" rel=""nofollow"">here on pastie</a> the authentication fails with this. but when i change the code not to salt the password(when creating account) and return AuthenticationInfo as opposed to SaltedAuthenticationInfo. it works with the same class. am wondering what exactly am doing wrong?</p>
","<java><spring><security><shiro><saltedhash>","0","12940792"
"10603636","How can I check Shiro permissions for list of elements?","<p>I have Hibernate request that returns me list of elements to display. I need to check is current user able to view each of returned element. I can do it something like this </p>

<pre><code>for (Element e : elements) { 
    SecurityUtils.getSubject().hasPermission(""element:view:"" + e.id);   
}
</code></pre>

<p>but this code will generate x requests to database per each element. So the speed of check will be O(n). </p>

<p>How can I improve my solution? Is it possible to get speed O(1)?</p>
","<java><grails><shiro>","1",""
"30449589","Spring MVC + Shiro + Junit Testing","<p>Hello I am working on Spring MVC application. Shiro is the security framework for my application. Now I want to write unit tests for my application. I am facing some issues with getting shiro's SecurityUtils class in my controllers while testing. I am pasting my code snippets below. I am re-using my bean definitions for both testing and development.</p>

<pre><code>import org.apache.shiro.SecurityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.nsl.eds.domain.User;

@Controller
public class HomeController {
  @RequestMapping({ ""/"", ""/home"" })
    public String showHome(Model model) {
        model.addAttribute(""user"",(User) SecurityUtils.getSubject().getPrincipal());
        return ""home"";
    }
}
</code></pre>

<p>This is my controller, and below is my Test class</p>

<pre><code>    @ContextConfiguration
(
  {
   //""classpath:beans.xml"",
   ""file:src/main/webapp/WEB-INF/frontController-servlet.xml"",
   ""file:src/main/webapp/WEB-INF/dao-definition.xml"",
   ""file:src/main/webapp/WEB-INF/schemacrawler-context.xml"",
   ""file:src/main/webapp/WEB-INF/security-settings.xml""
  }
)
@WebAppConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
public class HomeControllerTest extends AbstractShiroTest {

    @Autowired 
    private WebApplicationContext ctx;

    private MockMvc mockMvc;

    private Subject subjectUnderTest;

    protected MockHttpSession mockSession;

    @Before public void setUp() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(ctx).build();
        final Authenticate bean = (Authenticate)ctx.getBean(""authenticate"");
      //1.  Create a mock authenticated Subject instance for the test to run:
        subjectUnderTest =   new Subject.Builder(getSecurityManager()).buildSubject();//Mockito.mock(Subject.class);
        //expect(subjectUnderTest.isAuthenticated()).andReturn(true);

        mockSession = new MockHttpSession(ctx.getServletContext(),
                subjectUnderTest.getSession().getId().toString());
                         //2. Bind the subject to the current thread:
                         setSubject(subjectUnderTest);
                         //bean.logon(""User01"", ""User01"", mockSession.getId());

        //2. Bind the subject to the current thread:
        setSubject(subjectUnderTest);

        //perform test logic here.  Any call to 
        //SecurityUtils.getSubject() directly (or nested in the 
        //call stack) will work properly.
    }
@Test
    public void testShowHome() throws Exception {
        mockMvc.perform(
                MockMvcRequestBuilders.get(""/home""))
                .andExpect(status().isOk())
                .andExpect(forwardedUrl(""/WEB-INF/views/home.jsp""))
                .andExpect(model().attributeExists(""user""));
    }
@After
    public void detachSubject()
    {
        subjectThreadState.clear();
    }

}
</code></pre>

<p>With  final Authenticate bean = (Authenticate)ctx.getBean(""authenticate""); uncommented, My Stack trace is </p>

<pre><code>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
    at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
    at com.nsl.eds.security.shiro.AbstractShiroTest.getSecurityManager(AbstractShiroTest.java:60)
    at com.nsl.eds.web.home.HomeControllerTest.setUp(HomeControllerTest.java:54)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:224)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

java.lang.NullPointerException
    at com.nsl.eds.web.home.HomeControllerTest.detachSubject(HomeControllerTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:224)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
</code></pre>

<p>With  final Authenticate bean = (Authenticate)ctx.getBean(""authenticate""); commented, My Stack trace is </p>

<pre><code>org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'authenticate' is defined
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:687)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1168)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:281)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:956)
    at com.nsl.eds.web.home.HomeControllerTest.setUp(HomeControllerTest.java:52)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:224)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

java.lang.NullPointerException
    at com.nsl.eds.web.home.HomeControllerTest.detachSubject(HomeControllerTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:224)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
</code></pre>

<p>Also I am having and shiro Abstract authentication class</p>

<pre><code>public abstract class AbstractShiroTest {

    protected static ThreadState subjectThreadState;

    public AbstractShiroTest() {
    }


    protected void setSubject(Subject subject) {
        clearSubject();
        subjectThreadState = createThreadState(subject);
        subjectThreadState.bind();
    }

    protected Subject getSubject() {
        return SecurityUtils.getSubject();
    }

    protected ThreadState createThreadState(Subject subject) {
        return new SubjectThreadState(subject);
    }

    /**
     * Clears Shiro's thread state, ensuring the thread remains clean for future test execution.
     */
    protected void clearSubject() {
        doClearSubject();
    }

    private static void doClearSubject() {
        if (subjectThreadState != null) {
            subjectThreadState.clear();
            subjectThreadState = null;
        }
    }

    protected static void setSecurityManager(SecurityManager securityManager) {
        SecurityUtils.setSecurityManager(securityManager);
    }

    protected static SecurityManager getSecurityManager() {
        return SecurityUtils.getSecurityManager();
    }

    @AfterClass
    public static void tearDownShiro() {
        doClearSubject();
        try {
            SecurityManager securityManager = getSecurityManager();
            LifecycleUtils.destroy(securityManager);
        } catch (UnavailableSecurityManagerException e) {
            //we don't care about this when cleaning up the test environment
            //(for example, maybe the subclass is a unit test and it didn't
            // need a SecurityManager instance because it was using only 
            // mock Subject instances)
        }
        setSecurityManager(null);
    }
}
</code></pre>

<p>Can any body figure out the issue?</p>
","<spring-mvc><junit4><shiro>","2","31270969"
"15912429","Where should shiro.ini go in a web application?","<p>Does anybody know where shiro.ini is supposed to be placed within a Java web application?  Is it the WEB-INF or perhaps META-INF directory?</p>
","<java><web-applications><shiro>","1",""
"19788266","how to know that session with associate with subject is expired or not in java shiro","<p>i am implmenting the java shiro for security.i need to return the message when session is expired and if session is not expired then i need to return different message like un Authenticate user.</p>

<p>This is my code.</p>

<pre><code>@GET
@Path(""/{userId}"")
public Response view(@PathParam(""userId"")String userId)
{
   ResponseBuilder builder = Response.ok();
   if(SecurityUtils.getSubject().isAuthenticated())
    {

       Registeration registeration=new Registeration();
       boolean status=registeration.getDetails(userId,builder);
       log.debug(""the status is:""+status); 


    }
    else
    {
        builder.status(401).entity(""You are currently not login .please Login for Access Services"");

    }   
    return builder.build();     

}
</code></pre>

<p>This above rest services working fine.when user is not login .this method will return the message of else part. but i need to return message also that after session had expired and user try to access this rest services then i need to return the ""your session had expired "" .
but in above case if session is expired then also same message and the if user is not login then also same message.
i do not know that how i will check this both condition that
1)if user is not login then message=""you are login""
2)if session had expired then messsage=""you session had expired""</p>
","<java><shiro>","4",""
"19694366","Different Permissions in Apache Shiro for every User?","<p>I built a database with the entity user and permission</p>

<p>user (id, email, password, permission)
permission (id, create_user, delete_user, user_fk)</p>

<p>create_user and delete_user is BOOLEAN.</p>

<p>Relationship: One-One</p>

<p>Now every user can have it's own permissions.</p>

<p>My question is: How can I use shiro to read the permissions from the database?</p>
","<database><jdbc><shiro>","4",""
"31494455","ClassNotFoundException: org.apache.shiro.web.env.EnvironmentLoaderListener","<p>I have simple RESTful service based on Jersey and Shiro security.<br>
But all crashed when I tried to deploy.</p>

<p>web.xml</p>

<pre><code>&lt;servlet&gt;
    &lt;servlet-name&gt;Application&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
        &lt;param-value&gt;alexiuscrow.ws&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Application&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Gradle dependencies:</p>

<pre><code>dependencies {
    compile 'org.glassfish.jersey.core:jersey-server:2.19'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.19'
    compile 'org.apache.shiro:shiro-core:1.2.3'
    compile 'org.apache.shiro:shiro-web:1.2.3'
}
</code></pre>

<p>Output:</p>

<pre><code>18-Jul-2015 21:28:10.775 SEVERE [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.StandardContext.listenerStart Error configuring application listener of class org.apache.shiro.web.env.EnvironmentLoaderListener
 java.lang.ClassNotFoundException: org.apache.shiro.web.env.EnvironmentLoaderListener
//...
</code></pre>

<p>What's wrong? Why it can't deploy?</p>
","<java><rest><jersey><web.xml><shiro>","1",""
"21539907","Jersey errors trying to load class","<p>I'm trying to move from jersey 1.17 to 2.31 (min).  My code was working before but now I need to move my jersey up a few versions as I need to use Client and WebTarget classes that are in jaxrs 2.0 and the 1.17 jersey is causing some errors.  </p>

<hr>

<p>pom.xml  </p>

<pre><code>&lt;dependencies&gt;
 &lt;dependency&gt;
  &lt;groupId&gt;javax.ws.rs&lt;/groupId&gt;
  &lt;artifactId&gt;javax.ws.rs-api&lt;/artifactId&gt;
  &lt;version&gt;2.0&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;dependency&gt;
  &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-common&lt;/artifactId&gt;
  &lt;version&gt;2.5&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;!-- &lt;dependency&gt;
  &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-server&lt;/artifactId&gt; 
  &lt;version&gt;1.17&lt;/version&gt;
 &lt;/dependency&gt; --&gt;
 &lt;dependency&gt;
  &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
  &lt;version&gt;2.3.1&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;!--&lt;dependency&gt;
  &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-json&lt;/artifactId&gt;
  &lt;version&gt;1.17&lt;/version&gt;
 &lt;/dependency&gt; --&gt;
 &lt;!-- &lt;dependency&gt; 
  &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-servlet&lt;/artifactId&gt;
  &lt;version&gt;1.17&lt;/version&gt;
 &lt;/dependency&gt; --&gt;
 &lt;dependency&gt;
  &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
  &lt;artifactId&gt;jersey-container-servlet&lt;/artifactId&gt;
  &lt;version&gt;2.3.1&lt;/version&gt;
 &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

<hr>

<p>and my web.xml is like this:  </p>

<pre><code>&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;jersey-servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet&gt;
  &lt;servlet-name&gt;jersey-servlet&lt;/servlet-name&gt;
&lt;!-- &lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt; --&gt;
  &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
  &lt;init-param&gt;
    &lt;!-- &lt;param-name&gt;com.sun.jersey.config.property.packages&lt;/param-name&gt; --&gt;
    &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
    &lt;param-value&gt;com.mycomp.stuff.interfaces&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;init-param&gt;
     &lt;param-name&gt;debug&lt;/param-name&gt;
     &lt;param-value&gt;0&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
</code></pre>

<h2>    </h2>

<p>And before container even gets close to my code I get this in my log file ~5 times:</p>

<p><code>*_Feb 03, 2014 5:45:41 PM org.apache.catalina.loader.WebappClassLoader loadClass
INFO: Illegal access: this web application instance has been stopped already.  Could not load org.glassfish.hk2.internal.PerThreadContext$1.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.</code></p>

<pre><code>java.lang.IllegalStateException
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1588)
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)
        at java.lang.Class.getDeclaredConstructors0(Native Method)
        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2493)
        at java.lang.Class.getDeclaredConstructors(Class.java:1901)
        at org.jvnet.hk2.internal.Utilities$4.run(Utilities.java:1239)
        at org.jvnet.hk2.internal.Utilities$4.run(Utilities.java:1235)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jvnet.hk2.internal.Utilities.getAllConstructorKeys(Utilities.java:1235)
        at org.jvnet.hk2.internal.Utilities.getAllConstructors(Utilities.java:1222)
        at org.jvnet.hk2.internal.Utilities.findProducerConstructor(Utilities.java:1141)
        at org.jvnet.hk2.internal.DefaultClassAnalyzer.getConstructor(DefaultClassAnalyzer.java:73)
        at org.glassfish.jersey.internal.inject.JerseyClassAnalyzer.getConstructor(JerseyClassAnalyzer.java:143)
        at org.jvnet.hk2.internal.Utilities.getConstructor(Utilities.java:157)
        at org.jvnet.hk2.internal.ClazzCreator.initialize(ClazzCreator.java:125)
        at org.jvnet.hk2.internal.ClazzCreator.initialize(ClazzCreator.java:176)
        at org.jvnet.hk2.internal.SystemDescriptor.internalReify(SystemDescriptor.java:647)
        at org.jvnet.hk2.internal.SystemDescriptor.reify(SystemDescriptor.java:602)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.reifyDescriptor(ServiceLocatorImpl.java:377)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.narrow(ServiceLocatorImpl.java:1780)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetAllServiceHandles(ServiceLocatorImpl.java:1103)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.getAllServiceHandles(ServiceLocatorImpl.java:1050)
        at org.jvnet.hk2.internal.ServiceLocatorImpl$5.run(ServiceLocatorImpl.java:1029)
        at org.jvnet.hk2.internal.ServiceLocatorImpl$5.run(ServiceLocatorImpl.java:1025)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.protectedGetAllServiceHandles(ServiceLocatorImpl.java:1025)
        at org.jvnet.hk2.internal.ServiceLocatorImpl.resolveContext(ServiceLocatorImpl.java:1683)
        at org.jvnet.hk2.internal.MethodInterceptorImpl.intercept(MethodInterceptorImpl.java:79)
        at org.glassfish.jersey.internal.inject.UriInfoInjectee$$EnhancerByCGLIB$$453ec21b.finalize(&lt;generated&gt;)
        at java.lang.ref.Finalizer.invokeFinalizeMethod(Native Method)
        at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:101)
        at java.lang.ref.Finalizer.access$100(Finalizer.java:32)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:190)_*
</code></pre>

<p>Any ideas why this is happening or can somebody point me in the right direction to interrogate this further? And why is this happening now, when all that was changes in configuration files?</p>
","<maven><jersey><shiro>","1",""
"16065276","Integrating Apache Shiro on Play framework 2.1","<p>I'm trying to integrate Apache Shiro into Play framework 2.1
I'm using an open source project (<a href=""https://github.com/wsargent/play-shiro"" rel=""nofollow"">https://github.com/wsargent/play-shiro</a>) that support play framework 2.0</p>

<p>I've tried to migrate this application from play 2.0 into 2.1 but I keep getting these errors when I compile the project...</p>

<p>Does anyone know how to handle this errors?</p>

<pre><code>[play-shiro] $ compile
[info] Updating {file:/Users/shai/Documents/Projects/opensource/play-shiro/}play-shiro...
[info] Done updating.                                                        
[info] Compiling 13 Scala sources and 1 Java source to /Users/shai/Documents/Projects/opensource/play-shiro/target/scala-2.10/classes...
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/login.scala.html:0: not found: type Flash
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/login.scala.html:1: not found: type Flash
[error] @(form: Form[(String,String)])(implicit flash: Flash)
[error]                                               ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/controllers/Login.scala:36: type mismatch;
[error]  found   : play.api.data.Form[(String, String)]
[error]  required: play.data.Form[(String, String)]
[error]     Ok(html.login(loginForm))
[error]                   ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/controllers/Login.scala:44: type mismatch;
[error]  found   : play.api.data.Form[(String, String)]
[error]  required: play.data.Form[(String, String)]
[error]       formWithErrors =&gt; { BadRequest(html.login(formWithErrors)) },
[error]                                                 ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/register.scala.html:0: not found: type Flash
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/register.scala.html:1: not found: type Flash
[error] @(form: Form[(String,String)])(implicit flash: Flash)
[error]                                               ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/controllers/Register.scala:30: type mismatch;
[error]  found   : play.api.data.Form[(String, String)]
[error]  required: play.data.Form[(String, String)]
[error]     Ok(html.register(registerForm))
[error]                      ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/controllers/Register.scala:37: type mismatch;
[error]  found   : play.api.data.Form[(String, String)]
[error]  required: play.data.Form[(String, String)]
[error]           BadRequest(html.login(formWithErrors))
[error]                                 ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/login.scala.html:19: value map is not a member of play.data.validation.ValidationError
[error]             @form.globalError.map { error =&gt;
[error]                               ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/login.scala.html:53: not found: type Flash
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/login.scala.html:55: not found: type Flash
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/register.scala.html:18: value map is not a member of play.data.validation.ValidationError
[error]   @form.globalError.map { error =&gt;
[error]                     ^
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/register.scala.html:51: not found: type Flash
[error] /Users/shai/Documents/Projects/opensource/play-shiro/app/views/register.scala.html:53: not found: type Flash
[error] 14 errors found
[error] (compile:compile) Compilation failed
[error] Total time: 3 s, completed Apr 17, 2013 7:00:42 PM
[play-shiro] $ 
</code></pre>
","<apache><frameworks><playframework-2.1><shiro>","1",""
"3502075","apache shiro: authc.loginUrl doesn't work","<p>I configured Shiro as follows:</p>

<pre><code>        [main]



        [users]

        ...

        [roles]

        ...

        [urls]

        /welcome.xhtml = anon
        /overview.xhtml = authc
</code></pre>

<p>As you can imagine 'welcome.xhtml' contains my login-form. If I am not logged into the application and I try to access overview.xhtml I am thrown to 'login.jsp' that is not existend in my application!</p>

<p>Further, If I add following:</p>

<pre><code>authc.loginUrl = /welcome.xhtml
</code></pre>

<p>to the main part of shiro config i get this error by starting tomcat:</p>

<pre><code>ERROR: Exception starting filter SecurityFilter
java.lang.NoClassDefFoundError: org/apache/commons/beanutils/PropertyUtils
    at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:241)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:349)
    at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:200)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:161)
    at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:121)
    at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:171)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:120)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:98)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:84)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:42)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:124)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:48)
    at org.apache.shiro.web.servlet.IniShiroFilter.applySecurityManager(IniShiroFilter.java:353)
    at org.apache.shiro.web.servlet.IniShiroFilter.configure(IniShiroFilter.java:321)
    at org.apache.shiro.web.servlet.IniShiroFilter.init(IniShiroFilter.java:292)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.onFilterConfigSet(AbstractShiroFilter.java:83)
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:94)
    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:295)
    at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:422)
    at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:115)
    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4001)
    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4651)
    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
    at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)
    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)
    at org.apache.catalina.core.StandardService.start(StandardService.java:519)
    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:581)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)
Caused by: java.lang.ClassNotFoundException: org.apache.commons.beanutils.PropertyUtils
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1645)
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1491)
    ... 35 more
</code></pre>

<p>Ehere is my mistake?
cheers...</p>

<hr>

<p>MAVEN POM PART:</p>

<pre><code>    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.0.0-incubating&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;1.0.0-incubating&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-aspectj&lt;/artifactId&gt;
        &lt;version&gt;1.0.0-incubating&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
","<java><security><shiro>","1",""
"24157455","Shiro Session logout not working","<p>I'm working in a project where we are using Apache Shiro for security. 
Now, I'm not sure if the problem is in the Shrio configuration or if it is somewhere else.</p>

<p>What happens is, that when a User has entered the credentials and is authenticated with basic auth, the values for username and password are preserved until the browser has been shutdown. I've tried this in Firefox and Chrome and it is the same behaviour.</p>

<p>From what I understand this sounds like the Shiro ""RememberMe"" function, but I ""think"" I've shut this off.</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    UsernamePasswordToken upToken = (UsernamePasswordToken) token;
    logger.info(""Remember Me active ? {}"", upToken.isRememberMe());
</code></pre>

<p>Prints:
09:44:00,323 INFO  [TestRealm] Remember Me active ? false</p>

<p>I've also tried using the Shiro logout configured in the shiro.ini file</p>

<pre><code>[main]
...
logout.redirectUrl = /logout.jsp

...
[url]
/logout = logout
</code></pre>

<p>The logout.jsp looks as follows:</p>

<pre><code>&lt;%@ page import=""org.apache.shiro.SecurityUtils"" %&gt;
&lt;% SecurityUtils.getSubject().logout();%&gt;
You have succesfully logged out.
</code></pre>

<p>Non of this helps, the session is still active as long the browser has not been shutdown. When on the logout page, using Chrome-developer, I can see that the cookie is removed in the resources.</p>

<p>The shiro.ini complete file</p>

<pre><code>[main]
authBasicRealm = se.test.TestRealm
securityManager.realms = $authBasicRealm
#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $builtInCacheManager

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager.sessionIdCookieEnabled = false

# cookie for single sign on 
cookie = org.apache.shiro.web.servlet.SimpleCookie 
cookie.name = test.session
cookie.path = /test
cookie.maxAge = 60
#cookie.secure = true
cookie.httpOnly = false
sessionManager.sessionIdCookie = $cookie

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO

securityManager.sessionManager = $sessionManager

logout.redirectUrl = /logout.jsp

[users]
# format: username = password, role1, role2, ..., roleN
admin = admin, 4
user = user, 2
[roles]
admin = *
user = *
#User Get Specified
1 = 1
#User Get All
2 = 1
#Create Put Update
3 = 2:*
#Admin
4 = admin:*
test = 2:*
[urls]
/logout = logout
/** = authcBasic
</code></pre>

<p>Best,
Henrik</p>
","<java><session><jboss><shiro>","1","24405041"
"12232277","Java EE 6 groups, users and roles -vs- Shiro's roles, users and permissions","<p>I am trying to mentally map Java EE 6 security concepts of <strong>groups</strong>, <strong>users</strong> and <strong>roles</strong> to the <a href=""http://shiro.apache.org/"" rel=""noreferrer"">Apache Shiro</a>'s concepts of <strong>roles</strong>, <strong>users</strong> and <strong>permissions</strong> and my understanding is that they are incompatible.</p>

<p>Reading through the <a href=""http://docs.oracle.com/javaee/6/tutorial/doc/bnbxj.html"" rel=""noreferrer"">Java EE 6 security tutorial</a> it seems that the model is too restrictive: <strong>groups</strong> are configured on a per-server, not per-application, basis which really leaves us with only two flexible concepts to express the authorization mechanism: <strong>users</strong> and <strong>roles</strong>, existing in a simple 1-to-N relationship. In contrast Shiro's model of <strong>roles</strong>, <strong>users</strong> and <strong>permissions</strong> is a lot more dynamic since it enables one to hardcode <strong>permissions</strong> in the annotated code and modify the mapping of <strong>roles</strong> to <strong>permissions</strong> at runtime as things change or as new roles are introduced. I don't see how one can do the same with container-managed authorization as per the Java EE 6 model.</p>

<p>Is my understanding correct? Cause that would imply that one can't really go very far with container-managed authorization.</p>
","<authorization><java-ee-6><shiro>","5","12514823"
"14873628","Apache Shiro authcBasic authentication using Java and apache HttpClient","<p>My REST application uses Shiro basic authentication to secure the REST endpoints and its working great when tested from the Browser.</p>

<p>Now I want to be able to login into the application from a java client using Apache HttpClient</p>

<p>Any ideas?</p>

<p>Thank You</p>
","<java><rest><httpclient><shiro>","3","14874596"
"4595330","Integrating Apache Shiro with ASP.NET MVC","<p>I'm looking at using <a href=""https://cwiki.apache.org/confluence/display/SHIRO/Index"" rel=""nofollow"">Apache Shiro</a> as a central authentication service for all our applications over a variety of platforms. </p>

<p>It's hinted at that it can <a href=""https://cwiki.apache.org/confluence/display/SHIRO/Architecture"" rel=""nofollow"">integrate with a variety of platforms</a> which would be ideal for my purposes but I cannot find any examples of how this is achieved from .NET (ASP.NET MVC specifically if it makes any difference).</p>

<p>Does anyone know where I can find an example of how to do this?</p>
","<.net><asp.net-mvc><authentication><authorization><shiro>","1",""
"23078484","Apache Shiro - authentication with attribute other than cn?","<p>I'm trying to use Apache Shiro in our project for authentication and authorization with an Active Directory realm. It works good when I authenticate with the users CN attribute however, I would like to use another unique attribute for login. Is it possible to configure shiro to do so? </p>

<p>Here is my shiro.ini file:</p>

<pre><code>    [main]
    shiro.loginUrl = /login.jsp
    activeDirectoryRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
    activeDirectoryRealm.systemUsername = admin
    activeDirectoryRealm.systemPassword = secret
    activeDirectoryRealm.searchBase = DC=company,DC=private
    activeDirectoryRealm.url = ldap://url:389
</code></pre>

<p>And the login code:</p>

<pre class=""lang-java prettyprint-override""><code>    public void login(String uname, String pwd, boolean rememberMe) {
            Factory&lt;SecurityManager&gt; ldapFactory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
            SecurityManager sManager = ldapFactory.getInstance();
            SecurityUtils.setSecurityManager(sManager);
            Subject currentUser = SecurityUtils.getSubject();
            if (!currentUser.isAuthenticated()) {
                uname = ""CN="" + uname + "",OU=Users"";
                UsernamePasswordToken token = new UsernamePasswordToken(uname, pwd);
                token.setRememberMe(rememberMe);
                try {
                    currentUser.login(token);
                } catch (UnknownAccountException ex) {
                    logger.info(""Unknown user"");
                } catch (IncorrectCredentialsException ex) {
                    logger.info(""Incorrect credentials"");
                } catch (LockedAccountException ex) {
                    logger.info(""Account is locked"");
                } catch (AuthenticationException ex) {
                    ex.printStackTrace();
                }
            }
        }
</code></pre>

<p>If i change the line </p>

<pre class=""lang-java prettyprint-override""><code>    uname = ""CN="" + uname + "",OU=Users"";
</code></pre>

<p>to the following</p>

<pre class=""lang-java prettyprint-override""><code>    uname = ""myCustomAttribute="" + uname + "",OU=Users"";
</code></pre>

<p>and try to login with it, I got </p>

<pre><code>    javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C0903A9, comment: AcceptSecurityContext error, data 52e, v1db1 ]
</code></pre>

<p>Thanks for the answers.</p>
","<authentication><active-directory><shiro>","2",""
"24062383","Shiro LDAP Authorization config","<p>Could you please help me with the following situation? </p>

<p><strong>Background information:</strong></p>

<ul>
<li>I'm using the <a href=""https://vaadin.com/home"">Vaadin framework</a>.</li>
<li>I'm using the <a href=""http://shiro.apache.org/"">Java security framework Shiro</a></li>
<li>I'm using ssl. </li>
<li>Authentication works. </li>
<li>Username syntax = pietj@.lcl , jank@.lcl </li>
<li>memberOf field is being used as role. </li>
<li>shiro.ini </li>
</ul>

<blockquote>
  <p>[main]</p>
</blockquote>

<pre><code>contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory 
contextFactory.url = ldaps://&lt;SERVER&gt;:636 
contextFactory.systemUsername = &lt;USERNAME&gt;@&lt;COMPANY&gt;
contextFactory.systemPassword = &lt;PASSWORD&gt;
contextFactory.environment[java.naming.security.protocol] = ssl 

realm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm 
realm.ldapContextFactory = $contextFactory 
realm.searchBase = ""OU=&lt;APPDIR&gt;,DC=&lt;COMPANY&gt;,DC=lcl"" 
realm.groupRolesMap = ""CN=&lt;ROLE&gt;,OU=&lt;APPDIR&gt;,DC=&lt;COMPANY&gt;,DC=lcl"":""Admin""
</code></pre>

<blockquote>
  <p>[roles] </p>
</blockquote>

<pre><code> # 'Admin' role has permissions * 
 Admin = * 
</code></pre>

<p><strong>Goal</strong></p>

<ul>
<li>Authorization mapping based on the memberOf field from the currentUser. </li>
</ul>

<p><strong>Problem</strong></p>

<ul>
<li>currentUser.hasRole(""Admin"") always return false. </li>
</ul>

<p><strong>Questions</strong> </p>

<ul>
<li>Is the above shiro.ini correct? </li>
<li>How do I fix the problem? </li>
</ul>
","<java><authentication><ldap><vaadin><shiro>","7",""
"13446436","Apache Shiro: Exception-Handling with Multiple Realms","<p>We are using two realms (one for hashed passwords, the other one for generated plaintext keys) - this is working as expected.</p>

<p>With a single realm, we could throw a <code>DisabledAccountException</code> exception in our realm's <code>protected AuthenticationInfo doGetAuthenticationInfo(final AuthenticationToken authToken)</code> and explicitly catch such an exception in our application.</p>

<p>Now that we have two realms, all exceptions are Shiro-internally caught; so if one realm fails, the second one can be tried as well. However, this kind of redirect will only throw generic <code>AuthenticationExceptions</code> to our application.</p>

<p>Is there any workaround with multiple realms so that we can have more specific exceptions (to know if an account is locked, the credentials are simply wrong,...)?</p>
","<authentication><shiro>","4","13453603"
"13642422","Configuring Shiro with Guice without a ServletContext","<p>I'm using <i>Guice</i> to wire a <i>Jetty</i> server and I want to add some security with <i>Apache Shiro</i>.</p>

<p>It seems Shiro needs a <i>ServletContext</i> to be configured, but the problem is I don;t have a ServletContext at the configuration time (for example in a <i>ServletModule</i> as the documentation states). The <i>ServletContext</i> is available in <i>GuiceServletContextListener</i>, but at this time, my injector is already created so it's to late to install the <i>Shiro</i> module.</p>

<p>I tried to provide the <i>ServletContext</i> to <i>Shiro</i> through a <i>Guice</i> provider, (<i>Provider&lt;ServletContext&gt;</i>) but still without success. I thought this provider will serve the ServletContext after its creation. This also gives a WARNING:</p>

<pre><code>""com.google.inject.servlet.InternalServletModule$BackwardsCompatibleServletContextProvider get
WARNING: You are attempting to use a deprecated API (specifically, attempting to @Inject ServletContext inside an eagerly created singleton. While we allow this for backwards compatibility, be warned that this MAY have unexpected behavior if you have more than one injector (with ServletModule) running in the same JVM.""
</code></pre>

<p>How could one install the Shiro Web module after the injector is created?</p>
","<java><apache><jetty><guice><shiro>","3","13648459"
"25215274","failed in the authentication using Shiro","<p>I have to create a custom realm in Shiro and I have to use a password with ""salt""</p>

<p>The code I use is something like:</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken  authenticationToken) 
        throws AuthenticationException {
    ...
    Admin admin = query.getByUsername(username);    
    String passwordSalted = admin.getPassword();

    SimpleAuthenticationInfo info = new SimpleAuthenticationInfo(username, passwordSalted, new SimpleByteSource(MY_PRIVATE_SALT), getName());
    return info;
}

public Admin createAdmin(AuthenticationToken authenticationToken){
    DefaultHashService hashService = new DefaultHashService();
    hashService.setHashIterations(500000);
    hashService.setHashAlgorithmName(Sha256Hash.ALGORITHM_NAME);
    hashService.setPrivateSalt(new SimpleByteSource(MY_PRIVATE_SALT)); // Same salt as in shiro.ini, but NOT base64-encoded.
    hashService.setGeneratePublicSalt(true);

    DefaultPasswordService passwordService = new DefaultPasswordService();
    passwordService.setHashService(hashService);
    String encryptedPassword = passwordService.encryptPassword(authenticationToken.getCredentials());

    Admin admin = new Admin();
    String principal = authenticationToken.getPrincipal().toString();
    admin.setUsername(principal);
    admin.setPassword(encryptedPassword);
    return admin;
}
</code></pre>

<p>I use the function ""createAdmin"" to create a Admin,  then I store it in the database, like this:</p>

<pre><code>UsernamePasswordToken u = new UsernamePasswordToken(""foo"",""qwerty"") ;
Admin admin = createAdmin(u);
query.save(admin);
</code></pre>

<p>The password saved is something like:</p>

<p>$shiro1$SHA-256$50000$M7T93MZ65TCxXBsD7JFa9A==$gJcEf2oSKE/RKXifwYiJCaHU7X10ng1PxqL3AEMvmjE=</p>

<p>I don't know why it failed to authenticated:</p>

<pre><code> Factory&lt;SecurityManager&gt; factory = 
            new IniSecurityManagerFactory(""classpath:shiro.ini"");
 SecurityManager securityManager = factory.getInstance();
 SecurityUtils.setSecurityManager(securityManager);
 AuthenticationToken authenticationToken = new UsernamePasswordToken(""foo"", ""qwerty"");

 Subject usr = SecurityUtils.getSubject();
 try {
    securityManager.login(usr, authenticationToken);
 } catch (Exception e) {
        log.error(""error"");
 }
</code></pre>

<p>And my shiro.ini:</p>

<pre><code> [main]
 customSecurityRealm=cl.fooproyect.CustomRealm
</code></pre>

<h2>Solved:</h2>

<p>To solve the problem I have to change shiro.ini and the createAdmin. I let to the responsability to shiro to create the salt.
This solution work for me.</p>

<p>Changes in shiro.ini</p>

<pre><code> [main]

 passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
 passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
 passwordMatcher.passwordService = $passwordService

 customSecurityRealm=cl.doman.punto.vaadin.shiro.CustomRealm
 customSecurityRealm.credentialsMatcher = $passwordMatcher

 securityManager.realms = $customSecurityRealm
</code></pre>

<p>Changes in createAdmin:</p>

<pre><code> public Admin createAdmin(AuthenticationToken authenticationToken){
    DefaultHashService hashService = new DefaultHashService();

    DefaultPasswordService passwordService = new DefaultPasswordService();
    String encryptedPassword =      passwordService.encryptPassword(authenticationToken.getCredentials());

    Admin admin = new Admin();
    String principal = authenticationToken.getPrincipal().toString();
    admin.setUsername(principal);
    admin.setPassword(encryptedPassword);
    return admin;
}
</code></pre>
","<java><shiro>","1",""
"26639205","Shiro: how does remember me work?","<p>I've got few questions about Shiro's remember me feature:</p>

<ol>
<li>Why does Shiro generate different ""remember me"" token values for the same account on each login?</li>
<li>Would a hacker be able to generate a ""remember me"" token for any account if I use the default <code>CipherKey</code>?</li>
<li>How can I control the ""remember me"" duration? By Cookie age? So if the client cookie never expires then that ""remember me"" cookie will work forever?</li>
</ol>
","<java><shiro><remember-me>","4",""
"23768555","Shiro.There is no session with id","<p>I am using shiro-1.2.3 for GWT webapp. I am able to configure the login process of the user; however, I need some help with the shiro's log out process. The webapp is deployed through tomcat and it creates new instance for different users. So, for instance, when two users are logged in, there are two session id created by shiro; however, when I click on the sign out button, it will call subject.logout() function to logout the user, it looks like that Shiro is keeping track of only one session ( the last user logged in), for some reason. It will logout successfully if there was only one user logged in; however, when logging out more than one, this is what I am getting:</p>

<blockquote>
  <p>Caused by: org.apache.shiro.session.UnknownSessionException: There is no session with id [f5b7c3bf-2c53-40e9-a707-37f4265970aa]
      at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
      at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
      at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
      at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
      at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:105)
      at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:109)
      at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:206)
      at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
      at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
      at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
      at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
      at com.factorlab.security.FactorlabDelegatingSubject.getUser(FactorlabDelegatingSubject.java:34)
      at com.factorlab.security.FactorlabDelegatingSubject.getUser(FactorlabDelegatingSubject.java:10)
      at com.factorlab.persistence.AbstractEntityDao.getCurrentUser(AbstractEntityDao.java:227)
      at com.factorlab.persistence.AbstractEntityDao.fireEvent(AbstractEntityDao.java:215)
      at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:190)
      at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:177)
      at com.factorlab.persistence.AbstractEntityDao.saveOrUpdate(AbstractEntityDao.java:38)
      at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
      at java.lang.reflect.Method.invoke(Method.java:616)
      at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
      at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:196)
      at $Proxy72.saveOrUpdate(Unknown Source)
      at com.factorlab.observations.sales.OpportunityScoreUpdateServiceImpl.receiveOpportunityEvent(OpportunityScoreUpdateServiceImpl.java:83)
      at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
      at java.lang.reflect.Method.invoke(Method.java:616)
      at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
      at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
      at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
      at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
      at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
      at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
      at $Proxy76.receiveOpportunityEvent(Unknown Source)
      at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
      at java.lang.reflect.Method.invoke(Method.java:616)
      at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:69)
      at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:84)
      at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:57)
      at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:102)
      at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:102)
      at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:126)
      at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:227)
      at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:127)
      at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:73)
      ... 49 more</p>
</blockquote>

<pre><code>**Shiro.ini**
[main]
myRealm=com.java.gwt.server.auth.MyRealm
myCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $myCacheManager 
securityManager.sessionManager.globalSessionTimeout = 9000000
</code></pre>

<p>I have also tried to use EhCache manager.</p>

<p>For login, I am using the same information as shown in the shiro's 10 minute tutorial.</p>

<p><strong>Thanks for your time.</strong></p>
","<session><gwt><shiro><subject>","2",""
"42709211","How to authenticate user on REST using Shiro and OATH 2","<p>I am about to start developing a REST service and security is an important aspect of this project but I can't find some definitive information on how to implement it. My service will be consumed by an Android App at first, but could be used by other platforms later. Controlling user access is critical, so <code>Authorization</code> and <code>Authentication</code> control of the REST services is very important. </p>

<p>Although I can find topics on how to make a secure REST API, like <a href=""https://stackoverflow.com/questions/20363786/securing-a-rest-api-in-java"">here</a>, <a href=""https://stackoverflow.com/questions/17949872/rest-api-key-generation-strategy/17950339#17950339"">here</a> and this big one <a href=""https://stackoverflow.com/questions/26777083/best-practice-for-rest-token-based-authentication-with-jax-rs-and-jersey"">here</a>, to my surprise, all of them <strong>fail to point to a famous standard or framework or time tested solution</strong>, which usually is the ""way to go"" in securing software applications, where we <strong>avoid</strong> as much as we can to <strong>""roll your own security solution""</strong>.</p>

<p>So far on my research I think OAUTH 2.0 (or even OAUTH 1.0) is the best way to go, it's a public widely used protocol and supports <code>Authorization</code> and <code>Authentication</code> and we can control the lifetime of keys and even have a special <code>refresh key</code> allowing the client to not store password information for acquiring a new <code>key</code> if needed.</p>

<p>I also think <code>Apache Shiro</code> is the best framework for <code>Security</code>, <code>Authorization</code> and <code>Authentication</code> in java, so it comes to a surprize for me when I can't find any integrations between <code>Shiro</code> and <code>OAUTH 2.0</code>...ok there is <a href=""https://shiro.apache.org/integration.html"" rel=""nofollow noreferrer"">one that's 5 years old</a>, and doesn't inspire much trust to me.</p>

<p>Even more curious is the fact that Les Hazlewood, the Apache Shiro PMC Chair, owns (ok, owned, he just sold it to Okta) Stormpath, a company made for <code>Identity</code> and <code>User Management</code>, so I would expect him to have provided some easy integrations between <code>OAUTH 2.0</code> and <code>Shiro</code>, unless this would disrupt Stormpath business plan too much I guess (which I don't believe, since the Apache Foundation won't allow this kind of behavior).</p>

<p>So the final questions are:</p>

<h3>1 - <strong>Are there any easy integrations between <code>Shiro</code> and <code>OAUTH 2.0</code> or will I have to code my own?</strong></h3>

<h3>2 - Does everyone implement their own <code>OAUTH 2.0</code> solution for dealing with <code>REST APIs</code> access control or am I missing something?</h3>
","<java><rest><security><oauth-2.0><shiro>","2",""
"17254580","does apache shiro supports user groups concept?","<p>I'm reading the <code>shiro</code> documentation and never found any signs that <code>shiro</code> supports user groups concept on API level.</p>

<p>I would have expected that <code>Subject.java</code> would have such methods as <code>getUserGroups</code>, but it doesn't. For example, if I write some application which aims to work with numerous authentication systems, when the user creates some object, I would like to make it visible for all users in the object creator's groups, and to do it in an authentication provider agnostic way, using some facade API, like shiro Subject.</p>

<p>But it's looks like I can't doing this using <code>shiro</code> api, is this correct?</p>

<p>How do you support user groups concept in multi-auth applications ?</p>

<p>Should I write some <code>UserGroupAwareSubject</code> extension ?</p>
","<authorization><groups><shiro>","1","17255886"
"10786297","Java – efficient, database-aware instance-level authorization?","<p>In a JPA app I have a scenario in which the app is to </p>

<blockquote>
  <p>list all accounts the given user is authorized to withdraw from</p>
</blockquote>

<p>I have the Account entity and a many-to-many table that lists what authorizations each user has on each account – to implement the above scenario, the app currently just inner-joins the two tables – which is quite quick.</p>

<p>Now, I was planning to add an explicit authorization layer (based on apache shiro / spring security / other) to insulate authorization-related logic from the rest of the code, but...</p>

<p>There are some 10k Accounts in the database and the ""average"" user is granted ""deposit"" on all of them, ""view"" on one half of them and ""withraw"" on just a few.</p>

<p>Does any security framework allow to implement this scenario efficiently?</p>

<p>Ie: is any of them able to ""decorate"" a  JPA query of the type ""select a from Account a"" (or the equivalent SQL) and thus get the list of accounts <em>without loading all user grants from the database</em>, and by all means, <em>without having to retrieve all accounts</em>?)</p>
","<java><jpa><spring-security><authorization><shiro>","3","12480120"
"12767592","Creating a custom login page + bean for Apache Shiro","<p>I have:</p>

<ol>
<li>A Java EE Web Application project in Netbeans 7.2. Shiro-Web is installed and working great with standard settings in the INI file: users are automatically redirected to the standard login.jsp page, where they can log in without problems.</li>
</ol>

<p>I want:</p>

<ol>
<li>To create a custom login page login.xhtml, annotated with PrimeFaces tags, where the login process is handled by a backing bean.</li>
</ol>

<p>I need:</p>

<ol>
<li><p>To understand the steps that need to be performed in this login bean. Currently, I have a working Realm implemented, and I am able to authenticate a user:</p>

<pre><code>UsernamePasswordToken currentUserToken = 
   new UsernamePasswordToken(userEmail, userPassword);

try {
    SecurityUtils.getSubject().login(currentUserToken);
}
catch(UnknownAccountException uae) {

    // TODO: Notify user that no such account exists
}
catch(IncorrectCredentialsException ice) {
    // TODO: Notify user that login attempt failed due to bad credentials
}

// TODO: How to set up user session an everything else, if login succeeded?
</code></pre>

<p>However, what additional steps do I need to take to make sure the users session (and everything else) is also properly set? I want to end up in the same state, as if I used the standard Shiro login feature (Session set up, appropriate settings set etc).</p></li>
<li><p>Eventually, to understand how to configure Shiro NOT to filter out the JSF tags in the login page. Currently, the rendering defaults to standard HTML, and all the graphic goodies disappear.</p></li>
</ol>
","<java-ee><primefaces><shiro>","0","12771541"
"11849903","Shiro creates a new session for every getSession()","<p>I'm using shiro (1.2.0) in a tapestry app. Right now I only want to use it for session management. While default session management (using ServletContainerSessionManager) works, when I try to switch to native sessions shiro stops keeping track of them:</p>

<pre><code>public static WebSecurityManager decorateWebSecurityManager(WebSecurityManager manager) {
  if(manager instanceof TapestryRealmSecurityManager) {
    DefaultWebSessionManager sessionManager = new DefaultWebSessionManager();
    MemorySessionDAO sessionDAO = new MemorySessionDAO();
    sessionManager.setSessionDAO(sessionDAO);
    ((TapestryRealmSecurityManager) manager).setSessionManager(sessionManager);
  }
  return null;
}
</code></pre>

<p>Debug output:</p>

<pre><code>07-08-12 17:47:57:339 - {TRACE} util.ThreadContext Thread [1072280360@qtp-1531443370-6];  Bound value of type [$WebSecurityManager_19518d48138a] for key [org.apache.shiro.util.ThreadContext_SECURITY_MANAGER_KEY] to thread [1072280360@qtp-1531443370-6]
07-08-12 17:47:57:339 - {TRACE} mgt.DefaultSecurityManager Thread [1072280360@qtp-1531443370-6];  Context already contains a SecurityManager instance.  Returning.
07-08-12 17:47:57:339 - {TRACE} mgt.AbstractValidatingSessionManager Thread [1072280360@qtp-1531443370-6];  Attempting to retrieve session with key org.apache.shiro.web.session.mgt.WebSessionKey@1dc49089
07-08-12 17:47:57:339 - {DEBUG} servlet.SimpleCookie Thread [1072280360@qtp-1531443370-6];  Found 'JSESSIONID' cookie value [sbrxl74ij1v8]
07-08-12 17:47:57:339 - {DEBUG} mgt.DefaultSecurityManager Thread [1072280360@qtp-1531443370-6];  Resolved SubjectContext context session is invalid.  Ignoring and creating an anonymous (session-less) Subject instance.
org.apache.shiro.session.UnknownSessionException: There is no session with id [sbrxl74ij1v8]
at     org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
</code></pre>
","<tapestry><shiro>","1","11862326"
"21182660","Shiro HttpSession in SessionListener?","<p>I'm trying to replace the session management (Currently handled by Catalina/Tomcat) of my webapp to shiro native session management.</p>

<p>This should be a fairly easy job, as is adverted by the shiro website:</p>

<blockquote>
  <p>Transparent HttpSession support - If you are using Shiro's native
  sessions, we have implemented HTTP Session API and the Servlet 2.5 API
  so you don't have to change any of your existing web code to use
  Shiro.</p>
</blockquote>

<p>So after, you replaced the local Session Manager with Shiro's <code>DefaultWebSessionManager</code> everything should work out of the box.</p>

<p>This is also the case for my webapp, except for a certain <code>javax.servlet.http.HttpSessionListener</code>. This Listener no longer gets events since using Shiro's session management. </p>

<p>No worries I thought! Shiro offers it's own <code>org.apache.shiro.session.SessionListener</code> interface that can be linked to the session manager.</p>

<p>However, this interface differs a lot from <code>javax.servlet.http.HttpSessionListener</code>. There are no longer <code>HttpSession</code> objects passed, instead the Shiro Listener passes it's own  <code>org.apache.shiro.session.Session</code> objects with the events.</p>

<p>My existing implementation works ofcourse only with <code>HttpSession</code> objects. I found out that a Shiro <code>Session</code> can be transformed to a <code>HttpSession</code>:</p>

<pre><code>// HttpServletRequest currentRequest;
// ServletContext servletContext;
// Session session;
HttpSession httpSession = new ShiroHttpSession(session, currentRequest, servletContext);
</code></pre>

<p>However there is no way to acces the HttpServletRequest and servletContext from the Shiro <code>SessionListener</code>.</p>

<p>Any ideas how to solve this problem, e.g. can you answer one of these two question?</p>

<ol>
<li>Why is the old <code>javax.servlet.http.HttpSessionListener</code> no longer
called?</li>
<li>How do I transform Shiro <code>Session</code> objects to <code>HttpSession</code>
objects in the shiro <code>SessionListener</code>?</li>
</ol>
","<java><session><tomcat><servlets><shiro>","4",""
"36561925","No bean named 'shiroFilter' is defined","<p>I am current embeding Shiro into my <strong>Spring Web</strong> application.</p>

<p>In <code>web.xml</code>, I added:</p>

<pre><code>    &lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
            &lt;param-value&gt;true&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
</code></pre>

<p>In <code>servlet-context.xml</code>, I added:</p>

<pre><code>    &lt;beans:bean id=""shiroFilter"" name=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;beans:property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;beans:property name=""filterChainDefinitions""&gt;
            &lt;beans:value&gt;
                # some example chain definitions:
                /admin/** = authc, roles[admin]
                /docs/** = authc, perms[document:read]
                /** = authc
                # more URL-to-FilterChain definitions here
            &lt;/beans:value&gt;
        &lt;/beans:property&gt;
    &lt;/beans:bean&gt;

    &lt;beans:bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;beans:property name=""realm"" ref=""myRealm""/&gt;
    &lt;/beans:bean&gt;

    &lt;beans:bean id=""myRealm"" class=""com.hersbitcloud.cancercloud.ShiroRealm""&gt;

    &lt;/beans:bean&gt;
</code></pre>

<p>And because I haven't found a solution for the JDBD realm, so I am just using the <code>AuthenticatingRealm</code> as:</p>

<pre><code>public class ShiroRealm extends AuthenticatingRealm {

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken arg0) throws AuthenticationException {
        // TODO Auto-generated method stub
        return null;
    }
}
</code></pre>

<p>However, I got the following exception:</p>

<pre><code>org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'shiroFilter' is defined
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:698)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1175)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:284)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1057)
    at org.springframework.web.filter.DelegatingFilterProxy.initDelegate(DelegatingFilterProxy.java:326)
    at org.springframework.web.filter.DelegatingFilterProxy.initFilterBean(DelegatingFilterProxy.java:235)
    at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:199)
    at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:279)
    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:260)
    at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:105)
    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4640)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5262)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1408)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1398)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)
</code></pre>

<p>How can I solve this?</p>

<p>Thank you.</p>
","<java><spring><shiro>","0","44623202"
"29304315","Can apache Shiro be used to build an Identity Provider?","<p>I am looking with Apache shrio framework. Looking at it authentication and authorization features can i build Identity server provider using shrio framework.</p>

<p>Is it possible to have features like,</p>

<ul>
<li>Single Sign On</li>
<li>SAML support</li>
<li>Federation based on attributes </li>
</ul>

<p>Do we need to write everything from scratch or shrio has some API's to handle such kind of features.</p>

<p>I read the documentation where they say about having SSO features based on Sharing of user session with multiple organizations . But i did not see any direct support API's to handle this.</p>

<p>To act as an IDP what shrio gives and what it does not support?</p>

<p>Please suggest.</p>

<p>Thanks,
Sohan</p>
","<apache><single-sign-on><shiro><ws-federation><federation>","1","29824132"
"23775599","Apache Shiro Authentication with Facebook OAuth","<p>I am stucked in authenticating my application running on Shiro with Facebook OAuth. I really don't know what am I doing wrong. Bascially, my problem is when I get a ""code"" from Facebook. I want shiro to authenticate it using that code. 
This is my authentication code.</p>

<pre><code>FacebookToken token = null;
        try{
                org.apache.shiro.subject.Subject currentUser = SecurityUtils.getSubject();
                //currentUser.logout(); 
                //This is done to avoid temporary multiple url hit.., when the user is not logged out

                token = new FacebookToken(code);
                currentUser.login(token);  //returns true if valid 
               result =  true;
            }catch (UnknownAccountException uae) {
                log.info(""There is no user with username of "" + token.getPrincipal());
            } catch (IncorrectCredentialsException ice) {
                log.info(""Password for account "" + token.getPrincipal() + "" was incorrect!"");
            } catch (LockedAccountException lae) {
                log.info(""The account for username "" + token.getPrincipal() + "" is locked.  "" +
                        ""Please contact your administrator to unlock it."");
            }
            // ... catch more exceptions here (maybe custom ones specific to your application?
            catch (AuthenticationException ae) {
                log.info(""Authentication exception Here."");
            }
</code></pre>

<p>Here is my facebook token class:</p>

<pre><code>public class FacebookToken implements AuthenticationToken {

    private static final long serialVersionUID = 1L;
    private String code;
    public FacebookToken(){

    }

    public FacebookToken(String code){
        this.code = code;
    }

    public Object getCredentials() {

        return null; //Credentials are handled by facebook 
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public Object getPrincipal() {
        return null; //Not known facebook does the login
    }
</code></pre>

<p>I have the realm for facebook that is extending authorization realms.</p>

<pre><code>public class FacebookRealm extends AuthorizingRealm {
    }
</code></pre>

<p>and finally here is my shiro.ini file: </p>

<pre><code>[main]  
#authc.loginUrl = /login
#authc.successUrl  = /hello
#logout.redirectUrl = /hello

# ------------------------  
# Database  

# Own Realm  
jdbcRealm = com.shiro.common.controller.MyCustomRealm
facebookRealm = com.facebook.login.FacebookRealm


# Sha256  
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:  
sha256Matcher.storedCredentialsHexEncoded = false  
sha256Matcher.hashIterations = 1024  

#Facebook Credential matcher
fbCredentialsMatcher = com.facebook.login.FacebookCredentialsMatcher 


jdbcRealm.credentialsMatcher = $sha256Matcher
facebookRealm.credentialsMatcher = $fbCredentialsMatcher


# User Query  
# default is ""select password from users where username = ?""  
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE email = ?

# permissions  
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select roleName from UserRole where email = ?
jdbcRealm.permissionsQuery = select permission from RolesPermission where roleName = ?

# Connection   
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = root123
ds.databaseName = testdb
jdbcRealm.dataSource=$ds

#authc.usernameParam = email
#authc.passwordParam = password
#authc.failureKeyAttribute = shiroLoginFailure

# Use Built-in Chache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

#securityManager.realms = $facebookRealm,$jdbcRealm
securityManager.realms = $facebookRealm


# -----------------------------------------------------------------------------  
[urls]  
#/hello = authc
#/login = authc
#/admin.jsp = authc, perms[""admin:access""]
</code></pre>

<p>Now when do i debug and reach at currentuser.login methods and go inside, it throws an exception saying 
Realm [FacebookRealm@52039826] does not support authentication token [FacebookToken@132d9844]. Please ensure that the appropriate Realm implementation is configured correctly or that the realm accepts AuthenticationTokens of this type.</p>

<p>Please suggest me whether am I doing correct, or not !! Am i missing any configuration or any thing else. Thank you !!</p>
","<facebook><apache><authentication><authorization><shiro>","2","23775791"
"40105576","org.hibernate.exception.SQLGrammarException: could not extract ResultSet and ERROR: relation ""hibernate_sequence"" does not exist","<p>I am trying a connection from eclipse to postgresql(pg Admin  III).I am getting following errors.</p>

<p>I tried every stackoverflow link and other links too.Many of them stated that ""Because you are using @GeneratedValue()"".</p>

<p>I have two tables name ""User"" and ""Userrole"" in postgresql and myhibernate.cfg.xml is:-</p>

<blockquote>
  <p> 
  </p>
  
  <p></p>

<pre><code>&lt;property name=""dialect""&gt;org.hibernate.dialect.PostgreSQLDialect&lt;/property&gt;
&lt;property name=""connection.driver_class""&gt;org.postgresql.Driver&lt;/property&gt;
&lt;property name=""connection.url""&gt;jdbc:postgresql://localhost:5432/shiroexample&lt;/property&gt;
&lt;property name=""connection.username""&gt;postgres&lt;/property&gt;
&lt;property name=""connection.password""&gt;root&lt;/property&gt;
&lt;property name=""connection.autoReconnect""&gt;true&lt;/property&gt;

&lt;property name=""cache.provider_class""&gt;org.hibernate.cache.HashtableCacheProvider&lt;/property&gt;

&lt;property name=""transaction.factory_class""&gt;org.hibernate.transaction.JDBCTransactionFactory&lt;/property&gt;
&lt;property name=""current_session_context_class""&gt;thread&lt;/property&gt;
&lt;property name=""hibernate.show_sql""&gt;false&lt;/property&gt;

&lt;mapping class=""com.jjoe64.shiroexample.models.User""&gt;&lt;/mapping&gt;
&lt;mapping class=""com.jjoe64.shiroexample.models.UserRole""&gt;&lt;/mapping&gt;
&lt;mapping class=""com.jjoe64.shiroexample.models.RolesPermission""&gt;&lt;/mapping&gt;

&lt;/session-factory&gt;
</code></pre>
  
  <p></p>
</blockquote>

<p>Error on run.I am using Tomcat server</p>

<pre><code>&gt; HTTP Status 500 - Filtered request failed.
&gt;     
&gt;     --------------------------------------------------------------------------------
&gt;     
&gt;     type Exception report
&gt;     
&gt;     message Filtered request failed.
&gt;     
&gt;     description The server encountered an internal error that prevented it from fulfilling this request.
&gt;     
&gt;     exception 
&gt;     
&gt;     javax.servlet.ServletException: Filtered request failed.
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:384)
&gt;       org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
&gt;     
&gt;     
&gt;     root cause 
&gt;     
&gt;     org.hibernate.exception.SQLGrammarException: could not extract ResultSet
&gt;       org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:123)
&gt;       org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
&gt;       org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:125)
&gt;       org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:110)
&gt;       org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:88)
&gt;       org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:122)
&gt;       org.hibernate.id.SequenceGenerator.generate(SequenceGenerator.java:115)
&gt;       org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:117)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:206)
&gt;       org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:55)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:191)
&gt;       org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:49)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
&gt;       org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:683)
&gt;       org.hibernate.internal.SessionImpl.save(SessionImpl.java:675)
&gt;       org.hibernate.internal.SessionImpl.save(SessionImpl.java:671)
&gt;       com.jjoe64.shiroexample.RegisterServlet.registrate(RegisterServlet.java:102)
&gt;       com.jjoe64.shiroexample.RegisterServlet.doPost(RegisterServlet.java:65)
&gt;       javax.servlet.http.HttpServlet.service(HttpServlet.java:650)
&gt;       javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
&gt;       org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
&gt;       org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
&gt;       org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
&gt;       org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
&gt;       org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
&gt;     
&gt;     
&gt;     root cause 
&gt;     
&gt;     org.postgresql.util.PSQLException: ERROR: relation ""hibernate_sequence"" does not exist
&gt;       Position: 17
&gt;       org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2453)
&gt;       org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2153)
&gt;       org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:286)
&gt;       org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:432)
&gt;       org.postgresql.jdbc.PgStatement.execute(PgStatement.java:358)
&gt;       org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:171)
&gt;       org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:119)
&gt;       org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:79)
&gt;       org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:122)
&gt;       org.hibernate.id.SequenceGenerator.generate(SequenceGenerator.java:115)
&gt;       org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:117)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:206)
&gt;       org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:55)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:191)
&gt;       org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:49)
&gt;       org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
&gt;       org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:683)
&gt;       org.hibernate.internal.SessionImpl.save(SessionImpl.java:675)
&gt;       org.hibernate.internal.SessionImpl.save(SessionImpl.java:671)
&gt;       com.jjoe64.shiroexample.RegisterServlet.registrate(RegisterServlet.java:102)
&gt;       com.jjoe64.shiroexample.RegisterServlet.doPost(RegisterServlet.java:65)
&gt;       javax.servlet.http.HttpServlet.service(HttpServlet.java:650)
&gt;       javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
&gt;       org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
&gt;       org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
&gt;       org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
&gt;       org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
&gt;       org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
&gt;       org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
&gt;     
&gt;     
&gt;     note The full stack trace of the root cause is available in the Apache Tomcat/7.0.69 logs.
&gt;     
&gt;     
&gt;     --------------------------------------------------------------------------------
&gt;     
&gt;     Apache Tomcat/7.0.69
</code></pre>

<p>Initially I think that User is reserve keyword but then I use User with \""User\"" but nothing work for me.</p>

<p>If anyone can help me...!!</p>
","<java><spring><postgresql><hibernate><shiro>","0",""
"25957721","Apache Shiro authc.loginUrl no redirect to my jersey services after login","<p><strong>I want to secure my jersey JAX-RS services with Apache Shiro security <em>with out JSP</em>
but its not working.</strong></p>

<p>when i use browser to test my services the server redirect me to login page
as expected and when i insert username and password and then press submit button
<strong>the server does not redirect me back to the service after login</strong>.</p>

<p>i am getting this Error: <strong>HTTP ERROR 404 Problem accessing /rest/hello/some_text. Reason:  Not Found Powered by Jetty://</strong></p>

<p>the code I working on it can be download from here <a href=""https://github.com/javajack/shiro-jersey.git"" rel=""nofollow"">https://github.com/javajack/shiro-jersey.git</a>
and look for <strong>sub project ""jersey-sample""</strong>
i only modified the  shiro.ini and change the: ""authcBasic"" to ""authc"".</p>

<p>i test it with my browser: <strong>url: localhost:port/rest/hello/some_text</strong></p>

<p>what am i missing ?</p>

<p>the following is my configuration:</p>

<p>shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /connect.html

[users]
root = secret,admin
guest = guest,guest
presidentskroob = 12345,president
darkhelmet = ludicrousspeed,darklord,schwartz
lonestarr = vespa,goodguy,schwartz

[roles]
admin = *
schwartz = lightsaber:*
goodguy = winnebago:drive:eagle5

[urls]
/connect.html = authc
/rest/** = authc
</code></pre>

<p>web.xml:</p>

<pre><code> &lt;!DOCTYPE web-app PUBLIC
 ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN""
 ""http://java.sun.com/dtd/web-app_2_3.dtd"" &gt;

&lt;web-app&gt;
    &lt;display-name&gt;rest web application JAX-RS with Security Framework&lt;/display-name&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;jersey-servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;com.sun.jersey.config.property.packages&lt;/param-name&gt;
            &lt;param-value&gt;org.apache.shiro.jersey.sample&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;com.sun.jersey.spi.container.ResourceFilters&lt;/param-name&gt;
            &lt;param-value&gt;org.apache.shiro.jersey.ShiroResourceFilterFactory&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;jersey-servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>AdminSecretsResource.java</p>

<pre><code>package org.apache.shiro.jersey.sample;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.core.Response;

import org.apache.shiro.authz.annotation.RequiresRoles;

@Path(""/admin"")
@RequiresRoles(""admin"")
public class AdminSecretsResource {

   @GET
   public Response tellSecret() {
      final String output = ""Shh, the secret answer is 41."";
      return Response.status(200).entity(output).build();
   }

}
</code></pre>

<p>HelloWorldResource .java</p>

<pre><code>package org.apache.shiro.jersey.sample;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.Response;

@Path(""/hello"")
public class HelloWorldResource {

   @GET
   @Path(""/{message}"")
   public Response sayHello(@PathParam(""message"") String message) {
      String output = ""Jersey says : "" + message;
      return Response.status(200).entity(output).build();
   }

}
</code></pre>

<p>connect.html</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Apache Shiro Tutorial Webapp : Login&lt;/title&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;
    &lt;link rel=""stylesheet"" href=""//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css""&gt;
    &lt;link rel=""stylesheet"" href=""//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap-theme.min.css""&gt;
    &lt;style&gt; body{padding-top:20px;} &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=""container""&gt;
        &lt;div class=""row""&gt;
            &lt;div class=""col-md-4 col-md-offset-4""&gt;
                &lt;div class=""panel panel-default""&gt;
                    &lt;div class=""panel-heading""&gt;
                        &lt;h3 class=""panel-title""&gt;Please sign in&lt;/h3&gt;
                    &lt;/div&gt;
                    &lt;div class=""panel-body""&gt;
                        &lt;form name=""loginform"" action="""" method=""POST"" accept-charset=""UTF-8"" role=""form""&gt;
                            &lt;fieldset&gt;
                                &lt;div class=""form-group""&gt;
                                    &lt;input class=""form-control"" placeholder=""Username or Email"" name=""username"" type=""text""&gt;
                                &lt;/div&gt;
                                &lt;div class=""form-group""&gt;
                                    &lt;input class=""form-control"" placeholder=""Password"" name=""password"" type=""password"" value=""""&gt;
                                &lt;/div&gt;
                                &lt;div class=""checkbox""&gt;
                                    &lt;label&gt;
                                        &lt;input name=""rememberMe"" type=""checkbox"" value=""true""&gt; Remember Me
                                    &lt;/label&gt;
                                &lt;/div&gt;
                                &lt;input class=""btn btn-lg btn-success btn-block"" type=""submit"" value=""Login""&gt;
                            &lt;/fieldset&gt;
                        &lt;/form&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script src=""https://code.jquery.com/jquery.js""&gt;&lt;/script&gt;
    &lt;script src=""//netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>pom.xml:</p>

<pre><code>&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd""&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.apache.shiro.jersey&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-jersey-root&lt;/artifactId&gt;
        &lt;version&gt;1.0.0&lt;/version&gt;
        &lt;relativePath&gt;../pom.xml&lt;/relativePath&gt;
    &lt;/parent&gt;

    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-sample&lt;/artifactId&gt;
    &lt;name&gt;Apache Shiro :: Samples :: Jersey&lt;/name&gt;
    &lt;version&gt;1.0.0&lt;/version&gt;
    &lt;packaging&gt;war&lt;/packaging&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
            &lt;version&gt;[1.2.1,2.0.0)&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
            &lt;version&gt;[1.2.1,2.0.0)&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-jersey&lt;/artifactId&gt;
            &lt;version&gt;1.0.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
            &lt;version&gt;[1.10,2.0)&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-servlet&lt;/artifactId&gt;
            &lt;version&gt;[1.10,2.0)&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;commons-logging&lt;/groupId&gt;
            &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
            &lt;version&gt;1.2&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;


    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;forkMode&gt;never&lt;/forkMode&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;
                &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;
                &lt;version&gt;6.1.26&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;contextPath&gt;/&lt;/contextPath&gt;
                    &lt;connectors&gt;
                        &lt;connector implementation=""org.mortbay.jetty.nio.SelectChannelConnector""&gt;
                            &lt;port&gt;9080&lt;/port&gt;
                            &lt;maxIdleTime&gt;60000&lt;/maxIdleTime&gt;
                        &lt;/connector&gt;
                    &lt;/connectors&gt;
                    &lt;requestLog implementation=""org.mortbay.jetty.NCSARequestLog""&gt;
                        &lt;filename&gt;./target/yyyy_mm_dd.request.log&lt;/filename&gt;
                        &lt;retainDays&gt;90&lt;/retainDays&gt;
                        &lt;append&gt;true&lt;/append&gt;
                        &lt;extended&gt;false&lt;/extended&gt;
                        &lt;logTimeZone&gt;GMT&lt;/logTimeZone&gt;
                    &lt;/requestLog&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>
","<java><apache><rest><jersey><shiro>","1","25958377"
"7544903","Grails problem with shiro-quick-start: imports cannot be resolved (by Eclipse)","<p>On my fresh new grails project, I installed shiro
(<code>grails install-plugin shiro</code>)
and the quick setup <code>grails shiro-quick-start</code>. This generated new files as described in the <a href=""http://grails.org/plugin/shiro"" rel=""nofollow noreferrer"">shiro documentatio</a>n.</p>

<p>However, in one of those files, <code>controllers/(default package)AuthController.groovy</code> there are eight problem marked by eclipse (SpringSource Tools Suite). Five of those problems address the five imports respectively: </p>

<pre><code> Groovy:unable to resolve class org.apache.shiro.authc.AuthenticationException
 …
</code></pre>

<p>Specifying the correct package and moving the file to that package doesn’t solve the problem. The three other problem markers are:</p>

<pre><code> Groovy:Catch statement parameter type is not a subclass of Throwable.
</code></pre>

<p>(x3)
I suppose this problem might be related to the failed imports and might thus vanish once the previous problem is resolved.</p>

<p>Now, I could <a href=""https://stackoverflow.com/questions/5815401/how-to-implement-shiro-security-of-grails-in-my-project"">set up shiro myself</a> without the quick start, but tbh I’d prefer to stick with the quick start and expand on that, as described in the guide.</p>

<p>(obvious) <strong>Question 1</strong>: Does anybody have an idea as to why Eclipse gives me those error messages? Did I miss a step in the installation process?</p>

<p>(not so important) <strong>Question 2</strong>: I tried to apply the <a href=""https://stackoverflow.com/questions/6917127/specifing-package-for-shirouser-in-grails"">fix</a> to the (default package) issue, only to find that there is already a reference to the package path at the relevant part of _ShiroInternal.groovy. Why does it still install to default directory? Might this be related to my problem?</p>

<p>Additional oddity: There is another file, <code>realm/ShiroDbRealm.groovy</code>, that includes imports of <code>org.apache.shiro</code> resources. There is no package declaration and there are no error markers in Eclipse. Once I add the correct package declaration of my project and move the file to that package, imports cannot be resolved anymore. This might be a clue to what is happening here.</p>
","<eclipse><grails><import><shiro>","4","8779891"
"13950900","SslFilter in shiro does not redirect back to http","<p>How can I make shiro change back to ""http"" for URLs there were not configured with SSL?</p>

<p>Currently I have the login url hooked with an SSL filter.</p>

<p>/login = ssl[8443],authc</p>

<p>When I login, it stays in https, and does not switch back to HTTP.</p>

<p>How can I make it revert back to HTTP for URLs that are not SslFilter'ized?</p>
","<java><shiro>","2",""
"13104509","Shiro/Spring MVC Redirect to original/requested page upon successful login","<p>How to achieve below scenario in a Spring MVC application with Shiro security:</p>

<blockquote>
  <p>If the user not authenticated and requesting for a page, Shiro should
  redirect to the login page. The user logs in successfully and Shiro
  redirects to the previously requested page instead of the <code>successUrl</code>
  URL</p>
</blockquote>

<p>The login part is working alright in my application. Below is a snippet from my existing code</p>

<pre><code>&lt;!-- Shiro filter --&gt;
    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""/login"" /&gt;
        &lt;property name=""successUrl"" value=""/dashboard"" /&gt;
        &lt;property name=""unauthorizedUrl"" value=""/error"" /&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt; 
                &lt;!-- !!! Order matters !!! --&gt;
                /authenticate = anon
                /login = anon
                /logout = anon
                /error = anon
                /static/** = anon
                /** = authc
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>
","<spring-mvc><shiro>","1",""
"17694606","How to find missing class when you get ""java.lang.ClassNotFoundException: void""","<p>I am using Shiro in a JSF 2 (maven) project running on Glassfish. All related dependencies (shiro-ehcache-1.2.2.jar, ehcache-core-2.5.0) are added. My project compiles and runs smoothly but as soon as I mark a ManagedBean with @ViewScoped annotation, I get this irritating ClassNotFound Exception: </p>

<pre><code>WARNING: StandardWrapperValve[Faces Servlet]: PWC1406: Servlet.service() for servlet Faces Servlet threw exception java.lang.ClassNotFoundException: void
    at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1509) 
    at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1359) 
    at java.lang.Class.forName0(Native Method) 
    at java.lang.Class.forName(Class.java:247) 
    at net.sf.ehcache.util.ClassLoaderUtil.loadClass(ClassLoaderUtil.java:129) 
    at net.sf.ehcache.util.PreferTCCLObjectInputStream.resolveClass(PreferTCCLObjectInputStream.java:44) 
    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1574) 
    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1495) 
    at java.io.ObjectInputStream.readClass(ObjectInputStream.java:1461) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1311) 
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1666) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1322) 
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1666) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1322) 
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1666) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1322) 
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1666) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1322) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at java.util.HashMap.readObject(HashMap.java:1030) 
    at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1666) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1322) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at java.util.HashMap.readObject(HashMap.java:1030) 
    at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at java.util.HashMap.readObject(HashMap.java:1030) 
    at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at java.util.HashMap.readObject(HashMap.java:1030) 
    at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at org.apache.shiro.session.mgt.SimpleSession.readObject(SimpleSession.java:500) 
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) 
    at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:479) 
    at net.sf.ehcache.Element.readObject(Element.java:800) 
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
    at java.lang.reflect.Method.invoke(Method.java:597) 
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:969) 
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848) 
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) 
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) 
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) 
    at net.sf.ehcache.store.disk.DiskStorageFactory.read(DiskStorageFactory.java:378) 
    at net.sf.ehcache.store.disk.DiskStorageFactory.retrieve(DiskStorageFactory.java:960) 
    at net.sf.ehcache.store.disk.Segment.decodeHit(Segment.java:178) 
    at net.sf.ehcache.store.disk.Segment.get(Segment.java:216) 
    at net.sf.ehcache.store.disk.DiskStore.get(DiskStore.java:504) 
    at net.sf.ehcache.store.disk.DiskStore.getQuiet(DiskStore.java:511) 
    at net.sf.ehcache.store.FrontEndCacheTier.getQuiet(FrontEndCacheTier.java:196) 
    at net.sf.ehcache.Cache.searchInStoreWithoutStats(Cache.java:2101) 
    at net.sf.ehcache.Cache.get(Cache.java:1630) 
    at org.apache.shiro.cache.ehcache.EhCache.get(EhCache.java:73) 
    at org.apache.shiro.session.mgt.eis.CachingSessionDAO.getCachedSession(CachingSessionDAO.java:217) 
    at org.apache.shiro.session.mgt.eis.CachingSessionDAO.getCachedSession(CachingSessionDAO.java:202) 
    at org.apache.shiro.session.mgt.eis.CachingSessionDAO.readSession(CachingSessionDAO.java:259) 
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236) 
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222) 
    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118) 
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:108) 
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:100) 
    at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:125) 
    at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456) 
    at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442) 
    at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338) 
    at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846) 
    at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148) 
    at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292) 
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359) 
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) 
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256) 
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:217) 
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:279) 
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) 
    at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:655) 
    at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:595) 
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:161) 
    at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:331) 
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:231) 
    at com.sun.enterprise.v3.services.impl.ContainerMapper$AdapterCallable.call(ContainerMapper.java:317) 
    at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:195) 
    at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:860) 
    at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:757) 
    at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1056) 
    at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:229) 
    at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137) 
    at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104) 
    at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90) 
    at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79) 
    at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54) 
    at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59) 
    at com.sun.grizzly.ContextTask.run(ContextTask.java:71) 
    at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532) 
    at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513) 
    at java.lang.Thread.run(Thread.java:662) 
</code></pre>

<p>As the exception happens internally in shiro-ehcache classes and it says: <strong>""java.lang.ClassNotFoundException: void""</strong> I cannot infer, which class or jar is causing the trouble. It seems one of my beans cannot be serialized but which one? My question is:</p>

<p>How can we find offending classes in such a situation?</p>

<p>Edit: I have a navigation bean which is sessionscoped:</p>

<pre><code>@ManagedBean
@SessionScoped
public class NavigationBean implements Serializable {
private static final long serialVersionUID = 2L;

@Inject
private transient Logger log;

private String page = ""/subpages/admin_home.xhtml"";

public NavigationBean() {
}

public String getPage() {
    return page;
}

public void setPage(String page) {
    this.page = page;

}


}
</code></pre>

<p>And another sessionscoped bean:</p>

<pre><code>@ManagedBean
@SessionScoped
public class SettingsBean implements Serializable {

private static final long serialVersionUID = 1L;

@Inject
private transient Logger log;

private static final Locale Turkish = new Locale(""tr"");
private static final Locale English = Locale.ENGLISH;
private Locale locale = FacesContext.getCurrentInstance().getViewRoot().getLocale();
private static final Map&lt;String,Object&gt; countries;
static {
        countries = new LinkedHashMap&lt;String,Object&gt;();
        countries.put(""English"", English); //label, value
        countries.put(""Türkçe"", Turkish);
}

/**
 * Creates a new instance of SettingsBean
 */
public SettingsBean() {
    System.out.print(""Settings bean constructed"");
}

@PostConstruct
public void init(){
    log.debug (""Settings bean initialized"");
}

public Locale getLocale() {
    return locale;
} 

public String getLanguage() {
    String lang = locale.getLanguage();
    if (lang.equals(""en_US"")){lang=""en"";}
    else if (lang.equals(""tr_tr"")){lang=""tr"";}
    return lang;
}

public void setLanguage(String language) {
    locale = new Locale(language);
    FacesContext.getCurrentInstance().getViewRoot().setLocale(locale);

    //String Msg = Messages.getResourceBundleString(""M"",""LanguageChanged"");
    String Msg = Messages.getString(""LanguageChanged"");

    FacesMessage facesmsg = new FacesMessage(FacesMessage.SEVERITY_INFO, Msg, """");  
    FacesContext.getCurrentInstance().addMessage(null, facesmsg);
    log.debug(Msg + "" : "" + language);
}

public Map&lt;String, Object&gt; getCountriesInMap() {
        return countries;
}


//value change event listener
public void countryLocaleCodeChanged(ValueChangeEvent e){

    String newLocaleValue = e.getNewValue().toString();

    for (Map.Entry&lt;String, Object&gt; entry : countries.entrySet()) {

       if(entry.getValue().toString().equals(newLocaleValue)){
                            setLanguage(entry.getValue().toString());
      }
   }
}    
</code></pre>

<p>}</p>
","<jsf><jsf-2><cdi><ehcache><shiro>","2",""
"18326128","Shiro in Java EE 6 application","<p>I was following BalusC code to manage user authentication in Java EE 6 (<a href=""http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow noreferrer"">http://balusc.blogspot.com/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a>) which works great if I stay on the same web container.</p>

<p>I'm facing an issue that perhaps anyone can help me.
When injecting an EJB that resides in the Web container, the <code>SecurityUtils.getSubject()</code> works ok from any method of that EJB.</p>

<p>The problem is when I try to do it on an injected EJB from another container (even an ejb jar in the same EAR).</p>

The error I get is:

<blockquote>
  <p>Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.</p>
</blockquote>

The use case is:

<p>Managed bean <code>A</code> with injected stateless session bean <code>B</code>. Class <code>A</code> resides in myApp.war, class <code>B</code> resides in myApp.ejb, both inside myApp.ear. I am calling <code>SecurityUtils</code> from class <code>B</code>.</p>

<p>Do you have any clues on how to solve this?</p>

<p>I am running JSF 2, Java EE 6, JBoss 7.1.</p>
","<java-ee><jsf-2><jboss7.x><java-ee-6><shiro>","2","18432440"
"7906647","override shiro unauthorized page","<p>I need to know how to override shiro unauthorized page. i.e. when a user does not have some permission for a protected url, shiro return page 401. how we can make it forward user to a pre-defined unauthorized  page? </p>

<p>Thanks...</p>
","<security><shiro>","1",""
"13696485","Shiro Active Diectory with custom roles","<p>How do I configure a Shiro to use Active Directory Authentication, but in addition I want to map the usernames to custom roles. I can't seem to find any information on this. Can anyone give me any pointers?</p>
","<apache><active-directory><shiro>","0","14140851"
"19995399","How to authenticate and authorize an Android application with Apache Shiro","<p>I developed a Java web application with Rest full service and I have integrated <code>Apache Shiro</code> for session management and it's working fine for the web. And now I developed an android application and I am able to communicate with the rest full services. When I login with my android application Apache Shiro provides me a session but after which for any other rest full calls I make <code>SecurityUtils.getSubject().isAuthenticated()</code> return false. As I am new I do not know  how to authenticate an android application using Apache Shiro</p>
","<java><android><restful-authentication><shiro>","1",""
"26259382","Apache shiro remember me not working","<p>Im trying to use the rememberme feature from apache shiro, but its not working.</p>

<p>I have this shiro.ini</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource  
ds.resourceName = java:/comp/env/jdbc/myDS


# JDBC realm config  
jdbcRealm = br.com.myproject.web.service.security.JdbcRealmImpl
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = SELECT password FROM user WHERE username = ? AND status = 1
jdbcRealm.dataSource = $ds

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
jdbcRealm.credentialsMatcher = $sha256Matcher
securityManager.realms = $jdbcRealm

[urls]
/** = authcBasic
</code></pre>

<p>This is my JdbcRealmImpl:</p>

<pre><code>public class JdbcRealmImpl extends JdbcRealm {

    public JdbcRealmImpl() {
        super();
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(
            final AuthenticationToken token) throws AuthenticationException {

        final AuthenticationInfo info = super.doGetAuthenticationInfo(token);

        final UserDB userDB = new UserDB();
        final User user = userDB.getUserByUsername((String) token.getPrincipal());

        return new SimpleAuthenticationInfo(user, info.getCredentials(), getName());
    }    

}
</code></pre>

<p>Since this is a web service project i have a login service:</p>

<pre><code>@POST
@Path(""/login"")
public Response login(@FormParam(""username"") final String username, @FormParam(""password"") final String password, @FormParam(""remember"") final boolean remember) {

    final Subject currentUser = SecurityUtils.getSubject();

    if (!currentUser.isAuthenticated()) {
        final UsernamePasswordToken token = new UsernamePasswordToken(username, password);
        try {
            token.setRememberMe(remember);
            currentUser.login(token);
        } catch (final AuthenticationException e) {
            return Response.status(Status.BAD_REQUEST).entity(""Invalid user"").build();
        }
    }

    return Response.ok().build();
}
</code></pre>

<p>The problem is that SecurityUtils.getSubject().isRemembered() always return false even when i set token.setRememberMe(true);</p>

<p>Is there any configuration that im missing?</p>
","<shiro><remember-me>","1",""
"10413975","How can I provide addition user's data on login (CAS)","<p>Is it possible to provide additional user's data (like email) to clients?</p>

<p>My CAS server gets full about user from dataSource. After client application logged in I have only user name. How can I transfer user's info from CAS server app to CAS client app? </p>

<p>Suppose I can implement RESTful service that will be called after login by CAS client app but how can I secure it?</p>
","<spring-security><single-sign-on><cas><shiro>","2",""
"8952463","Shiro 1.2 not working with Guice (and Vaadin)","<p>First time user, please be kind!</p>

<p>I have a bit of a problem configuring Shiro to filter Vaadin-generated pages using Guice. </p>

<p>I have looked online on various websites including the Apache Shiro's guides and etc. Problem is that most websites tend to do it the 'old' fashion way, i.e. using Shiro 1.1 (which doesn't have native Guice support). </p>

<p>So here is the problem. My pages don't get filtered through Shiro. I have tried a zillion different things including using AOP for method authentication, setting filters up manually in the web.xml. Even setting up a shiro.ini file (which I do NOT want to do under any circumstances).</p>

<p>So here is the list of things I am using:
- Shiro 1.2.0-SNAPSHOT
- Guice 3.0
- Vaadin 6.7.4</p>

<p>Here is my web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
    id=""WebApp_ID"" version=""2.5""&gt;

    &lt;display-name&gt;App&lt;/display-name&gt;

    &lt;context-param&gt;
        &lt;description&gt;Vaadin production mode&lt;/description&gt;
        &lt;param-name&gt;productionMode&lt;/param-name&gt;
        &lt;param-value&gt;false&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.google.inject.servlet.GuiceFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;com.app.GuiceServletInjector&lt;/listener-class&gt;
    &lt;/listener&gt;

&lt;/web-app&gt;
</code></pre>

<p>Here is the Servlet Injector:</p>

<pre><code>public class GuiceServletInjector extends GuiceServletContextListener {
    private ServletContext servletContext;

    @Override
    public void contextInitialized(ServletContextEvent servletContextEvent) {
        servletContext = servletContextEvent.getServletContext();
        super.contextInitialized(servletContextEvent);
    }

    @Override
    protected Injector getInjector() {
        return Guice.createInjector(new GuiceServletModule(), new ShiroConfigurationModule(servletContext));
    }
</code></pre>

<p>Which then creates a ServletModule, which passes the request to the Vaadin app:</p>

<pre><code>protected void configureServlets() {
    bind(Application.class).to(VaadinMainWindow.class).in(ServletScopes.SESSION);

    bind(BasicHttpAuthenticationFilter.class).in(Singleton.class);
    filter(""/*"").through(BasicHttpAuthenticationFilter.class);

    serve(""/*"", ""*"").with(VaadinApp.class);
}
</code></pre>

<p>Also during the injector stage, please notice that I create a ShiroConfigurationModule, which takes care of the realms and etc:</p>

<pre><code>public class ShiroConfigurationModule extends ShiroWebModule {

    @Inject
    public ShiroConfigurationModule(ServletContext servletContext) {
        super(servletContext);
    }

    @Override
    protected void configureShiroWeb() {
        bindRealm().to(ShiroBaseRealm.class).in(Singleton.class);
        bind(Realm.class).to(ShiroBaseRealm.class).in(Singleton.class);

        processMethodInterceptors();
    }

    private void processMethodInterceptors() {
        MethodInterceptor interceptor = new AopAllianceAnnotationsAuthorizingMethodInterceptor();
        bindInterceptor(any(), annotatedWith(RequiresRoles.class), interceptor);
        bindInterceptor(any(), annotatedWith(RequiresPermissions.class), interceptor);
        bindInterceptor(any(), annotatedWith(RequiresAuthentication.class), interceptor);
        bindInterceptor(any(), annotatedWith(RequiresUser.class), interceptor);
        bindInterceptor(any(), annotatedWith(RequiresGuest.class), interceptor);
    }
}
</code></pre>

<p>The realm class returns 'true' for the supports(), but returns 'null' for everything, simulating that the user doesn't exists. </p>

<p>The chances of doing something wrong, or missing a step is very high. Can someone please care to explain what I'm missing so I can at least get a basic HTTP auth up?</p>

<p>Thanks a lot!
Mo.</p>
","<java><dependency-injection><guice><vaadin><shiro>","2",""
"21349970","PrimeFaces look'n'feel disappears when using Shiro","<p>I use Primefaces 4.0 and Shiro 1.2.2 in a website that I currently developed. 
My forms are interpreted and Primefaces components are displayed without problem. But when I enable the security on my application, my forms, at least login page, don't displays ​​with Primefaces rendering. I know that Shiro has intercepted all HTTP requests in order to control the access but why my form appears as if I did't use Primefaces? Please, do you have an idea of ​​solution to my problem? Is it possible to integrate Shiro and Primefaces?  </p>

<p>web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" 
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
     xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""&gt;
&lt;context-param&gt;
    &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
    &lt;param-value&gt;Development&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;faces/index.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;resource-ref&gt;
    &lt;res-ref-name&gt;connectionPool&lt;/res-ref-name&gt;
    &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
    &lt;res-auth&gt;Container&lt;/res-auth&gt;
    &lt;res-sharing-scope&gt;Shareable&lt;/res-sharing-scope&gt;
&lt;/resource-ref&gt;
&lt;context-param&gt;
    &lt;param-name&gt;primefaces.THEME&lt;/param-name&gt;
    &lt;param-value&gt;redmond&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /faces/login.xhtml
authc.usernameParam = login:username
authc.passwordParam = login:password
authc.rememberMeParam = login:rememberMe
user.loginUrl = /faces/login.xhtml

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
# Configure JDBC realm password hashing.
redentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $credentialsMatcher

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password FROM USER WHERE username = ?
dbcRealm.userRolesQuery = SELECT role FROM ROLE WHERE userId = (SELECT id FROM USER     WHERE username = ?)

# Configure JDBC realm datasource. DataSource properties
dataSource = org.apache.derby.jdbc.ClientDataSource
dataSource.serverName = localhost
dataSource.portNumber = 1527
dataSource.databaseName = testdb
dataSource.user = admin
dataSource.password = admin
jdbcRealm.dataSource = $dataSource


[users]
admin = password

[urls]
/faces/login.xhtml = authc
/faces/** = authc
</code></pre>

<p>I'm a beginner in web development with JSF, Primefaces and Shiro.</p>

<p>Thanks for your help. </p>
","<jsf-2><primefaces><shiro>","0","21361908"
"1707830","Using groovy metaClass to mock out Shiro SecurityUtils in bootstrap","<p>For further background, see <a href=""http://grails.markmail.org/message/62w2xpbgneapmhpd"" rel=""nofollow noreferrer"">http://grails.markmail.org/message/62w2xpbgneapmhpd</a></p>

<p>I'm trying to mock out the Shiro SecurityUtils.getSubject() method in my BootStrap.groovy.  I decided on this approach because the Subject builder in the latest Shiro version isn't available in the current version of the Nimble plugin (which I'm using).  I decided to try playing with the SecurityUtils.metaClass but I have a feeling I'm missing something very fundamental about how metaClasses work.  For reference, here's my Trackable class:</p>

<pre><code>    abstract class Trackable {
       User createdBy
       Date dateCreated
       User lastUpdatedBy
       Date lastUpdated

       static constraints = {
           lastUpdated(nullable:true)
           lastUpdatedBy(nullable:true)
           createdBy(nullable:true)
       }

       def beforeInsert = {
           def subject

           try {
               subject = SecurityUtils.subject
           } catch (Exception e) {
               log.error ""Error obtaining the subject.  Message is [${e.message}]""
           }

           createdBy = (subject ? User.get( subject.principal ) :
User.findByUsername(""admin""))
       }

       def beforeUpdate = {
           def subject

           try {
               subject = SecurityUtils.subject
           } catch (Exception e) {
               log.error ""Error obtaining the subject.  Message is [${e.message}]""
           }

           lastUpdatedBy = (subject ? User.get( subject.principal ) :
User.findByUsername(""admin""))
       }
   }
</code></pre>

<p>In my BootStrap.groovy, I have this:</p>

<pre><code>   def suMetaClass = new ExpandoMetaClass(SecurityUtils)

   suMetaClass.'static'.getSubject = {[getPrincipal:{2}, toString:{""Canned Subject""}] as Subject}

   suMetaClass.initialize()

   SecurityUtils.metaClass = suMetaClass
</code></pre>

<p>And that works... sort of.  If I print out the subject from BootStrap.groovy I get ""Canned Subject"".  If I try to create and save instances of subclasses of Trackable, I get:</p>

<blockquote>
<pre><code>No SecurityManager accessible to this method, either bound to
the org.apache.shiro.util.ThreadContext or as a vm static
singleton.  See the org.apache.shiro.SecurityUtils.getSubject()
method JavaDoc for an explanation of expected environment
configuration.
</code></pre>
</blockquote>

<p>Am I missing something integral about how metaClasses work?</p>
","<grails><groovy><metaprogramming><shiro><bootstrapping>","0","1724593"
"17657283","Cache Invalidate not working in Shiro","<p>We are using Apache Shiro for managing auth in our app. When using Permission I am using out of the box memory based caching and here is my shiro.ini.</p>

<p>In my JSP I am using <code>shiro:taglib</code> to check for hasPerimission and lacksPemrissons tags. If I <strong>update user role in database</strong> (hence so corresponding permissions), and when user logs-out his permissions are updated. <strong>I see unauthorized page as expected. However, the links are still rendered, which should not.</strong> These links are rendered using following syntax. (note: these links are part of common <code>header.jsp</code>, and included in all pages)</p>

<pre><code>&lt;shiro:hasPermission name=""admin:viewPage""&gt;
        &lt;a href=""/pages/admin.jsp""&gt;Admin&lt;/a&gt;
&lt;/shiro:hasPermission&gt;
</code></pre>

<p>My class <code>JNDIAwareJDBCRealm</code> inherits <code>JdbcRealm</code> which inherits <code>CacheManagerAware</code>. It seems that <code>CacheManagerAware.onLogout()</code> clears cache. </p>

<p>Is it tag library doing some caching?  Am I missing some implementation with caching?</p>

<p>My Shiro.ini file:</p>

<pre><code>[main] 
jndiJdbcRealm=com.my.domian.JNDIAwareJDBCRealm
jndiJdbcRealm.jndiDataSourceName=jdbc/mySQLConnection 
jndiJdbcRealm.authenticationQuery = select password FROM users where email_id=?
jndiJdbcRealm.userRolesQuery= select role from user_roles, user where user.email_id =? AND user.id = user_roles.user_id 
jndiJdbcRealm.permissionsQuery= SELECT permission FROM role_permission WHERE role=? jndiJdbcRealm.permissionsLookupEnabled=true

bcryptCredentialsMatcher=com.my.domain.BCryptCredentialsMatcher
jndiJdbcRealm.credentialsMatcher = $bcryptCredentialsMatcher

securityManager.realms = $jndiJdbcRealm builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

# unauthorized page
perms.unauthorizedUrl = /pages/unauthorized.jsp
</code></pre>

<p>(Realized that Shiro has very less documentation.)</p>
","<java><jsp><shiro>","3","17692295"
"26227546","Apache shiro with jersey","<p>Im building a web service app using jersey.
For authorization/authentication im using apache shiro.</p>

<p>I found some tutorials showing how to use apache shiro in a web app. They show the login method using a .jsp page that have a username and password field and than this .jsp page is configured in shiro.ini like this: </p>

<pre><code>[main]

shiro.loginUrl = /login.jsp

[urls]
/login.jsp = authc
/logout = logout
</code></pre>

<p>I Wanna know how to make this authentication without a any .jsp page, because my project have only web services. So i think that i need a login service, than i created one:</p>

<pre><code>@POST
@Path(""/login"")
public Response login(@FormParam(""username"") final String username, @FormParam(""password"") final String password, @FormParam(""remember"") final boolean remember) {

    final Subject currentUser = SecurityUtils.getSubject();

    if (!currentUser.isAuthenticated()) {
        final UsernamePasswordToken token = new UsernamePasswordToken(username, password);
        try {
            token.setRememberMe(remember);
            currentUser.login(token);
        } catch (final AuthenticationException e) {
            return Response.status(Status.BAD_REQUEST).entity(""Usuário ou senha inválido"").build();
        }
    }
</code></pre>

<p>And this is my shiro.ini conf:</p>

<pre><code>[urls]
/security/login = anon
/security/isAuthenticated = anon
/** = authcBasic
</code></pre>

<p>Once that the user wont be authenticated to log in i include /security/login = anon.</p>

<p>Is this the correct way to authenticated a user with apache shiro in a webservice environment?</p>
","<authentication><jersey><shiro>","0",""
"7092211","Apache Shiro/Active Directory integration to support SSO in a grails web application","<p>I am working on a grails web application which uses Apache Shiro for authentication purpose. Now I have been asked to implement SSO and Active directory integration to this application. Since I am new to LDAP/AD I have hard time to implement it properly. </p>

<p>Here is what I did, I generated a ShiroLdapRealm.groovy file by executing following command as mentioned on some websites.</p>

<pre><code>grails create-ldap-realm
</code></pre>

<p>Then I added few configuration properties for LDAP in grails-app/conf/Config.groovy.</p>

<pre><code>ldap.server.url = ""ldap://localhost:10389""
ldap.search.base = ""ou=users,ou=system""
ldap.search.user = ""uid=admin,ou=system""
ldap.search.pass = ""secret""
ldap.username.attribute = ""uid""
ldap.skip.authentication = false
ldap.skip.credentialsCheck = false
ldap.allowEmptyPasswords = false
</code></pre>

<p>But now I am unsure about how to get the currently logged in windows user in my application and provide a UsernamePasswordToken to authenticate against this generated ShiroLdapRealm. I simply want to provide a SSO experience with shiro where user comes from Windows Active Directory. I was not able to find any good documentation for this. </p>

<p>Also I am confused about whether to use ShiroLdapRealm or ActiveDirectoryRealm as mentioned in some posts. What could be difference between these two? Which one to use when?</p>

<p>Can anybody please help me on this. </p>

<p>Thanks in advance.</p>

<p>Ahsan</p>
","<grails><active-directory><ldap><single-sign-on><shiro>","0",""
"11434531","Struts 2 + Shiro, how to?","<p>I would like to add security to Struts 2 application. I chose Apache Shiro.
Can you give me some useful tips?
I've started the integration according to web integration on shiro's site but at the moment it doesn't work.</p>

<p>I added to my web.xml</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>and </p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
</code></pre>

<p>I've created shiro interceptor.</p>

<pre><code>public class ShiroInterceptor extends AbstractInterceptor {
    public String intercept(ActionInvocation actionInvocation) throws Exception {
        Subject shiroUser = SecurityUtils.getSubject();
        actionInvocation.getStack().setValue(""shiroUser"", shiroUser);
        return actionInvocation.invoke();
    }
}
</code></pre>

<p>I've added shiro.ini</p>

<pre><code>[main]

#authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /login.jsp
authc.usernameParam = login
authc.passwordParam = password
authc.successUrl  = /some.jsp
roles.unauthorizedUrl = /error.jsp

myRealm = travel_click.logic.manager.security.MyRealm
securityManager.realms = $myRealm

[urls]
/**=authc
</code></pre>

<p>I wrote MyRealm class.</p>

<p>What else should i do?</p>
","<struts2><shiro>","1",""
"8657943","tapestry shiro security authentication","<p>I am using Tapestry5, and apache shiro for security.
I am stuck with authenticating user from database table.</p>

<p>In this function doGetAuthenticationInfo() don't we need to set the Subject?</p>

<p>What is the purpose of SimpleAuthenticationInfo?</p>

<pre><code>package com.kids.crm.services;

import java.util.HashSet;
import java.util.Set;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AccountException;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.authz.AuthorizationException;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.SimpleByteSource;
import org.apache.tapestry5.ioc.annotations.Inject;
import org.springframework.beans.factory.annotation.Autowired;

import com.kids.crm.dao.DatabaseDao;
import com.kids.crm.dao.UserAccountDao;
import com.kids.crm.dao.impl.UserAccountDaoImpl;
import com.kids.crm.db.Role;
import com.kids.crm.db.UserAccount;


public class UserRealm extends AuthorizingRealm {
        @Inject UserAccountDao userAccountDao;
        public UserRealm() {
                setName(""localaccounts"");
                setAuthenticationTokenClass(UsernamePasswordToken.class);
        }

        private UserAccount findByUsername(String userName) {
                return (UserAccount) userAccountDao.getUserByUserName(userName);
        }

        @Override
        protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
                //Subject currentUser = SecurityUtils.getSubject();
                UsernamePasswordToken upToken = (UsernamePasswordToken) token;

                        String username = upToken.getUsername();
                        upToken.setRememberMe(true);
                        // Null username is invalid
                        if (username == null) { throw new AccountException(""Null usernames are not allowed by this realm.""); }
                        UserAccount user = findByUsername(username);

                return new SimpleAuthenticationInfo(username, user.getEncodedPassword(), new SimpleByteSource(user.getPasswordSalt()), getName());
        }

} 
</code></pre>
","<tapestry><shiro>","2",""
"9567048","How to handle Shiro Authorization Exception?","<p>i've started using shiro 1.1.0 in a web application using spring mvc 3.0.5 and zk 5.0.8 as admin. i  wasn't having shiro annotation working so i specified the requredroles  in the security application context :</p>

<pre><code>/admin = authc, roles[ADMIN]
</code></pre>

<p>which works fine and redirect me to the unautorized paged i created.
Now i got the Annotation working so i used @RequiresRoles(value={""manager"",""admin"",""superadmin""}) on top of a class: </p>

<pre><code>@RequiresRoles(value = {""manager"",""admin"",""superadmin""})
public class ContentController extends GenericForwardComposer {...}
</code></pre>

<p>and it throws </p>

<blockquote>
  <p>org.apache.shiro.authz.UnauthorizedException: Subject does not have role [manager]</p>
</blockquote>

<p>Is there anything to activate when using annotation for these kind of authorization to be caught?</p>

<p>Thanks for reading this.</p>
","<spring><web-applications><zk><shiro>","1",""
"9359322","Apache shiro - how do I know that caching is working for authorization?","<p>I am using Apache Shiro in my Tomcat and I want to enable caching of authorization through EhCache.</p>

<p>What I've done is adding these two lines in shiro.ini:</p>

<pre>
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager
</pre>

<p>and copied ehcache-core-2.5.1.jar in my WEB-INF/lib directory. For the authorization, I have implemented a custom Realm that reads the permissions from a MySQL Databaase. So I want to enable the cache in order to reduce as much as possible the queries to the database... I have to mention that I am not familiar with EhCache and I only want to enable caching of the authorization!</p>

<p>If I've understood the Shiro documentation correctly, the above are enough to enable the caching - however I am not seeing that :(</p>

<p>Tomcat Starts without exceptions and, in a test JSP I am using authorization works ok at first. After if I make a change to the permissions of the database I see that the test JSP is immediately aware of the change! I was expecting that the test JSP would return the values from the cache... Can you tell me what could be wrong ? Also, is there a way to find out if EhCache is actually called and how it behaves (if logging needs to be enabled I'd be grateful if you gave me detailed information because I am not very familiar with that).</p>

<p><strong>Update:</strong> I also have to mention that I added the line </p>

<pre>System.out.println(""Caching is enabled "" + isCachingEnabled() );</pre>

<p>in the initialization of my custom realm and I get true!</p>

<p>TIA,</p>

<p>Serafeim</p>
","<tomcat><ehcache><shiro>","1",""
"11863295","Shiro: Handling Exceptions thrown by annotations","<p>I am using using Shiro annotations to check for authorization like this : </p>

<pre><code>@RequiresPermissions(""addresses:list"")
    public ModelAndView getCarrierListPage() {
        return new ModelAndView(""addressList"", ""viewData"", viewData);
    } 
</code></pre>

<p>My question is this : If the user doesn't have permissions as required by the annotation, an exception is being thrown. I would rather like to redirect user to a different URL in case of an exception. How do I do that?</p>

<p>Here is my shiro filter configuration :   </p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/showLoginPage""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>
","<java><spring><spring-mvc><shiro>","8",""
"11806628","Defining access-level based on object's field value","<p>Suppose this class (in groovy):</p>

<pre><code>class Class_A {
    String type
    ...
}
</code></pre>

<p>I want to define access-levels to its instances based on value of type. For example some users would have Read access on Class_A, if type value is ""T1"" and others have Read access on them, if type value is ""T2"".
Please don't offer inheritance-based solutions. Can I do it using spring-security or apache shiro?</p>
","<java><grails><spring-security><shiro>","2",""
"21399256","DefaultWebSessionManager not works on Chrome","<p>Well, I have posted following question on Shiro's forum for 1 week but no response until now.</p>

<p>I am just trying to use Shiro with a simple Spring application. The security manager is defined as <code>DefaultWebSecurityManager</code> which set session manager as <code>ServletContainerSessionManager</code> by default and it works for me. However, after I changed the session manager to <code>DefaultWebSessionManager</code> which means I want to use Shiro's native session, it not works on Chrome. I dug out some following information:- </p>

<ul>
<li>When using <code>DefaultWebSessionManager</code>, Shiro tries to get session id from request cookie. The logic <code>SimpleCookie</code> is looping all request cookies and return when a cookie's name is 'JSESSIONID'. However, in the requests come from Chrome, there are 2 cookies with name 'JSESSIONID'. The value of the first one is different with 'requestedSessionid' in request and the other one equals. That result in a new redirect to login page after authentication successfully. To make it simple, the process now is: access any address -> redirect to login page by Shiro -> submit principals and credentials -> authentication successfully and redirect to home page by Shiro -> a new request comes and found another session id which is not cached in Shiro, result in a <code>InvalidSessionException</code> in <code>resolveSession</code> method in <code>DefaultSecurityManager</code> -> redirect back to login 
page. </li>
<li>When using <code>ServletContainerSessionManager</code>, since the session id is come from request.getSession(false), the session could be found after redirect. </li>
</ul>

<p>My question is if this is a defect or anything configurations or codes can fix this problem? Note only Chrome fires this problem. I guess it's about Chrome's cache but can you explain more? </p>

<p>Below is the necessary sources for you to replicate:- </p>

<p>web.xml </p>

<pre><code>&lt;listener&gt;
  &lt;listener-class&gt;test.shiro.framework.WebSessionListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;listener&gt;
  &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;context-param&gt;
  &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
  &lt;param-value&gt;/WEB-INF/spring-servlet.xml&lt;/param-value&gt;
&lt;/context-param&gt;  


&lt;filter&gt;
  &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
  &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
  &lt;init-param&gt;
    &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
    &lt;param-value&gt;true&lt;/param-value&gt;
  &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
  &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;servlet&gt;
  &lt;servlet-name&gt;spring&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;spring&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/controller/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>spring-servlet.xml: </p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
  &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
  &lt;property name=""loginUrl"" value=""/login.jsp""/&gt;
  &lt;property name=""successUrl"" value=""/home.jsp""/&gt;  
  &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp""/&gt;

  &lt;property name=""filterChainDefinitions""&gt;
    &lt;value&gt;
      /** = authc 
    &lt;/value&gt;
  &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;

  &lt;property name=""realm"" ref=""myRealm"" /&gt;
  &lt;property name=""sessionManager""&gt;
    &lt;bean class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;&lt;/bean&gt;
  &lt;/property&gt;

&lt;/bean&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean id=""myRealm"" class=""org.apache.shiro.realm.text.TextConfigurationRealm""&gt;
  &lt;property name=""userDefinitions""&gt;
    &lt;value&gt;
      huzj=12345678,authc 
      guodg=12345678,operator 
      sadd=12345678,guest 
    &lt;/value&gt;
  &lt;/property&gt;
  &lt;property name=""roleDefinitions""&gt;
    &lt;value&gt;
      authc=* 
      operator=book:* 
      guest=book:view:* 
    &lt;/value&gt;
  &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>Feb 18 UPDATE:
A further testing shows that the problem only occured when I tried to change from <code>ServletContainerSessionManager</code> to <code>DefaultWebSessionManager</code>. I guess chrome records a junk cookie in this situation by mistake.</p>

<p>After all I tried @paulochf's solution and it does work. I debugged again and believe you got the point. Many thanks!</p>
","<google-chrome><shiro>","3","21788211"
"14726767","Apache-Shiro: User authenticates within AJAX, how to restore GET-Variables after login?","<p>in my JavaEE-Application, I am using Apache Shiro[1] for user-authentication. 
My users are navigating via GET-URLs, as for example ""/company/index.xhtml?companyId=327"". </p>

<p>I have enabled programmatic login, following a guide[2] from BalusC:</p>

<pre><code>SavedRequest savedRequest = WebUtils.getAndClearSavedRequest(Faces.getRequest());
</code></pre>

<p>My problem is, that <em>savedRequest.getRequestUrl()</em> does not contain the previous mentioned GET-parameteres, when my case is asynchronous POST with or without RememberMe; just ""/company/index.xhtml"" is returned, for example. It seems as if ""FacesAjaxAwareUserFilter"" (see [2]) is not GET-params aware. Everything works fine on synchronous GET-calls.</p>

<p>How do I get the GET-parameters after an shiro-redirect because of authentication-needed in case of using ""FacesAjaxAwareUserFilter""?</p>

<p>[1] <a href=""https://shiro.apache.org/"" rel=""nofollow"">https://shiro.apache.org/</a></p>

<p>[2] Followed this great article about JavaEE and Shiro: <a href=""http://balusc.blogspot.de/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">http://balusc.blogspot.de/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a></p>
","<ajax><jsf><java-ee><shiro>","2","14749946"
"7577130","How to configure roles with Apache Shiro 1.2-SNAPSHOT and Guice?","<p>I'm playing around with Shiro and would like to configure roles via the ShiroWebModule.</p>

<pre><code>addFilterChain(""/**"", AUTHC);
</code></pre>

<p>this works, my loginpage is shown and I can login.</p>

<p>But</p>

<pre><code>addFilterChain(""/test/**"", AUTHC, config(ROLES, ""test"")); //that does not seem to be the right way
</code></pre>

<p>does not. I can access /guest/** and /test/** as guest.</p>

<p>My Module:</p>

<pre><code>public class HelloMavenShiroModule extends ShiroWebModule {
    HelloMavenShiroModule(ServletContext sc) {
        super(sc);
    }

    protected void configureShiroWeb() {
        try {
            bindRealm().toConstructor(IniRealm.class.getConstructor(Ini.class));
        } catch (NoSuchMethodException e) {
            throw new RuntimeException(""Code Problem."", e);
        }


        addFilterChain(""/**"", AUTHC);
        addFilterChain(""/guest/**"", AUTHC, config(ROLES, ""guest""));
        addFilterChain(""/test/**"", AUTHC, config(ROLES, ""[test]""));

        //addFilterChain(""/**"", AUTHC);
        bindConstant().annotatedWith(Names.named(""shiro.loginUrl"")).to(""/account/login.jsp"");
        bindConstant().annotatedWith(Names.named(""shiro.globalSessionTimeout"")).to(30000L);
        bindConstant().annotatedWith(Names.named(""shiro.usernameParam"")).to(""user"");
        bindConstant().annotatedWith(Names.named(""shiro.passwordParam"")).to(""pass"");
        bindConstant().annotatedWith(Names.named(""shiro.rememberMeParam"")).to(""remember"");
        bindConstant().annotatedWith(Names.named(""shiro.successUrl"")).to(""/index.html"");
        bindConstant().annotatedWith(Names.named(""shiro.failureKeyAttribute"")).to(""helloMavenLoginFailure"");
        bindConstant().annotatedWith(Names.named(""shiro.unauthorizedUrl"")).to(""/account/denied.jsp"");

        bind(AuthenticationFilter.class).to(VerboseFormAuthenticationFilter.class);
        bind(CredentialsMatcher.class).to(HashedCredentialsMatcher.class);
        bind(HashedCredentialsMatcher.class);
        bindConstant().annotatedWith(Names.named(""shiro.hashAlgorithmName"")).to(Sha256Hash.ALGORITHM_NAME);
    }

    @Provides
    Ini loadShiroIni() {
        return Ini.fromResourcePath(""classpath:shiro.ini"");
    }
}
</code></pre>

<p>The shiro.ini:</p>

<pre><code># -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[users]
root = 2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b, admin
guest = 84983c60f7daadc1cb8698621f802c0d9f9a3c3c295c810748fb048115c186ec, guest

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]
admin = *
</code></pre>

<p>I know it's not released yet, but maybe it's possible already and I just cannot find out.</p>
","<java><dependency-injection><guice><shiro>","2","7600007"
"30181854","Apache Shiro login error: IncorrectCredentialsException","<p>I keep getting this error when i attempt to login. Any help is appreciated.</p>

<p>Login code</p>

<pre><code>Realm realm = new TestRealm();
SecurityManager sm = new DefaultSecurityManager(realm);
SecurityUtils.setSecurityManager(sm);

UsernamePasswordToken token = new UsernamePasswordToken();
token.setUsername(""dave"");
token.setPassword(""le1990"".toCharArray());
token.setRememberMe(true);

Subject sub = SecurityUtils.getSubject();
sub.login(token);
</code></pre>

<p>doGetAuthenticationInfo method</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException{     

    UsernamePasswordToken upToken = (UsernamePasswordToken)token;       
    String username = upToken.getUsername();

    if(username == null)
        this.logger.info(""We don't except Null usernames. sorry. "");

    AuthenticationInfo info = null;
    try{

        USER user = new USER();
        String pass = user.getPassForUser();

        if(pass == null)
            throw new AccountException(""The account your looking for doesn't exist"");


        info = new SimpleAuthenticationInfo(username, pass, getName());
</code></pre>

<p>user.getPassForUser method returns hard wired value for testing. value copied from DB $shiro1$SHA-256$500000$temCnap0k+zboIW7y49Mww==$veyM6YL3QiCJvMwo0r2yu0KDC3ueAxZOYuN0vT+0v5M=</p>

<p>shiro.ini file</p>

<pre><code># realms to be used
customSecurityRealm=com.raven.rave.common.TestRealm
customSecurityRealm.jndiDataSourceName=java:jdbc/dbeka
customSecurityRealm.permissionsLookupEnabled=true
</code></pre>

<p>Finally the exception thrown</p>

<pre><code>ERROR [STDERR] org.apache.shiro.authc.IncorrectCredentialsException: 
Submitted credentials for token [org.apache.shiro.authc.UsernamePasswordToken - dave, rememberMe=true] did not match the expected credent
ERROR [STDERR]     at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:600)
ERROR [STDERR]     at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:578)
ERROR [STDERR]     at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
ERROR [STDERR]     at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
ERROR [STDERR]     at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
ERROR [STDERR]     at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
ERROR [STDERR]     at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
ERROR [STDERR]     at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
</code></pre>

<p>When i registered the user, i passed in the same password ""le1990"".
Also, does the password retrieved from the DB have to be in plaintext. If so, how do i decrypt the password stored ?</p>
","<java><shiro>","2","30188228"
"11901311","Spring DefaultAdvisorAutoProxyCreator with @Transactional causing problems","<p>I'm working on a Spring MVC project and trying to integrate Apache Shiro for the security. Everything was going just swimmingly until I realized Hibernate was prematurely closing the session/connection after a single query and causing a lazyinit exception. Not surprising, what I was doing should be done within a transaction so the session isn't closed.</p>

<p><strong>Dilemmas…</strong></p>

<ol>
<li><p>I tried putting @Transactional on my controller method, but I get 404's then. Looking at my logs, I can see that when Spring is bootstrapping it ignores any mappings in my HomeController if that @Transactional annotation is on any method within the controller.</p></li>
<li><p>Without the @Transactional and it loads up just fine, and Ih can see the RequestMappingHandlerMapping bean sees all the @RequestMapping annotations in my controller.</p></li>
<li><p>With @Transactional but without DefaultAdvisorAutoProxyCreator, and it works except Shiro annotations are simply ignored.</p></li>
</ol>

<p><strong>tldr:</strong> Shiro requires DefaultAdvisorAutoProxyCreator, but if I create that bean, Spring blows up when using the @Transactional annotation.</p>

<p>I'm asking for help because I'm completely at a loss for how to proceed at this point.</p>
","<spring><aop><shiro>","2","11901903"
"9900221","Apache Shiro integration and Netty ExecutionHandler/OrderedMemoryAwareThreadPoolExecutor","<p>I just added an <code>ExecutionHandler</code> to my server pipeline just before my main business logic handler as recommended in the documentation.</p>

<p>I am using Apache Shiro <a href=""http://shiro.apache.org/"" rel=""noreferrer"">http://shiro.apache.org/</a> for security. It worked fine until I added the <code>ExecutionHandler</code>. </p>

<p><em>The issue</em>: <br/>
Shiro's execution context is bound to the current thread in which you obtain the <code>Subject</code> object. So, if the <code>Subject</code> is obtained in the worker thread, but the business logic executes in a separate <code>ExecutionHandler</code> managed thread then the two execution contexts won't be connected as far as Shiro is concerned. Thus Shiro in the <code>ExecutionHandler</code> thread will fail to be aware that the <code>Subject</code> is in fact authenticated. So I'm getting Authentication errors.</p>

<p>It is possible to associate a given <code>Subject</code> with a <code>Runnable</code> before passing it to <code>Executor.execute()</code> so that the security context is maintained. See: <a href=""http://shiro.apache.org/subject.html"" rel=""noreferrer"">http://shiro.apache.org/subject.html</a></p>

<p>Based on this I think need to find a way to associate the current Shiro <code>Subject</code> with the <code>ExecutionHandler</code> <code>Runnable</code>. </p>

<p>I'm still trying to fully understand the <code>ExecutionHandler</code> and <code>OrderedMemoryAwareThreadPoolExecutor</code> implementations. </p>

<p>Basically I need to call <code>subject.associateWith(aRunnable)</code> just before <code>aRunnable</code> is passed to <code>Executor.execute(aRunnable)</code>.</p>

<p>Does anyone have thoughts on where/how I could hook Shiro into the mix?</p>

<p>Thanks,
Matt</p>
","<multithreading><netty><shiro>","5","9900671"
"22411151","Shiro with SAML2 in Karaf with JAX-RS (Jersey)","<p>I am creating an application that runs in Karaf as OSGi container, and uses the OSGi HTTP Service and Jersey for exposing REST APIs. I need to add SAML2 authentication and <strong>permissions-based</strong> authorization. I would like to use the annotation based approach in Shiro for this, as spring seems to be moving away from OSGi. My questions:</p>

<ol>
<li>Is Shiro with SAML jars a good fit in OSGi environments?</li>
<li>I want to use WSO2 as the identity provider. Are there any caveats of Shiro and WSO2 working together?</li>
<li>For using annotations, the Shiro docs indicate I need to put AspectJ/Spring/Guice jars - Is this still valid in OSGi environments? I would prefer Guice for all my DI needs.</li>
</ol>

<p>Would be great to have some insights from Shiro users. </p>

<p><strong>UPDATE</strong></p>

<p>I'm using this project: <a href=""https://github.com/hstaudacher/osgi-jax-rs-connector"" rel=""nofollow"">osgi-jax-rs-connector</a>. So, I use Guice-Peaberry to register OSGi services with the interfaces annotated with @Path or @Provider, and the tool takes care of converting them into a REST resource. (Similar to pax-whiteboard?). I was planning to similarly expose my filters as OSGi services, and then dynamically add them along with the resources.</p>

<p>I have had headaches with AspectJ in OSGi in a previous project where I had to switch to vanilla Equinox from Karaf because the equinox weaving hook was not agreeing with Karaf (stack traces from Aries were seen, among other things). So, would doing something like <a href=""https://github.com/PE-INTERNATIONAL/shiro-jersey"" rel=""nofollow"">shiro-jersey</a> be better?</p>
","<jersey><shiro><saml-2.0><apache-karaf>","2","22571268"
"28272721","Java - Shiro - ehcache config","<p>I am using <code>Shiro</code>(v1.2.3) in a java web project using <code>Spring</code> (v4.1.4). <br /></p>

<p>I enabled <code>Ehcache</code> for shiro, to help store shiro session. <br /></p>

<hr>

<p><strong>My question is:</strong></p>

<p>Do I need to define a <code>&lt;cache&gt;</code> entity for shiro session in ehcache.xml config file, or shiro will manage that automatically?</p>

<p>In one word, do I need to put following config segment into <code>ehcache-shiro.xml</code>:</p>

<pre><code>&lt;cache name=""shiro-activeSessionCache"" maxElementsInMemory=""10000"" overflowToDisk=""true"" eternal=""true""
    timeToLiveSeconds=""0"" timeToIdleSeconds=""0"" diskPersistent=""true"" diskExpiryThreadIntervalSeconds=""600"" /&gt;
</code></pre>
","<java><spring><ehcache><shiro>","1","28273190"
"10066229","Shiro: code-duplication in datasource configuration","<p><br> I use shiro to implement authentication for my CXF web service. I am using a jdbc-Realm and configured it with the help of an ini-file (attached below). The authentication data is persisted in the same database like the other data I need, but for the rest of the system I use a properties-file (can be found below, too) to provide the connection-information. </p>

<p>Now obviously the data for the datasource in both cases is the same, but I do not seem to find a way to resolve this code duplication. Does anybody more experienced with the development of webapplications have a solution? I could change both, the config of shiro and of the rest of the system, if it would help.</p>

<p>Thanks in advance, <br>
zakum</p>

<p>shiro.ini:</p>

<pre><code>[main]
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?;

ds = org.postgresql.ds.PGSimpleDataSource
ds.user = postgres
ds.password = password
ds.databaseName = servicedb
ds.serverName = localhost
ds.portNumber = 5432

jdbcRealm.dataSource = $ds
securityManager.realms = $jdbcRealm
</code></pre>

<p>service.properties: </p>

<pre><code>db. It looks like:
db.name = servicedb
db.user = postgres
db.password = password
db.url = //localhost:5432/
</code></pre>
","<configuration><datasource><code-duplication><shiro>","2",""
"25287485","Apache Shiro LOGIN Failed using Token","<p>I'm new with apache shiro and currently working with jdbcRealm. But during login with token an SQL Exception is showing as below -</p>

<pre><code>org.apache.shiro.authc.AuthenticationException: There was a SQL error while authenticating user [nnnnnnnn]

18:08:47,738 ERROR [stderr] (http-localhost-127.0.0.1-8443-1)   at org.apache.shiro.realm.jdbc.JdbcRealm.doGetAuthenticationInfo(JdbcRealm.java:254)

18:08:47,748 ERROR [stderr] (http-localhost-127.0.0.1-8443-1)   at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
....
Caused by: java.sql.SQLException: Invalid column index
....
</code></pre>

<h1>SHIRO.INI File is written as below -</h1>

<pre><code>[main]

# Own Realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true

# datasource
ds = oracle.jdbc.pool.OracleConnectionPoolDataSource
ds.URL = jdbc:oracle:thin:@192.168.2.10:1522:WBORCLSTDONE
ds.user = WISENPA
ds.password = issac123
jdbcRealm.dataSource = $ds

jdbcRealm.authenticationQuery = ""SELECT PASSWORD FROM WB_NETB_USER_MASTER WHERE LOGINID = ?""

[users]

[roles]

[urls]

# enable authc filter for all application pages
/InternetBanking_v1/**=authc
</code></pre>

<p>I have written one REST service where values have been checked and login with token has been tried.</p>

<p>///--- Fetching actual Hashed Password from Database Table</p>

<pre><code>Query query = entityManager.createQuery(""SELECT userLogin FROM UserLogin userLogin where userLogin.loginid=:loginid and userLogin.password=:passwd"" )
                .setParameter(""loginid"", login.getLoginid())
        .setParameter(""passwd"",hashedPasswordBase64);
                loggedInUser = (UserLogin) query.getSingleResult();

                if (loggedInUser==null){
                    loggedInUser = new UserLogin();
                }   

                //---- Creating Token
                UsernamePasswordToken token = new UsernamePasswordToken(StrLoginId, hashedPasswordBase64);
                token.setRememberMe(true);
                SecurityUtils.setSecurityManager(sm);
                Subject currentUser = SecurityUtils.getSubject();

                try {
                    currentUser.login(token);     ////// HERE ERROR APPEARS 
                    System.out.println(""----- Login Success -----"");

                } catch (IncorrectCredentialsException ice) {
                      System.out.println(""Incorrect username/password!"");
                }
</code></pre>

<p>When the line containing -</p>

<p>currentUser.login(token); </p>

<pre><code>is executed The Exception ""java.sql.SQLException: Invalid column index"" is coming. 
</code></pre>

<p>Please anybody help me whether there are any configurational issue in shiro.ini file or  any other flaws in my code -</p>

<p>Many thanks,</p>

<p>Jayanta P.</p>
","<apache><authentication><login><shiro><jdbcrealm>","2",""
"18485664","Shiro, Multi Factor Authentication","<p>Is there a way to implement multi factor authentication in Shiro? Can somebody give me a hint on how to implement this?</p>

<p>For more details: 
The basic idea is, that a user needs to login just as usual, using username and password, but before being actually authenticated the user also needs to enter a one-time-token he received as an SMS. </p>

<p>Thank you! </p>
","<authentication><shiro><two-factor-authentication>","7","18607515"
"13407385","SecurityUtils internals of Shiro","<p>This is actually a common question rather than Shiro specific. What I would like to learn is how <code>org.apache.shiro.SecurityUtils#getSubject</code> is working. I have checked necessary parts of the <code>SecurityUtils</code> and <code>ThreadContext</code> and I am totally puzzled now. The basic way that I understand <code>Shiro's</code> <code>SecurityUtils.getSubject()</code> to work is that it returns the subject which is bound to the currently executing thread. Actually I was expecting something analogous to RequestLocal instead of ThreadLocal.</p>

<p>My questions:</p>

<ol>
<li><p>How <code>Shiro</code> ensures a random point of the application has the same thread as the subject creater thread to provide same Subject? (Maybe it is related to Servlet spec. Would be great pointing necessary part) Particularly I am interested in <code>JAX-RS</code>.</p></li>
<li><p>This is the most confusing part of whole subject. How <code>Shiro</code> works at <code>Servlet 3 Container</code> where multiple requests are bounding to single thread?</p></li>
</ol>

<p>Could someone please shed light on these questions?</p>

<p>Thanks</p>
","<java><multithreading><jax-rs><shiro>","0","13423222"
"38411881","How to implement JWT token based authentication mechanism with Apache Shiro?","<p>I have a web application in which Authorization is handled by Apache Shiro. Now we need to convert it to restful service and need to add an authentication mechanism . I am looking for a possibility to keep Shiro itself for authorization, so that code changes are minimal, and JWT for authentication. Please suggest me how can I achieve it. Is there any framework available for it?</p>
","<oauth><jwt><shiro>","3",""
"21966703","Apache Shiro: authenticate with username/password but store user id as the principal","<p>I'm getting started with Apache Shiro. I've started with simple examples and have been building up complexity as I go.</p>

<p>Currently I'm collecting the email address and password from the login form with JSF and using a UsernamePasswordToken to authenticate the user with Shiro.</p>

<pre><code>UsernamePasswordToken token = new UsernamePasswordToken(email, password);
SecurityUtils.getSubject().login(token);
</code></pre>

<p>The is backed by the out of the box JDBC realm with a simple query</p>

<pre><code>jdbcRealm.authenticationQuery = SELECT password FROM user WHERE email = ?
</code></pre>

<p>To get further details about the user, such as their name I'm looking up the user in the database by the principal - which is their email address.</p>

<pre><code>currentUser = userDAO.findByEmail((String) SecurityUtils.getSubject().getPrincipal());
</code></pre>

<p>This works well, but the user is allowed to change their email address, which will break the lookup. My goal is to store the unique user id as the principal rather than the email address as this can never change. How would I go about achieving this?</p>
","<java><authentication><shiro>","3","21998754"
"18885128","Shiro custom authentication logic","<p>I have the following requirements for authenticating a user with Shiro:</p>

<ol>
<li>Username and password must match with that stored in the database. If the username and password do not match then an error message should be displayed indicating authentication failure.</li>
<li>Account must be active - a user activates their account via an activation email. If the user's account is not active then an error message should be displayed indicating that they have not clicked the activation email.</li>
<li>Account must not be expired - user accounts have an expiry date. If the user's account is expired then an error message should be displayed indicating account expiry.</li>
</ol>

<p>Note: there are two databases for storing user information. One of them stores authentication information (username, and password) and the other database stores information like when the account expires.</p>

<p>I can easily accomplish the first requirement simply by configuring a JDBC realm in shiro.ini.</p>

<p>I'm guessing some custom Java logic needs to be implemented to accomplish requirements 2 and 3. Any hints about how to implement the above? Would I need to implement a custom realm?</p>
","<java><authentication><jdbc><shiro>","1",""
"11438123","How to mock a shirosession?","<p>In my project  shiro session is used to authenticate users.I am to write a mock test for a service call. i.e.<br>
    <strong>object.setCreatedBy(SecurityUtils.getSubject().getPrincipal().toString())</strong><br>
which sets loggedin user (such as <em>sandy</em>) in CreatedBy field  .Now I want to populate this value from testCase(using Junit 4.0 and easy 3.0).I am using following code </p>

<pre><code>public class ExampleShiroUnitTest extends AbstractShiroTest {

@Test
public void testSimple() {
    //1.  Create a mock authenticated Subject instance for the test to run:
    Subject subjectUnderTest = createNiceMock(Subject.class);
    expect(subjectUnderTest.isAuthenticated()).andReturn(true);

    //2. Bind the subject to the current thread:
    setSubject(subjectUnderTest);
}

@After
public void tearDownSubject() {
    //3. Unbind the subject from the current thread:
    clearSubject();
}
</code></pre>

<p>}</p>

<p>given at  <a href=""http://shiro.apache.org/testing.html"" rel=""nofollow"">http://shiro.apache.org/testing.html</a>.
In above method subject is set properly and gives proper value when get,but don't know how to get  <strong>principal</strong> out of this. When I access it from subject it return null and there is no method as setPrincipal().</p>
","<java><unit-testing><junit><easymock><shiro>","1","11439887"
"13147859","Apache Shiro, INI-Configuration, Perms per URL: How to get URL params?","<p>I want to use <a href=""https://shiro.apache.org"" rel=""nofollow noreferrer"" title=""Apache Shiro"">Apache Shiro</a> in my JSF-Application to perform URL-based authorization checks, configuration done in shiro.ini As I see in the <a href=""https://shiro.apache.org/web.html#Web-webini"" rel=""nofollow noreferrer"">Shiro-documentation</a> there is a way to use a ""perms""-filter</p>

<pre><code>/remoting/rpc/** = authc, perms[""remote:invoke""]
</code></pre>

<p>In my scenario I want this functionality, but on entity-level<a href=""https://shiro.apache.org"" rel=""nofollow noreferrer"" title=""Apache Shiro"">1</a>, where the entity-Id is in the http-request </p>

<pre><code># ""Open settings for user with id=123"":
# /user/settings.xhtml?user_id=123
/user/settings.xhtml = perms[""user:update:XXX""]
</code></pre>

<p>So, how do I do this with Shiro? How to I tell the perms-filter to check for http-params? Or is this supposed to be done in my Realm-Implemenation, concrete by calling FacesContext?</p>

<p><a href=""https://shiro.apache.org"" rel=""nofollow noreferrer"" title=""Apache Shiro"">1</a> This can be done at least programmatically:</p>

<pre><code>SecurityUtils.getSubject().isPermitted(""printer:query:lp7200"")
</code></pre>

<p><a href=""https://shiro.apache.org/permissions.html"" rel=""nofollow noreferrer"">https://shiro.apache.org/permissions.html</a></p>
","<jsf><authorization><shiro>","1","14827817"
"25976314","Apache shiro and JSESSIONID","<p>I'm testing out apache shiro and just built the simple demo located at <a href=""https://github.com/pires/simple-shiro-web-app"" rel=""nofollow"">https://github.com/pires/simple-shiro-web-app</a></p>

<p>This is just a simple usage of shiro where it tries to authenticate with jdbcrealm. Every thing works fine except</p>

<ul>
<li><p>Shiro does not change the SESSIONID after a successful
authentication. This means the SESSIONID is same when the user
arrives at the login page and also once the user is authenticated.</p></li>
<li><p>Also noted that after successfully authenticated if I close the<br>
browser, the next time I open and navigate to the page, I need to log
in again.</p></li>
</ul>

<p>Is this the usual behaviour of shiro. If yes why? </p>
","<java><apache><shiro>","2",""
"9317980","Spring MVC MultiActionController and Apache Shiro","<p>I am trying to use Apache Shiro with Spring MVC.</p>

<p>The controllers we expose (and want to secure) extend <a href=""http://static.springsource.org/spring/docs/3.0.x/api/org/springframework/web/servlet/mvc/multiaction/MultiActionController.html"" rel=""nofollow"">MultiActionController</a>.
I have configured Apache Shiro for Spring the way they describe it here: <a href=""http://shiro.apache.org/spring.html"" rel=""nofollow"">http://shiro.apache.org/spring.html</a></p>

<p>I wanted to use @RequiresRoles annotation on my controller method, but it doesn't work...</p>

<p>It doesn't give any error in the logs, from what I have seen in debug it looks as if only handleRequest method from AbstractController (a superclass of MultiActionController) is checked for annotations. </p>

<p>The ""internal"" call from handleRequest to my annotated method is not invoked through proxy, so there is no check for Shiro annotations.</p>

<p>Can I somehow make the call to my method go through proxy despite the fact it's a call to method of the same object as the caller?</p>

<p>Or is there any other solution to this problem?</p>

<p>Thanks in advance</p>
","<spring-mvc><aop><spring-aop><shiro>","2","9319940"
"39281381","Zeppelin LDAP authentication","<p>I am trying to enable LDAP authentication for Zeppelin. The configuration in  shiro.ini looks like this : </p>

<pre><code>ldapRealm = org.apache.zeppelin.server.LdapGroupRealm
ldapRealm.contextFactory.environment[ldap.searchBase] = ou=abcIds,ou=abcPeople,o=abc
ldapRealm.contextFactory.url = ldap://hostnamte.co.com:389
ldapRealm.userDnTemplate = ad={0},appl\=app,ou\=Applications,o\=org
ldapRealm.contextFactory.authenticationMechanism = SIMPLE
</code></pre>

<p>When I enter my credentials in the login page I see the following exception :</p>

<pre><code> Exception in login:
org.apache.shiro.authc.AuthenticationException: Authentication token of type [class org.apache.shiro.authc.UsernamePasswordToken] could not be authenticated by any configured realms.  Please ensure that at least one realm can authenticate these tokens.
        at org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy.afterAllAttempts(AtLeastOneSuccessfulStrategy.java:54)
        at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doMultiRealmAuthentication(ModularRealmAuthenticator.java:235)
        at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:269)
        at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
        at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
        at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
        at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
        at org.apache.zeppelin.rest.LoginRestApi.postLogin(LoginRestApi.java:76)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:497)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:192)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:100)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:57)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:93)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:167)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:206)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
        at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
        at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
        at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
        at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
        at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
        at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
        at org.apache.zeppelin.server.CorsFilter.doFilter(CorsFilter.java:72)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
        at org.eclipse.jetty.server.Server.handle(Server.java:499)
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
        at java.lang.Thread.run(Thread.java:745)
</code></pre>

<p>Any idea what is going on?</p>
","<shiro><apache-zeppelin>","3",""
"17807990","How can i make Shiro work in Scala + Akka + Spray environment","<p>I guess that i don't understand the workflow correctly. I'm writing a web service in Scala with Apache Shiro and Stormpath. My user authentication process looks like this:</p>

<p>1) Get user data from POST request, check it with Stormpath and if everything is fine redirect to some page:</p>

<pre><code>pathPrefix(""api"") {
  path(""login"") {
    post {
      AuthToken.fromRequest { (token: AuthToken) =&gt;
        stormpathAuth(token) { subj =&gt;
          log.info(""Subj {}"", subj.getPrincipal.toString)
          redirect(""/some/page"", StatusCodes.Found)
        }
      }
    }
  }
</code></pre>

<p>In the logs it alright, Shiro return me a correct Subject with a Stormpath account. Next i want to extract subject, to use it in code:</p>

<pre><code>pathPrefix(""some"") {
  loggedInUser { subject =&gt;
    path(""page"") {
      get {
        complete {
          html.render(Page.model)
        }
      }
    } ..... other routes
</code></pre>

<p><br /></p>

<p><code>loggedInUser</code> directive should extract subject and check if it's authenticated otherwise redirect to the login form. And the problem is that it always redirects me to the login form, although in the logs <code>SubjectUtils.getSubject.getPrincipal</code> shows the correct account.</p>

<p><strong>Updated</strong></p>

<p>Actually Spray is build on top of Akka. So i think that the problem is behind <code>getSubject</code> implementation, which currently depends on ThreadLocal environment. I've searched on Shiro + Akka topics, but didn't find any helpful info.</p>
","<akka><shiro><spray>","5","17864009"
"7544257","Using FiltersUnitTestCase to unit test Shiro security filters, IllegalStateException","<p><strong>Update</strong>: I have changed this question to be about the specific problem I am having. This is because unit testing of Filters will be supported in Grails 2.0 so hopefully the documentation will be better then.</p>

<p>I am trying to write unit tests for the filters I set up to implement Shiro security in my grails app. I am using Grails 1.3.7 and wont be able to use 2.0 for a while (if ever) for this particular project.</p>

<p>The idea behind my filter is that I need to give anonymous access to a number or controller/action combinations but protect access to the others. I also want it to fail safe, i.e. if you forget to explicitly allow access then access is prohibited.</p>

<p><strong>The filter class</strong></p>

<pre><code>class SecurityFilters {
    def filters = {

        homeAccess(controller: ""home"", action: ""*"") {
            before = {

                // Allow all access
                request.accessAllowed = true
            }
        }

        serverAccess(controller: ""server"", action: ""list"") {
            before = {

                // Allow all access
                request.accessAllowed = true
            }
        }

        layerAccess(controller: ""layer"", action: ""list|listBaseLayersAsJson|listNonBaseLayerAsJson|showLayerByItsId"") {
            before = {

                // Allow all access
                request.accessAllowed = true
            }
        }

        all(uri: ""/**"") {
            before = {

                // Check if request has been allowed by another filter
                if (request.accessAllowed) return true            

                // Ignore direct views (e.g. the default main index page).
                if (!controllerName) return true

                // Access control by convention.
                accessControl(auth: false)
            }
        }
    }
}
</code></pre>

<p><strong>The Unit tests</strong></p>

<pre><code>import org.codehaus.groovy.grails.plugins.web.filters.FilterConfig

class SecurityFiltersTests extends FiltersUnitTestCase {

    protected void setUp() {
        super.setUp()
    }

    protected void tearDown() {
        super.tearDown()
    }

    void testHomeControllerFilter() {

        checkFilter('homeAccess')
    }

    void testServerControllerFilter() {

        checkFilter('serverAccess')
    }

    void testLayerControllerFilter() {

        checkFilter('layerAccess')
    }

    void testAllFilter() {

        assertTrue ""Write tests"", false
    }

    void checkFilter(String filterName) {

        FilterConfig filter = initFilter(filterName)
        assertNotNull filterName + "" filter should exist"", filter
        assertExistsBefore(filterName)

        assertEquals ""accessAllowed should be null to start with"", null, filter.request.accessAllowed

        // Run filter
        filter.before()

        assertEquals ""accessAllowed should be true now"", true, filter.request.accessAllowed
    }
}
</code></pre>

<p><strong>The Exception</strong></p>

<p>The problem is that when these test are run I get the following exception:</p>

<pre><code>No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.

java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
    at grails.test.MockUtils$_addCommonWebProperties_closure32.doCall(MockUtils.groovy:316)
    at shiro.SecurityFilters$_closure1_closure5_closure12.doCall(SecurityFilters.groovy:40)
    at shiro.SecurityFilters$_closure1_closure5_closure12.doCall(SecurityFilters.groovy)
    at shiro.SecurityFiltersTests.checkFilter(SecurityFiltersTests.groovy:92)
    at shiro.SecurityFiltersTests$checkFilter.callCurrent(Unknown Source)
    at shiro.SecurityFiltersTests.testLayerControllerFilter(SecurityFiltersTests.groovy:65)
</code></pre>

<p>Additionally I have placed the following line in the Unit test:</p>

<pre><code>println ""filter.request: "" + filter.request
</code></pre>

<p>Which prints the following:</p>

<pre><code>filter.request: org.codehaus.groovy.grails.plugins.testing.GrailsMockHttpServletRequest@2914cca4
</code></pre>

<p>So it certainly seems to be using a mock request object.</p>

<p>So, the questions.</p>

<p><strong>Am I using FiltersUnitTestCase correctly to execute my filters?</strong></p>

<p>And, if so:</p>

<p><strong>Why am I experiencing this exception?</strong></p>
","<unit-testing><grails><shiro>","4","7708231"
"8633910","Shiro grails plugin - config","<p>setting up shiro session cache with ehcache+terracotta  ,putitng these configs in config.groovy -</p>

<p>security.shiro.sessionDAO = ""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""</p>

<p>// This name matches a cache name in ehcache.xml:
security.shiro.sessionDAO.activeSessionsCacheName = ""shiro-activeSessionsCache""
security.shiro.securityManager.sessionManager.sessionDAO = ""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""</p>

<p>// Configure The EhCacheManager:
security.shiro.cacheManager = ""org.apache.shiro.cache.ehcache.EhCacheManager""
security.shiro.cacheManager.cacheManagerConfigFile = ""classpath:session_ehcache.xml""</p>

<p>// Configure the above CacheManager on Shiro's SecurityManager
// to use it for all of Shiro's caching needs:
security.shiro.securityManager.cacheManager = ""org.apache.shiro.cache.ehcache.EhCacheManager""</p>

<p>but looks like shiro plugin is not reading configurations, have used ""security.shiro"" as prefix</p>

<p>Thanks in advance</p>
","<grails><shiro>","1","8737613"
"15922559","Spring is ignoring @Transactional annotations in Apache Shiro Realm class","<p>I am using Spring for IOC and transaction management, and am planning to use Apache Shiro as the security library.</p>

<p>Whenever I want to check a user's permissions, I call <code>subject.isPermitted(""right"")</code>, whereupon Shiro checks for the permission using a datastore. Within these calls, a database connection is established, and I have annotated the method with <code>@Transactional</code>. However, I always receive an error that there is no Hibernate session bound to the thread whenever I execute the permission check.</p>

<p>The method is in the Realm class. I defined a custom Shiro Realm class:</p>

<pre><code>@Component
public class MainRealm extends AuthorizingRealm {

@Autowired
protected SysUserDao userDao;

@Transactional
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)
        throws AuthenticationException {
    ...
    final SysUser user = this.userDao.findByUsername(un);
    ...
    return authInfo;
}

@Transactional
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    ...
    permissions = this.userDao.getAccessRights(un);
    ...
    return authInfo;
}
}
</code></pre>

<p>Apache Shiro uses a Servlet Filter, so I have the following defined in web.xml:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
</code></pre>

<p>I am using programmatic configuration for Spring. Here is my App Config class:</p>

<pre><code>@Configuration //Replaces Spring XML configuration
@ComponentScan(basePackages = ""com.mycompany"")
@EnableTransactionManagement //Enables declarative Transaction annotations
public class SpringAppConfig {

@Bean
public DataSource sqlServerDataSource() throws Exception {...}
@Bean
@Autowired
public PlatformTransactionManager transactionManager(SessionFactory sessionFactory) {...}
@Bean
public AnnotationSessionFactoryBean getSessionFactory() throws Exception {...}
@Bean
public static PersistenceExceptionTranslationPostProcessor exceptionTranslation() {...}

@Bean
@Autowired
public DefaultWebSecurityManager securityManager(MainRealm mainRealm) {
    final HashedCredentialsMatcher hcm = new HashedCredentialsMatcher(shiroHash);
    hcm.setHashIterations(shiroIter);
    hcm.setStoredCredentialsHexEncoded(shiroHexEncoded);
    mainRealm.setCredentialsMatcher(hcm);
    final DefaultWebSecurityManager sm = new DefaultWebSecurityManager();
    sm.setRealm(mainRealm);
    return sm;
}

@Bean
@Autowired
public ShiroFilterFactoryBean shiroFilter(DefaultWebSecurityManager securityManager) {
    final ShiroFilterFactoryBean filter = new ShiroFilterFactoryBean();
    filter.setSecurityManager(securityManager);
    return filter;
}

/**
 * This method needs to be static due to issues defined here:&lt;br&gt;
 * https://issues.apache.org/jira/browse/SHIRO-222
 */
@Bean
public static LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
    LifecycleBeanPostProcessor lbpp = new LifecycleBeanPostProcessor();
    return lbpp;
}

@Bean
@DependsOn(""lifecycleBeanPostProcessor"")
public static DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
    return new DefaultAdvisorAutoProxyCreator();
}

@Bean
@Autowired
public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(DefaultWebSecurityManager secMan) {
    AuthorizationAttributeSourceAdvisor advBean = new AuthorizationAttributeSourceAdvisor();
    advBean.setSecurityManager(secMan);
    return advBean;
}
}
</code></pre>

<p>To summarize the issue, I believe my MainRealm class is being wired properly (it has an @Autowired dependency to a DAO object and I verified that it is not null) with the exception of the @Transactional annotation. Due to this, I cannot directly call <code>user.isPermitted("""")</code> as it prompts an error: <code>No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here</code>.</p>

<p>Would like to ask for help in checking whether I missed anything in my Spring configuration.</p>

<p>In the meantime I have hacked over this issue by calling the <code>user.isPermitted("""")</code> function within a method in my Service class that's correctly bound by a @Transactional.</p>

<p><strong>EDIT</strong> When I checked the logs for Spring initialization I can see this:</p>

<pre><code>Bean 'mainRealm' of type [class com.x.security.MainRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
</code></pre>

<p>According to <a href=""https://stackoverflow.com/a/12359607/751634"">this SO answer</a> it means <code>MainRealm</code> isn't being postprocessed by the transaction manager therefore any @Transactional annotations get ignored. If so, how can I correct this?</p>

<p><strong>EDIT 2</strong> According to <a href=""https://stackoverflow.com/a/1385181/751634"">this SO question</a>: ""In other words, if I write my own BeanPostProcessor, and that class directly references other beans in the context, then those referenced beans will not be eligible for auto-proxying, and a message is logged to that effect."" I just checked <code>ShiroFilterFactoryBean</code> and it is in fact a BeanPostProcessor. And the problem is it requires a <code>SecurityManager</code> instance that in turn requires a <code>MainRealm</code> instance. So both beans are autowired and are thus ineligible for proxying. I feel like I'm closer to the solution but I still can't resolve it.</p>
","<spring><hibernate><shiro>","6","15940861"
"18595553","WebSocket (Atmosphere) with Per Request problems (Hibernate and Shiro) - Vaadin","<p>The framework <em><a href=""https://vaadin.com/"" rel=""nofollow"">Vaadin</a></em> in version 7 uses <em><a href=""https://github.com/Atmosphere/atmosphere"" rel=""nofollow"">Atmosphere</a></em> to enable both push logic, and apparently also ""all over"" communications in the system when it is available, i.e. also on what ordinarly would be requests from the browser.</p>

<p>This is all good when Atmosphere doesn't get to use WebSockets (e.g. when Jetty is not configured with websocket support), and therefore must rely on long polling or similar HTTP ""fake"" push methods that just seems like a very long Servlet call.</p>

<p>However, when actual WebSocket are used, both <em><a href=""http://shiro.apache.org/"" rel=""nofollow"">Shiro</a></em> and <em><a href=""http://www.hibernate.org/"" rel=""nofollow"">Hibernate</a></em> complains loudly.</p>

<p>The problem is that Servlet Filters doesn't ""kick in"" for WebSockets. Hibernate creates per-request connections with spring's OpenSessionInViewFilter, which also acts as transaction boundaries by committing/closing it on exit. Shiro creates WebSubject objects with an extension of AbstractShiroFilter - which even sticks the ServletRequest and ServletResponse objects into the subject - and clears the ""ThreadContext"" (which just is a ThreadLocal) upon exit.</p>

<p>Does anyone have any good ideas here? I was hoping for Atmosphere to have similar ""try-finally""-like ""filterChain.continue"" logic, so that one could recreate this entry/exit logic described above. However, as I've seen it this far, Atmosphere doesn't have this kind of filtering available.</p>

<p>I would love to hear suggestions.</p>
","<hibernate><websocket><vaadin><shiro><atmosphere>","3",""
"23301694","Guice synthetic methods warning","<p>We are having Guice and its AOP support. We have two 3d party modules which use the AOP support: Shiro and the Guice's JPA module. As a result Guice complains that ""The method may be intercepted twice"". 
My question is how can I avoid such behavior: I probably do not need to intercept synthetic methods at all.</p>

<p>If the modules were ours we could just add a Matcher which filters out all synthetic methods (like it says <a href=""https://code.google.com/p/google-guice/issues/detail?id=640"" rel=""nofollow"">here</a>) but the problem is these are 3d party modules.</p>
","<java><jpa><aop><guice><shiro>","3","23334307"
"27340202","RESTful Web Service with Jersey and Apache Shiro","<p>My first attempt at developing a simple authentication based REST services. I am trying to develop a RESTful web application using Jersey on Tomcat 8. I am using Apache Shiro for session management and authorization. Only HTTPS is supported.<br>
All services require authentication, neither guest nor anonymous access is allowed. The request can be authenticated two ways.  </p>

<ol>
<li>If the user belongs to the list of users in web application, then the user logs in from a Web browser and Shiro simply validates if the current user is logged in and allows request to proceed. This is for the custom UI provided by the application itself.  </li>
<li>If the request is from third party application, the username/password token are passed into the HTTP header authorization field for every service request. The users are managed by third party app and the app uses a common username/password for its users to access the web service. Such common users are prevented from logging in.</li>
</ol>

<p>All service requests are filtered (web.xml):  </p>

<pre><code>&lt;servlet&gt;
    &lt;servlet-name&gt;REST Service&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;com.sun.jersey.spi.container.ContainerRequestFilters&lt;/param-name&gt;
        &lt;param-value&gt;com.unisys.cpf.ffm.filter.AuthenticationFilter&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;`enter code here`
    &lt;servlet-name&gt;REST Service&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/service/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;  
</code></pre>

<p>The <code>AuthenticationFilter</code> class implements <code>ContainerRequestFilter</code> for authentication:  </p>

<pre><code>@Override
public ContainerRequest filter(ContainerRequest cr) {
    Subject currentUser = SecurityUtils.getSubject();
    if (!currentUser.isAuthenticated()) {
        //User is not logged in so get the authorization from header and authenticate
        String auth = cr.getHeaderValue(""authorization"");
        //Do Shiro authentication here.
    }
    return cr;
}
</code></pre>

<p>I have a web service which accepts form parameters and creates a resource. The Form parameters are dynamic based on what user selects. So I cannot use @FormParam to get all the parameters. Also there may be more contents to form as new features are added so I do not want to touch the Service again for each new/removed parameter.</p>

<p>I am using the Chrome Advanced REST Client plugin to simulate third party requests. Any browser is fine for the first scenario (logged in user).
Now I know just two ways of accessing the form parameters.  </p>

<p>First method is to use <code>MultivaluedMap</code>.  </p>

<pre><code>@POST
@Path(""/create"")
public String createResource(MultivaluedMap&lt;String, String&gt; parameters) {
    System.out.println(""Name of the resource: "" + parameters.getFirst(""resourceName""));
}
</code></pre>

<p>But trying to get the parameters using <code>MultivaluedMap</code> works only when a logged in  user submits the form. If I submit from REST Client plugin the same form values, then all parameters return null.</p>

<p>Second method is to use <code>@Context HttpServletRequest</code> </p>

<pre><code>@POST
@Path(""/create"")
public String createResource(@Context HttpServletRequest request) {
    System.out.println(""Name of the resource: "" + request.getParameter(""resourceName""));
}
</code></pre>

<p>This works for REST Client but does not work if a logged in user submits form. All request.getParameter return null.</p>

<p>If anybody knows how to fix the problem or better way to do authentication, then please let me know.</p>
","<java><post><jersey><shiro>","2",""
"21661645","HK2 dependency injection with Jersey 2 and Apache Shiro","<p>I'm creating a rest api using Jersey 2.5.1. I'm using HK2 for dependency injection. Later on I decided to use Apache Shiro for authentication and authorization.</p>

<p>While creating my own custom Shiro Realm I ran into some problems. In my realm I wanted to inject a dependency. However, when I ran my application the dependency was not resolved. </p>

<p>Here is my setup:</p>

<p>web.xml</p>

<pre><code>&lt;web-app xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
    version=""3.0""&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;MyApplication&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
        &lt;param-value&gt;my.app.api.MyApplication&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;MyApplication&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p></p>

<p>shiro.ini</p>

<pre><code>[main]

authcBasicRealm = my.app.api.MyCustomRealm
matcher = my.app.api.MyCustomCredentialsMatcher
authcBasicRealm.credentialsMatcher = $matcher
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

[urls]

/** = authcBasic
</code></pre>

<p>MyApplication.java</p>

<pre><code>public class MyApplication extends ResourceConfig {
   public MyApplication() {
      register(new ApplicationBinder());
      packages(true, ""my.app.api"");
   }
}
</code></pre>

<p>ApplicationBinder.java</p>

<pre><code>public class ApplicationBinder extends AbstractBinder {
   @Override
   protected void configure() {
      bind(UserDAO.class).to(new TypeLiteral&lt;Dao&lt;User&gt;&gt;(){});
      bind(RealDatasource.class).to(DataSource.class);
   }
}
</code></pre>

<p>MyCustomRealm.java</p>

<pre><code>public class MyCustomRealm extends JdbcRealm {

   @Inject DataSource source;

   public MyCustomRealm() {
      super();
   }

   @PostConstruct
   private void postConstruct() {
      // postConstruct is never executed
      setDataSource(source);
   }
}
</code></pre>

<p><br/><br/><br/>
<strong>So, the problem is that source is not injected in MyCustomRealm. All other classes that isn't created by Shiro gets its dependencies injected.
Could the problem be that Shiro is creating my CustomRealm via the ini file?</strong></p>
","<java><dependency-injection><shiro><jersey-2.0><hk2>","0","33491862"
"21391572","Shiro Authenticates Non-existent User in LDAP","<p>Can anyone suggest why Shiro tells me in my trace logs below that a non existent user ""anybody"" is authenticated ok? It seems to give itself a session earlier on in the log prior to actually authenticating. I assume that this is just to run the authentication. </p>

<p>It redirects ok to my ShiroFilterFactoryBean loginUrl if I logout and then try to access any secured url. But then it will authenticate any user.</p>

<p>Jan 27 20:25:16 TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
Jan 27 20:25:16 TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - anybody, rememberMe=false (127.0.0.1)]
Jan 27 20:25:16 DEBUG org.apache.shiro.realm.ldap.JndiLdapRealm - Authenticating user 'anybody' through LDAP
Jan 27 20:25:16 DEBUG org.apache.shiro.realm.ldap.JndiLdapContextFactory - Initializing LDAP context using URL [ldap://184.26.3.91:389] and principal [uid=anybody,ou=REMOTE,o=OFFICE] with pooling disabled
Jan 27 20:25:16 DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [anybody] from doGetAuthenticationInfo
Jan 27 20:25:16 DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [anybody].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - anybody, rememberMe=false (127.0.0.1)].
Jan 27 20:25:16 DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - anybody, rememberMe=false (127.0.0.1)].  Returned account [anybody]
Jan 27 20:25:16 DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
Jan 27 20:25:16 TRACE org.apache.shiro.util.ThreadContext - get() - in thread [http-bio-8080-exec-6]
Jan 27 20:25:16 TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] for key [org.apache.shiro.util.ThreadContext_SECURITY_MANAGER_KEY] bound to thread [http-bio-8080-exec-6]
Jan 27 20:25:16 TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
Jan 27 20:25:16 TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
Jan 27 20:25:16 DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a session.  Returning.</p>

<p>My LDAP realm is :</p>

<pre><code> public class MyJndiLdapRealm extends JndiLdapRealm {

private static final Logger logger = LoggerFactory.getLogger(MyJndiLdapRealm.class);

@Override
protected AuthorizationInfo queryForAuthorizationInfo(PrincipalCollection principals, LdapContextFactory ldapContextFactory) throws NamingException {

    logger.debug(""queryForAuthorizationInfo(PrincipalCollection: entering"");

    String username = (String) getAvailablePrincipal(principals);

    logger.debug(""queryForAuthorizationInfo(PrincipalCollection: user is ""+ username);

    // Perform context search
    LdapContext ldapContext = ldapContextFactory.getSystemLdapContext();

    Set&lt;String&gt; roleNames;

    try {
      roleNames = getRoleNamesForUser(username, ldapContext);
    } finally {
      LdapUtils.closeContext(ldapContext);
    }

    return buildAuthorizationInfo(roleNames);
}

protected AuthorizationInfo buildAuthorizationInfo(Set&lt;String&gt; roleNames) {
    return new SimpleAuthorizationInfo(roleNames);
}

protected Set&lt;String&gt; getRoleNamesForUser(String username, LdapContext ldapContext) throws NamingException {
    Set&lt;String&gt; roleNames;
    roleNames = new LinkedHashSet&lt;String&gt;();

    logger.debug(""getRoleNamesForUser : entering"");

    SearchControls searchCtls = new SearchControls();
    searchCtls.setSearchScope(SearchControls.SUBTREE_SCOPE);

    //SHIRO-115 - prevent potential code injection:
    String searchFilter = ""(&amp;(objectClass=*)(CN={0}))"";
    Object[] searchArguments = new Object[]{ username };

//  Name searchBase; // ?
    String searchBase = ""test"";
    NamingEnumeration&lt;SearchResult&gt; answer = ldapContext.search(searchBase, searchFilter, searchArguments, searchCtls);

    while (answer.hasMoreElements()) {
      SearchResult sr = (SearchResult) answer.next();

      logger.debug(""Retrieving group names for user ["" + sr.getName() + ""]"");


      Attributes attrs = sr.getAttributes();

      if (attrs != null) {
        NamingEnumeration&lt;? extends Attribute&gt; ae = attrs.getAll();
        while (ae.hasMore()) {
          Attribute attr = (Attribute) ae.next();

          if (attr.getID().equals(""memberOf"")) {

            Collection&lt;String&gt; groupNames = LdapUtils.getAllAttributeValues(attr);

            logger.debug(""Groups found for user ["" + username + ""]: "" + groupNames);

            Collection&lt;String&gt; rolesForGroups = getRoleNamesForGroups(groupNames);
            roleNames.addAll(rolesForGroups);
          }
        }
      }
    }
    return roleNames;
}
    // active dir
protected Collection&lt;String&gt; getRoleNamesForGroups(Collection&lt;String&gt; groupNames) {
        Set&lt;String&gt; roleNames = new HashSet&lt;String&gt;(groupNames.size());
/*
           if (groupRolesMap != null) {
               for (String groupName : groupNames) {
                   String strRoleNames = groupRolesMap.get(groupName);
                   if (strRoleNames != null) {
                         for (String roleName : strRoleNames.split(ROLE_NAMES_DELIMETER)) {


                               log.debug(""User is member of group ["" + groupName + ""] so adding role ["" + roleName + ""]"");


                           roleNames.add(roleName);

                         }
                     }
                 }
              }   */
             return roleNames;
       }
</code></pre>

<p>}</p>

<p>spring application context :</p>

<pre><code>     &lt;bean id=""customAuthFilter"" class=""security.MyAuthenticationFilter""/&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""successUrl"" value=""/referral_form""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized""/&gt;
     &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /** = authc, customAuthFilter
            [main]
            /logout = logout
        &lt;/value&gt;
    &lt;/property&gt;   
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realm"" ref=""authenticateRealm""/&gt;
&lt;!--   &lt;property name=""sessionManager.globalSessionTimeout =""30000""/&gt;  --&gt;  
     &lt;property name=""sessionMode"" value=""native""/&gt; 
&lt;/bean&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;bean id=""authenticateRealm"" class=""security.MyJndiLdapRealm""&gt;
    &lt;property name=""contextFactory"" ref=""contextFactory"" /&gt;
    &lt;property name=""userDnTemplate"" value=""uid={0},ou=OFFICE"" /&gt;
&lt;/bean&gt;

&lt;bean id=""contextFactory"" class=""org.apache.shiro.realm.ldap.JndiLdapContextFactory""&gt;
    &lt;property name=""environment""&gt;
        &lt;map&gt;
            &lt;entry key=""java.naming.provider.url"" value=""ldap://184.26.3.91:389"" /&gt;
        &lt;/map&gt;    
    &lt;/property&gt; 

&lt;/bean&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Thanks for any help</p>
","<ldap><shiro>","1","21486647"
"18058587","Sample about RESTful and Shiro Integration","<p>I am developing a Java web application using RESTful as web service. And now I want to apply Apache Shiro to secure my application. The mechanism is: after user logged in successfully, a token (combined from username, password and logged time) will be returned to client. Then every single REST request will attach this token to authenticate at server (no need to authorize). But now I dont know how to configure to accept this.<br>
And by the way, could you please give me any sample about Shiro &amp; RESTful integration? Thank you</p>
","<java><rest><shiro>","2","18853941"
"13188718","Shiro UnknownSessionException after logout","<p>I'm currently working on a web application in JavaEE6 stack and I've integrated Shiro for security. I think the authentication and authorization is working properly now and I have 1 last problem.</p>

<p>When I logout, I'm encountering UnknownSessionException, here are my config and codes for inspection:</p>

<p>web.xml</p>

<pre><code>&lt;web-app xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
    version=""3.0""&gt;

    &lt;!-- Welcome page --&gt;
    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;home.xhtml&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;!-- Map these files with JSF --&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.jsf&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.faces&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>shiro.ini</p>

<pre><code>[main]
saltedJdbcRealm = com.czetsuya.commons.web.security.shiro.JdbcRealmImpl

# any object property is automatically configurable in Shiro.ini file
saltedJdbcRealm.jndiDataSourceName = czetsuyaPortal 

# the realm should handle also authorization
saltedJdbcRealm.permissionsLookupEnabled = true

# If not filled, subclasses of JdbcRealm assume ""select password from users where username  =  ?""
# first result column is password, second result column is salt 
saltedJdbcRealm.authenticationQuery  =  SELECT password, salt FROM czetsuya_users WHERE username  =  ?

# If not filled, subclasses of JdbcRealm assume ""select role_name from user_roles where username  =  ?""
saltedJdbcRealm.userRolesQuery  =  SELECT name FROM czetsuya_roles a INNER JOIN czetsuya_user_roles b ON a.id = b.role_id INNER JOIN czetsuya_users c ON c.id = b.user_id WHERE c.username  =  ?

# If not filled, subclasses of JdbcRealm assume ""select permission from roles_permissions where role_name  =  ?""
saltedJdbcRealm.permissionsQuery  =  SELECT action FROM czetsuya_permissions WHERE role  =  ?

# password hashing specification, put something big for hasIterations
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName = SHA-256
sha256Matcher.hashIterations = 1
saltedJdbcRealm.credentialsMatcher = $sha256Matcher
securityManager.realms = saltedJdbcRealm

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionDAO.activeSessionsCacheName = shiro-activeSessionCache
securityManager.sessionManager.sessionDAO = $sessionDAO

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

sessionValidationScheduler  =  org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
# 1,800,000 milliseconds  =  30 mins
sessionValidationScheduler.interval = 1800000
securityManager.sessionManager.sessionValidationScheduler  =  $sessionValidationScheduler

securityManager.sessionManager.sessionIdCookie.domain = com.czetsuya
# 1,800,000 milliseconds = 30 mins
securityManager.sessionManager.globalSessionTimeout = 1800000 

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager 
cacheManager.cacheManagerConfigFile = classpath:shiro-ehcache.xml
securityManager.cacheManager = $cacheManager

czetsuyaFilter = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
czetsuyaFilter.loginUrl = /faces/login.xhtml
czetsuyaFilter.unauthorizedUrl = /faces/login.xhtml
# logout.redirectUrl = /faces/login.xhtml

[urls]
/login.xhtml = czetsuyaFilter
/secure/** = czetsuyaFilter
/api/** = noSessionCreation, czetsuyaFilter
# /logout = logout
</code></pre>

<p>The part where I invoke logout:</p>

<pre><code>public String logout() {
    Subject subject = SecurityUtils.getSubject();
    if (subject != null) {
        subject.logout();
    }

    return ""/home.xhtml?faces-redirect=true"";
}
</code></pre>

<p>Thanks,
<br />czetsuya</p>
","<java-ee-6><shiro>","3","14190250"
"31622958","how to get id of current user in websocket open method?","<p>I am trying to get user id in open method of websocket, and for this I am using shiro, but I get null for Subject,Here is my method:</p>

<pre><code>@OnOpen
public void open(final Session session, @PathParam(""room"") final String room) {
    Subject currentUser = SecurityUtils.getSubject();
    long id = currentUser.getPrincipals().oneByType(model.Users.class)
            .getId();

    log.info(""session openend and bound to room: "" + room);
    session.getUserProperties().put(""user"", id);

}
</code></pre>

<p>Does anybody have any idea what I should do?</p>
","<java><websocket><shiro>","2","31634104"
"12535596","Shiro keeps redirecting to login page","<p>I am trying to implement shiro in my web-app and I keep getting this problem no matter what I try. I have already looked at <a href=""https://stackoverflow.com/questions/10033929/shiro-always-redirects-me-to-login-jsp"">Shiro always redirects me to login.jsp</a> and <a href=""http://mail-archives.apache.org/mod_mbox/shiro-user/201204.mbox/%3CCAETPiXbFDzOZnj4qOaRXgMv57NisN1xk9wfCGaO+vPM5hR5j3A@mail.gmail.com%3E"" rel=""nofollow noreferrer"">http://mail-archives.apache.org/mod_mbox/shiro-user/201204.mbox/%3CCAETPiXbFDzOZnj4qOaRXgMv57NisN1xk9wfCGaO+vPM5hR5j3A@mail.gmail.com%3E</a> with no success.</p>

<p>Here is my relevant code:</p>

<p>shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /public/login.jsp


authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember

authc.successUrl = /private/other.xhtml

authc.failureKeyAttribute=LoginFailure

[users]
admin=admin,ROLE_ADMIN

[roles]
ROLE_ADMIN=*

[urls]
/public/login.jsp=authc
/private/**=authc
</code></pre>

<p>login.jsp:</p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
    pageEncoding=""ISO-8859-1""%&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
&lt;title&gt;Please Log In&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;%
  String errorDescription = (String) request.getAttribute(""LoginFailure"");
  if (errorDescription!=null) {
%&gt;
Login attempt was unsuccessful: &lt;%=errorDescription%&gt;
&lt;%
  }
%&gt;&lt;form name=""loginform"" action="""" method=""post""&gt;
    &lt;table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""3""&gt;
        &lt;tr&gt;
            &lt;td&gt;Username:&lt;/td&gt;
            &lt;td&gt;&lt;input type=""text"" name=""user"" maxlength=""30""&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Password:&lt;/td&gt;
            &lt;td&gt;&lt;input type=""password"" name=""pass"" maxlength=""30""&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan=""2"" align=""left""&gt;&lt;input type=""checkbox"" name=""remember""&gt;&lt;font size=""2""&gt;Remember Me&lt;/font&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan=""2"" align=""right""&gt;&lt;input type=""submit"" name=""submit"" value=""Login""&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>web.xml:</p>

<pre><code>&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;/index.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;filter&gt;
    &lt;filter-name&gt;securityFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;configPath&lt;/param-name&gt;
        &lt;param-value&gt;classpath:shiro.ini&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;securityFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>I keep getting redirected back to login.jsp even when I enter the correct log-in.</p>
","<xml><jsp><shiro>","2",""
"9936963","Implementing a AuthorizingRealm with Grails Shiro plugin","<p>I'm trying to implement a AuthorizingRealm with Grails Shiro plugin. Authentication is done against a Active Directory using the plugin's generated class ShiroLdapRealm. Roles will be maintained inside the application's database.</p>

<p>So how can I integrate the ShiroLdapRealm authentication with my custom authorization? It seems to me that the Grails Shiro plugin uses the RealmWrapper to hide the internals of Shiro from the Grails world, and it only implements a standard Realm class, not AuthorizingRealm.</p>

<p>Any idea? Thank you!</p>
","<grails><grails-plugin><shiro><grails-2.0>","3","9949294"
"17048153","apache shiro using Hashing Credentials can not make login successfully","<p>I am using shiro, and I use hashing credential as my credential.</p>

<p>here is my shiro.ini configuration:</p>

<pre><code>credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024
realmA.credentialsMatcher = $credentialsMatcher
securityManager.realms = $realmA
</code></pre>

<p>below is how I generate the salt and hashed password:</p>

<pre><code>RandomNumberGenerator rng = new SecureRandomNumberGenerator();
ByteSource salt = rng.nextBytes();
String passwordsalt=salt.toBase64();
String hashedPasswordBase64 = new Sha256Hash(user.getPassword(),
                    salt, 1024).toBase64();
user.setPassword(hashedPasswordBase64);
user.setByteTabSalt(passwordsalt);
dao.createUser(user);
</code></pre>

<p>this is the Realm I extended:</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(
            AuthenticationToken authToken) throws AuthenticationException {
        UsernamePasswordToken token = (UsernamePasswordToken) authToken;
        User user = dao.getForUsername(token.getUsername());
        if (user != null) {
            SimpleAuthenticationInfo info = new SimpleAuthenticationInfo(
                    user.getEmail_account(), user.getPassword(), getName());
            ByteSource salt = new SimpleByteSource(Base64.decode(user
                    .getByteTabSalt()));
            info.setCredentialsSalt(salt);
            return info;
        } else {
            return null;
        }
    }
</code></pre>

<p>but when I use my new generated account to login, I never success.
the debug result is I got the user object correctly. any idea?</p>

<p>Thank you so much.</p>
","<jsf><shiro>","2","17096478"
"12602133","Apache Shiro, isPermitted() isn´t working","<p>I'm making some testing with Apache Shiro just for learn, and i have a problem with permissions. The method isPermitted() just not work I mean, it's always return false.</p>

<p>shiro.ini</p>

<pre><code>[main]

sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256


authc.loginUrl = /faces/views/login.xhtml
authc.successUrl = /faces/views/index.xhtml

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = select senha from VUsuarioPerfil where usuario = ?
jdbcRealm.userRolesQuery = select perfil from VUsuarioPerfil where usuario = ?
jdbcRealm.permissionsQuery = select permissoes from VUsuarioPerfil where usuario = ?

jdbcRealm.credentialsMatcher = $sha256Matcher

ds = com.microsoft.sqlserver.jdbc.SQLServerConnectionPoolDataSource
ds.serverName = 192.168.50.254
ds.user = xx
ds.password = xxx
ds.databaseName = shiro
jdbcRealm.dataSource = $ds
</code></pre>

<p>Each user should have his own permission, so on the view(VUsuarioPerfil) there is a column called permissoes where I placed a string, like ""clientes:visualizar"".
And on code I test this way</p>

<pre><code>public void test() {
    System.out.println(SecurityUtils.getSubject().hasRole(""usuario""));
    System.out.println(SecurityUtils.getSubject().isPermitted(""clientes:visualizar""));
}
</code></pre>

<p>Result is output:</p>

<pre><code>true
false
</code></pre>

<p>I don't now why just the permission isn't caught on database.</p>
","<permissions><shiro>","2",""
"25514091","Add information to the subject on apache shiro","<p>Im using apache shiro. When i want to know if the user have permissions and roles i use SecutiryUtils.getSubject(). I like to know how to add more information to the subject like email, primary key and any other business information that i need so i can retrieve that information when necessary.</p>

<p>This is my shiro.ini:</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource  
ds.resourceName = java:/comp/env/jdbc/myDS

# JDBC realm config  
jdbcRealm = com.mycompany.JdbcRealmImpl
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = SELECT password FROM user WHERE username = ? AND status = 1
jdbcRealm.dataSource = $ds

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
jdbcRealm.credentialsMatcher = $sha256Matcher

[urls]
/logout = logout
/** = authcBasic
</code></pre>

<p>This is my JdbcRealm</p>

<pre><code>public class JdbcRealmImpl extends JdbcRealm {

    public JdbcRealmImpl() {
        super();
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(
            final AuthenticationToken token) throws AuthenticationException {

        final AuthenticationInfo info = super.doGetAuthenticationInfo(token);    

        // create a user to test
        final User user = new User();
        user.setId(11111);

        return new SimpleAuthenticationInfo(user, info.getCredentials(),
                getName());
    }

}
</code></pre>

<p>And here is the code where i try to retrieve the user info.</p>

<pre><code>    final Subject currentUser = SecurityUtils.getSubject();
    final User user = (User) currentUser.getPrincipal();
    // null
    System.out.println(user); 
</code></pre>
","<shiro><principal><subject>","4",""
"5938215","Grails + Shiro plugin fails on error creating ShiroFilters cannot resolve reference to bean transactionManager","<p>After installing the Shiro plugin (v 1.1.3) in a Grails (v 1.3.7) application and using  <em>grails shiro-quick-start --prefix=""Sec""</em> to bootstrap the different Shiro classes grails run-app fails with the stack trace shown below.</p>

<p>Anybody got an idea what exactly is going wrong?</p>

<p>When staring the application the following exception is shown:</p>

<blockquote>
  <p>Running Grails application..
  2011-05-09 16:14:31,209 [main] ERROR
  context.GrailsContextLoader  - Error
  executing bootstraps: Error creating
  bean with name
  'org.apache.shiro.grails.ShiroFilters':
  Initialization of bean failed; nested
  exception is
  org.springframework.beans.factory.BeanCreationException:
  Error creating bean with name
  'shiroAnnotationHandlerService':
  Cannot resolve reference to bean
  'transactionManager' while setting
  bean property 'transactionManager';
  nested exception is
  org.springframework.beans.factory.NoSuchBeanDefinitionException:
  No bean named 'transactionManager' is
  defined
  org.springframework.beans.factory.BeanCreationException:
  Error creating bean with name
  'org.apache.shiro.grails.ShiroFilters':
  Initialization of bean failed; nested
  exception is
  org.springframework.beans.factory.BeanCreationException:
  Error creating bean with name
  'shiroAnnotationHandlerService':
  Cannot resolve reference to bean
  'transactionManager' while setting
  bean property 'transactionManager';
  nested exception is
  org.springframework.beans.factory.NoSuchBeanDefinitionException:
  No bean named 'transactionManager' is
  defined   at
  org.grails.tomcat.TomcatServer.start(TomcatServer.groovy:212)
    at
  grails.web.container.EmbeddableServer$start.call(Unknown
  Source)   at
  _GrailsRun_groovy$_run_closure5_closure12.doCall(_GrailsRun_groovy:158)
    at
  _GrailsRun_groovy$_run_closure5_closure12.doCall(_GrailsRun_groovy)
    at
  _GrailsSettings_groovy$_run_closure10.doCall(_GrailsSettings_groovy:280)
    at
  _GrailsSettings_groovy$_run_closure10.call(_GrailsSettings_groovy)
    at
  _GrailsRun_groovy$_run_closure5.doCall(_GrailsRun_groovy:149)
    at
  _GrailsRun_groovy$_run_closure5.call(_GrailsRun_groovy)
    at
  _GrailsRun_groovy.runInline(_GrailsRun_groovy:116)
    at
  _GrailsRun_groovy.this$4$runInline(_GrailsRun_groovy)
    at
  _GrailsRun_groovy$_run_closure1.doCall(_GrailsRun_groovy:59)  at
  RunApp$_run_closure1.doCall(RunApp.groovy:33)     at
  gant.Gant$_dispatch_closure5.doCall(Gant.groovy:381)
    at
  gant.Gant$_dispatch_closure7.doCall(Gant.groovy:415)
    at
  gant.Gant$_dispatch_closure7.doCall(Gant.groovy)  at
  gant.Gant.withBuildListeners(Gant.groovy:427)
    at
  gant.Gant.this$2$withBuildListeners(Gant.groovy)
    at
  gant.Gant$this$2$withBuildListeners.callCurrent(Unknown
  Source)   at
  gant.Gant.dispatch(Gant.groovy:415)
    at
  gant.Gant.this$2$dispatch(Gant.groovy)
    at
  gant.Gant.invokeMethod(Gant.groovy)
    at
  gant.Gant.executeTargets(Gant.groovy:590)
    at
  gant.Gant.executeTargets(Gant.groovy:589)
  Caused by:
  org.springframework.beans.factory.BeanCreationException:
  Error creating bean with name
  'shiroAnnotationHandlerService':
  Cannot resolve reference to bean
  'transactionManager' while setting
  bean property 'transactionManager';
  nested exception is
  org.springframework.beans.factory.NoSuchBeanDefinitionException:
  No bean named 'transactionManager' is
  defined   ... 23 more Caused by:
  org.springframework.beans.factory.NoSuchBeanDefinitionException:
  No bean named 'transactionManager' is
  defined   ... 23 more</p>
</blockquote>
","<grails><shiro>","0","5938426"
"17187181","Permission control using apache shiro","<p>I am new in apache shiro, and I read almost 60% of tutorials in apache shiro page.</p>

<p>It is a wonderful framework, however I wonder if it can meet my requirements.</p>

<p>I am interested in the permission-based authentication.</p>

<p>For example, to make sure if the user have the permission of delete resources, we can use this:</p>

<pre><code>currentUser.isPermitted( ""resource:delete"" );
</code></pre>

<p>However in our application, even a user have the permission of delete resources, he can only delete some specified resources, not all of them.</p>

<p>For example(just an exmaple), the resource have an filed named <code>createdby</code> to record the one who create this resource.</p>

<p>Now user can only delete the resources created by himself if he have the <code>resouce:delete</code> permission.</p>

<p>In fact, the resources which can be deleted by the user(who have authenticated and have <code>delete</code> permission) will be calculated by more constraints.</p>

<p>Now how to make shiro work in this suitation?</p>
","<shiro>","1","17187501"
"26626657","Shiro throws an exception when session expires / invalidates","<p>I tried to use native sessions with Grails:</p>

<pre><code>[main]
sessionManager = org.apache.shiro.session.mgt.DefaultSessionManager
securityManager.sessionManager = \$sessionManager
</code></pre>

<p>It works great until session is not found or invalidated. </p>

<ol>
<li>Start server. Login</li>
<li><p>Restart server.</p>

<pre><code>    org.apache.shiro.session.ExpiredSessionException: Session with id [3c3ffbef-ee93-4f6e-a599-1f1f4c03d037] has expired. Last access time: 29.10.14 12:18.  Current time: 29.10.14 12:18.  Session timeout is set to 1 seconds (0 minutes)
        at org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:292)
        at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:186)
        at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143)
        at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120)
        at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:108)
        at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:112)
        at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:209)
        at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
        at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
        at org.apache.shiro.subject.support.DelegatingSubject.getRunAsPrincipalsStack(DelegatingSubject.java:469)
        at org.apache.shiro.subject.support.DelegatingSubject.getPrincipals(DelegatingSubject.java:153)
        at org.apache.shiro.subject.support.DelegatingSubject.getPrincipal(DelegatingSubject.java:149)
        at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSubjectPrincipal(ShiroHttpServletRequest.java:95)
        at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getUserPrincipal(ShiroHttpServletRequest.java:111)
</code></pre></li>
</ol>

<p>What's the point? Why Shiro throws an exception instead of processing it silently? It makes shiro sessions unusable.</p>

<p>It's funny that even logout doesn't work:<br>
1. <code>ShiroHttpServletRequest</code> remembers principal's session<br>
2. <code>SecurityUtils.subject?.logout()</code> invalidates principal's session<br>
3. On processing response something accesses session (<code>request.getSession(false)</code>), it returns invalidated session => <code>org.apache.shiro.session.UnknownSessionException</code>  </p>

<pre><code>There is no session with id [86f8b1dc-0c16-4836-9564-c8cc3cc1c03a]. Stacktrace follows:
java.lang.IllegalStateException: org.apache.shiro.session.UnknownSessionException: There is no session with id [86f8b1dc-0c16-4836-9564-c8cc3cc1c03a]
    at org.apache.shiro.web.servlet.ShiroHttpSession.getAttribute(ShiroHttpSession.java:133)
    at grails.plugin.cache.web.filter.PageFragmentCachingFilter.doFilter(PageFragmentCachingFilter.java:195)
    at grails.plugin.cache.web.filter.AbstractFilter.doFilter(AbstractFilter.java:63)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
</code></pre>

<p>What's the correct way of using native Shiro sessions?</p>
","<java><session><grails><shiro>","1",""
"25630716","Shiro or Spring Security with Ninja framework or Spark","<p>can I use Spring Security or Shiro Security with Ninja Framework or Spark Framework? I can't find any example to integrate this security frames with web frames. there is not any information in the ninja web site about user auth and web app security. </p>
","<spring-security><apache-spark><shiro>","1",""
"7687022","Grails: ShiroSecurity - log in user without UsernamePasswordToken","<p>The usual way of authenticating user is to invoke:</p>

<p>SecurityUtils.subject.login(new UsernamePasswordToken(params.username, params.password))</p>

<p>However, what if I would like to log him in automagically, without necessity of typing username and password? I have created method in userService like this:</p>

<pre><code>   def logIn(User user){
    Object userIdentity = user.email
    String realmName = ""ShiroDbRealm"";
    PrincipalCollection principals = new SimplePrincipalCollection(userIdentity, realmName);
    Subject subject = new Subject.Builder().principals(principals).buildSubject();
    ThreadContext.bind(subject)
   }
</code></pre>

<p>But this does not work, any hints?</p>
","<authentication><grails><shiro>","0","7726800"
"8205027","How to use a shiro native session in a grails web application?","<p>Currently, I am using the default HttpSession object in both controllers and gsp pages:</p>

<p>In controllers:</p>

<pre><code>...
session.mykey = anObject;  // adding an object to session
...
if (session.otherkey) {    // performing some checking
</code></pre>

<p>In GSPs:</p>

<pre><code>...
&lt;g:if test=""${session.mykey}""&gt;
...
</code></pre>

<p>I'd like to have a ""remember me"" functionality. Shiro has already it built in. However, as far as I understood, in order to do it I have to use the shiro native session mode (in Config.groovy: security.shiro.session.mode=""native""). By default, it persists the session state, so objects will remain in the session as far as the cookie expires or the user logs off.</p>

<p>Is my understanding right?</p>

<p>Then i will have to change my controllers to this:</p>

<pre><code>def shiroSession = SecurityUtils.subject.session
shiroSession.setAttribute(""mykey"",anObject)
....
if (shiroSession.getAttribute(""otherkey"") ){
</code></pre>

<p>And my views to this:</p>

<pre><code>&lt;g:if test=""${SecurityUtils.subject.session.getAttribute('mykey')}""&gt;
</code></pre>

<p>So, my questions are:</p>

<ul>
<li>Is that right? </li>
<li>Can't I just use the previous way to access the session?</li>
<li>Do I have to turn off the default http session in some configuration?</li>
</ul>
","<grails><shiro><session-management>","6",""
"14059459","Jetty can't find login.jsp when using Jersey-Guice-Shiro stack","<p>(Update 2nd Jan 2013) I've now added all the code plus a pom.xml to github at <a href=""https://github.com/AndyWi/GuiceJerseyJettyShiroExample"" rel=""nofollow"">https://github.com/AndyWi/GuiceJerseyJettyShiroExample</a>
(End update)</p>

<p>I'm trying to add Form based authentication to my simple application using Shiro. The application uses Guice 3.0, Jersey 1.16 and Shiro 1.2.1, running on embedded Jetty 9.0.0.M4.</p>

<p>My problem is that (as far as I understand) Shiro needs login.jsp to be made available through Guice, and then added to Shiro's filter chain. However, when I do so, Jetty can't find login.jsp. When I exclude login.jsp from the Guice filter, Jetty can find the jsp, but then it's not available to Shiro so the authentication doesn't work.</p>

<p>So, in my bootstrap code, I use this line to add login.jsp to the Guice Filter:</p>

<pre><code>webAppContext.addFilter(GuiceFilter.class, ""/login.jsp"", null);
</code></pre>

<p>In my ShiroWebModule, I add the login.jsp like so:</p>

<pre><code>addFilterChain(""/login.jsp"", AUTHC);
</code></pre>

<p>I've spent a ridiculously long time searching for an answer to this without any hint that anyone else has had the same problem - which means I'm obviously doing something really simple wrong! But I can't work out what it is. I'd be very grateful if anyone could help me get past this.</p>

<p>I've stripped down my project to a small example to demonstrate the problem. All this should do is accept a rest url of /api/uuid, redirect the user to login.jsp, accept any username/password combination for authentication, and then return a new UUID from the /api/uuid service; the user should also remain logged in for future requests. Here's the full code in the hope that it will help someone out there spot the problem:</p>

<p>Bootstrap:</p>

<pre><code>package eg.guicejerseyjettyshiro;

import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.DefaultServlet;
import org.eclipse.jetty.webapp.WebAppContext;
import com.google.inject.servlet.GuiceFilter;
import eg.guicejerseyjettyshiro.modules.EgGuiceServletContextListener;

public class Bootstrap {

    public static void main(String[] args) throws Exception {
        Server server = new Server(8081);

        WebAppContext webAppContext = new WebAppContext();
        webAppContext.setContextPath(""/"");
        webAppContext.setResourceBase(""src/main/webapp/"");
        webAppContext.setParentLoaderPriority(true);

        webAppContext.addEventListener(new EgGuiceServletContextListener());

        webAppContext.addFilter(GuiceFilter.class, ""/api/*"", null);

        // **** Shiro needs login.jsp to go through the GuiceFilter,
        // but Jetty can't find the jsp when this happens. Commenting
        // out this line lets Jetty find the jsp, but Shiro can't see it:
        webAppContext.addFilter(GuiceFilter.class, ""/login.jsp"", null);

        webAppContext.addServlet(DefaultServlet.class, ""/"");

        server.setHandler(webAppContext);

        server.start();
        server.join();
    }

}
</code></pre>

<p>EgGuiceServletContextListener:</p>

<pre><code>package eg.guicejerseyjettyshiro.modules;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import com.google.inject.Guice;
import com.google.inject.Injector;
import com.google.inject.servlet.GuiceServletContextListener;

public class EgGuiceServletContextListener extends GuiceServletContextListener {

    private ServletContext servletContext;

    @Override
    public void contextInitialized(ServletContextEvent servletContextEvent) {
        this.servletContext = servletContextEvent.getServletContext();
        super.contextInitialized(servletContextEvent);
    }

    @Override
    protected Injector getInjector() {
        return Guice.createInjector(
                new EgJerseyServletModule(),
                new EgShiroWebModule(this.servletContext));
    }

}
</code></pre>

<p>EgJerseyServletModule:</p>

<pre><code>package eg.guicejerseyjettyshiro.modules;

import org.apache.shiro.guice.web.GuiceShiroFilter;
import com.sun.jersey.guice.JerseyServletModule;
import com.sun.jersey.guice.spi.container.servlet.GuiceContainer;
import eg.guicejerseyjettyshiro.dao.UuidDao;
import eg.guicejerseyjettyshiro.services.UuidService;

public class EgJerseyServletModule extends JerseyServletModule {

    @Override
    protected void configureServlets() {
        bindings();
        filters();
    }

    private void bindings() {
        bind(UuidDao.class);
        bind(UuidService.class);
    }

    private void filters() {
        filter(""/*"").through(GuiceShiroFilter.class);
        filter(""/*"").through(GuiceContainer.class);
    }

}
</code></pre>

<p>EgShiroWebModule:</p>

<pre><code>package eg.guicejerseyjettyshiro.modules;

import javax.servlet.ServletContext;
import org.apache.shiro.guice.web.ShiroWebModule;
import com.google.inject.name.Names;
import eg.guicejerseyjettyshiro.realms.EgAuthorizingRealm;

public class EgShiroWebModule extends ShiroWebModule {

    public EgShiroWebModule(ServletContext servletContext) {
        super(servletContext);
    }

    @Override
    protected void configureShiroWeb() {
        bindConstant().annotatedWith(Names.named(""shiro.globalSessionTimeout"")).to(30000L);

        bindRealm().to(EgAuthorizingRealm.class).asEagerSingleton();

        addFilterChain(""/login.jsp"", AUTHC);
        addFilterChain(""/api/*"", AUTHC);
    }

}
</code></pre>

<p>EgAuthorizingRealm:</p>

<pre><code>package eg.guicejerseyjettyshiro.realms;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;

public class EgAuthorizingRealm extends AuthorizingRealm {

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)
            throws AuthenticationException {
        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        System.out.println(""In EgAuthorizingRealm.doGetAuthenticationInfo for: "" + upToken.getUsername() + ""/"" + new String(upToken.getPassword()) + "" - remember="" + upToken.isRememberMe());
        return new SimpleAuthenticationInfo(upToken.getUsername(), upToken.getPassword(), getName());
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection pc) {
        System.out.println(""In EgAuthorizingRealm.doGetAuthorizationInfo"");
        // Doing nothing just now
        return null;
    }

}
</code></pre>

<p>UuidService:</p>

<pre><code>package eg.guicejerseyjettyshiro.services;

import javax.inject.Inject;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import eg.guicejerseyjettyshiro.dao.UuidDao;

@Path(""/api/uuid"")
@Produces({MediaType.APPLICATION_XML})
public class UuidService {

    private final UuidDao uuidDao;

    @Inject
    public UuidService(UuidDao uuidDao) {
        this.uuidDao = uuidDao;
    }

    @GET
    public String get() {
        Subject currentUser = SecurityUtils.getSubject();
        System.out.println(""UuidService current user: "" + currentUser.getPrincipal().toString());
        return ""&lt;uuid&gt;"" + this.uuidDao.generateUuid().toString() + ""&lt;/uuid&gt;"";
    }

}
</code></pre>

<p>UuidDao:</p>

<pre><code>package eg.guicejerseyjettyshiro.dao;

import java.util.UUID;

public class UuidDao {

    public UUID generateUuid() {
        return UUID.randomUUID();
    }
}
</code></pre>

<p>login.jsp:</p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
    pageEncoding=""ISO-8859-1""%&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
&lt;title&gt;Please Login&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;form name=""loginForm"" action="""" method=""post""&gt;
&lt;table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""3""&gt;
    &lt;tr&gt;
        &lt;td&gt;Username:&lt;/td&gt;
        &lt;td&gt;&lt;input type=""text"" name=""username"" maxlength=""30""&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Password:&lt;/td&gt;
        &lt;td&gt;&lt;input type=""password"" name=""password"" maxlength=""30""&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=""2"" align=""left""&gt;&lt;input type=""checkbox"" name=""rememberMe""&gt;&lt;font size=""2""&gt;Remember Me&lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=""2"" align=""right""&gt;&lt;input type=""submit"" name=""submit"" value=""Login""&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt; 
&lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>OK, I think that's all. I realise this is quite long, so thanks very much for reading this far. This has been driving me crazy, so any help you can give me will be very appreciated!</p>

<p>Thanks,
Andy.</p>
","<jsp><jersey><jetty><shiro><guice-servlet>","3","14140292"
"2756227","Grails Shiro plugin : confirming my understanding","<p>I'm bit vague about how to start using the shiro plugin, after reading few documents. I decided against Nimble, as it comes with few tables and UI plugins. </p>

<p>I setup shiro plugin with wildcard realm, with my own tables. I may use permission based (rather tan role based) access control as it scales well. Now, the steps for it.</p>

<ol>
<li>assign the permission string to the subject, and save it in the db</li>
<li>check the permission through isPermitted, hasPermission (or relevant tags in GSP).</li>
</ol>

<p>Now,<br>
  1. when to use the accesscontrol through filter?<br>
  2. is there a closure injected into the controller where I can define the permission for the actions in it? I read somewhere about accessControl static closure on each controller, but not seems to be documented.<br>
3. How do I create a typical access control scenario like only the creator of (something, a post etc) can delete it? One possibility is creating and persisting a permission string based on userid. to check the permission retrieve the object (post), get the userid and compare with subject.. seems bit complicated.. any easy implementation?</p>

<p>thanks a lot..
Babu.</p>
","<grails><shiro>","2",""
"15892733","Shiro - how to login with hashed password","<p>I am using Shiro to secure my application, and now the problem is how do i login with hashed password for following scenarios:</p>

<p>1, Automatically login for user after they click on activation email.</p>

<p>2, Login via Facebook, find user by facebookId from database, and try to login in, but all i have is hashed passwrod, do we have any ways to decrypt hashed password.</p>

<p>This is How i encrypt my password stored in database:</p>

<pre><code>new Sha256Hash(password).toHex()
</code></pre>

<p>Below is my login code.  </p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
if (!currentUser.isAuthenticated()) {
    UsernamePasswordToken token = new UsernamePasswordToken(email, password, rememberMe);
    currentUser.login(token);
}
</code></pre>

<p>Bear with me if this question is weird, and thanks in advance.</p>
","<login><shiro>","1","15910995"
"19805098","JSF components not rendered using shiro","<p>I am using BalusC's guide from <a href=""http://balusc.blogspot.gr/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">here</a> in order to learn how to use Apache Shiro. I am using JSF 2.2, Neatbeans 7.4, Shiro 1.2.2, JavaEE 7, Glassfish 4 in Windows 7 x64. My problem is that the components on my login.xhtml page are not rendered when I try the view option through Netbeans or when I try to directly access the page with its url, but works when I run the projects and loads it automatically (it is my welcome page). Plain text is shown normally.</p>

<p>The login.xhtml page:</p>

<pre><code>&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""
  xmlns:f=""http://xmlns.jcp.org/jsf/core""
  xmlns:h=""http://xmlns.jcp.org/jsf/html""&gt;
&lt;h:head&gt;
    &lt;title&gt;Facelet Title&lt;/title&gt;
&lt;/h:head&gt;
&lt;h:body&gt;
    &lt;h2&gt;Login&lt;/h2&gt;
    &lt;h:form id=""login""&gt;
        &lt;h:panelGrid columns=""3""&gt;
            Plain Text
            &lt;h:outputLabel for=""username"" value=""Username:"" /&gt;
            &lt;h:inputText id=""username"" value=""#{login.username}"" required=""true""&gt;
                &lt;f:ajax event=""blur"" render=""m_username"" /&gt;
            &lt;/h:inputText&gt;
            &lt;h:message id=""m_username"" for=""username"" /&gt;

            &lt;h:outputLabel for=""password"" value=""Password:"" /&gt;
            &lt;h:inputSecret id=""password"" value=""#{login.password}"" required=""true""&gt;
                &lt;f:ajax event=""blur"" render=""m_password"" /&gt;
            &lt;/h:inputSecret&gt;
            &lt;h:message id=""m_password"" for=""password"" /&gt;

            &lt;h:outputLabel for=""rememberMe"" value=""Remember Me:"" /&gt;
            &lt;h:selectBooleanCheckbox id=""rememberMe"" value=""#{login.remember}"" /&gt;

            &lt;h:commandButton value=""Login"" action=""#{login.submit}"" &gt;
                &lt;f:ajax execute=""@form"" render=""@form"" /&gt;
            &lt;/h:commandButton&gt;
            &lt;h:messages globalOnly=""true"" layout=""table"" /&gt;
        &lt;/h:panelGrid&gt;
    &lt;/h:form&gt;
&lt;/h:body&gt;
</code></pre>

<p></p>

<p>The Login.java bean:</p>

<pre><code>package test;

import java.io.IOException;

import javax.enterprise.context.RequestScoped;
import javax.inject.Named;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.web.util.SavedRequest;
import org.apache.shiro.web.util.WebUtils;
import org.omnifaces.util.Faces;
import org.omnifaces.util.Messages;

@Named
@RequestScoped
public class Login {

public static final String HOME_URL = ""app/index.xhtml"";

private String username;
private String password;
private boolean remember;

public void submit() throws IOException {
    try {
        SecurityUtils.getSubject().login(new UsernamePasswordToken(username, password, remember));
        SavedRequest savedRequest = WebUtils.getAndClearSavedRequest(Faces.getRequest());
        Faces.redirect(savedRequest != null ? savedRequest.getRequestUrl() : HOME_URL);
    }
    catch (AuthenticationException e) {
        Messages.addGlobalError(""Unknown user, please try again"");
        e.printStackTrace(); // TODO: logger.
    }
}

public String getUsername() {
    return username;
}

public void setUsername(String username) {
    this.username = username;
}

public String getPassword() {
    return password;
}

public void setPassword(String password) {
    this.password = password;
}

public boolean isRemember() {
    return remember;
}

public void setRemember(boolean remember) {
    this.remember = remember;
}


}
</code></pre>

<p>Also I am getting this error</p>

<pre><code>A managed bean with a public field (“HOME_URL”) should not declares any scope other than @Dependent
</code></pre>

<p>even though it seems to work...</p>

<p>The web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app version=""3.1"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""&gt;
&lt;context-param&gt;
    &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
    &lt;param-value&gt;Development&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;session-config&gt;
    &lt;session-timeout&gt;
        30
    &lt;/session-timeout&gt;
&lt;/session-config&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;    
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;login.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p></p>

<p>The shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /login.xhtml
authc.usernameParam = login:username
authc.passwordParam = login:password
authc.rememberMeParam = login:rememberMe
user.loginUrl = /login.xhtml

[users]
admin = password

[urls]
/login.xhtml = authc
/app/** = user
</code></pre>

<p>The warnings/errors that I get (glassgish):</p>

<pre><code>WARNING:   The web application [unknown] registered the JDBC driver [oracle.jdbc.OracleDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
SEVERE:   Unable to load annotated class: model.LoginBean, reason: java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory
WARNING:   WELD-001519 An InjectionTarget implementation is created for an abstract class org.omnifaces.eventlistener.DefaultServletContextListener. It will not be possible to produce instances of this type!
WARNING:   WELD-001519 An InjectionTarget implementation is created for an abstract class org.omnifaces.filter.HttpFilter. It will not be possible to produce instances of this type!
WARNING:   Class 'javax.ejb.PostActivate' not found, interception based on it is not enabled
WARNING:   Class 'javax.ejb.PrePassivate' not found, interception based on it is not enabled
WARNING:   WELD-001529 An InjectionTarget implementation is created for a class org.omnifaces.application.OmniApplicationFactory which does not have any appropriate constructor.
WARNING:   WELD-001529 An InjectionTarget implementation is created for a class org.primefaces.context.PrimeFacesContextFactory which does not have any appropriate constructor.
WARNING:   WELD-001529 An InjectionTarget implementation is created for a class org.omnifaces.context.OmniPartialViewContextFactory which does not have any appropriate constructor.
WARNING:   WELD-001529 An InjectionTarget implementation is created for a class org.primefaces.context.PrimePartialViewContextFactory which does not have any appropriate constructor.
SEVERE:   [main] INFO org.apache.shiro.web.env.EnvironmentLoader - Starting Shiro environment initialization.
SEVERE:   [main] INFO org.apache.shiro.web.env.EnvironmentLoader - Shiro environment initialized in 361 ms.
</code></pre>

<p>I have two web pages:</p>

<pre><code>/login.xhtml
/app/index.xhtml
</code></pre>

<p>Any suggestions? (I am a noob so please be gentle! :P )</p>
","<jsf><netbeans><glassfish><shiro>","0","20821198"
"18439130","Grails with Shiro - How to assign specifice permission to perticular user even he has role based permission","<p>i installed shiro plugin in my application.i assigned one complete controller for role:'role_developer'..so if any user comes under role_developer he can access all actions of that controller..but here i want remove two actions of that controller..so please suggest me ..</p>

<p>here my code is:</p>

<pre><code>def shiroRole = new ShiroRole()
shiroRole.name='ROLE_DEVELOPER'// create role as role developer
shiroROle.addToPermission('Person') //assigned permissions Person controller with all actionss
shiro.save()
</code></pre>

<p><strong>now iam going create one user of ROLE_DEVELOPER and assigning permission some actions like person controller:create,list only</strong></p>

<pre><code>def shiroUser = new ShiroUser()
shiroUser.username='username'
shiroUser.passwordHash= new Sha256Hash(""password"").toHex()
shiroUser.addToRoles(ShiroRole.findByName('ROLE_DEVELOPER')
        newUser.addToPermissions('person:list,create')
                newUser.save()
</code></pre>

<p>...<strong>so here shiroUser shoud not be access all actions assigned to role_dveloper</strong></p>
","<grails><shiro>","1",""
"10787684","Apache Shiro session management on Spring","<p>I am newbie to both Spring and Shiro. I have some questions on Session Management.</p>

<p>I saw <a href=""https://stackoverflow.com/questions/8501058/shiro-authentication-with-sessionid-or-usernamepassword"">a question</a> which gives quite a good introduction to Session Management. </p>

<p>But what I did not understand is, how does Shiro communicate with the client to pass the session information, and how will the client authenticate itself again over the subsequent requests. Does Shiro pass a session ID automatically, without me having to code for it? </p>

<ol>
<li>Does browser automatically store the session IDs and send it (may be over HTTPS) with subsequent requests? </li>
<li>How does the session logout communicated to the client? And how does the client understand that it has to login again?</li>
</ol>

<p>Thanks!</p>
","<java><spring><shiro>","2","10789778"
"30739581","Restrict access to java-melody monitoring url","<p>Is there a way I can restrict access to /monitoring url generated by Java-Melody plugin in Grails using Shiro roles?</p>

<p><strong>Update:</strong> a little bit more details. It's no problem so secure most Grails ressources with shiro. But in case of the java melody plugin, it seems that the melody filter is executed before the shiro filter gets  executed. This renders shiro useless.</p>

<p>There are some solutions which say that this might be fixed through a change in the web.xml, but this is not a quick hit and I (rdmueller) didn't manage to make it work yet. The web.xml plugin also seems to promise some help, but I don't want to add another plugin just to secure one plugin.</p>

<p>Some older statements found on the web state that this problem should be already solved through the usage of the <code>loadAfter</code> list in this file: <a href=""https://github.com/javamelody/grails-melody-plugin/blob/master/GrailsMelodyGrailsPlugin.groovy"">https://github.com/javamelody/grails-melody-plugin/blob/master/GrailsMelodyGrailsPlugin.groovy</a> - but it seems that this only worked for older versions of Grails.</p>

<p><strong>Update2:</strong> In order to make it easier to propose a solution, I've create a Grails 2.2.4 sample: <a href=""https://github.com/rdmueller/SO30739581"">https://github.com/rdmueller/SO30739581</a></p>

<p>just clone the project, do a <code>grailsw run-app</code> and navigate to</p>

<pre><code>http://localhost:8080/SO30739581/dbdoc
</code></pre>

<p>and you'll get a login screen via shiro. Navigate to</p>

<pre><code>http://localhost:8080/SO30739581/monitoring
</code></pre>

<p>and you'll get the melody screen without being logged in :-(</p>
","<grails><shiro><java-melody>","7",""
"20397765","Spring JUnit Test - Instantiation problems","<p>I have a working Spring application compiled with maven and deployed on tomcat 7.</p>

<p>I'm trying to implements some test cases using JUnit 4. I successfully make some test for a part of the application but I get compilation problem when I want to test two parts which used external framework: Shiro and OIOSAML. Since there is no OIOSAML community here, I'll focus on shiro but I believe that the cause of the problem is the same.</p>

<p>When I try to load the application-context in the JUnit test, I obtains loading errors (see next). It looks like some dependencies can't be loaded/found in the frameworks part. Here is some helpful information:</p>

<p><strong>Shiro exception:</strong> </p>

<pre><code>org.springframework.beans.factory.BeanCreationException: 
Error creating bean with name 'authorization' defined in class path resource [test-context.xml]: 
Instantiation of bean failed; 
nested exception is org.springframework.beans.BeanInstantiationException: 
Could not instantiate bean class [myPackage.ShiroAuthorization]: 
Constructor threw exception; nested exception is org.apache.shiro.config.ConfigurationException: 
Unable to instantiate class [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] for object named 'ds'.  
Please ensure you've specified the fully qualified class name correctly.
            at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:288)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
            at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
            at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
            at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
            at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)
            at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
            at org.springframework.context.support.ClassPathXmlApplicationContext.&lt;init&gt;(ClassPathXmlApplicationContext.java:139)
            at org.springframework.context.support.ClassPathXmlApplicationContext.&lt;init&gt;(ClassPathXmlApplicationContext.java:83)
            at myPackage.Test.init(Test.java:30)
            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
            at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
            at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
            at java.lang.reflect.Method.invoke(Unknown Source)
            at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
            at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
            at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
            at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
            at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
            at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
            at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
            at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
            at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
            at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
            at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
        Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [myPackage.ShiroAuthorization]: Constructor threw exception; nested exception is org.apache.shiro.config.ConfigurationException: Unable to instantiate class [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] for object named 'ds'.  Please ensure you've specified the fully qualified class name correctly.
            at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
            at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:110)
            at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:280)
            ... 29 more
        Caused by: org.apache.shiro.config.ConfigurationException: Unable to instantiate class [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] for object named 'ds'.  Please ensure you've specified the fully qualified class name correctly.
            at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:151)
            at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:119)
            at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:161)
            at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:124)
            at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:102)
            at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:88)
            at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
            at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
            at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
            at myPackage.ShiroAuthorization.&lt;init&gt;(ShiroAuthorization.java:31)
            at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
            at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
            at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
            at java.lang.reflect.Constructor.newInstance(Unknown Source)
            at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
            ... 31 more
        Caused by: org.apache.shiro.util.UnknownClassException: Unable to load class named [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found.
            at org.apache.shiro.util.ClassUtils.forName(ClassUtils.java:148)
            at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:164)
            at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:144)
            ... 45 more
</code></pre>

<p><strong>Shiro.ini</strong></p>

<pre><code>...
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.url = jdbc:mysql://*******
...
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled=true
jdbcRealm.dataSource = $ds
...
securityManager.realms = $jdbcRealm,
...
</code></pre>

<p><strong>OIOSAML exception:</strong></p>

<pre><code>...Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/opensaml/xml/ConfigurationException...
</code></pre>

<p><strong>Test Case</strong></p>

<pre><code>...
public static ApplicationContext context;
@BeforeClass
public static void  init() throws Exception {
    context = new ClassPathXmlApplicationContext(""test-context.xml"");
}
</code></pre>

<p>I tried to play with the context file but nothing helps. Which is strange is I can successfully test the connection pool of tomcat 7 which shows that dependencies are correctly loaded. </p>

<p>I remind you that everything works except when I want to test it with JUnit. </p>
","<java><spring><junit><shiro><testcase>","0","20400080"
"21522050","Ajax Session Time Out FullAjaxExceptionHandlerFactory not working with shiro","<p>Details of the code that i have added for using Ajax Session time out, as described by <a href=""http://balusc.blogspot.in/2012/03/full-ajax-exception-handler.html"" rel=""nofollow"">BaluC</a> </p>

<p><strong>Faces-Config.xml</strong></p>

<pre><code>&lt;factory&gt;
        &lt;exception-handler-factory&gt;org.omnifaces.exceptionhandler.FullAjaxExceptionHandlerFactory&lt;/exception-handler-factory&gt;
&lt;/factory&gt;
</code></pre>

<p><strong>Web.xml</strong></p>

<pre><code>&lt;error-page&gt;
    &lt;exception-type&gt;javax.faces.application.ViewExpiredException&lt;/exception-type&gt;
    &lt;location&gt;/expired.xhtml&lt;/location&gt;
 &lt;/error-page&gt;
</code></pre>

<p><strong>application-config.xml</strong></p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;!-- override these for application-specific URLs if you like: --&gt;
    &lt;property name=""loginUrl"" value=""/index.xhtml"" /&gt;
    &lt;property name=""successUrl"" value=""/dashboard"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/login"" /&gt;
    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""authc""&gt;
                &lt;bean
                    class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"" /&gt;
            &lt;/entry&gt;

        &lt;/util:map&gt;

    &lt;/property&gt;

    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
        [main]
           user.loginUrl = /login.xhtml

        [users]
            admin = password

        [urls]
           /login.xhtml = user
            /css/**=anon
            /images/**=anon
            /emailimages/**=anon

            /login=anon
            /test=anon

            /sso=anon
            /ssologin=anon
            /**=authc


        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""facesFilter"" class=""com.xxx.temp.FacesAjaxAwareUserFilter""&gt;&lt;/bean&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;!-- &lt;property name=""sessionMode"" value=""native""/&gt; --&gt;
    &lt;property name=""realms""&gt;
        &lt;list&gt;
            &lt;ref bean=""jdbcRealm"" /&gt;
            &lt;ref bean=""googleRealm"" /&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;!-- &lt;property name=""realms"" ref=""jdbcRealm googleRealm"" /&gt; --&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager"" /&gt;
    &lt;!-- &lt;property name=""sessionManager"" ref=""sessionManager""/&gt; --&gt;

&lt;/bean&gt;





&lt;!-- &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt; 
    &lt;property name=""cacheManagerConfigFile"" value=""/WEB-INF/ehcache.xml""/&gt; &lt;/bean&gt; --&gt;

&lt;bean id=""passwordService""
    class=""org.apache.shiro.authc.credential.DefaultPasswordService""&gt;
&lt;/bean&gt;

&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
    &lt;property name=""cacheManager"" ref=""ehCacheManager"" /&gt;
&lt;/bean&gt;

&lt;!-- &lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt; 
    &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt; &lt;/bean&gt; --&gt;

&lt;bean id=""ehCacheManager""
    class=""org.springframework.cache.ehcache.EhCacheManagerFactoryBean"" /&gt;

&lt;!-- &lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""/&gt; --&gt;





&lt;bean id=""jdbcRealm"" class=""com.xxx.domain.web.permissions.MyWebRealm""&gt;
&lt;/bean&gt;

&lt;bean id=""googleRealm"" class=""com.xxx.domain.web.permissions.GoogleRealm""&gt;
    &lt;!-- &lt;property name=""dataSource"" ref=""dataSource"" /&gt; --&gt;
    &lt;property name=""credentialsMatcher""&gt; &lt;bean class=""com.fetchinglife.domain.web.permissions.GoogleCredentialsMatcher""/&gt; &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean
    class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"" /&gt;
</code></pre>

<p>Added class file <code>FacesAjaxAwareUserFilter</code>
** code copied from BaluC blog  **</p>

<p><strong>Jar files added</strong> </p>

<pre><code>omniface-1.7.jar
</code></pre>

<p><strong>Added this in .xhtml file</strong> </p>

<pre><code>xmlns:o=""http://omnifaces.org/ui""
    xmlns:of=""http://omnifaces.org/functions""
</code></pre>

<p><em>came up with a warning</em> </p>

<pre><code>NLS missing message: CANNOT_FIND_FACELET_TAGLIB in: 
 org.eclipse.jst.jsf.core.validation.internal.facelet.messages
</code></pre>

<p><strong>Current status:</strong> </p>

<p>No response found, page wont redirect on Session timeout ajax call.</p>
","<java><jsf-2><session-timeout><shiro><omnifaces>","0","22403095"
"15617761","openldap fortress vs Apache Shiro","<p>I am trying to download openldap and I came across an ldap Java JDK called OpenLdap fortress. <a href=""http://www.openldap.org/fortress/"" rel=""nofollow"">http://www.openldap.org/fortress/</a> 
It seems to be good for Identity Management Access, which sounds good, since I was about to use an open source Identity Management Tool (Apache Shiro)
Should I stick with Apache shiro or use just OpenLdap Fortress or both of them?
What is the best solution for Identity and Access Management? What are the differences?</p>
","<authentication><identity><openldap><shiro><fortress>","1","16239175"
"14013809","Shiro redirecting to wrong place when using PrimeFaces with JSF","<p>This web application works with Shiro and JSF. I added PrimeFaces and I am having login redirect issues.</p>

<p>Expected Behaviour:</p>

<ol>
<li>Navigate to url that needs authc</li>
<li>Redirected to login page</li>
<li>login redirected back to the original page</li>
</ol>

<p>Behaviour with primfaces</p>

<ol>
<li>Navigate to url that needs authc</li>
<li>Redirected to login page</li>
<li>after login redirected to javax.faces.resource/theme.css?ln=primefaces-aristo</li>
</ol>

<p>I login a user by catching the request params in my <code>shiro.ini</code> file</p>

<pre><code># name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = login:username
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = login:password
# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
authc.rememberMeParam = login:remembered
</code></pre>

<p>I modified this to to instead use a <code>PassThruAuthenticationFilter</code> and the login request is processed by my <code>Bean</code> but this still produces the same error. Bean login method</p>

<pre><code>AuthenticationToken token =  new UsernamePasswordToken(username, password);
Subject currentUser = SecurityUtils.getSubject();
currentUser.login(token);
ServletRequest request = (ServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest();
ServletResponse response = (ServletResponse) FacesContext.getCurrentInstance().getExternalContext().getResponse();
WebUtils.redirectToSavedRequest(request, response, ""index.xhtml"");
</code></pre>

<p>My login Bean is <code>@RequestScoped</code></p>
","<authentication><redirect><jsf-2><shiro>","1","14085223"
"19835566","setting the session timeout in shiro.ini file is giving warning","<p>i am using shiro1.2.2 and i want to configure session time out in shiro.in file. i configure but it will giving warning and the session timeout is not set. 
the  warning is </p>

<pre><code> WARNING: The 'sessionMode' property has been deprecated.  Please configure an appropriate          WebSessionManager instance instead of using this property.  This property/method will be removed in a later version. 
</code></pre>

<p>my shiro.ini file</p>

<pre><code> sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager 
 securityManager.sessionMode=native 
 securityManager.sessionManager.globalSessionTimeout = 6000 
 securityManager.sessionManager = $sessionManager 
</code></pre>

<p>i dont know why this giving warning . </p>
","<java><shiro>","0",""
"18378259","Terracotta and shiro","<p>I want to use terracotta + Shiro in order to implement SSO. When I try to test it, I have the error:</p>

<pre><code>    The configuration data in the base configuration from server at 'localhost:9510' does not obey the Terracotta schema:
    [0]: Line 4, column 5: Expected elements 'tc-properties servers clients' instead of 'system' here in element tc-config@http://www.terracotta.org/config
    [1]: Line 16, column 13: Expected elements 'offheap authentication http-authentication data-backup tsa-port jmx-port tsa-group-port security' instead of 'statistics' here in element server
    [2]: Line 19, column 13: Expected elements 'offheap authentication http-authentication data-backup tsa-port jmx-port tsa-group-port security' instead of 'dso-port' here in element server
    [3]: Line 21, column 13: Expected elements 'offheap authentication http-authentication data-backup tsa-port tsa-group-port security' instead of 'l2-group-port' here in element server
    [4]: Line 32, column 13: Expected elements 'offheap http-authentication data-backup tsa-port tsa-group-port security' instead of 'dso' here in element server
    [5]: Line 50, column 9: Expected elements 'server mirror-group update-check garbage-collection restartable client-reconnect-window' instead of 'mirror-groups' here in element servers
    [6]: Line 63, column 9: Expected elements 'server mirror-group update-check garbage-collection restartable client-reconnect-window' instead of 'ha' here in element servers
    [7]: Line 86, column 5: Element not allowed: application in element tc-config@http://www.terracotta.org/config
</code></pre>

<p>Could anyone helps me to find what's wrong?</p>

<p>Here is my configuration:</p>

<p>ehcache.xml on the tc client:</p>

<pre><code>&lt;ehcache  name=""Plugin_Ehcache""
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:noNamespaceSchemaLocation=""ehcache.xsd""
     updateCheck=""false"" monitoring=""autodetect""
     dynamicConfig=""false""&gt;

&lt;diskStore path=""java.io.tmpdir/shiro-ehcache""/&gt;

&lt;defaultCache
        maxElementsInMemory=""10000""
        eternal=""false""
        timeToIdleSeconds=""120""
        timeToLiveSeconds=""120""
        overflowToDisk=""false""
        diskPersistent=""false""
        diskExpiryThreadIntervalSeconds=""120""&gt;
    &lt;terracotta/&gt;
&lt;/defaultCache&gt;
&lt;cache name=""shiro-activeSessionCache""
       maxElementsInMemory=""10000""
       eternal=""true""
       timeToLiveSeconds=""0""
       timeToIdleSeconds=""0""
       diskPersistent=""false""
       overflowToDisk=""false""
       diskExpiryThreadIntervalSeconds=""600""&gt;
    &lt;terracotta/&gt;
&lt;/cache&gt;    

&lt;terracottaConfig url=""localhost:9510""/&gt;     
&lt;/ehcache&gt; 
</code></pre>

<p>tc-config.xml on the tc server</p>

<pre><code>&lt;tc:tc-config xsi:schemaLocation=""http://www.terracotta.org/schema/terracotta-8.xsd"" 
          xmlns:tc=""http://www.terracotta.org/config"" 
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&gt;

&lt;tc-properties&gt;
&lt;property name=""l2.l1reconnect.enabled"" value=""true""/&gt;
&lt;property name=""l2.l1reconnect.timeout.millis"" value=""5000""/&gt;
&lt;property name=""sigar.enabled"" value=""false""/&gt;
&lt;property name=""search.use.commit.thread"" value=""false""/&gt;
&lt;property name=""search.lucene.use.ram.directory"" value=""true""/&gt;
&lt;property name=""search.query.wait.for.txns"" value=""false""/&gt;
&lt;property name=""logging.maxLogFileSize"" value=""100""/&gt;
&lt;property name=""logging.maxBackups"" value=""10""/&gt;
&lt;/tc-properties&gt;

&lt;system&gt;
 &lt;configuration-model&gt;development&lt;/configuration-model&gt;
&lt;/system&gt; 

  &lt;servers&gt;
    &lt;server host=""localhost"" name=""Terracotta Server1""&gt;
      &lt;!-- Specify the path where the server should store its data. --&gt;
            &lt;data&gt;C:\Program Files\Terracotta\terracotta-3.7.5\server\server-data&lt;/data&gt;
            &lt;logs&gt;C:\Program Files\Terracotta\terracotta-3.7.5\server\server-logs&lt;/logs&gt;
            &lt;index&gt;C:\Program Files\Terracotta\terracotta-3.7.5\server\server-index&lt;/index&gt;
            &lt;statistics&gt;C:\Program Files\Terracotta\terracotta-3.7.5\server\server-statistics&lt;/statistics&gt;

       &lt;!-- Specify the port where the server should listen for client 
       traffic. --&gt;
         &lt;dso-port bind=""127.0.0.1""&gt;9510&lt;/dso-port&gt;
         &lt;jmx-port  bind=""127.0.0.1""&gt;9520&lt;/jmx-port&gt;
          &lt;l2-group-port bind=""localhost""&gt;9530&lt;/l2-group-port&gt;
          &lt;!--jmx-port bind=""xxx.xxx.xxx.xxx""&gt;9520&lt;/jmx-port&gt;
       &lt;tsa-port&gt;9510&lt;/tsa-port&gt;

       &lt;tsa-group-port&gt;9530&lt;/tsa-group-port--&gt;
       &lt;!-- Enable BigMemory on the server. --&gt;
       &lt;!--offheap&gt;
         &lt;enabled&gt;true&lt;/enabled&gt;
         &lt;maxDataSize&gt;4g&lt;/maxDataSize&gt;
       &lt;/offheap--&gt;

     &lt;authentication/&gt; 

       &lt;dso&gt;
    &lt;client-reconnect-window&gt;120&lt;/client-reconnect-window&gt;
    &lt;persistence&gt;
      &lt;mode&gt;permanent-store&lt;/mode&gt;
           &lt;!--mode&gt;temporary-swap-only&lt;/mode--&gt;
            &lt;!--&lt;offheap&gt;
        &lt;enabled&gt;false&lt;/enabled&gt;
        &lt;maxDataSize&gt;450m&lt;/maxDataSize&gt;
      &lt;/offheap&gt;--&gt;
    &lt;/persistence&gt;
    &lt;garbage-collection&gt;
      &lt;enabled&gt;true&lt;/enabled&gt;
      &lt;verbose&gt;false&lt;/verbose&gt;
      &lt;interval&gt;300&lt;/interval&gt;
    &lt;/garbage-collection&gt;
  &lt;/dso&gt;

     &lt;/server&gt;

      &lt;mirror-groups&gt;
   &lt;mirror-group group-name=""group1""&gt;
     &lt;members&gt;
       &lt;member&gt;Terracotta Server1&lt;/member&gt;
     &lt;/members&gt;
     &lt;ha&gt;
       &lt;mode&gt;networked-active-passive&lt;/mode&gt;
       &lt;networked-active-passive&gt;
         &lt;election-time&gt;5&lt;/election-time&gt;
       &lt;/networked-active-passive&gt;
     &lt;/ha&gt;
    &lt;/mirror-group&gt;
 &lt;/mirror-groups&gt;     
 &lt;ha&gt;
   &lt;mode&gt;networked-active-passive&lt;/mode&gt;
   &lt;networked-active-passive&gt;
     &lt;election-time&gt;5&lt;/election-time&gt;
   &lt;/networked-active-passive&gt;
 &lt;/ha&gt;

      &lt;update-check&gt;
  &lt;enabled&gt;false&lt;/enabled&gt;
&lt;/update-check&gt;

    &lt;!-- Add the restartable element for Fast Restartability (optional). --&gt;
    &lt;!--restartable enabled=""true""/--&gt;
  &lt;/servers&gt;
  &lt;clients&gt;
    &lt;logs&gt;logs-%i&lt;/logs&gt;
  &lt;/clients&gt;
&lt;/tc:tc-config&gt;
</code></pre>
","<shiro><terracotta>","0",""
"10969710","<shiro:hasRole ..> Tag does not work cause NoSuchMethodException Exception","<p>can you please provide me a solution for my problem, </p>

<p>I have an integration with Apache Shiro and once i use shiro:hasRole tag or other tags an exception has been thrown says:</p>

<pre><code>Caused by: java.lang.NoSuchMethodException: org.apache.shiro.web.tags.HasRoleTag.&lt;init&gt;(javax.faces.view.facelets.TagConfig)
    at java.lang.Class.getConstructor0(Class.java:2706)
    at java.lang.Class.getConstructor(Class.java:1657)
    at com.sun.faces.facelets.tag.AbstractTagLibrary$HandlerFactory.createHandler(AbstractTagLibrary.java:187)
    at com.sun.faces.facelets.tag.AbstractTagLibrary.createTagHandler(AbstractTagLibrary.java:678)
    at com.sun.faces.facelets.tag.CompositeTagLibrary.createTagHandler(CompositeTagLibrary.java:184)
    at com.sun.faces.facelets.compiler.TagUnit.createFaceletHandler(TagUnit.java:120)
    at com.sun.faces.facelets.compiler.TextUnit.createFaceletHandler(TextUnit.java:117)
    at com.sun.faces.facelets.compiler.CompilationUnit.getNextFaceletHandler(CompilationUnit.java:115)
    at com.sun.faces.facelets.compiler.TagUnit.getNextHandler(TagUnit.java:124)
    at com.sun.faces.facelets.tag.AbstractTagLibrary$ComponentConfigWrapper.getNextHandler(AbstractTagLibrary.java:230)
    at javax.faces.view.facelets.TagHandler.&lt;init&gt;(TagHandler.java:116)
    at javax.faces.view.facelets.MetaTagHandler.&lt;init&gt;(MetaTagHandler.java:105)
    at javax.faces.view.facelets.DelegatingMetaTagHandler.&lt;init&gt;(DelegatingMetaTagHandler.java:69)
    at javax.faces.view.facelets.ComponentHandler.&lt;init&gt;(ComponentHandler.java:128)
    at com.sun.faces.facelets.tag.jsf.html.HtmlComponentHandler.&lt;init&gt;(HtmlComponentHandler.java:75)
    at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
    at com.sun.faces.facelets.tag.AbstractTagLibrary$UserComponentHandlerFactory.createHandler(AbstractTagLibrary.java:306)
    at com.sun.faces.facelets.tag.AbstractTagLibrary.createTagHandler(AbstractTagLibrary.java:678)
    at com.sun.faces.facelets.tag.CompositeTagLibrary.createTagHandler(CompositeTagLibrary.java:184)
    at com.sun.faces.facelets.compiler.TagUnit.createFaceletHandler(TagUnit.java:120)
    at com.sun.faces.facelets.compiler.TextUnit.createFaceletHandler(TextUnit.java:117)
    at com.sun.faces.facelets.compiler.CompilationUnit.getNextFaceletHandler(CompilationUnit.java:115)
    at com.sun.faces.facelets.compiler.TagUnit.getNextHandler(TagUnit.java:124)
    at com.sun.faces.facelets.tag.AbstractTagLibrary$ComponentConfigWrapper.getNextHandler(AbstractTagLibrary.java:230)
    at javax.faces.view.facelets.TagHandler.&lt;init&gt;(TagHandler.java:116)
    at javax.faces.view.facelets.MetaTagHandler.&lt;init&gt;(MetaTagHandler.java:105)
    at javax.faces.view.facelets.DelegatingMetaTagHandler.&lt;init&gt;(DelegatingMetaTagHandler.java:69)
    at javax.faces.view.facelets.ComponentHandler.&lt;init&gt;(ComponentHandler.java:128)
    at com.sun.faces.facelets.tag.jsf.html.HtmlComponentHandler.&lt;init&gt;(HtmlComponentHandler.java:75)
    at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
    at com.sun.faces.facelets.tag.AbstractTagLibrary$UserComponentHandlerFactory.createHandler(AbstractTagLibrary.java:306)
</code></pre>

<p>Notice that i have a correct shiro configuration whereby the shiro security is applied and the resources are protected where the user must be authenticated and authorized to access the application resources.</p>

<p>But once i try to involve shiro security tags the exception is seen.</p>

<p>I open the shiro java tags such as HasRoleTag and really there is no constructor takes an instance of <code>javax.faces.view.facelets.TagConfig</code>
as parameter ! </p>

<p>Can you please help me to solve the problem.</p>

<p>Thanks.</p>
","<jsf-2><tags><shiro>","1",""
"12005189","SSO Integration between a custom Java web app with Drupal using Apache Shiro","<p>I have a web application developed using Java (Java EE), spring &amp; Hibernate. We are planning to use Apache Shiro for role &amp; access management. One of our client requirement is to use some CMS functionality along with the web application, for which Drupal has been selected. Since all the users are created in the Java based web application we would like to enable Single Sign on between the Java web app and Drupal.</p>

<p>With the SSO enabled users of the web application should be able to access the pages (static content, blog etc.) created in Drupal.</p>
","<drupal><single-sign-on><shiro>","0","12006464"
"29018542","Web application Apache Shiro integration","<p>I'm trying to understand the Apache Shiro workflow and how to integrate it into my application. What I can't understand is how and where do I perform the login and then send the redirect? Or does Shiro do this automatically (because I specified the realm in the ini file)? Can I send custom information (user attributes) along with the redirect (via Servlet response rather than backing bean)?</p>

<p><strong>What I understand and have so far:</strong> </p>

<p>Add the Shiro Listener and Filter to the web.xml file so it can respond to requests:</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Create a shiro.ini file where you can configure some attributes for Shiro:</p>

<pre><code>[main]
shiro.loginURL = /login.xhtml
myRealm = com.example.shiro.MyRealm
securityManager.realms = $myRealm

[urls]
/account/** = authc
/logout = logout
</code></pre>

<p>Create the custom realm class:</p>

<pre><code>@Stateless
@Local(Realm.class)
public class SecurityBean implements Realm{
    private EntityManager em;
    private TypedQuery&lt;Credential&gt; cQuery;

    @Override
    public Account getAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        try{
            cQuery = em.createNamedQuery(""getCredentials"", Credential.class);
            cQuery.setParameter(""userName"", ((UsernamePasswordToken) token).getUsername());
            Credential c = cQuery.getSingleResult();
            boolean b = Encryption.compare(new String(((UsernamePasswordToken) token).getPassword()), c.getSalt(), c.getEncryptedPassword());
            if(b){
                return c;
            }else{
                throw new AuthenticationException(""Passwords do not match."");
            }
        }catch(Exception e){
            throw new AuthenticationException(""Error verifying credentials."");
        }
    }

    @Override
    public String getName() {
        return ""User Realm"";
    }

    @Override
    public boolean supports(AuthenticationToken token) {
        if(token instanceof UsernamePasswordToken){
            return true;
        }else{
            return false;
        }
    }
}
</code></pre>

<p>Where Encryption is a class to encrypt and compare passwords and Credential is a JPA Entity class to store the username and password:</p>

<pre><code>@NamedQueries({@NamedQuery(name = ""getCredentials"", query = ""SELECT c FROM Credential c WHERE c.userName = :userName""),
            @NamedQuery(name = ""deleteCredentials"", query = ""DELETE FROM Credential c WHERE c.userName = :userName"")})
@Entity
public class Credential implements Serializable, Account{
    private static final long serialVersionUID = 2555682746921997545L;

    @Id @GeneratedValue
    private long id;

    private String userName;

    private String encryptedPassword;
    private String salt;

    private User user;

    //... getters/setters...
}
</code></pre>

<p>Where User is a JPA Entity class that actual stores a user's application information.</p>
","<java><security><jpa><shiro>","0","29125474"
"21711984","Apache Shiro - Keep remember me cookie when logging out?","<p>I'm helping to maintain an app that uses Apache Shiro.</p>

<p>We want our users to be able to logout, but keep their ""remember me"" cookie, but apparently this isn't supported by Shiro (scroll to bottom of page):</p>

<p><a href=""https://shiro.apache.org/java-authentication-guide.html"" rel=""nofollow"">https://shiro.apache.org/java-authentication-guide.html</a></p>

<blockquote>
  <p>When you log out in Shiro it will close out the user session and
  removes any associated identity from the subject instance. If you're
  using RememberMe in a web environment, then .logout() will, by
  default, also delete the RememberMe cookie from the browser.</p>
</blockquote>

<p>What's the best way to achieve this goal?</p>
","<apache><shiro><remember-me>","1","21917511"
"27539334","Cannot find class [org.apache.shiro.spring.LifecycleBeanPostProcessor]","<p>shiro+freemarker</p>

<pre><code>Cannot find class [org.apache.shiro.spring.LifecycleBeanPostProcessor] for bean with name 'lifecycleBeanPostProcessor' defined in class path resource [applicationContext.xml]





2014-12-18 12:30:19 org.apache.catalina.core.ApplicationContext log
严重: StandardWrapper.Throwable
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.apache.shiro.spring.LifecycleBeanPostProcessor] for bean with name 'lifecycleBeanPostProcessor' defined in class path resource [applicationContext.xml]; nested exception is java.lang.ClassNotFoundException: org.apache.shiro.spring.LifecycleBeanPostProcessor
    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1278)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:435)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:283)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
    at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:743)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
    at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:651)
    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:602)
    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:665)
    at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:521)
    at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:462)
    at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:136)
    at javax.servlet.GenericServlet.init(GenericServlet.java:160)
    at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1280)
    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1193)
    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:1088)
    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:5176)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5460)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
    at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.ClassNotFoundException: org.apache.shiro.spring.LifecycleBeanPostProcessor
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1702)
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)
    at org.springframework.util.ClassUtils.forName(ClassUtils.java:265)
    at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:419)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1299)
    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1270)
    ... 29 more
</code></pre>
","<java><spring-mvc><shiro>","0","27539370"
"17806206","Shiro Eh Cache ConcurrenctModificationException","<p>I recently added Shiro with EH Cache to my webapp and since then I am seeing a few ConcurrentModificationException:</p>

<pre><code>[shiro-active%0053ession%0043ache.data] ERROR net.sf.ehcache.store.disk.DiskStorageFactory - Disk Write of 3ae3f634-cd97-4614-bd04-517d81623971 failed: 
net.sf.ehcache.CacheException: Failed to serialize element due to ConcurrentModificationException. This is frequently the result of inappropriately sharing thread unsafe object (eg. ArrayList, HashMap, etc) between threads
at net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:401)
at net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:381)
at net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:473)
at net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1067)
at net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1051)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
at java.util.concurrent.FutureTask.run(FutureTask.java:166)
</code></pre>

<p>The issue I have is that the stack trace is not giving much information about where the issue is in the code and as the webapp is pretty big.</p>

<p>Any tips on how to find and fix the error would be much appreciated.</p>

<p>EDIT: the problem seems to occur when the user goes from the ROOT module 'www.my-site.com/' to the app module 'www.my-site.com/app/'. Both modules are running Shiro on a different cache/session (i.e. no SSO yet) the only thing they share are 3 cookies: locale/currency/cookie-consent.
I don't think it comes from the cookies as they are accessed at the beginning of the request (i.e. when leaving the ROOT to get to the app only the app accesses the cookies and saves the locale in the session).</p>

<p>Any idea of what might be causing the issue? </p>

<p>---------------EDIT --------
Here is a more detailed stack trace. Shiro's simple session seems to be playing a role: </p>

<pre><code>Caused by: java.util.ConcurrentModificationException
at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)
at java.util.HashMap$EntryIterator.next(HashMap.java:847)
at java.util.HashMap$EntryIterator.next(HashMap.java:845)
at java.util.HashMap.writeObject(HashMap.java:1012)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:601)
at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:962)
at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)
at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)
at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)
at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)
at org.apache.shiro.session.mgt.SimpleSession.writeObject(SimpleSession.java:461)
</code></pre>

<p>-------------EDIT 2 ------------------</p>

<p>I think I found the origin of the problem. I have a method that stores a few String attributes in the session. The app works fine without it and the issue comes back as soon as I uncomment it.
What I don't understand is why this is causing a concurrent modification exception: this method is only saving Strings in the session, and there is only one thread accessing the session.  Any clues?</p>

<p>-----------EDIT 3 -------------------</p>

<p>I replaced the Strings by 4 POJOs. Now the exception only occur once when the user first lands on a page (right before starting executing the doGet(...) code. </p>

<p>This doesn't seem to create any working issues so I'll probably just ignore it for now. If anybody understands what's happening please give me a shout.</p>
","<java-ee><web-applications><ehcache><shiro><concurrentmodification>","0",""
"17672241","Remember user session for several weeks?","<p>If i remember correctly, public services like google usually offer the ability to avoid the login process for 2 weeks.</p>

<p>This way, even with the tab closed, browser or even OS restart, the user can still access the web page as the subject without having to re-login.</p>

<p>The questions are :</p>

<ol>
<li>To implement this in Apache Shiro, it's just about the session timeout isnt it, something like <strong>globalSessionTimeout</strong> ? This way the session is stored and kept alive for 2 weeks before timeout-ing by itself out of inactivities.</li>
<li>This is --<strong>not</strong>-- the same as the ""<em>Remember Me</em>"" feature of Shiro where the <em>authenticated</em> and <em>remembered</em> are differentiated, correct ?</li>
</ol>
","<shiro>","1","17729520"
"4415488","how to detect whether a uri is allow by shiro or extract controller name from uri","<p>i have a uri such as someController/someAction?param1=aa&amp;param2=bb</p>

<p>is there some method of grails can extract controller name and action name from this uri.</p>

<p>or shiro has any method to detect this uri is permitted?</p>

<hr>

<p>i have a domain Menu(name,url), and now want to get the menu list which is permitted for current user.</p>

<p>url such as /auth/login(may be mapping as user:login), /user/login</p>

<p>so 2 days ago i ask this question.</p>

<p>now i change the menu to (name,controller,action,param),and filter the menulist like this:</p>

<pre><code>def subject = SecurityUtils.subject;
menuList.each{
  if(it.permission){
     def perm = shiroPermissionResolver.resolvePermission(""${it.permission.controller}:${it.permission.action}"")
     def isPermitted = subject.isPermitted(perm)
     println ""$isPermitted -&gt; ${it.permission.controller}:${it.permission.action}""
  }
}
</code></pre>

<hr>

<p>sorry for my poor english,and thanks for reply.</p>

<p>btw,here is another question of how to cache shiro:
<a href=""https://stackoverflow.com/questions/4425283/how-to-use-cache-permissions-in-grails-shiro"">how to use cache permissions in grails shiro</a></p>

<hr>

<p>To proflux:
so what do u think is the better way to store menulist? 
cause:</p>

<ol>
<li>it need to show different menu to user due to their permissions.</li>
<li>sometime we update a webapp, but want to show menu to user later.
so we only need to change such as a menu.visible. (better than change    hard code cfg or source).</li>
<li>we areusing extjs to show the menu(so nav plugin cant use).</li>
</ol>
","<grails><shiro><url-mapping>","1",""
"25566864","How to determine which permissions a shiro user has","<p>I have to deal with an application which is secured by apache shiro.
I'm quite new to this framework. As far as I can see, I can check single rights via <code>subject.isPermitted()</code>, e.g. </p>

<pre><code>Subject subject = SecurityUtils.getSubject();
[...]
subject.isPermitted(""$RightString"");
</code></pre>

<p>For logging purposes I need the complete list of user rights as a String. And I do not want to iterate over the list of rights and check everytime, whether <code>subject.isPermitted()</code> is <code>true</code></p>

<p>Is there any shortcut to this problem?</p>

<p><strong>Edit:</strong> </p>

<p>Further Information:</p>

<ul>
<li>Application is a Spring 4 Application</li>
<li><p>realm is defined in in application context as a bean </p>

<pre><code> &lt;bean id=""PRODUCTNAMERealm"" class=""de.PATHFROMPRODUCT_PRODUCTNAMEJdbcRealm""&gt;
     &lt;property name=""dataSource"" ref=""dataSource""/&gt;
     &lt;property name=""schema"" value=""${PRODUCTNAME.schema}""/&gt;
 &lt;/bean&gt;
</code></pre>

<p>so i could inject it if needed.</p></li>
</ul>
","<java><shiro>","2","25567910"
"10333807","Shiro Annotations with Spring","<p>i am new to shiro i am integrating shiro with spring and i am trying to use shiro annotations 
on Spring controllers but they are not working , 
the controller stop working when i put the @RequiresPermissions(""W027:UPDT"") 
on the Controller method . 
any help guys/ 
thanks</p>
","<security><spring-mvc><shiro>","0",""
"25256203","redirect the session timeout page in apache shiro","<p>I have <code>login.xhtml</code>, <code>managePage.xhtml</code> and <code>sessionTimeout.xhtml</code>. I want to redirect the sessionTimeout page when the session is time out. But it redirects to the login page whenever session is time out.</p>

<p>In the web.xml</p>

<pre><code>&lt;session-config&gt;
    &lt;session-timeout&gt;1&lt;/session-timeout&gt;
  &lt;/session-config&gt;

  &lt;error-page&gt;
    &lt;exception-type&gt;javax.faces.application.ViewExpiredException&lt;/exception-type&gt;
    &lt;location&gt;/sessionTimeout.xhtml&lt;/location&gt;
  &lt;/error-page&gt;
</code></pre>

<p>in shiro.ini</p>

<pre><code>[main]
authc.loginUrl = /faces/loginPage.xhtml
authc.successUrl  = /faces/registerPage.xhtml
# ------------------------  
  ....
# -----------------------------------------------------------------------------  
[urls]  
/faces/protected/* = authc
</code></pre>

<ol>
<li>I want to redirect the sessionTimeout page when session is time
out. </li>
<li>I would like to know what different between
<code>/faces/protected/*</code> and <code>/faces/protected/**</code>. I used one(*). It
works.</li>
</ol>
","<java><jsf><session-timeout><shiro>","0",""
"21437176","how check multiple shiro permissions in database table?","<p>I have <code>roles_perms</code> table as follow </p>

<pre><code>id || username || role_name || perms_name
1      root         admin      page:show:*;folder:show:*
2      user1        editor     page:show:editorpage,page1;folder:show:folder45,folder55
</code></pre>

<p>but following line of code does not returns expected result.</p>

<pre><code>// for user with role ""admin""

System.out.println(""Test 1 :""+SecurityUtils.getSubject().isPermitted(""page:show:*"")); // false
System.out.println(""Test 2 :""+SecurityUtils.getSubject().isPermitted(""page:show:*;folder:show:*"")); // true

output:

Test1 :false
Test2 :true


// for user with role ""editor""

System.out.println(""Test 3 :""+SecurityUtils.getSubject().isPermitted(""page:show:page1"")); // false
System.out.println(""Test 4 :""+SecurityUtils.getSubject().isPermitted(""page:show:page1;folder:show:folder55"")); // false 

 output:
 Test3 :false
 Test4 :false
</code></pre>

<p><strong>UPDATE:</strong></p>

<p>shiro.ini file</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.requiredType   = javax.sql.DataSource
ds.resourceName = jdbc/imgDB
ds.resourceRef = true
jdbcRealm = com.java.realm.MyRealm 

# 1000 ms = 1 sec
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.globalSessionTimeout = 1800000 

# password hashing specification
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $sha256Matcher

jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = SELECT password FROM shiro_users WHERE username = ? 
jdbcRealm.userRolesQuery = SELECT role_name FROM shiro_user_roles WHERE username = ? 
jdbcRealm.permissionsQuery = SELECT perms_name FROM shiro_roles_perms WHERE role_name = ? AND username = ? 


jdbcRealm.dataSource = $ds
jdbcRealm.authorizationCachingEnabled = false

# specify login page 
authc.loginUrl = /login.jsp 

# redirect after successful login
authc.successUrl = /home.jsp

# roles filter: redirect to error page if user does not have access rights
# perms filter: redirect to error page if user does not have permissions
roles.unauthorizedUrl = /accessdenied.jsp
perms.unauthorizedUrl = /accessdenied.jsp

# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
# authc.failureKeyAttribute = simpleShiroApplicationLoginFailure

[urls] 

/login.jsp = authc
/admin/** = authc,roles[admin]
/editor/** = authc

# enable authc filter for all application pages
/ApacheShiroLogin/** = authc
</code></pre>
","<java><shiro>","1",""
"19422371","Programmatic configuration of HTTPService with ServletListener and Filter","<p>I try to implement a HttpService in an OSGI environment in combination with VAADIN and shiro. So i declared the following BundleActivator:</p>

<pre><code>import java.util.logging.Level;

import org.eclipse.equinox.http.servlet.ExtendedHttpService;

import org.osgi.framework.BundleContext;
import org.osgi.framework.BundleEvent;
import org.osgi.framework.ServiceReference;
import org.osgi.service.http.HttpContext;
import org.osgi.util.tracker.ServiceTracker;
import org.osgi.util.tracker.ServiceTrackerCustomizer;

/**
 *
 * @author nspecht
 */
public class BundleActivator extends some.package.BundleActivator implements ServiceTrackerCustomizer
{

/**
 * Service tracker.
 */
private ServiceTracker tracker;

/**
 * HttpService.
 */
private ExtendedHttpService httpService;

@Override
protected void afterStart(BundleContext bc, DependencyManager dm) {
    this.tracker = new ServiceTracker(this.context, ExtendedHttpService.class, this);
    this.tracker.open();
}

@Override
protected void beforeStop(BundleContext bc, DependencyManager dm) {
    if (this.tracker != null) {
        this.tracker.close();
        this.tracker = null;
    }
}

@Override
protected void afterBundleChanged(BundleEvent be) {

}

@Override
public Object addingService(ServiceReference sr) {
    this.httpService = (ExtendedHttpService)this.context.getService(sr);
    HttpContext httpContext = this.httpService.createDefaultHttpContext();
    try {

        MainServlet mainServlet = new MainServlet();
        this.httpService.registerServlet(MainServlet.PATH, mainServlet, null, httpContext);

        // TODO: add ServletContextListener and Filter

        LoginServlet loginServlet = new LoginServlet();
        this.httpService.registerServlet(LoginServlet.PATH, loginServlet, null, httpContext);

        // TODO: add ServletContextListener and Filter

    } catch (Exception ex) {
        Logger.getLogger(BundleActivator.class.getName()).log(Level.SEVERE, null, ex);
    }
    return this.httpService;
}

@Override
public void modifiedService(ServiceReference sr, Object t) {
}

@Override
public void removedService(ServiceReference sr, Object t) {
    this.httpService.unregister(MainServlet.PATH);
    this.httpService.unregister(LoginServlet.PATH);
    // TODO: remove ServletContextListener and Filter
}
}
</code></pre>

<p>MyServlets are VaadinServlets. Now i want to add Shiro to my application. To make shiro work correctly i have to add the EnvironmentLoaderListemer and ShiroFilter to my services.</p>

<p>If I try the following:</p>

<pre><code>mainServlet.mainServlet.getServletContext().addListener(...)
</code></pre>

<p>the application crashes (because context has already been initialized).</p>

<pre><code>mainServlet.getServletContext().createListener(...)
</code></pre>

<p>does not throw an exception but the ServletContextListener does not work either.
The httpService does not have a method to add Listeners that way.
Filters have the same problem and the httpService.registerFilter(...) method is useless with a ShiroFilter when there is no EnvironmentLoader registered by the Listener.</p>

<p>Are there workarounds to add Shiro the programmatic way?</p>

<p>Is there a way to add Listeners and Filters for my Servlets? </p>
","<java><servlets><osgi><shiro><servletcontextlistener>","1","19452117"
"24069484","DefaultAdvisorAutoProxyCreator causing @Autowired dependencies to remain null","<p>My project is currently protected using Apache Shiro, and would like to add Shiro annotations for a cleaner source code.</p>

<p>Apache Shiro asks you to include <code>DefaultAdvisorAutoProxyCreator</code> in order for Spring AOP to detect it.</p>

<p>My configuration is as follows:</p>

<pre><code>@Configuration
@ComponentScan(""com.mcac0006.flip"")
@EnableWebMvc
public class AppContextConfiguration {

    @Autowired
    private JdbcRealm shiroRealm;

    @Bean(name=""shiroFilter"")
    public ShiroFilterFactoryBean getShiroFilter() {
        ShiroFilterFactoryBean bean = new ShiroFilterFactoryBean();
        bean.setSecurityManager(getSecurityManager());

        return bean;
    }

    @Bean(name=""securityManager"")
    public DefaultSecurityManager getSecurityManager() {
        return new DefaultWebSecurityManager(shiroRealm);
    }

    @Bean
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
        AuthorizationAttributeSourceAdvisor a = new AuthorizationAttributeSourceAdvisor();
        a.setSecurityManager(getSecurityManager());
        return a;
    }

    @Bean
    @DependsOn(""authorizationAttributeSourceAdvisor"")
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        final DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator = new DefaultAdvisorAutoProxyCreator();
        return defaultAdvisorAutoProxyCreator;
    }
}
</code></pre>

<p><br />
In this example <code>shiroRealm</code> remains null and is causing all its dependants to fail. If I comment-out the last method <code>defaultAdvisorAutoProxyCreator()</code>, shiroRealm is instantiated just fine.</p>

<p>What am I overlooking??</p>

<p>Thanks guys.</p>
","<java><spring><spring-mvc><spring-aop><shiro>","2",""
"13686246","Shiro Security, multiple realms which authorization info is taken?","<p>i am using two realms in my shiro security protected java application. One is supporting my OAuthToken and the other one supports UsernamePasswordToken. Now when my users authenticate themselves using a OAuthToken, the doGetAuthenticationInfo method of my OAuthRealm is called, but the doGetAuthorizationInfo of my <strong>PasswordRealm</strong> is called, can anyone tell me, why?</p>

<p>Kind regards
Chris</p>
","<java><security><authentication><authorization><shiro>","1",""
"19801122","How to Secure all REST request and response in Grails","<p>I am working on REST APIs using grails/groovy. I want to secure all the requests that comes in and goes out. I am not sure about where do the encryption and decryption process. I thought about couple of options.</p>

<ol>
<li>Call decryption api from all the controllers end point - which i
think a bad option </li>
<li>Use Grails Filter</li>
<li>Shiro filter - we are already using shiro for other purpose.Can it be extended to secure  the REST
    calls? </li>
<li>Spring AOP </li>
<li>Anything else??</li>
</ol>

<p>I dont know which one to go for, to make it straight forward that all my REST request and response are secured.I am thinking to go for Option #2. I hope others also would have faced this.Any advice would be a great help for me to decide.Thanks in advance!!!</p>
","<spring><rest><grails><groovy><shiro>","3",""
"10166270","Apache Shiro + Guice - can't get the annotations to work","<p>So I was able to get Apache Shiro working with Guice (thanks to ShiroWebModule) on Vaadin. 
The Shiro annotations (<code>@RequiresAuthentication</code>, <code>@RequiresPermission</code>) work only on the main Vaadin Application class and inside custom classes. They don't work inside CustomComponent/Window classes. </p>

<p>I tried injecting the Window classes to the Application class with providers, through <code>injector.getInstance</code> and it still doesn't work...</p>

<p>I am new to Guice and Shiro, so maybe I am missing something?</p>

<p>Why does it work for other custom classes? This works as expected (throws exception)</p>

<pre><code>public class TestClassImpl implements TestClass {

    @Override

    public void doSomeWork() {
        //this will throw an exception as expected
        test();
    }

    @RequiresAuthentication

    public void test() {

    }
}
</code></pre>

<p>This doesn't work as expected (the method is executed, the Apache Shiro annotation is ignored):</p>

<pre><code>  public class LoginView extends CustomComponent {

    public LoginWindow() {
        setCompositionRoot(mainLayout);
        //this will execture but it should not
        test();
    }

    @RequiresAuthentication

    public void test() {

    }
}
</code></pre>
","<apache><guice><vaadin><shiro>","1","10169848"
"32763252","How to safely change the session cookie DOMAIN or name in production?","<p>We recently realized that our session cookie is being written out to the fully qualified domain name of our site, <code>www.myapp.com</code>, for example:</p>

<pre><code>MYAPPCOOKIE: 79D5DB83..., domain: www.myapp.com
</code></pre>

<p>We want to switch this to being a cookie that can be shared cross subdomain, so any server at <code>myapp.com</code> can use the session cookie as well. For example, we'd like our cookie to store like so:</p>

<pre><code>MYAPPCOOKIE: 79D5DB83..., domain: .myapp.com
</code></pre>

<p>We tried just changing our session cookie to use that domain like so:</p>

<pre><code>   Cookie sessionCookie = sessionManager.getSessionIdCookie();
   sessionCookie.setDomain("".myapp.com"");                
</code></pre>

<p>and this works fine in <em>most</em> cases. </p>

<p>We're finding some users can't login after deploying this new code in some situations.  The problem arises when a user:</p>

<ul>
<li>has been logged into our site in their current browser session, but aren't currently logged in.</li>
<li>they try and login again</li>
</ul>

<p>It appears there are 2 session cookies in their browser:</p>

<ul>
<li><p>a stale cookie from their previous session, with the fully qualified domain name</p>

<pre><code>MYAPPCOOKIE: 79D5DB83..., domain: www.myapp.com
</code></pre></li>
<li><p>the new session cookie for the session they just logged into, with the new domain setting</p>

<pre><code>MYAPPCOOKIE: 79D5DB83..., domain: .myapp.com
</code></pre></li>
</ul>

<p>What's the best way to manage this old cookie being around? We've tried adding some code to delete the old cookie if a user doesn't have a session, but there are some paths into our app where this doesn't seem to work.</p>

<p>We're open to renaming the cookie if that might work, and are looking for any suggestions others may have. Thanks!</p>
","<java><session-cookies><shiro>","2","33261864"
"15645799","Jetty maven plugin unable to hot redeploy shiro filter","<p>I'm not sure if this is a jetty issue or an issue with shiro, but I am trying to use the Jetty-Maven plugin for development and one of the key features I want is Jetty's hot redeployment when files are changed. However, Shiro is throwing the following exception when jetty attempts to reload the application and I am not certain what can be done to correct this.</p>

<pre><code>[Scanner-0] ERROR org.apache.shiro.web.servlet.AbstractFilter - Unable to start Filter: [No WebEnvironment found: no EnvironmentLoaderListener registered?].
java.lang.IllegalStateException: No WebEnvironment found: no EnvironmentLoaderListener registered?
        at org.apache.shiro.web.util.WebUtils.getRequiredWebEnvironment(WebUtils.java:276)
        at org.apache.shiro.web.servlet.ShiroFilter.init(ShiroFilter.java:73)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.onFilterConfigSet(AbstractShiroFilter.java:152)
        at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:97)
        at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:123)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
        at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:732)
        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:279)
        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1314)
        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:722)
        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
        at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:275)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
        at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:527)
        at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:481)
        at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:676)
        at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:539)
        at org.eclipse.jetty.util.Scanner.scan(Scanner.java:391)
        at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:329)
        at java.util.TimerThread.mainLoop(Timer.java:555)
        at java.util.TimerThread.run(Timer.java:505)
</code></pre>

<p>My web.xml looks like the following:</p>

<pre><code>&lt;?xml version=""1.0"" ?&gt;
&lt;web-app xmlns=""http://java.sun.com/xml/ns/j2ee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
    version=""2.4""&gt;  

&lt;!-- SHIRO CONFIGURATION ============================================== --&gt;

&lt;listener&gt;
  &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
  &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
  &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
  &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
  &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
  &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
  &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;

&lt;!-- DATA SOURCE ====================================================== --&gt;

&lt;resource-ref&gt;
  &lt;description&gt;Account Data Source&lt;/description&gt;
  &lt;res-ref-name&gt;jdbc/AccountDB&lt;/res-ref-name&gt;
  &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
  &lt;res-auth&gt;Container&lt;/res-auth&gt;
&lt;/resource-ref&gt;

&lt;/web-app&gt; 
</code></pre>

<p>And finally, here is the relevant portion of my maven pom file:</p>

<pre><code>&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
      &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;
      &lt;version&gt;9.0.0.RC2&lt;/version&gt;
      &lt;configuration&gt;
        &lt;jettyXml&gt;src/jetty/jetty.xml&lt;/jettyXml&gt;
        &lt;scanIntervalSeconds&gt;1&lt;/scanIntervalSeconds&gt;
        &lt;webApp&gt;
          &lt;contextPath&gt;/&lt;/contextPath&gt;
          &lt;overrideDescriptor&gt;src/jetty/override-web.xml&lt;/overrideDescriptor&gt;
        &lt;/webApp&gt;
      &lt;/configuration&gt;
      &lt;dependencies&gt;
        &lt;dependency&gt;
          &lt;groupId&gt;mysql&lt;/groupId&gt;
          &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
          &lt;version&gt;5.1.24&lt;/version&gt;
        &lt;/dependency&gt;
      &lt;/dependencies&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
</code></pre>

<p>EDIT: Another relevant piece of information.  I am editing files in eclipse and I am using the M2E Maven Integeration for Eclipse plugin.  It's possible it has something to do with how eclipse and/or this plugin are recompiling files.</p>
","<jetty><shiro>","2",""
"7452757","Shiro Spring JDBCRealm Authentication and Authorization","<h3>Idea</h3>

<p>I need to develop a web application using Spring MVC with Shiro as Security Framework. </p>

<h3>Requirements</h3>

<p>The usernames, passwords, roles etc to be stored in a database. Database Schema:</p>

<pre><code>authorities[id, authorty_name] 
role[id, role_name] 
role_authorities_map[authority.id, role.id] 
user[id, username, password] 
user_rol_map[user.id, role_id]
</code></pre>

<p>The Password should be hashed and salted in the table.</p>

<p>Shiro Filter in web application should be <code>DeligatingFilterProxy</code> to utilize Spring's configuration mechanisms</p>

<p>All requests should be authenticated except /login, e.g.</p>

<pre><code>/** = authc
/login = anon
/admin/** = authc, admin
</code></pre>

<p>If the authentication is successful, the framework should route to <code>/dashboard</code></p>

<p>All URLs are processed by Spring Controller called <code>MainController</code></p>

<h3>Problem</h3>

<p>How do we solve above requirements? What configuration goes to what file? </p>

<p>Please help.</p>
","<spring-mvc><shiro><jdbcrealm>","1",""
"26508492","Shiro, Spring application appending jsessionid to each URL","<p>I'm currently developing application with Spring and Shiro. I'm deploying to Tomcat 7 and in production I'm using nginx as reverse proxy. Everything works smoothly (well kind of) except that the <code>jsessionid</code> is added to each URL when accessing the application through nginx proxy.</p>

<p>When I use following nginx config:</p>

<pre><code>server {
        server_name example.com www.example.com;
        listen 80;

        location /myapp {
                proxy_pass http://localhost:8080;
        }
}
</code></pre>

<p>I access the app through www.example.com/myapp, everything is fine then - no <code>jsessionid</code> in the URL</p>

<p>When I use following config:</p>

<pre><code>server {
       server_name sub.example.com www.sub.example.com
       listen 80;
       location / {

              proxy_pass http://localhost:8080/myapp/;
}
</code></pre>

<p>I access the app through www.sub.example.com, and then I see the <code>jsessionid</code> added to each URL (even after successful login).</p>

<p>I found similar thread that advised to add following to the web.xml:</p>

<pre><code>&lt;session-config&gt;
  &lt;tracking-mode&gt;COOKIE&lt;/tracking-mode&gt;
&lt;/session-config&gt;
</code></pre>

<p>That works - well, <code>jsessionid</code> is removed but I can't authenticate, which makes me think that there's a cookie configuration problem in nginx, any advices?</p>

<p><strong>EDIT//:</strong> Found the solution, just need to add the following in the nginx config:</p>

<pre><code> proxy_cookie_path /myapp/ /;
</code></pre>
","<spring><nginx><proxy><shiro><jsessionid>","1",""
"23138995","Dynamic Authentication and Authorization with Shiro","<p>I've a application ( JSP + EJB3 + JPA). I want to secures it with Shiro. Accounts, roles and permissions must be dynamics. ie Modifiable inside the application. Passwords are encrypted in SHA1
This is my code.</p>

<p>Shiro.ini :</p>

<pre><code>[main]
customSecurityRealm=cismaa.ssae.supervision.ihm.security.SecurityRealm
# any object property is automatically configurable in Shiro.ini file
customSecurityRealm.jndiDataSourceName=UtilisateurService

customSecurityRealm.authenticationQuery = select password, from utilisateur where name     = ?
sha1Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha1Matcher.hashAlgorithmName=SHA-1
customSecurityRealm.credentialsMatcher = $sha1Matcher


securityManager.realms = $customSecurityRealm
authc.loginUrl = /loginservlet
# name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = login
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = password
# redirect after successful login
authc.successUrl  = /menuficheservlet
# replace form authentication filter with verbose filter
authc = cismaa.ssae.supervision.ihm.security.VerboseFormAuthenticationFilter
# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
authc.failureKeyAttribute=simpleShiroApplicationLoginFailure

[urls]

/layout/unicorn/resources/** = anon
/** = authc
</code></pre>

<p>SecurityRealm : </p>

<pre><code>public class SecurityRealm extends JdbcRealm {

@EJB
private IUtilisateurService users;
private Utilisateur util;



public SecurityRealm() {  
    super();  
    /*InitialContext ic;
    try {
        ic = new InitialContext();
        users = (IUtilisateurService) ic.lookup(""UtilisateurService"");
    } catch (NamingException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }*/

}  

protected String jndiDataSourceName;

public String getJndiDataSourceName() {
    return jndiDataSourceName;
}

public void setJndiDataSourceName(String jndiDataSourceName) {
    this.jndiDataSourceName = jndiDataSourceName;
    this.users = getDataSourceFromJNDI(jndiDataSourceName);
}

private IUtilisateurService getDataSourceFromJNDI(String jndiDataSourceName) {
    try {
        InitialContext ic = new InitialContext();
        return (IUtilisateurService) ic.lookup(jndiDataSourceName);
    } catch (NamingException e) {
        throw new AuthorizationException(e);
    }
}

private String getPasswordForUser(String email) throws AuthenticationException {  

    util = users.findbyEmail(email);
    if(util == null) {
        throw new AuthenticationException(""Utilisateur "" + email + "" introuvable"");
    }
    return util.getMotDePasseUtilisateur();
}  

@Override
protected AuthenticationInfo doGetAuthenticationInfo(
        AuthenticationToken token) throws AuthenticationException {
    UsernamePasswordToken upToken = (UsernamePasswordToken) token;  
    String email = upToken.getUsername();
    // Null username is invalid  
    if (email == null) {  
        throw new AccountException(""Null usernames are not allowed by this realm."");  
    }
    String password = getPasswordForUser(email); 
    if (password == null) {  
        throw new UnknownAccountException(""No account found for user ["" + email + ""]"");  
    }  
    return new SimpleAuthenticationInfo(email, password, getName());
}

@Override
protected Set&lt;String&gt; getRoleNamesForUser(Connection conn, String email)
        throws SQLException {
    Role roles = util.getRole();
    Set&lt;String&gt; rolesName =  new HashSet&lt;String&gt;();
    rolesName.add(roles.getNomRole());
    return rolesName;
}
</code></pre>

<p>}</p>

<p>Web.xml</p>

<pre><code>&lt;!-- SHIRO !--&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>With this nothing happen when i try to connect to my app. I can see all the content of the app.</p>

<p>What i've missed?</p>
","<security><java-ee><jpa><shiro>","0",""
"23926730","Shiro Success Redirect to a New URL","<p>I am using shiro for authentication in my project</p>

<p>Below is the code </p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                [main]
                authc.loginUrl = /login.jsp
                authc.successUrl = /dashboard
                authc.failureKeyAttribute = shiroLoginFailure
                [roles]
                ROLE_ADMIN = *
                [urls]
                /static/** = anon
                /** = authc
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>Now what shiro does is after authentication success it directs the user to a URL which is present in the same application ... i want to direct it to some other web application say www.facebook.com ... can anyone tell me how ??</p>
","<java><authentication><redirect><shiro>","0",""
"23420623","Apache Shiro doesn't redirect me to login.xhtml in JSF","<p>I'm learning <code>Shiro</code> step-by-step with @BalusC's <a href=""http://balusc.blogspot.tw/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">article</a>, there is no problem until I <strong>turning it into <em>form based authentication</em></strong> as the <a href=""http://balusc.blogspot.tw/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html#FormBasedAuthentication"" rel=""nofollow"">fifth part of the article</a> said.</p>

<p>I did exactly what the article said, but the shiro didn't redirect me to the login page, instead, it always shows <code>index.xhtml</code> whenever I run my web app.  </p>

<p>Here's my code, I have no idea what have I missed.</p>

<p><strong>web.xml</strong>:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app version=""3.1"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;context-param&gt;
    &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
    &lt;param-value&gt;Development&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;session-config&gt;
    &lt;session-timeout&gt;
        30
    &lt;/session-timeout&gt;
&lt;/session-config&gt;
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;faces/index.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
&lt;/web-app&gt;
</code></pre>

<p><strong>shiro.ini</strong>:</p>

<pre><code>[main]
authc.loginUrl = /login.xhtml

[users]
admin = password

[urls]
/login.xhtml = authc
/app/** = authc
</code></pre>

<p>It should have redirect me to the <code>login.xhtml</code>, shouldn't it?<br>
Any ideas? Thanks in advance.</p>
","<apache><jsf><shiro>","1","23421695"
"14647200","Shiro web filter chain order policy","<p>Probably I'm in a kind of misunderstanding problem, but here is the thing:</p>

<ul>
<li>I want my <code>&lt;domain&gt;/index.html</code> publicly available and everything else should be protected.</li>
</ul>

<p>I'm using shiro web + guice:</p>

<pre><code>...

bindConstant().annotatedWith(Names.named(""shiro.loginUrl"")).to(""/index.html"");

addFilterChain(""/index.html"", ANON);
addFilterChain(""/**"", AUTHC);

...
</code></pre>

<p>This configuration is leading me to a ""TOO MANY REDIRECTS LOOP"" problem. Shiro documentation says <a href=""http://shiro.apache.org/web.html#Web-URLPathExpressions"" rel=""nofollow"">here</a> it uses a FIRST MATCH WIN policy, but I think I didn't get it well.</p>

<p>Any thoughts?</p>
","<shiro>","1","14650364"
"4425283","how to use cache permissions in grails shiro","<p>everytime i call subject.isPermitted(), it send a sql to db.
how can i cache it?</p>

<p>any example? thanks</p>

<hr>

<p>i had read the doc of shiro grails plugin. but cant solove  it.</p>

<p>DataSource:</p>

<pre><code>hibernate {
    cache.use_second_level_cache = true
    cache.use_query_cache = true
    cache.provider_class = 'net.sf.ehcache.hibernate.EhCacheProvider'
}
</code></pre>

<p>then how to set the cachemanager to shiro? i try spring.resource,throw an error. </p>

<p>and what's the instance bean name of cachemanager? do i need to config sth else?</p>
","<grails><ehcache><shiro>","3",""
"5502832","Hashing and Salting passwords with shiro","<p>In apache shiro the default hash implementation is as follows: </p>

<pre><code>MessageDigest digest = getDigest(getAlgorithmName());
        if (salt != null) {
            digest.reset();
            digest.update(salt);
        }
        byte[] hashed = digest.digest(bytes);
        int iterations = hashIterations - 1; //already hashed once above
        //iterate remaining number:
        for (int i = 0; i &lt; iterations; i++) {
            digest.reset();
            hashed = digest.digest(hashed);
        }
        return hashed;
</code></pre>

<p>Notice how it puts the salt first.  We are having to authenticate against a legacy system where the hashes were password + salt and not salt+password</p>

<p>I'm currently doing the concat outside this method call and passing null in for the salt. Aside from subclassing and overriding this method is there a better way than what I'm having to do?</p>
","<java><hash><salt><shiro>","3","5525452"
"16870556","Jetty / Shiro initialization error 2013-06-01 03:37:23.574:WARN:oejj.ObjectMBean:main:","<p>I have been working on a Java .war web app served by jetty.  I am in the process of integrating Shiro for user authentication/authorization.  Everything was going fine until it came time to hook up the MySql server to a Jdbc realm.  After adding a jetty-web.xml for the first time I had lots of problems with my embedded jetty server.  Complaints about WebAppContext not being the same class as WebAppContext.  </p>

<p>I simply removed jetty and all references to it to solve my class miss matching problems.  My webapp now loads and the MySql backing even works, but I am getting a ton of warnings.  It looks like they are coming from somewhere in jetty and I'm not sure how to track down the issue.  Any help figuring out where this is coming from would be appreciated.  Here is a sample of the warnings I am getting.  Code fragments below.</p>

<pre><code>2013-06-01 03:55:36.715:WARN:oejj.ObjectMBean:main:
java.lang.NoClassDefFoundError: org/eclipse/jetty/jmx/ObjectMBean
    at java.lang.ClassLoader.defineClass1(Native Method)
    at java.lang.ClassLoader.defineClass(Unknown Source)
    at java.security.SecureClassLoader.defineClass(Unknown Source)
    at java.net.URLClassLoader.defineClass(Unknown Source)
    at java.net.URLClassLoader.access$100(Unknown Source)
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(Unknown Source)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:420)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:382)
    at org.eclipse.jetty.util.Loader.loadClass(Loader.java:100)
    at org.eclipse.jetty.jmx.ObjectMBean.mbeanFor(ObjectMBean.java:133)
    at org.eclipse.jetty.jmx.MBeanContainer.beanAdded(MBeanContainer.java:146)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:229)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:210)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.manage(ContainerLifeCycle.java:340)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:89)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:115)
    at org.eclipse.jetty.server.session.SessionHandler.doStart(SessionHandler.java:106)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:115)
    at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:765)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:275)
    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1321)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:724)
    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:490)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:279)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:193)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.updateBeans(ContainerLifeCycle.java:718)
    at org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(HandlerCollection.java:89)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(ContextHandlerCollection.java:165)
    at org.eclipse.jetty.server.handler.HandlerCollection.addHandler(HandlerCollection.java:155)
    at org.eclipse.jetty.deploy.bindings.StandardDeployer.processBinding(StandardDeployer.java:41)
    at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:186)
    at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:495)
    at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:146)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:175)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)
    at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:605)
    at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:528)
    at org.eclipse.jetty.util.Scanner.scan(Scanner.java:391)
    at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:557)
    at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:232)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
    at org.eclipse.jetty.server.Server.start(Server.java:342)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.Server.doStart(Server.java:290)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1236)
    at java.security.AccessController.doPrivileged(Native Method)
    at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1160)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.eclipse.jetty.start.Main.invokeMain(Main.java:509)
    at org.eclipse.jetty.start.Main.start(Main.java:651)
    at org.eclipse.jetty.start.Main.main(Main.java:99)
Caused by:
java.lang.ClassNotFoundException: org.eclipse.jetty.jmx.ObjectMBean
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(Unknown Source)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:420)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:382)
    at java.lang.ClassLoader.defineClass1(Native Method)
    at java.lang.ClassLoader.defineClass(Unknown Source)
    at java.security.SecureClassLoader.defineClass(Unknown Source)
    at java.net.URLClassLoader.defineClass(Unknown Source)
    at java.net.URLClassLoader.access$100(Unknown Source)
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(Unknown Source)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:420)
    at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:382)
    at org.eclipse.jetty.util.Loader.loadClass(Loader.java:100)
    at org.eclipse.jetty.jmx.ObjectMBean.mbeanFor(ObjectMBean.java:133)
    at org.eclipse.jetty.jmx.MBeanContainer.beanAdded(MBeanContainer.java:146)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:229)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:210)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.manage(ContainerLifeCycle.java:340)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:89)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:115)
    at org.eclipse.jetty.server.session.SessionHandler.doStart(SessionHandler.java:106)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:115)
    at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:765)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:275)
    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1321)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:724)
    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:490)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:279)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(ContainerLifeCycle.java:193)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.updateBeans(ContainerLifeCycle.java:718)
    at org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(HandlerCollection.java:89)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(ContextHandlerCollection.java:165)
    at org.eclipse.jetty.server.handler.HandlerCollection.addHandler(HandlerCollection.java:155)
    at org.eclipse.jetty.deploy.bindings.StandardDeployer.processBinding(StandardDeployer.java:41)
    at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:186)
    at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:495)
    at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:146)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:175)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)
    at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:605)
    at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:528)
    at org.eclipse.jetty.util.Scanner.scan(Scanner.java:391)
    at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:557)
    at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:232)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
    at org.eclipse.jetty.server.Server.start(Server.java:342)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
    at org.eclipse.jetty.server.Server.doStart(Server.java:290)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
    at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1236)
    at java.security.AccessController.doPrivileged(Native Method)
    at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1160)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.eclipse.jetty.start.Main.invokeMain(Main.java:509)
    at org.eclipse.jetty.start.Main.start(Main.java:651)
    at org.eclipse.jetty.start.Main.main(Main.java:99)
</code></pre>

<p>web.xml</p>

<pre><code>&lt;!DOCTYPE web-app PUBLIC
    ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN""
    ""http://java.sun.com/dtd/web-app_2_3.dtd"" &gt;

&lt;web-app
xmlns=""http://java.sun.com/xml/ns/javaee""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
metadata-complete=""false""
version=""3.0""&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;Hello&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.hostingcleveland.beweilder.webTransponder.HelloServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Hello&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/hello/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;ddbTest&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.hostingcleveland.beweilder.webTransponder.dynamoDbTestServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;ddbTest&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/ddbt/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;


&lt;servlet&gt;
    &lt;servlet-name&gt;alertSend&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.hostingcleveland.beweilder.webTransponder.alertsSend&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;alertSend&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/alerts/send/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;


&lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;resource-ref&gt;
    &lt;description&gt;MySql Connection&lt;/description&gt;
    &lt;res-ref-name&gt;jdbc/hcleDB&lt;/res-ref-name&gt;
    &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
    &lt;res-auth&gt;Container&lt;/res-auth&gt;
&lt;/resource-ref&gt;
</code></pre>

<p></p>

<p>jetty-web.xml</p>

<pre><code>&lt;?xml version=""1.0""?&gt;
&lt;!DOCTYPE Configure PUBLIC ""-//Mort Bay Consulting//DTD Configure//EN"" ""http://jetty.mortbay.org/configure.dtd""&gt;

&lt;Configure class=""org.eclipse.jetty.webapp.WebAppContext""&gt;
&lt;New id=""hcleDB"" class=""org.eclipse.jetty.plus.jndi.Resource""&gt;
    &lt;Arg&gt;&lt;/Arg&gt;
    &lt;Arg&gt;jdbc/hcleDB&lt;/Arg&gt;
    &lt;Arg&gt;
        &lt;New class=""com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource""&gt;
            &lt;Set name=""Url""&gt;jdbc:mysql://xxx:3306/hcle_sec&lt;/Set&gt;
            &lt;Set name=""User""&gt;xxx&lt;/Set&gt;
            &lt;Set name=""Password""&gt;xxx&lt;/Set&gt;
        &lt;/New&gt;
    &lt;/Arg&gt;
&lt;/New&gt;
&lt;/Configure&gt;
</code></pre>
","<java><jetty><warnings><shiro>","1",""
"10342213","How to handle UnauthenticatedException with Shiro","<p>I have a method in my resource with @RequiresGuest annotation. When logged in user hits the link it rightfully throws an <code>UnauthenticatedException</code> with this message </p>

<blockquote>
  <p>Attempting to perform a guest-only operation.  The current Subject is
  not a guest (they have been authenticated or remembered from a
  previous login).  Access denied.</p>
</blockquote>

<p>But how do I handle it? How do I, for example, redirect the request to logout page?</p>
","<shiro><guice-3>","0","10401142"
"18530005","Apache Shiro Implicit [url] restriction","<p>I'm using <a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a> to manage my applications security with great success. However, I'm trying to specify a <strong>url</strong> path in my <em>shiro.ini</em> file that will prevent access to a specified page based on the subjects allocated '<em>permissions</em>'.</p>

<p>I know the permissions are generally working as I can use the <code>SecurityUtil</code> to restrict access to methods and functions and this works fine. </p>

<pre><code>SecurityUtils.getSubject().isPermitted(""account:create"");
</code></pre>

<p>I am obviously missing something because when I try to apply this through my ini configuration file using the default <strong><em>perms</em></strong> filter the permission seem to be ignored.</p>

<p>Relevant parts of my shiro.ini file:</p>

<pre><code>[urls]
...
/accounts/create.jsf = perms[""account:create""]
...
</code></pre>

<p>(obtained from <a href=""http://shiro.apache.org/web.html"" rel=""nofollow"">Shiro Docs</a>)</p>

<p>I would have thought that when the specified <strong>url</strong> is accessed the <strong><em>perms</em></strong> filter is instantiated, the subject is found to be lacking the implied permission and the page is not rendered! However the page seems to be rendered just fine. :(</p>

<p>Do I need to create my own implementation of the <strong><em>perms</em></strong> filter and specify its action? I would have thought that was the point of supplying a default!</p>

<p>Any help would be appreciated. </p>
","<apache><security><permissions><shiro>","1","18530584"
"34151975","Apache Shiro - LDAP for Authentication and Properties/Ini for Authorization","<p>i´m trying to add some authentication and authorization functionality to my small web application. therefore i´m using apache shiro.</p>

<p>my plan: using an existing ldap server for user authentication and using a properties or ini file for authorization.</p>

<p>here´s a small example: 
user x wants to use the application
he enters his username and his password
the ldap server is used for authentication --> user + pwd correct?
if authentication is verified and correct, a properties file or ini file is used to check if the user is permitted, to start some functions inside the application.</p>

<p>i hope you know what i´m trying to do.</p>

<p>now i´m not sure how to implement this feature. is it enough to use an ini file or is it required to implement my own realm?! is there an example implementation?</p>

<p>i´m grateful for every information</p>

<p>and sorry for my bad english :/</p>
","<apache><authentication><authorization><shiro><jdbcrealm>","0",""
"29294158","Apache Shiro login failed using JDBC Realm","<p>I am trying to connect to oracle DB .
I want to retrieve list of passwords from data base using the authentication query. Here is my sample shiro.ini file:</p>

<pre><code># password matcher
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService

# datasource
ds = oracle.jdbc.pool.OracleDataSource
ds.URL = jdbc:oracle:thin:@matrix-oracle11g:1521:dev11g
ds.user = cit1am
ds.password = cit1

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT USR_PSWD FROM USR
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource = $ds
securityManager.realms = $jdbcRealm
[users]

[roles]

[urls]
</code></pre>

<p>Sample code snippet of login:</p>

<pre><code>public class Quickstart {

    private static final transient Logger log = LoggerFactory.getLogger(Quickstart.class);


    public static void main(String[] args) {
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
        SecurityManager securityManager = factory.getInstance();
        SecurityUtils.setSecurityManager(securityManager);
        Subject currentUser = SecurityUtils.getSubject();

        // Do some stuff with a Session (no need for a web or EJB container!!!)
        Session session = currentUser.getSession();
        session.setAttribute(""someKey"", ""aValue"");
        String value = (String) session.getAttribute(""someKey"");
        if (value.equals(""aValue"")) {
            log.info(""Retrieved the correct value! ["" + value + ""]"");
        }
        try{
        // let's login the current user so we can check against roles and permissions:
        if (!currentUser.isAuthenticated()) {

            UsernamePasswordToken token = new UsernamePasswordToken(""cit1am"", ""cit1"")   ;
            token.setRememberMe(true);
            try {
                currentUser.login(token); //problem occurs here 
                log.info(""inside try block ==========&gt;&gt;"" );
            }
catch (UnknownAccountException uae) {
                log.info(""There is no user with username of "" + token.getPrincipal());
            } 
</code></pre>

<p>I am getting following error:</p>

<pre><code>    [main] ERROR org.apache.shiro.realm.jdbc.JdbcRealm - There was a SQL error while authenticating user [cit1am]
java.sql.SQLException: Invalid column index
    at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:70)
    at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:133)
    at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:199)
    at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:263)
    at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:271)
    at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:445)
</code></pre>

<p>Please suggest what i am doing wrong?</p>
","<apache><authentication><shiro><jdbcrealm>","0","29298965"
"15586276","Different Form login in Shiro","<p>Same question where asked under ""Multiple logins url in Shiro"" but it was unanswered.</p>

<p>I am trying to have two different loggin page for apache shiro
1) For Mobile devices (little screen, limited javascript different theme)
2) For standard devices</p>

<p>How can i do?</p>

<p>Now only one url is working at a time.</p>

<p>shiro.loginUrl = ...</p>

<p>Thankyou</p>
","<java><security><shiro>","1","15759151"
"16106431","Cross-domain authentication","<p>I'm planning to setup a webservice that will be accessed by other sites. The idea is that the webservice has to be secured, and that each site accessing the web service will be authenticated against their registered domain. </p>

<ul>
<li>Site owners will register their domain (like foo.com) from the web front-end of my web service</li>
<li>Next, their site will issue HTTP methods (<code>GET, PUT, POST, DELETE</code>, etc) which will usually be Javascript HTTP Request</li>
<li>Sites accessing the web service will not need to authenticate; the web service will determine if the domain it is coming from have been registered beforehand, if so I will process the request according to the site's domain. </li>
</ul>

<p>The problem I am thinking now is whether this kind of system would ""scale"" and will ""work""</p>

<p>I have worked with both Apache Shiro and Spring Security but I have never encountered this kind of requirement. </p>
","<java><http><spring-security><shiro>","2",""
"11109714","How do I get Shiro's annotations to work in Grails?","<p>I'm trying to apply annotation-based security to my Grails app.</p>

<p>Peter says <a href=""http://shiro-user.582556.n2.nabble.com/grails-plugin-annotations-td1493905.html"" rel=""nofollow"">here</a> that we should be using Shiro's annotations instead of the quasi-deprecated grails-shiro plugin annotations.</p>

<p>How does one get that working?</p>

<p>I'm finding the grails-shiro plugin strays from how Shiro does things, what with the Realm-converting and all. Has anyone tried implementing Shiro directly rather than using the grails plugin? Any success?</p>

<p>Thanks,
Graham.</p>
","<grails><shiro>","3","18821334"
"29543726","Hello - Help Shiro","<p>my app dont ready shiro.ini. I'm using a VRaptor framework , just not this slow shiro.ini . this on the classpath and does not read .</p>

<pre><code>public LoginController()  {
   Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory();
   SecurityManager securityManager = factory.getInstance();
   SecurityUtils.setSecurityManager(securityManager);
}
public boolean autenticar(String email, String password, Boolean rememberMe) throws NoSuchAlgorithmException, UnsupportedEncodingException {
    UsernamePasswordToken token = new UsernamePasswordToken(email, password);
    token.setRememberMe(true);
    Subject subject = SecurityUtils.getSubject();

    try {
        subject.login(token);

    } catch ( UnknownAccountException uae ) { 
        System.out.println(uae.getMessage());
    } catch ( IncorrectCredentialsException ice ) {
        System.out.println(ice.getMessage());
    } catch ( LockedAccountException lae ) {
        System.out.println(lae.getMessage());
    } catch ( ExcessiveAttemptsException eae ){
        System.out.println(eae.getMessage());
    }
    result.redirectTo(LoginController.class).admin();
    return false;
}
</code></pre>

<p>src/main/webapp/web-inf/shiro.ini</p>

<p>I use a framework called vraptor. I put the shiro dependencies and the .ini file, it this error.      </p>

<pre><code>GRAVE: Servlet.service() for servlet [default] in context with path [/vraptor-andre] threw exception [net.vidageek.mirror.exception.ReflectionProviderException: Could not invoke method autenticar] with root cause
java.lang.IllegalStateException: Configuration error:  No realms have been configured!  One or more realms must be present to execute an authentication attempt.
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.assertRealmsConfigured(ModularRealmAuthenticator.java:161)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:264)
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
    at br.com.genius.shiro.controller.LoginController.autenticar(LoginController.java:55)
</code></pre>

<p>shiro.ini</p>

<p><code>[main]</code></p>

<pre><code>authc.loginUrl = /login
jdbcRealm = br.com.genius.shiro.auth.MyCustomRealm
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
sha256Matcher.storedCredentialsHexEncoded = false  
sha256Matcher.hashIterations = 1024  
jdbcRealm.credentialsMatcher = $sha256Matcher  
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE email = ?
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select roleName from UserRole where email = ?
jdbcRealm.permissionsQuery = select permission from RolesPermission where    roleName = ?
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = x.x.x.x
ds.user = xxxx
ds.password = xxxx
ds.databaseName = data
jdbcRealm.dataSource=$ds
authc.usernameParam = email
authc.passwordParam = password
authc.failureKeyAttribute = shiroLoginFailure
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
securityManager.realms = $jdbcRealm
[urls]  
/login = authc
/logout = logout
/admin/** = user, roles[admin]
/guest/** = user, roles[guest]`
</code></pre>

<p>in shiro.ini when has [ AUTH] it as the internal error , does not recognize and without it appears this error</p>

<pre><code>`The server encountered an internal error that prevented it from fulfilling this request.`


javax.enterprise.event.ObserverException
sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
java.lang.reflect.Constructor.newInstance(Unknown Source)
java.lang.Class.newInstance(Unknown Source)
</code></pre>

<p>com.google.common.util.concurrent.ExecutionError: java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
    com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2197)
    com.google.common.cache.LocalCache.get(LocalCache.java:3932)
    com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3936)
    com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4806)
    org.jboss.weld.util.cache.LoadingCacheUtils.getCacheValue(LoadingCacheUtils.java:52)
    org.jboss.weld.util.cache.LoadingCacheUtils.getCastCacheValue(LoadingCacheUtils.java:80)
    org.jboss.weld.bean.proxy.ClientProxyProvider.getClientProxy(ClientProxyProvider.java:204)
    org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:727)
    org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:753)</p>
","<java><web><shiro>","0",""
"24243817","Apache Shiro: How to enforce password change?","<p>I've got a Java EE 7 (JSF, JPA) and CDI based application running, using Shiro for both Authentication and Authorization.</p>

<p>I've got the requirement, that users have to change their password after a certain amount of time (customizable by the application's admin, i.e. 30 days). In our User table we store the information when the password was last set and thus can calculate on Login if it's time to do so.</p>

<p>The plan is to redisplay the login page and represent a different form (change password instead of login). So far so good. However:
How can I enforce the password change and not letting the user navigate to a different page?</p>

<p>Is there a recommended (or even built in) solution?</p>

<p>My idea would be to implement a filter, that checks the session-scoped login object on whether the PW needs to be reset or not.
The hope would be, that this it as simple as creating a new filter, injecting login there and checking the state of the flag - and redirecting the user to the login page as long as flag is true/he does not update his pw.</p>

<p>(We already have a custom cdi aware EnvironmentLoaderListener in place to support our JPA realm.)</p>

<p>The new filter would go behind the last line?</p>

<pre><code>[urls]
/javax.faces.resource/** = anon
/layout.xhtml = anon
/css/** = anon
/login.xhtml = user
/logout.xhtml = logout
/** = user
</code></pre>

<p>So we have:</p>

<pre><code>/** = user,pwresetfilter
</code></pre>

<p>Suggestions on details as well as on the overall solution are welcome.</p>
","<jsf-2.2><shiro>","0",""
"24576987","How to get specific realm from Multiple realms for authorization in Shiro?","<p>I am newbie to Spring and Shiro platforms.</p>

<p>I have two url sets <code>/admin/--</code> and <code>/vendor/--</code>. Both client sets are authenticating with specific realms. I have extended <code>ModularRealmAuthenticator</code> class to choose correct realm for authenticating. </p>

<p>ModularRealmAuthenticator.java</p>

<pre><code>@Override
protected AuthenticationInfo doAuthenticate(AuthenticationToken authenticationToken) throws AuthenticationException {
    assertRealmsConfigured();
    MultiLoginAuthenticationToken mlat = null;
    Realm loginRealm = null;

    if (!(authenticationToken instanceof MultiLoginAuthenticationToken)) {
        throw new AuthenticationException(""Unrecognized token , not a typeof MultiLoginAuthenticationToken "");
    } else {
        mlat = (MultiLoginAuthenticationToken) authenticationToken;
        logger.debug(""realm name is : {}"", mlat.getRealmName());
        loginRealm = lookupRealm(mlat.getRealmName());
    }

    return doSingleRealmAuthentication(loginRealm, mlat);

}

protected Realm lookupRealm(String realmName) throws AuthenticationException {
    Collection&lt;Realm&gt; realms = getRealms();
    for (Realm realm : realms) {
        if (realm.getName().equalsIgnoreCase(realmName)) {
            logger.debug(""look up realm name is : {}"", realm.getName());
            return realm;
        }
    }
    throw new AuthenticationException(""No realm configured for Client "" + realmName);
}
</code></pre>

<p>But while I am assigning role and permissions from different set of datasource to both clients (Admin and vendor). It is iterating the realms in order which I have defined in applicationContext.xml file. </p>

<p>My ApplicationContext.xml </p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;

    &lt;property name=""authenticator""&gt;
        &lt;bean class=""com.yatra.mp.security.MultiLoginAuthenticator""/&gt;
    &lt;/property&gt;

    &lt;!-- Single realm app (realm configured next, below). If you have multiple 
        realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realms""&gt;
        &lt;util:list&gt;
            &lt;ref bean=""adminAuthRealm"" /&gt;
            &lt;ref bean=""vendorAuthRealm"" /&gt;              
        &lt;/util:list&gt;
    &lt;/property&gt;

    &lt;property name=""cacheManager"" ref=""cacheManager"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>In both of realms are extending <strong>AuthorizingRealm</strong> class and both have <strong>doGetAuthorizationInfo</strong> and <strong>doGetAuthenticationInfo</strong> method. In which I have defined my custom implementation.</p>

<p>Is it necessary to extend <strong>ModularRealmAuthorizer</strong> class? If yes, could you please tell me which method I have override?</p>
","<java><spring><shiro>","1",""
"21396275","Apache Shiro anon filter not working","<p>I have a project where I am trying to use Apache Shiro to implement a security layer.  For the most part it seems to be working rather nicely.  I have been using the ""authc"" filter up to this point and that has been working as expected.  However, I'd like to move the login.jsp to a different public folder that doesn't have any stringent security requirements.</p>

<p>Below is the relevant shiro.ini file entries.</p>

<pre><code>shiro.loginUrl = /public/pages/login.jsp

jdbcRealm = ...
:
:

ds = ...
:
:
jdbcRealm.dataSource = $ds

[users]
[roles]
[urls]
/public/**  = anon
/secure/**  = authc
/logout     = logout
</code></pre>

<p>When the /public/** = authc or anon, I can try to go directly to a page under the /secure URL and will correctly be taken to the login.jsp page.  Check. Check.</p>

<p>After filling in the Username and Password on the login.jsp page and submitting the form, things break down...</p>

<p>If <code>/public/** = authc</code>, then I'm taken to the original page I was attempting to get to in the /secure url.  So that works.</p>

<p>If <code>/public/** = anon</code>, then the login.jsp will be reloaded.  I'm not sent to the page in the /secure directory I was originally attempting to get to.  The same thing occurs if I don't put an entry for the <code>/public/**</code> URL pattern.</p>

<p>There seems to be some Shiro fundamental that I am missing.  If you need to see anything else in the project, I have uploaded it to BitBucket here.</p>

<p><a href=""https://tfeinstein@bitbucket.org/tfeinstein/vikos.git"" rel=""nofollow"">https://tfeinstein@bitbucket.org/tfeinstein/vikos.git</a></p>

<p>Thanks,
Todd</p>
","<apache><login><filter><shiro><anonymous>","0",""
"21106680","Enable Shiro annotations in Spring based application","<p>I have project with two modules – <em>web</em> and <em>buisness</em>.</p>

<p>In <em>web module</em>, there is a shiro.ini file with configuration (as in the tutorial – <a href=""https://github.com/lhazlewood/apache-shiro-tutorial-webapp/blob/step7/src/main/webapp/WEB-INF/shiro.ini"" rel=""nofollow"">https://github.com/lhazlewood/apache-shiro-tutorial-webapp/blob/step7/src/main/webapp/WEB-INF/shiro.ini</a> – with my own properties).</p>

<p>In <em>buisness module</em>, there is a applicationContext.xml file with this code:</p>

<pre><code>&lt;bean id=""iniRealm"" class=""org.apache.shiro.realm.text.IniRealm""&gt;
    &lt;property name=""resourcePath"" value=""file:C:\project\webmodule\src\main\webapp\WEB-INF\shiro.ini"" /&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor"" /&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""iniRealm"" /&gt;
&lt;/bean&gt;

&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>But if I want to use annotations, like <code>@RequiresAuthentication</code>, it doesn't work.</p>

<p>Is the configuration in applicationContext.xml enough? Where can be a mistake? The authentication in <em>web module</em> works fine.</p>

<p>Can it be problem with filters? Do I have to define two filters, one with <code>&lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</code> and another with <code>&lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;</code>? 
Thank you for any advice.</p>
","<java><spring><shiro>","1",""
"23249217","Apache Shiro: IllegalArgumentException upon login","<p>When using Apache Shiro, the following exception appears upon login:</p>

<blockquote>
  <p>java.lang.IllegalArgumentException: Configuration error. Configuration error.  Specified object [authc] with property [loginUrl] without first defining that object's class.  Please first specify the class property first, e.g. myObject = fully_qualified_class_name and then define additional properties.</p>
</blockquote>

<h1>shiro.ini</h1>

<pre><code>  # ----------------------------------------------------------------------------- 
  [main]
  authc.loginUrl=/login.xhtml
  authc.successUrl=/hello.xhtml
  logout.redirectUrl=/hello.xhtml

  # Users and their (optional) assigned roles
  # username = password, role1, role2, ..., roleN
  # -----------------------------------------------------------------------------
  [users]
  root = secret, admin
  guest = guest, guest

  # -----------------------------------------------------------------------------
  # Roles with assigned permissions
  # roleName = perm1, perm2, ..., permN
   -----------------------------------------------------------------------------
 [roles]
 admin = *
 schwartz = lightsaber:*
 goodguy = winnebago:drive:eagle5

  #------------------------------------------------------------------------------
 [urls]
 /hello.xhtml= authc 
</code></pre>

<h1>Controller</h1>

<pre class=""lang-java prettyprint-override""><code>public void login() {
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory();
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
    Subject currentUser=SecurityUtils.getSubject();

    if(!currentUser.isAuthenticated()){
        UsernamePasswordToken token=new UsernamePasswordToken(""root"",""secret"");
        token.setRememberMe(true);
        try{
            currentUser.login(token);
        }catch(UnknownAccountException e){
            System.out.println(""username is incorrect"");
        }catch (IncorrectCredentialsException e) {
            System.out.println(""password is incorrect"");
        }catch (LockedAccountException e) {
            System.out.println(""account was locked"");
        }catch (AuthenticationException e) {
            System.out.println(""there are some error"");
        }
    }
 }
</code></pre>

<h1>web.xml</h1>

<pre class=""lang-xml prettyprint-override""><code>&lt;listener&gt;
    &lt;listener-class&gt;com.sun.faces.config.ConfigureListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>
","<java><security><jsf><shiro>","4","23252242"
"2191615","Using Shiro to secure services in grails","<p>I'm using grails to build an application that functions primarily as a service framework. My question is: Can services be secured in the same fashion as controllers?</p>

<p>uri-based example:</p>

<pre><code>class SecurityFilters {
  def filters = {
    all(uri: ""/**"") {
      before = {
        // Ignore direct views (e.g. the default main index page).
        if (!controllerName) return true
        // Access control by convention. 
        accessControl()
      }
    } 
  } 
}
</code></pre>
","<grails><groovy><service><soa><shiro>","1","2193062"
"16754831","Apache Shiro. 'Remember me' and cookies don't working","<p>I am developing a vaadin-based project using Apache Shiro 1.2 for security. I have a problem with 'remember me' feature. I try to use CookieRememberMeManager as RememberMeManager, but after authentification Subject.isRemembered() always returns false.</p>

<pre><code>public class ApplicationSecurityManager extends DefaultSecurityManager {

    public ApplicationSecurityManager(Realm singleRealm) {
        super(singleRealm);
        setRememberMeManager(new CookieRememberMeManager());
    }
}
</code></pre>

<p>I set SecurityManager in init method of GuiceFilter.</p>

<pre><code>    final Realm realm = new ApplicationSecurityRealm();
    final SecurityManager securityManager = new ApplicationSecurityManager(realm);
    SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>When I try to login to my application, all works fine except 'remember me' feature.
Code:</p>

<pre><code>    final Subject currentUser = SecurityUtils.getSubject();

    UsernamePasswordToken token = new UsernamePasswordToken(username,password);
    token.setRememberMe(rememberMe);
    currentUser.login(token);
</code></pre>

<p>Application have no exceptions, and i could't resolve this problem using debug.
I use Apache Tomcat 7.0.40, can it to forbid cookies?</p>

<p>P.s. Sorry for my English, I'm not from an English-speaking country.</p>
","<shiro><remember-me>","2",""
"34637907","Configure shiro.ini for JDBC connection","<p>As part of my new years learning new technologies initiative I have started messing around with the Apache Shiro Security Framework.</p>

<p>I managed to get the basic example working which stores usernames, passwords and roles in the shiro.ini file, but when I modified my shiro.ini file to use JDBC it just stopped working. I now keep getting prompted for my username and password when trying to access my application. I've kept it as simple as possible (the passwords aren't even hashed).</p>

<p>Below is my shiro.ini file, does anyone have any idea what I'm doing wrong?</p>

<pre><code>[main]
authc.usernameParam = j_username
authc.passwordParam = j_password
authc.failureKeyAttribute = shiroLoginFailure

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true

jdbcRealm.authenticationQuery = ""SELECT password FROM user WHERE username = ?""
jdbcRealm.userRolesQuery = ""SELECT role FROM user WHERE username = ?""

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = password
ds.databaseName = database
jdbcRealm.dataSource = $ds

# Use Built-in Chache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

securityManager.realms = $jdbcRealm

[users]
[roles]
[urls]
/* = authcBasic
</code></pre>
","<apache><shiro>","0","34672286"
"39342421","Zeppelin security : Issues while securing Zeppelin UI","<p>HDP-2.4.2.0-258 installed using Ambari 2.2.2.0</p>

<p>I installed Zeppelin(0.6.0.2.4.2.0-258)manually and was able to execute several paragraphs in a notebook.</p>

<p>Now I wish to secure it step-by-step, starting with the authentication for the web UI, integrated with LDAP i.e when a user enters his credentials after hitting http://:9995/, he can proceed only if he is present in at least one of the several Unix LDAP groups as follows :
devadmin
datascientist
develope</p>

<p>Before proceeding, I read several existing posts, <a href=""http://zeppelin.apache.org/docs/0.6.0/security/shiroauthentication.html"" rel=""nofollow"">Zeppelin doc</a>. etc.</p>

<p>The <strong>conf/shiro.ini</strong> file :</p>

<pre><code>#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the ""License""); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#[users]
# List of users with their password allowed to access Zeppelin.
# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections
#admin = password1
#user1 = password2, role1, role2
#user2 = password3, role3
#user3 = password4, role2
# Sample LDAP configuration, for user Authentication, currently tested for single Realm
[main]
#ldapRealm = org.apache.zeppelin.server.LdapGroupRealm
ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.contextFactory.environment[ldap.searchBase]=dc=company,dc=SE
ldapRealm.userDnTemplate = uid={0},CN=devadmin,ou=Group,dc=company,dc=SE
ldapRealm.contextFactory.url = ldap://unix-ldap.company.com:389
ldapRealm.contextFactory.authenticationMechanism = SIMPLE
shiro.loginUrl = /api/login
[urls]
# anon means the access is anonymous.
# authcBasic means Basic Auth Security
# To enfore security, comment the line below and uncomment the next one
/api/version = anon
#/** = anon
/** = authcBasic
</code></pre>

<p>For the ldapRealm, if I provide org.apache.zeppelin.server.LdapGroupRealm, I get the following error and Zeppelin fails to start :</p>

<pre><code>ERROR [2016-09-05 14:26:14,996] ({main} ZeppelinServer.java[main]:117) - Error while running jettyServer
org.apache.shiro.config.ConfigurationException: Unable to instantiate class [org.apache.zeppelin.server.LdapGroupRealm] for object named 'ldapRealm'.  Please ensure you've specified the fully qualified class name correctly.
at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:151)
at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:119)
at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:161)
at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:124)
at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:102)
at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:88)
at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:221)
at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:133)
at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:782)
at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:774)
at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)
at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
at org.eclipse.jetty.server.Server.doStart(Server.java:282)
at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
at org.apache.zeppelin.server.ZeppelinServer.main(ZeppelinServer.java:115)
Caused by: org.apache.shiro.util.UnknownClassException: Unable to load class named [org.apache.zeppelin.server.LdapGroupRealm] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found.
at org.apache.shiro.util.ClassUtils.forName(ClassUtils.java:148)
at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:164)
at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:144)
... 29 more
</code></pre>

<p>If I use org.apache.shiro.realm.ldap.JndiLdapRealm,</p>

<ul>
<li>Zeppelin starts successfully</li>
<li>When accessing http://:9995/, I get an username password prompt in the browser</li>
<li>I enter my credentials and probably the log-in fails as the window reappears</li>
<li>If I cancel instead of entering the username and password, I get the Zeppelin UI(that's crazy !)</li>
</ul>

<p>The error :</p>

<pre><code>ERROR [2016-09-05 14:29:36,153] ({qtp762227630-30} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
ERROR [2016-09-05 14:29:36,159] ({qtp762227630-34} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
ERROR [2016-09-05 14:29:46,150] ({qtp762227630-30} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
ERROR [2016-09-05 14:29:56,150] ({qtp762227630-31} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
ERROR [2016-09-05 14:30:06,151] ({qtp762227630-29} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
ERROR [2016-09-05 14:30:16,151] ({qtp762227630-32} NotebookServer.java[onMessage]:207) - Can't handle message
java.lang.Exception: Invalid ticket  != 16731c36-4f7e-4dd6-b567-8da934aeecd0
at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:113)
at org.apache.zeppelin.socket.NotebookSocket.onMessage(NotebookSocket.java:56)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:835)
at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:349)
at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:225)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:745)
</code></pre>
","<shiro><hortonworks-data-platform><apache-zeppelin>","0","39445467"
"27136444","Dynamic instance-level permissions with Apache Shiro","<p>I am creating a REST service in Java using <a href=""http://dropwizard.io/"" rel=""nofollow"">Dropwizard</a> in combination with <a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a> for authentication and authorization. I extended JdbcRealm in order to make Shiro use my PostgreSQL database (which I access through Hibernate). Authentication works well. Creating group-level permissions is also very easy. Unfortunately, I was not able to find an idiomatic way to bind certain resource instances to specific users (subjects). I know that Shiro provides support for <a href=""https://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/authz/permission/WildcardPermission.html"" rel=""nofollow"">instance-level access control</a>, but the documentation does not show a workflow which allows me to do the following:</p>

<ul>
<li>User Alice creates resource X</li>
<li>User Bob should be allowed to read X, but not to write/delete it</li>
<li>User Alice should have full read/write/delete access to X</li>
</ul>

<p>Any hints or recommendations are appreciated!</p>
","<java><authorization><shiro><dropwizard>","2",""
"19599829","How to configure grails and shiro to mark cookies secure?","<p>I'm using Grails 2.2.4 with the Shiro plugin 1.1.4 and would like to mark the cookies as secure so the session information won't be sent over http.</p>

<p>I'm looking for the grails way to set this setting, which normally would be in shiro.ini</p>

<p><code>
securityManager.sessionManager.sessionIdCookie.secure = true
</code></p>

<p>Open JIRA issue to track this: 
<a href=""http://jira.grails.org/browse/GPSHIRO-76"" rel=""nofollow"">http://jira.grails.org/browse/GPSHIRO-76</a></p>
","<security><grails><session-cookies><shiro>","3","19645423"
"14462926","java.lang.NoSuchFieldError: subjectDAO exception while deploying shiro on Tomcat","<p>I am new to shiro and am trying it with my web application running on Tomcat. My shiro specific configuration in web.xml is following:</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
     &lt;!-- no init-param means load the INI config from classpath:shiro.ini --&gt; 
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>And my shiro.ini looks like below:</p>

<pre><code>[main]
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024
localRealm = com.stratus.avance.multisite.services.ShiroMongoRealm
localRealm.credentialsMatcher = $credentialsMatcher
securityManager.realms = $localRealm
[urls]
/** = anon
</code></pre>

<p>I am seeing following exception when I deploy my application</p>

<pre><code>INFO: Initializing Shiro environment
Jan 22, 2013 3:40:32 PM org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class     org.apache.shiro.web.env.EnvironmentLoaderListener
java.lang.NoSuchFieldError: subjectDAO
    at org.apache.shiro.web.mgt.DefaultWebSecurityManager.&lt;init&gt;(DefaultWebSecurityManager.java:72)
    at org.apache.shiro.web.config.WebIniSecurityManagerFactory.createDefaultInstance(WebIniSecurityManagerFactory.java:65)
    at org.apache.shiro.config.IniSecurityManagerFactory.createDefaults(IniSecurityManagerFactory.java:155)
    at org.apache.shiro.web.config.WebIniSecurityManagerFactory.createDefaults(WebIniSecurityManagerFactory.java:71)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:118)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:97)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:83)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:41)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
    at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
    at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
    at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
    at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:226)
    at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:138)
    at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4791)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5285)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:618)
    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:963)
    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:537)
    at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1468)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
    at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
    at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:791)
    at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1436)
    at org.apache.catalina.manager.ManagerServlet.deploy(ManagerServlet.java:673)
    at org.apache.catalina.manager.ManagerServlet.doPut(ManagerServlet.java:431)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:644)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1001)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
    at java.lang.Thread.run(Thread.java:722)
</code></pre>

<p>I do not understand this exception, as subjectDAO is clearly a defined field of class DefaultSecurityManager. What am I missing?</p>
","<tomcat><shiro>","1","14463068"
"11664396","shiro & guice - How to inject AuthenticationStrategy?","<p>I'm using Shiro and guice. Shiro has two active realms.</p>

<p>The default shiro AuthenticationStrategy is ""AtLeastOneSuccessfulStrategy"".  The basic idea of this strategy is fine but the problem is that it ignore reams exceptions.  this mean that if Realm1 throws IncorrectCredentialsException there is no way to know it as it is wrapped by AuthenticationException with message that non of the realms support the token.</p>

<p>How do I replace the strategy with FirstSuccessfulStrategy ?</p>

<p>currently this is what i have in the ShiroWebModule:</p>

<pre><code>   @Override
    protected void configureShiroWeb() {
       Multibinder&lt;Realm&gt; multibinder = Multibinder.newSetBinder(binder(), Realm.class);
        multibinder.addBinding().to(RealmA.class);
        multibinder.addBinding().to(RealmB.class);
        bind( HashedCredentialsMatcher.class );
        bind( CredentialsMatcher.class ).to( HashedCredentialsMatcher.class );
        bindConstant().annotatedWith( Names.named( ""shiro.hashAlgorithmName"" ) ).to( Md5Hash.ALGORITHM_NAME );
        addFilterChain( ""/login.jsp"", AUTHC_REST );
    }

    @Override
    protected void bindSessionManager( AnnotatedBindingBuilder&lt;SessionManager&gt; bind ) {
        bind.to( ServletContainerSessionManager.class );
    }
</code></pre>
","<guice><shiro>","1","11670637"
"25071670","Configure Apache Shiro for MySQL with SHA256 Passwords","<p>I am trying to gather the necessary information to be successful with my objective. My goal is simple, take a advantage of Shiro for authentication and authorization. I wish to deploy shiro in a Java Web Application context. I want users to be able to login and check credentials against a MySQL database. I want to implement the SHA256 hashing for passwords. I am not fancy so I use traditional JSPs and Servlets. </p>

<p>Technologies I am using: Apache Tomcat 7, Apache Shiro, MySQL, Apache Web Server</p>

<p>Am I on the right track here? </p>

<hr>

<p><strong>/WEB-INF/shiro.ini</strong></p>

<pre><code>[main]
# Using my JNDI resource for JDBC
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/myResource
dataSource.resourceRef = true
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource

# Using Pass Thru security filter so I can manage login.
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /login
authc.successUrl = /my-account

# Use default service and password matcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService

#Realms section
# Finally, set the matcher on a realm that requires password matching for account authentication: 
# myRealm.credentialsMatcher = $passwordMatcher 
# ???

[users]

[roles]


[urls]
/login = authc
/logout = logout
</code></pre>

<p><strong>Question 1:</strong> Under my ""# Use default service and password matcher"" section, is this proper way to configure Shiro to perform password comparisons with SHA256? </p>

<p><strong>Question 2:</strong> Under my ""# Realms section"" section, I don't understand what to do here. Can you please suggest what the CredentialsMatcher code should look like? </p>

<p>In regards to question 2, I noticed on the <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/authc/credential/CredentialsMatcher.html"" rel=""nofollow"">CredentialsMatcher interface</a> docs, its suggested using the <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/authc/credential/HashedCredentialsMatcher.html"" rel=""nofollow"">HashedCrendentialsMatcher</a> to perform comparisons. Am I supposed to create a new java class that uses the HashedCredentialsMatcher? Then I would reference that class as my ""realm"" in the shiro.ini file? </p>

<hr>

<p><strong>New Account Signup</strong></p>

<p>When creating a new user I want to encrypt the password. I am choosing to use the encryption tools provided by the Shiro framework. I will use a DefaultPasswordService object instance to encrypt my users password. The resulting value is stored in the database. </p>

<pre><code>String rawPassword = ""secret"";
DefaultPasswordService passwordService = new DefaultPasswordService();
String encryptedPassword = passwordService.encryptPassword(rawPassword);
String hash = passwordService.hashPassword(rawPassword).toString();

//Create the user
User user = new User();
user.setUsername(username)
user.setEncryptedPassword(encryptedPassword);
user.setHash(hash);

//Save to Database
userDAO.save(user);

//Log the user in immediately after new account created.
try {
    UsernamePasswordToken userToken = new UsernamePasswordToken(username, rawPassword);
    SecurityUtils.getSubject().login(userToken);
} catch (UnknownAccountException uae) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", uae);
} catch (IncorrectCredentialsException ice) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ice);
} catch (LockedAccountException lae) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", lae);
} catch (ExcessiveAttemptsException eae) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", eae);
} catch (AuthenticationException ae) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ae);
}catch (Exception ex) {
    LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ex);
}
</code></pre>

<p><strong>Question 3:</strong> As far as my ""New Account Signup"" logic goes, is this an acceptable approach? Suggestions? Asked another way, am i configuring this correctly? </p>

<p><strong>Question 4:</strong> When storing the hash value in MySQL, do I convert it to a String using <a href=""http://shiro.apache.org/static/1.2.1/apidocs/org/apache/shiro/authc/credential/DefaultPasswordService.html#hashPassword(java.lang.Object)"" rel=""nofollow"">hashPassword()</a>? Is there a recommended length for the hash value field: e.g. varchar(15)? </p>

<hr>

<p><strong>User Login</strong></p>

<p>I have chosen to manually authenticate users in the login process. I am able to retrieve the username/password from the POST from the Servlet. I will eventually set up AJAX login mechanism which is why I choose this approach. This is an area where I am stumped. Below are two snippets. The first is the html form to submit to my servlet. The second snippet is a method that performs the authentication. </p>

<p><strong>/login</strong></p>

<pre><code>&lt;form name=""loginform"" action=""login.do"" method=""post""&gt;
    &lt;p&gt;Username&lt;/p&gt; 
    &lt;input type=""text"" name=""username"" /&gt;
    &lt;p&gt;Password&lt;/p&gt;        
    &lt;input type=""password"" name=""password"" /&gt;
    &lt;input type=""submit"" value=""Login"" /&gt;
&lt;/form&gt;
</code></pre>

<p><strong>The login method</strong></p>

<pre><code>//Getters and Setters omitted for username, rawPassword.

private void login() {
    if (!SecurityUtils.getSubject().isAuthenticated()) {
        String fallbackUrl = ""/user-account-default-page"";
        try {
            UsernamePasswordToken userToken = new UsernamePasswordToken(username, rawPassword);
            SecurityUtils.getSubject().login(userToken);

            //Take advantage of the auto redirect to the page user wanted. Or default to the fallbackUrl
            WebUtils.redirectToSavedRequest(request, response, fallbackUrl);
        } catch (UnknownAccountException uae) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", uae);
        } catch (IncorrectCredentialsException ice) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ice);
        } catch (LockedAccountException lae) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", lae);
        } catch (ExcessiveAttemptsException eae) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", eae);
        } catch (AuthenticationException ae) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ae);
        }catch (Exception ex) {
            LogMe.s(this.getClass().getName(), ""Log error specific message here..."", ex);
        }
    }
}
</code></pre>

<hr>

<p><strong>/logout</strong></p>

<p>Shiro logs out the user because of the snippet of code in the shiro.ini file? By setting the URL ""/logout"" equal to logout, Shrio logs user out. Is this correct? </p>

<pre><code># Section of the shiro.ini file
[urls]
/logout = logout
</code></pre>

<p>Thank you for any and all insights you might have. I hope that this question isn't overbearing and maybe helps others in the future. Also note, I originally asked this question on the <a href=""http://shiro-user.582556.n2.nabble.com/Configure-Shiro-for-MySQL-with-SHA256-Passwords-tt7579910.html"" rel=""nofollow"">shiro forums</a>.</p>
","<shiro>","3",""
"1107007","Java options for web user authentication","<p>I'm looking for a secure user login/session management component for a public web app. Spring Security seems to have potential, are there any other high quality alternatives?  </p>

<p>Conceptually this is easy and we currently have code that works fine, but I'd rather be using code that has been publicly reviewed for security flaws.</p>

<p><strong>Needs:</strong></p>

<ul>
<li>Login  </li>
<li>Logout  </li>
<li>Secure session token management (token not guessable)</li>
<li>Session expiration  </li>
<li>Java/Tomcat support</li>
</ul>
","<java><security><login><shiro><jsecurity>","5",""
"11012746","Apache Shiro on a Swing Client - EJB 3.1 Case for Authentication-Authorisation","<p><strong>General Case</strong>: A simple application that exposes its services through EJB (3.1) - most of them Stateless Sessions beans (nothing funcy here) and SWING based clients that, call through remote interfaces these services and do what they have to do.</p>

<p><strong>Security</strong>: I want to authenticate/authorize this cycle of calls and of course protect my services. The obvious answer would be to use JAAS in the server and any custom wiring setup on the underlying server. That is still an option</p>

<p><em><strong>Apache Shiro</em></strong>: So lots of people talk about Apache Shiro and indeed it features a very simple API and mechanism - that could potentially be application server independent.</p>

<p>Technical Questions:</p>

<ol>
<li><p><strong>Session</strong>: In my case I dont have an HTTP session - and from what I have understood Shiro at least needs some sort of SESSION ID that I need to pass around. Any nice way on injecting user credentials in my RMI/IIOP calls to the server with not polluting my business API?</p></li>
<li><p><strong>Server side implementation</strong>: For the few resources I have gone through I think I can implement a Shiro DefaultSecurityManager by 'referencing it' from a Singleton Ejb 3.1 bean. Any other ideas?
Then I can easily create an interceptor and add it to my remote calls - so when a new call is going through my Remote EJB method - the Shiro Intereceptor to validate my user or check for specific rights.</p></li>
</ol>

<p>Any comments/ tips / examples ?</p>

<p>Many thanks</p>
","<java><swing><jboss><ejb-3.0><shiro>","5",""
"14427216","Should a Shiro Authenticating Realm be transactional?","<p>I'm using Shiro to secure my Spring MVC webapp. I'm using Hibernate for persistence and so I have a HibernateRealm to get and populate an AuthenticationInfo object.</p>

<pre><code>@Override
@Transactional
protected AuthenticationInfo doGetAuthenticationInfo(
        AuthenticationToken token) throws AuthenticationException {
    Account account = accountDao.findByUsername((String)token.getPrincipal());

    SimplePrincipalCollection principals = new SimplePrincipalCollection(account, getName());

    SimpleAccount info = new SimpleAccount(principals, account.getPassword());

    return info;
}
</code></pre>

<p><code>Account</code> is my custom user class. I use the DAO to retrieve an <code>Account</code> by username. I was wondering if there is any point in making this method <code>@Transactional</code>. This is a read only operation after all.</p>

<p>I'm also having the following problem: the DAO does <code>sessionFactory.getCurrentSession()</code> to get a session, but I'm getting a </p>

<pre><code>HibernateException: No Session found for current thread 
</code></pre>

<p>when the method gets called. I have these in my application context:</p>

<pre><code>&lt;tx:annotation-driven transaction-manager = ""transactionManager"" /&gt;
&lt;bean id=""transactionManager""
    class=""org.springframework.orm.hibernate4.HibernateTransactionManager""&gt;
    &lt;property name=""sessionFactory"" ref=""sessionFactory"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>I can't understand why Spring isn't opening a session for me.</p>

<p><strong>Edit:</strong> To login, we do this in a Spring <code>@Controller</code> method using Shiro's <code>Subject</code></p>

<pre><code>@RequestMapping(value = ""/account/login"", method = RequestMethod.POST)
public String login(@RequestParam(""username"") String username, @RequestParam(""password"") String password) {
    Subject currentUser = SecurityUtils.getSubject(); 
    if (!currentUser.isAuthenticated) {
        UsernamePasswordToken token = new UsernamePasswordToken(username, password);
        currentUser.login(token);
        return ""profile"";
    } 
    return ""home"";
}
</code></pre>

<p>Internally, Shiro uses the realm method I have above to get the stored username/password information. It uses an <code>@Autowired</code> DAO to check my database for the right account. It then matches the passwords with a <code>CredentialsMatcher</code> implementation.</p>
","<java><hibernate><spring-mvc><shiro>","1","14525410"
"19705671","can i redirect user to other jsp page in shiro jdbcrealm doGetAuthenticationInfo() method?","<p>Hello all I want to know can I redirect user to accessdeniedpage.jsp in shiro custom jdbcrealm
Here is my code....</p>

<pre><code>  protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws HostUnauthorizedException,AuthenticationException {

    UsernamePasswordToken upToken = (UsernamePasswordToken) token;
    String username = upToken.getUsername();
    String clientIP = upToken.getHost();

    // Null username is invalid
    if (username == null) {
        throw new AccountException(""Null usernames are not allowed by this realm."");
    }

    Connection conn = null;
    AuthenticationInfo info = null;
    try {
        conn = dataSource.getConnection();

        String password = getPasswordForUser(conn, username); // get userpassword
        boolean ipFlag = getIPFlag(conn,username); // check whether users ip needs to be check i.e. get ipflag from users tbl, if true check user's ip else not
        boolean ipMatched = checkIP(conn,username,clientIP,ipFlag); // returns if user's ip matched with ip stored in database..

        if (password == null) {
            throw new UnknownAccountException(""No account found for user ["" + username + ""]"");
        }

        if(ipMatched == false){
             // how to redirect user to accessdeniedpage.jsp ?
        }

        info = buildAuthenticationInfo(username, password.toCharArray());

    } catch (SQLException e) {
        final String message = ""There was a SQL error while authenticating user ["" + username + ""]"";
        if (log.isErrorEnabled()) {
            log.error(message, e);
        }

        // Rethrow any SQL errors as an authentication exception
        throw new AuthenticationException(message, e);
    } finally {
        JdbcUtils.closeConnection(conn);
    }

    return info;
}
</code></pre>

<p>I am checking users ip, if ip not found in database I want to redirect user to accessdenied page</p>

<p>Update <code>shiro.ini</code> </p>

<pre><code> [main]
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.requiredType   = javax.sql.DataSource
ds.resourceName = jdbc/myDataSource
ds.resourceRef = true
jdbcRealm = com.java.realm.MyRealm 

# password hashing specification
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $sha256Matcher

jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ? 
jdbcRealm.userRolesQuery = SELECT role_name FROM user_roles WHERE username = ? 
jdbcRealm.permissionsQuery = SELECT roleper FROM roles_permissions WHERE role_name = ? 
jdbcRealm.permissionsQueryIP = SELECT ip FROM user_ip_permissions WHERE username = ? 
jdbcRealm.permissionsQueryCountry = SELECT countryname FROM country_permissions WHERE username = ? 
jdbcRealm.defaultPageQuery = SELECT default_page FROM users WHERE username = ?


jdbcRealm.dataSource = $ds
jdbcRealm.authorizationCachingEnabled = false

# specify login page 
authc.loginUrl = /login.jsp 

# redirect after successful login
authc.successUrl = /home.jsp

# roles filter: redirect to error page if user does not have access rights
# perms filter: redirect to error page if user does not have permissions
roles.unauthorizedUrl = /accessdenied.jsp
perms.unauthorizedUrl = /accessdenied.jsp


# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
# authc.failureKeyAttribute = simpleShiroApplicationLoginFailure


[urls] 


/login.jsp = authc

# only users with some roles are allowed to use role-specific pages 
/admin/** = authc,perms[page:*]
/java/** = authc,perms[page:javadeveloperpage]
/php/** = authc,perms[page:phpdeveloperpage]
/ruby/** = authc,perms[page:rubydeveloperpage]
/deo/** = authc,perms[page:deopage]

# enable authc filter for all application pages
/ApacheShiroLogin/** = authc
</code></pre>

<p>Thanks &amp; regards</p>
","<java><jsp><shiro>","1",""
"11580101","Retrieving Shiro Principals","<p>NOTE: Due to subsequent research this question has been completely restructured.</p>

<p>I am trying to retrieve values from Shiro's subject PrincipalCollection. I have added two principals to the collection. 'Username' and 'UUID'. When I try to recall these I get a SimplePrincipalCollection of size = 1 and this in turn has the principals as a LinkedHashMap of size = 2.</p>

<p>Question is how can I retrieve the principals directly?</p>
","<security><jsf><shiro>","3",""
"25777994","How to store hashed pws into a db with Apache Shiro?","<p>I have been looking all over the place with no luck to what I am trying to do.</p>

<p>I am looking to hash and salt my user passwords and store them into the DB.  The issue is, how do I store them?</p>

<p>I have looked at this <a href=""http://shiro.apache.org/realm.html#Realm-authentication"" rel=""nofollow"">http://shiro.apache.org/realm.html#Realm-authentication</a> which I have found similar answers, but it doesn't make sense.</p>

<pre><code>import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.crypto.RandomNumberGenerator;
import org.apache.shiro.crypto.SecureRandomNumberGenerator;
...

//We'll use a Random Number Generator to generate salts.  This
//is much more secure than using a username as a salt or not
//having a salt at all.  Shiro makes this easy.
//
//Note that a normal app would reference an attribute rather
//than create a new RNG every time:
RandomNumberGenerator rng = new SecureRandomNumberGenerator();
Object salt = rng.nextBytes();

//Now hash the plain-text password with the random salt and multiple
//iterations and then Base64-encode the value (requires less space than Hex):
String hashedPasswordBase64 = new Sha256Hash(plainTextPassword, salt, 1024).toBase64();

User user = new User(username, hashedPasswordBase64);
//save the salt with the new account.  The HashedCredentialsMatcher
//will need it later when handling login attempts:
user.setPasswordSalt(salt);
userDAO.create(user);
</code></pre>

<p>User nor ""UserDAO"" exists currently from what I'm seeing, and all of these examples seem to use older Shiro examples.</p>

<p>When I look at the ""PasswordService"" javadoc I read</p>

<p>Account Creation or Password Reset</p>

<pre><code>Whenever you create a new user account or reset that account's password,
</code></pre>

<p>we must translate the end-user submitted raw/plaintext password value to a
 string format that is much safer to store. You do that by calling the 
encryptPassword(Object) method to create the safer value. For example:</p>

<pre><code> String submittedPlaintextPassword = ...
 String encryptedValue = passwordService.encryptPassword(submittedPlaintextPassword);
 ...
 userAccount.setPassword(encryptedValue);
 userAccount.save(); //create or update to your data store

Be sure to save this encrypted password in your data store 
and never the original/raw submitted password.
</code></pre>

<p>but what is ""userAccount?""</p>

<p>A lot of times the documentation is very vague.</p>

<p>However I did notice there is a ""SubjectDAO"" Class, but no UserDAO class...</p>

<p>So yeah I'm confused on what to do next, so if anyone could help me I would appreciate it greatly!</p>

<p>Thanks a lot!</p>
","<java><database><dao><shiro><jdbcrealm>","1","25778429"
"20126171","How to clear apache shiro session?","<p>I used apache shiro session for the authentication and authorization.</p>

<p>Am able to login with different user and permission and roles but actual problem is whenever i call a signOut function looks like shiro session is not getting wiped off.</p>

<p>The evident for this is whenever i clicked logout it comes main screen and if i use browser back button i can go back for the last screen.</p>

<p>My signOut function looks like this </p>

<pre><code>// Log the user out of the application.
SecurityUtils.subject?.logout()
webRequest.getCurrentRequest().session = null
session.invalidate()    

// For now, redirect back to the home page.
redirect(uri: ""/"")
</code></pre>

<p>Any help on this really appreciated struggling for this from past 2 days </p>
","<grails><shiro>","1",""
"3821339","Shiro Plugin conflicting with Quartz framework in Grails","<p>I have been working Quartz framework in my grails project with lib called quartz-all-1.7.3.</p>

<p>Now I need to install the shiro plugin to my project. So, whenever I am installing shiro plugin to my project its getting installed successfully..</p>

<p>But again whenever I am running my project again it's giving compilation error as follows :</p>

<pre><code>  [groovyc] org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
  [groovyc] Compile error during compilation with javac.
  [groovyc] ....scheduler\quartz\framework\CustomJDBCDelegate.java:46: com.securonix.application.scheduler.quartz.framework.CustomJDBCDelegate is not abstract and does not override abstract method updateSchedulerState(java.sql.Connection,java.lang.String,long,java.lang.String) in org.quartz.impl.jdbcjobstore.DriverDelegate
  [groovyc] public class CustomJDBCDelegate implements DriverDelegate, StdJDBCConstants {
  [groovyc]        ^
</code></pre>

<p>So after long look on shiro plugin I have found that it has some dependencies with plugins. In that one of the dependency is shiro-quartz-1.0.0-incubating.jar. So, now inside it's pom.xml file I have seen following line code :</p>

<pre><code>&lt;dependency&gt;
     &lt;groupId&gt;quartz&lt;/groupId&gt;
     &lt;artifactId&gt;quartz&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>

<p>As per our line in pom.xml, there is no tag of version with quartz dependency, that means whenever shiro getting installed in my project, simultaneously it's extracting latest library of quartz i.e. 1.8.3 with maven.</p>

<p>And inside that <code>quartz 1.8.3</code> the method updateSchedulerState of class CustomJDBCDelegate has been changed from version <code>quarts 1.7.3</code>.</p>

<p>So now problem is I cannot change <code>quartz-all-1.7.3</code> in my existing project, and wanted to use Shiro plugin too in my project.</p>

<p>So there should be some resolution so that shiro should get <code>quartz-1.7.3</code> version rather than the latest one using maven.</p>

<p>Any help would be highly appreciated...</p>

<p>Thanks...</p>
","<maven><grails><quartz-scheduler><grails-plugin><shiro>","1","3846404"
"14877518","Passing Values to Enumerated Properties in Shiro ini","<p>I am using the JDBC Realm and storing authentication data in SQL.  I am storing the salt in the users table and relying on the DEFAULT_SALTED_AUTHENICATION_QUERY.  To invoke that query I must set the SaltStyle.</p>

<p>Therefore, I need to pass the SaltStyle.COLUMN enumerated value to JdbcRealm through the INI.</p>

<p>SaltStyle is not a class so I cannot create a reference</p>

<p>Whatever I do pass generates this error = org.apache.shiro.config.UnresolveableReferenceException:</p>

<p>Can't find examples from exstensive searching or reference in documentation.  Any help is much appreciated.</p>

<pre><code>#====================================================================
# Shiro INI configuration
#
# ===================================================================
[main]
JdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
JdbcRealm.permissionsLookupEnabled = true 
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
sha256Matcher.hashIterations=1
JdbcRealm.credentialsMatcher = $sha256Matcher
JdbcRealm.saltStyle= enum expression needed here
</code></pre>

<p>Here is the property in JdbcRealm</p>

<pre><code>public void setSaltStyle(SaltStyle saltStyle) {
    this.saltStyle = saltStyle;
    if (saltStyle == SaltStyle.COLUMN &amp;&amp; authenticationQuery.equals 
             (DEFAULT_AUTHENTICATION_QUERY)) {
        authenticationQuery = DEFAULT_SALTED_AUTHENTICATION_QUERY;
    }
}
</code></pre>
","<java><ini><shiro>","3","15575182"
"29251357","Java web application authentication - account design","<p>I am working on a web project, backend is <code>Java</code> &amp; <code>Mysql</code>, the client include <code>web(html5)</code> and <code>app(IOS/Android)</code>, I have some doubt in design the account of the system.</p>

<p>There are 3 different types of account:</p>

<ul>
<li><strong>Shop</strong>, shop account will have its own website,</li>
<li><strong>Customer</strong>, customer access shop/commodity via app(IOS/Android),</li>
<li><strong>Admin</strong>, manage everything of the system.</li>
</ul>

<p><strong>My basic idea of authentication:</strong></p>

<p>There will be <code>account</code> / <code>role</code> / <code>permission</code> table for sure, because both admin &amp; customer will have quite complex user permission issue, customer also have different permission due to their history behavior.</p>

<p>I have kind decided to use <code>Apache Shiro</code>, due to its simplicity &amp; distributed session.</p>

<p><strong>My question is:</strong></p>

<p><strong>(1)</strong> Should I create a single account table or 3 individual account tables.</p>

<p><strong>(2)</strong> Any advise on design of 3 tables:
 <code>account</code> / <code>role</code> / <code>permission</code> ?</p>
","<java><authentication><spring-security><authorization><shiro>","4","29496704"
"10093210","Authorisation framework for GAE Java","<p>I am trying to choose an auth framework for GAE and would be very interested in other people's experiences on this subject.</p>

<p>I had a look into <a href=""http://www.gdevelop.com/blog/2010/12/apache-shiro-on-appengine/"" rel=""nofollow"">Shiro</a> and Spring-Security so far. What could you recommend?</p>
","<google-app-engine><spring-security><jersey><jaas><shiro>","2","10131605"
"19561304","Apache shiro 2.1 does not work properly in Tomcat 8 RC 5","<p>The application works fine in tomcat 7.x but not in tomcat 8 RC5</p>

<p>I have an Apache wicket application where I have configured Apache Shiro 2.1 with JDBC realm.
After the application logs in, on the home page i access the the username from the Shiro API
with this </p>

<pre><code>SecurityUtils.getSubject().getPrincipal().toString();
</code></pre>

<p>this gives an null pointer exception in Apache 8 RC5. Also it seems the application bypasses the apache shiro servlet all together and directly goes to the Homepage, whereas it should go to the login page.</p>

<p>The same works fine in Apache 7.x.</p>

<p>I have tried various configuration options in Shiro INI to fix this , but none of them worked.</p>

<p>my Web.xml looks like this</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
</code></pre>

<p>http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"">
    Customeric</p>

<pre><code>&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
  &lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
    &lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
     &lt;param-name&gt;staticSecurityManagerEnabled&lt;/param-name&gt;
     &lt;param-value&gt;true&lt;/param-value&gt;
 &lt;/init-param&gt;



&lt;/filter&gt;


&lt;filter&gt;
    &lt;filter-name&gt;ExpiresFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.catalina.filters.ExpiresFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;ExpiresByType image&lt;/param-name&gt;
        &lt;param-value&gt;access plus 1 years&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;ExpiresByType text/css&lt;/param-name&gt;
        &lt;param-value&gt;access plus 1 years&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;ExpiresByType application/javascript&lt;/param-name&gt;
        &lt;param-value&gt;access plus 10 years&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;!--    &lt;filter&gt;
    &lt;filter-name&gt;CacheControl&lt;/filter-name&gt;
    &lt;filter-class&gt;com.filter.cache.CacheControl&lt;/filter-class&gt;
&lt;/filter&gt;--&gt;

&lt;!--    &lt;filter-mapping&gt;
    &lt;filter-name&gt;CacheControl&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;--&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/app/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ExpiresFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;resource-ref&gt;
    &lt;description&gt;DB Connection&lt;/description&gt;
    &lt;res-ref-name&gt;jdbc/CUSTOMERIC_DS&lt;/res-ref-name&gt;
    &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
    &lt;res-auth&gt;Container&lt;/res-auth&gt;
&lt;/resource-ref&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;ServletAdaptor&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
        &lt;param-value&gt;com.test.rest.MyApplication&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;ServletAdaptor&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/app/rest/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;




&lt;servlet&gt;
    &lt;description&gt;Atmospherefilter&lt;/description&gt;
    &lt;servlet-name&gt;Atmospherefilter&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.atmosphere.cpr.AtmosphereServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;applicationClassName&lt;/param-name&gt;
        &lt;param-value&gt;com.test.testWicketApplication&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;configuration&lt;/param-name&gt;
        &lt;param-value&gt;development&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.useWebSocket&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.useNative&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.cpr.sessionSupport&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;filterMappingUrlPattern&lt;/param-name&gt;
        &lt;param-value&gt;/app/w/*&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.websocket.WebSocketProtocol&lt;/param-name&gt;
        &lt;param-value&gt;org.atmosphere.websocket.protocol.EchoProtocol&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.cpr.broadcastFilterClasses&lt;/param-name&gt;
        &lt;param-value&gt;org.apache.wicket.atmosphere.TrackMessageSizeFilter&lt;/param-value&gt;
    &lt;/init-param&gt;

    &lt;load-on-startup&gt;0&lt;/load-on-startup&gt;
    &lt;async-supported&gt;true&lt;/async-supported&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Atmospherefilter&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/app/w/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;session-config&gt;
    &lt;session-timeout&gt;30&lt;/session-timeout&gt;

&lt;/session-config&gt;
</code></pre>

<p></p>

<p>and my apache shiro ini looks like this</p>

<pre><code>             [main]

            jdbcRealm=com.test.JNDIAndSaltAwareJdbcRealm
            jdbcRealm.authenticationQuery = select password, salt from users where username = ?
            jdbcRealm.userRolesQuery = select rolename from roles left outer join users_roles on roles.id = users_roles.roles_id left outer join users on users.id = users_roles.users_id where users.username = ?
            jdbcRealm.permissionsQuery = select permission from permissions left outer join roles_permissions on permissions.id = roles_permissions.permissions_id left outer join roles on roles.id = roles_permissions.roles_id where roles.rolename = ?
            jdbcRealm.permissionsLookupEnabled=true
            #jdbcRealm.authorizationCache=true             



            securityManager.realms = $jdbcRealm

            authc.loginUrl = /app/login.jsp



            ds =  org.apache.tomcat.jdbc.pool.DataSource
            ds.driverClassName = org.apache.derby.jdbc.ClientDriver
            ds.username = test
            ds.password = test                
            ds.url = jdbc:derby://localhost:1527/testdb
            ds.maxActive = 20
            ds.minIdle = 10
            ds.minEvictableIdleTimeMillis = 1000 * 60 * 8
            ds.timeBetweenEvictionRunsMillis  = 1000 * 60 * 10
            ds.removeAbandoned = true
            ds.removeAbandonedTimeout = 600
            jdbcRealm.dataSource = $ds          

            # password hashing specification, put something big for hasIterations
            sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
            sha256Matcher.hashAlgorithmName=SHA-256
            sha256Matcher.hashIterations=1

            jdbcRealm.credentialsMatcher = $sha256Matcher

            # *** ENABLE IN PRODUCTION ****               
            #cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
            #securityManager.cacheManager = $cacheManager

            [urls]
            /app/rest/mobile/** = authcBasic
            /app/rest/web/** = authc
            /app/** = authc

            #/* = authc,ssl[8181]                
</code></pre>
","<java><security><tomcat><shiro>","1","21132433"
"20100527","How can I register an AuthenticationListener in Shiro","<p>Login, Logout - everything works fine but I don'd know how to register an AuthenticationListener to log my users.</p>

<p>I am working with Guice and I am using my own DBSaltAwareRealm (public class DBSaltAwareRealm extends AuthorizingRealm )</p>

<p>thx</p>
","<guice><shiro>","1",""
"27392979","How to use different unauthorized url for different roles in apache shiro","<p>I have been trying to assign different unauthorized url for different roles in url section of shiro.ini file for a web application but it seems I am not able to do it.Below is the code that I have tried.</p>

<p><strong>shiro.ini file</strong></p>

<pre><code>[main]

    authc1 = org.apache.shiro.web.filter.authc.FormAuthenticationFilter
    authc2 = org.apache.shiro.web.filter.authc.FormAuthenticationFilter

    authc1.loginUrl = /login.xhtml
    authc2.loginUrl = /secLoginPage.xhtml 


[urls]
    /login.xhtml = authc1
    /secLoginPage.xhtml  = authc2
    /testapp/** = authc1, roles[admin,unauthorizedUrl=/adminAuthPage.xhtml]
    /userfld/**=authc2,roles[user,unauthorizedUrl=/abortPage.xhtml]
    /** = authc1
    /** = authc2
</code></pre>

<p>After login to the application its redirect to authorized page with error <code>Error 401: SRVE0295E: Error reported: 401</code>.</p>

<p>This error occurred after I added <code>unauthorizedUrl=/adminAuthPage.xhtml</code>.
If there is any mistake in code please suggest.</p>
","<java><jsf-2.2><shiro>","5","27437546"
"10220608","Determine the url (or controller and action names) of a request which is unauthorized with Shiro Grails plugin","<p>I would like to be able to log the requests that my app receives that are unauthorized. Because the Shiro plugin uses an HTTP redirect to send the user to <code>auth/unauthorized</code> the request object is a fresh one and I can't get the original URL; controller/action name; or request parameters from it.</p>

<p><strong>Is there a way to determine either the original url, or the controller and action names (and request params if possible) inside the AuthController unauthorized action?</strong></p>

<p>I am looking at <a href=""http://plugins.grails.org/grails-shiro/tags/RELEASE_1_1_3/ShiroGrailsPlugin.groovy"" rel=""nofollow"">http://plugins.grails.org/grails-shiro/tags/RELEASE_1_1_3/ShiroGrailsPlugin.groovy</a> as a reference of the plugin source.</p>

<p>Details:<br>
Grails 1.3.7<br>
Shiro Grails plugin 1.1.3  </p>
","<grails><shiro>","3","10236873"
"32172899","Apache Shiro Unable to start Filter - org.apache.shiro.web.servlet.AbstractFilter","<p>I'm trying to configure Shiro on a simple web application on Wildfly 9.0.1 with JDK 8.</p>

<p>I have the following jars in WEB-INF/lib</p>

<p>commons-beanutils-1.8.3.jar</p>

<p>shiro-core-1.2.4.jar</p>

<p>shiro-web-1.2.4.jar</p>

<p>slf4j-api-1.6.4.jar</p>

<p>I also have two web pages - index.html and login.jsp. I added my shiro.ini and web.xml in the WEB-INF/ folder.
The shiro.ini content is:</p>

<pre><code>[main]

authc.loginUrl = /login.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember

authc.successUrl  = /index.html

[users]

joe = 123, administrator

[roles]

administrator = *

[urls]

/login.jsp = authc, roles[administrator]

/index.html = authc, roles[administrator]
</code></pre>

<p>The web.xml content is:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""ISO-8859-1""?&gt;
    &lt;web-app xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee
  http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"" version=""3.1""&gt;  
  &lt;display-name&gt;SampleProject&lt;/display-name&gt;  
  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;  
     &lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
          &lt;init-param&gt;
                &lt;param-name&gt;config&lt;/param-name&gt;
                &lt;param-value&gt;shiro.ini&lt;/param-value&gt;
            &lt;/init-param&gt; 
    &lt;/filter&gt;    
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt; 
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;   
&lt;/web-app&gt;
</code></pre>

<p>However, once I try to access the page <a href=""http://localhost:8080/SampleProject/index.html"" rel=""nofollow"">http://localhost:8080/SampleProject/index.html</a> or <a href=""http://localhost:8080/SampleProject/"" rel=""nofollow"">http://localhost:8080/SampleProject/</a> I get the following error:</p>

<pre><code>Context Path:/SampleProject
Servlet Path:/index.html
Path Info:null
Query String:null
Stack Trace
2015-08-23 16:03:58,910 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Full 9.0.1.Final (WildFly Core 1.0.1.Final) started in 3641ms - Started 551 of 754 services (268 services are lazy, passive or on-demand)
2015-08-23 16:04:11,895 ERROR [org.apache.shiro.web.servlet.AbstractFilter] (default task-2) Unable to start Filter: [Line argument must contain a key and a value.  Only one string token was found.].: java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
    at org.apache.shiro.config.Ini$Section.splitKeyValue(Ini.java:542)
    at org.apache.shiro.config.Ini$Section.toMapProps(Ini.java:567)
    at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:464)
    at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:445)
    at org.apache.shiro.config.Ini.addSection(Ini.java:302)
    at org.apache.shiro.config.Ini.load(Ini.java:351)
    at org.apache.shiro.config.Ini.load(Ini.java:254)
    at org.apache.shiro.web.servlet.IniShiroFilter.convertConfigToIni(IniShiroFilter.java:295)
    at org.apache.shiro.web.servlet.IniShiroFilter.loadIniFromConfig(IniShiroFilter.java:236)
    at org.apache.shiro.web.servlet.IniShiroFilter.configure(IniShiroFilter.java:205)
    at org.apache.shiro.web.servlet.IniShiroFilter.init(IniShiroFilter.java:190)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.onFilterConfigSet(AbstractShiroFilter.java:152)
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:97)
    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:111)
    at org.wildfly.extension.undertow.security.RunAsLifecycleInterceptor.init(RunAsLifecycleInterceptor.java:84)
    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:97)
    at io.undertow.servlet.core.ManagedFilter.createFilter(ManagedFilter.java:79)
    at io.undertow.servlet.core.ManagedFilter.getFilter(ManagedFilter.java:65)
    at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)
    at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)
    at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:85)
    at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
    at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
    at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
    at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
    at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
    at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:58)
    at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:72)
    at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
    at io.undertow.security.handlers.SecurityInitialHandler.handleRequest(SecurityInitialHandler.java:76)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:282)
    at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:261)
    at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:80)
    at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:172)
    at io.undertow.server.Connectors.executeRootHandler(Connectors.java:199)
    at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:774)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)

2015-08-23 16:04:11,897 ERROR [io.undertow.request] (default task-2) UT005023: Exception handling request to /SampleProject/: javax.servlet.ServletException: java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:105)
    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:111)
    at org.wildfly.extension.undertow.security.RunAsLifecycleInterceptor.init(RunAsLifecycleInterceptor.java:84)
    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:97)
    at io.undertow.servlet.core.ManagedFilter.createFilter(ManagedFilter.java:79)
    at io.undertow.servlet.core.ManagedFilter.getFilter(ManagedFilter.java:65)
    at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)
    at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)
    at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:85)
    at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
    at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
    at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
    at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
    at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
    at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:58)
    at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:72)
    at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
    at io.undertow.security.handlers.SecurityInitialHandler.handleRequest(SecurityInitialHandler.java:76)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:282)
    at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:261)
    at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:80)
    at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:172)
    at io.undertow.server.Connectors.executeRootHandler(Connectors.java:199)
    at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:774)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
    at org.apache.shiro.config.Ini$Section.splitKeyValue(Ini.java:542)
    ...
</code></pre>

<p>I've moved the project to tomcat 8.0.24 and got similar error:</p>

<pre><code>SEVERE: Exception starting filter shiroFilter
javax.servlet.ServletException: java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:105)
    at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:279)
    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:260)
    at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:105)
    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4574)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5193)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1408)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1398)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
    at org.apache.shiro.config.Ini$Section.splitKeyValue(Ini.java:542)
    at org.apache.shiro.config.Ini$Section.toMapProps(Ini.java:567)
    at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:464)
    at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:445)
    at org.apache.shiro.config.Ini.addSection(Ini.java:302)
    at org.apache.shiro.config.Ini.load(Ini.java:351)
    at org.apache.shiro.config.Ini.load(Ini.java:254)
    at org.apache.shiro.web.servlet.IniShiroFilter.convertConfigToIni(IniShiroFilter.java:295)
    at org.apache.shiro.web.servlet.IniShiroFilter.loadIniFromConfig(IniShiroFilter.java:236)
    at org.apache.shiro.web.servlet.IniShiroFilter.configure(IniShiroFilter.java:205)
    at org.apache.shiro.web.servlet.IniShiroFilter.init(IniShiroFilter.java:190)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.onFilterConfigSet(AbstractShiroFilter.java:152)
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:97)
    ... 12 more
</code></pre>

<p>Could anyone please show me what am doing wrong here?</p>
","<apache><shiro>","1","32288869"
"31112217","Apache Shiro Realm Configuation","<p>I want to use Apache Shiro Security to secure my Java standalone application but I can't find an example about this.</p>

<p>Please help me how I can implement and configure Apache Shiro Standalone App to connect to database and authenticate my app.</p>

<p>Thank You for all.</p>
","<shiro>","0",""
"24666841","Apache Shiro and Multi-factor Authentication","<p>I am working on a application where I have implemented Apache Shiro based authentication. I can now get a user to log in successfully backed by my database. I know want to improve on this and allow a second long step.</p>

<p>So scenario would be:</p>

<p>User 1 does not have multi-factor authentication enabled. He logs in with credentials successfully.</p>

<p>User 2 does have multi-factor authentication enabled. His logs in as usual, and Apache Shiro validates username/password. Once this is done I want Apache Shiro to display another screen where User 2 can enter a one time password. And only when this is correct be fully logged in.</p>

<p>At point in Apache Shiro can I inject my changes?
I couldn't find much documentation on it.</p>
","<apache><security><authentication><shiro>","2","24734183"
"9801509","Java Security Framework with OAuth","<p>Can anyone recommend a Java Security Framework that supports authentication with OAuth and OAuth so that we can offer integration with the likes of Google/Twitter/Facebook etc. as well as other security features such as cryptography, password reset, security questions etc.  I've looked at Apache Shiro which looks good but doesn't seem to have the Social side of things covered.  I've also investigated Spring Security which seems to cover as lot of areas but I'm not sure whether you need to be using Spring MVC to use this (we're using Wicket + Spring for the service layer).</p>

<p>Any recommendations appreciated.</p>
","<java><security><oauth><spring-security><shiro>","1",""
"35313515","Apache Shiro Login not working as intended (Session get created before login)","<p>I'm having trouble to get the login / logout features to work with my web application....
I'm using apache shiro 1.2 and my accpilcation is named SSP</p>

<p>here is my configuration:</p>

<p><strong>EDIT: Updated Code</strong></p>

<p>some code from web.xml:</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>some code from shiro.ini: (Edit: changed url filter order)</p>

<pre><code>[main]

shiro.loginUrl = /login.jsp

# this is my own AuthenticationFilter which works fine
authc = com.mycompany.ssp.AuthFilter

authc.failureKeyAttribute=shiroLoginFailure

# redirect after successful login
authc.successUrl  = portal.jsp

######################################
# NOT ACTIVE CODE ####################
# login URL
#authc.loginUrl = /login.jsp
# redirect after logout
#logout.redirectUrl = /login.jsp
######################################

[urls]
# enable logout filter
/logout = logout
# enable authc filter for all application pages
/** = authc
</code></pre>

<p>some code from portal.jsp</p>

<pre><code>&lt;a href=""/SSP/logout""&gt; Log out V2 &lt;/a&gt;&lt;/br&gt;
</code></pre>

<p>I'm having 1 Problem and 1 issue that I dont understand:</p>

<p><strong>Problem</strong></p>

<ul>
<li><p>When I visit my webapplication via <a href=""https://localhost:8443/SSP/"" rel=""nofollow noreferrer"">https://localhost:8443/SSP/</a>
I get a session id eventhough the user is not logged in yet:</p>

<p><a href=""https://localhost:8443/SSP/login.jsp;JSESSIONID=6560e585-d871-4839-a606-464b4b314457"" rel=""nofollow noreferrer"">https://localhost:8443/SSP/login.jsp;JSESSIONID=6560e585-d871-4839-a606-464b4b314457</a></p></li>
<li><p>Login works as intended, redirection to portal.jsp works</p></li>
</ul>

<p><strong>Here I just want to be redirected to <a href=""https://localhost:8443/SSP/login.jsp"" rel=""nofollow noreferrer"">https://localhost:8443/SSP/login.jsp</a> without a session being created !!</strong></p>

<p><strong>EDIT:</strong></p>

<p>My Session Management right now looks like this (shiro.ini</p>

<pre><code># SESSION MANAGEMENT #

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

# Use the configured native session manager:
securityManager.sessionManager = $sessionManager

# 3,600,000 milliseconds = 1 hour
securityManager.sessionManager.globalSessionTimeout = 3600000

########################################################################
# CACHE MANAGEMENT #

cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
</code></pre>

<p><strong>Issue</strong> <strong>-></strong> <strong>SOLVED thx to <a href=""https://stackoverflow.com/users/5851368/markus-k"">Markus K</a></strong></p>

<ul>
<li><p>The logout via the Link ""Log out V2"" which uses the LogoutFilter (configured in shiro.ini) works fine but I dont understand how I get redirected back to /SSP/login.jsp although the line <code>logout.redirectUrl = /login.jsp</code> in shiro.ini is not active??</p></li>
<li><p>My best guess here is that the line <code>shiro.loginUrl = /login.jsp</code> tells shiro ""hey after a logout go here again"", but I'm not sure.</p></li>
</ul>

<p>Can anyone help me with this?</p>
","<shiro>","1",""
"24520499","Mocking Shiro's static method in SecurityUtils with PowerMock","<p>Hi everyone I am trying to mock static method from Shiro package</p>

<pre><code>    org.apache.shiro.mgt.SecurityManager securityManager = EasyMock.createNiceMock(org.apache.shiro.mgt.SecurityManager.class);

    SecurityUtils.setSecurityManager(securityManager);

    PowerMock.mockStatic(SecurityUtils.class);

    EasyMock.expect(SecurityUtils.getSubject()).andReturn(null);
    PowerMock.replayAll(SecurityUtils.class);
    PowerMock.verify(SecurityUtils.class);

    Subject s = SecurityUtils.getSubject(); // this call returns null
    s = SecurityUtils.getSubject(); // this call fails with exception below
</code></pre>

<p>So the idea is that when in my code I have a call to getSubject I return null (I might change this to actual object but for now this would work. </p>

<p>The current issue is that I get exception</p>

<pre><code>Usage is: expect(a.foo()).andXXX()
    at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:42)
    at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:94)
    at $Proxy10.createSubject(Unknown Source)
    at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
    at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
    at com.mypackage.services.logic.AbstractHibernateTest.abstractBefore(AbstractHibernateTest.java:94)
null
</code></pre>

<p>Reading up on this the soluation should be the reply method but it doesnt work. Has anyone seen this before, or does anyone have any suggestion how to mock static method in Shiro SecurityUtils?</p>

<p>Cheers</p>
","<java><unit-testing><easymock><powermock><shiro>","1",""
"19589019","does apache shiro restrict users based on ip address and country?","<p>I want to know whether <code>apache shiro</code> provides such services to do authentication based on user IP address and user country?</p>

<hr>

<p>yes, @Wouter thanks for info, but i had tried to override this method before also,but i read <a href=""http://www.mkyong.com/java/how-to-get-client-ip-address-in-java/"" rel=""nofollow"">http://www.mkyong.com/java/how-to-get-client-ip-address-in-java/</a>  article to avoid proxy ip address.</p>

<p><code>Shiro API gethost()</code> method doc says </p>

<pre><code>""Returns the host name of the client from where the authentication attempt originates or if the Shiro environment cannot or chooses not to resolve the hostname to improve performance, this method returns the String representation of the client's IP address.
When used in web environments, this value is usually the same as the ServletRequest.getRemoteHost() value.""
</code></pre>

<p>so is there any way to check whether client is beside proxy server inside realm <code>doGetAuthenticationInfo()</code> method like</p>

<pre><code>//is client behind something?
   String ipAddress = request.getHeader(""X-FORWARDED-FOR"");  
   if (ipAddress == null) {  
       ipAddress = request.getRemoteAddr();  
   }
</code></pre>

<p>...or this <code>getHost()</code> method will do job for me?</p>
","<shiro>","2","19620896"
"19303761","Shiro in Dropwizard keeps redirecting me to the login page","<p>I'm integrating Shiro into my dropwizard webapp. I've gotten to the point that</p>

<ul>
<li>shiro recognizes resources that need authentication, and sends me to the login page (/auth/login)</li>
<li>shiro alerts me if a login fails due to the wrong password (/auth/login?loginFailed=true)</li>
<li>shiro only redirects if I try to access a protected resource (like /admin/**)</li>
<li>shiro redirects to a defined page upon success</li>
</ul>

<p>However, shiro is always sending me to the login page if I try to access a protected resource, regardless of whether I've logged in or not. I believe the login is working; I also believe shiro isn't honoring whether I've been logged in or not.</p>

<p>my shiro.ini:</p>

<pre><code>[main]
# some other stuff
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /auth/login

# NOTE: URLs are evaluated in order, and the first matching pattern is accepted.
[urls]
/static/** = noSessionCreation, anon
/auth/** = authc
/admin/** = authc
/** = anon
</code></pre>

<p>Also of note: I'm getting an error that says</p>

<pre><code>0:0:0:0:0:0:0:1%0 - - [10/Oct/2013:18:23:54 +0000] ""GET /auth/login;JSESSIONID=65e06b39-30e5-45dd-85f9-b2a1c29fc3af HTTP/1.1"" 200 739 4 4
WARN  [2013-10-10 18:24:08,485] com.sun.jersey.spi.container.servlet.WebComponent:
A servlet request, to the URI http://blah:8080/auth/login, contains form
parameters in the request body but the request body has been consumed by the servlet
or a servlet filter accessing the request parameters. Only resource methods using
@FormParam will work as expected. Resource methods consuming the request body by other
means will not work as expected.
</code></pre>

<p>and each visit to /admin results in an error 302. I don't know what else is relevant to answer this problem. I've explored several other ""Shiro keeps redirecting me to login"" questions but most refer directly to Jetty with web.xmls, which Dropwizard doesn't use, nor do I know what filters are being applied. My coworker has used the same method to get shiro working with his dropwizard project.</p>

<p>How does shiro authenticate a user before deciding whether to send him to the login page?</p>
","<authentication><shiro><dropwizard>","1",""
"27046824","Apache Shiro authentication against LDAP - any username/password combination gets through","<p>I'm developing a web application using Spring, Vaadin and Apache Shiro for authentication and authorization. I have two realms, since some users log in through a database, others authenticate against LDAP. JDBC realm works perfectly but somehow LDAP realm lets everybody through - no matter what username/password combination is provided.</p>

<p>Here is my Spring configuration:</p>

<pre><code>&lt;!-- Apache Shiro --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realms""&gt;
        &lt;list&gt;
            &lt;ref bean=""jdbcRealm"" /&gt;
            &lt;ref bean=""ldapRealm"" /&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name=""authenticator.authenticationStrategy""&gt;
        &lt;bean class=""org.apache.shiro.authc.pam.FirstSuccessfulStrategy"" /&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;bean id=""ldapContextFactory"" class=""org.apache.shiro.realm.ldap.JndiLdapContextFactory""&gt;
    &lt;property name=""url"" value=""ldap://localhost:389"" /&gt;        
&lt;/bean&gt;

&lt;bean id=""jdbcRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
    &lt;property name=""dataSource"" ref=""dataSource""&gt;&lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""ldapRealm"" class=""org.apache.shiro.realm.ldap.JndiLdapRealm""&gt;
    &lt;property name=""contextFactory"" ref=""ldapContextFactory"" /&gt;
    &lt;property name=""userDnTemplate"" value=""uid={0},ou=people,dc=maxcrc,dc=com"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>Logging in is rather typical:</p>

<pre><code>try {

    // Obtain user reference
    Subject currentUser = SecurityUtils.getSubject();   

    // Create token using provided username and password
    UsernamePasswordToken token = new UsernamePasswordToken(userName, password);

    // Remember user
    if(rememberMe.getValue())
        token.setRememberMe(true);

    // Login
    currentUser.login(token);

    // If we are here, no exception was raised and the user was logged in, so redirect
    UI.getCurrent().getNavigator().navigateTo(""main"" + ""/"" + ""main-page"");

    // Fire CustomEvent
    fireEvent(new CustomEvent(ErasmusLoginForm.this));

} catch ( UnknownAccountException e ) {
    Notification.show(""No such user..."");
} catch ( IncorrectCredentialsException e ) {
    Notification.show(""Invalid creditentials..."");
} catch ( LockedAccountException e ) {
    Notification.show(""Locked account..."");
} catch ( AuthenticationException e ) {
    e.printStackTrace();
    Notification.show(""Some other exception..."");
} catch (Exception e) {
    // Password encryption exception
}
</code></pre>

<p>I read almost everywhere with no luck.
This post (<a href=""https://stackoverflow.com/questions/21391572/shiro-authenticates-non-existent-user-in-ldap"">Shiro Authenticates Non-existent User in LDAP</a>) also wasn't helpful to me - both the DN template and the URL are correct and the server (LDAP server) is running. Why does it let everybody through?</p>

<p>If I turn Ldap realm off, JDBC authentication works perfectly. But with both of them on, everybody gets through since I'm using FirstSuccessfulStrategy.</p>

<p>EDIT: Additional note: if I provide an empty password, AuthenticationException is raised. But any non-empty password works fine.</p>

<p>Any ideas?</p>
","<spring><authentication><ldap><shiro>","1",""
"20239967","Shiro / Vaadin loses session at page reload","<p>I added Shiro session management (based on <a href=""http://www.youtube.com/watch?v=PNAo3ApWA-A"" rel=""nofollow"">Kim's and Leif's webinar</a>) to the Vaadin quick ticket dashboard demo application. When I do a browser reload in the application I get thrown back to the login page with no session. How / where can I prevent this.</p>

<p>I have a  standard shiro.ini setup</p>

<p>Login button handler:</p>

<pre><code>        signin.addClickListener(new ClickListener() {
        @Override
        public void buttonClick(ClickEvent event) {
            boolean loginOK = false;

            Factory&lt;SecurityManager&gt; factory = 
                    new IniSecurityManagerFactory(""classpath:shiro.ini"");
            SecurityManager securityManager = factory.getInstance();
            SecurityUtils.setSecurityManager((org.apache.shiro.mgt.SecurityManager) 
                                                            securityManager);

            Subject currentUser = SecurityUtils.getSubject();

            //collect user principals and credentials in a gui specific manner 
            //such as username/password html form, X509 certificate, OpenID, etc.
            //We'll use the username/password example here since it is the most common.
            UsernamePasswordToken token = 
                    new UsernamePasswordToken(username.getValue(), password.getValue());

            //this is all you have to do to support 'remember me' (no config - built in!):
            token.setRememberMe(true);

            //currentUser.login(token);
            try {
                logger.log(Level.INFO, ""trying login"");
                currentUser.login( token );
                logger.log(Level.INFO, ""login done"");

                    //if no exception, that's it, we're done!
            } catch ( Exception e ) {
                logger.log(Level.INFO, ""exception"");
            }

            if ( currentUser.hasRole( ""schwartz"" ) ) {
                loginOK = true;
            } else {
                loginOK = false;
            }

            if (loginOK) {
                signin.removeShortcutListener(enter);
                buildMainView();
            } else {
                if (loginPanel.getComponentCount() &gt; 2) {
                    // Remove the previous error message
                    loginPanel.removeComponent(loginPanel.getComponent(2));
                }
                // Add new error message
                Label error = new Label(
                        ""Wrong username or password. &lt;span&gt;Hint: try empty values&lt;/span&gt;"",
                        ContentMode.HTML);
                error.addStyleName(""error"");
                error.setSizeUndefined();
                error.addStyleName(""light"");
                // Add animation
                error.addStyleName(""v-animate-reveal"");
                loginPanel.addComponent(error);
                username.focus();
            }
        }
    });
</code></pre>
","<vaadin><reload><shiro>","0",""
"9641263","Handle Authentication in Ajax Interaction with JSF and Apache Shiro","<p>I'm developing JSF application with Apache Shiro. Everything is OK except that when the the UI interacts with the server via ajax the web reflects nothing. how can I configure the application, so that the user is redirected to the login page when the UI interact with the server through ajax.</p>

<p>Can somebody help me? Thank you in advance. </p>
","<ajax><jsf><shiro>","2",""
"33680254","Dropwizard View authentication by example","<p>I'm familiar with implementing <code>BasicAuth</code> security in Dropwizard, but only for RESTful endpoints/resources.</p>

<p>I am now experimenting with Dropwizard Views to see if I can use it to be both a web and REST server all in one. The web app will have ""public"" pages (that are really just static HTML files; ""About Us"", ""Contact Us"", etc.) as well as ""private"" (dynamic) pages, which really form the app. To get to these pages the user must be authenticated (logged in).</p>

<p>So this means I have the need for two distinct DW authentication mechanisms:</p>

<ul>
<li>A typical DW security mechanism for authenticating REST API clients, which I'm familiar with; and</li>
<li>A way to implement a log in system for authenticating end users for the web app pages/resources</li>
</ul>

<p>Ideally, I'd like Apache Shiro to handle all auth for my system (REST and web alike), and I see the <a href=""https://github.com/silb/dropwizard-shiro"" rel=""nofollow"">Dropwizard-Shiro</a> lib, but that seems to only authenticate REST endpoints.</p>

<hr>

<p>My web login system need to work like so:</p>

<ol>
<li>A user tries to go to an ""authenticated"" (private) URL.</li>
<li>A servlet filter (that I create myself and register with the <code>environment</code>) intercepts the request and can tell (perhaps a cookie/session var?) whether the user is authenticated or not.</li>
<li>If the user is authenticated, they are allowed to proceed to their intended URL (""<em>target URL</em>""). Otherwise they are redirected to a login page. When they login a DW resource/controller hands their credentials off to Shiro, who then decides whether the credentials are valid or not.</li>
<li>If the credentials are valid, they get a cookie/session var (?) and are redirected to their target URL. Otherwise they are redirected back to the login page which will now display a failure message.</li>
</ol>

<p>My main concerns are:
* <strong>What should I implement for the cookie/session var that the servlet will check for?</strong>; and
* <strong>How do I integrate my auth controller (that is, the resource that handles redirection between the login page and the target URL) with Shiro?</strong> Is it possible to do this via that Dropwizard-Shiro lib?</p>

<h3>My best attempt thus far:</h3>

<p><strong>Custom Servlet Filter (registered with <code>environment</code>):</strong></p>

<pre><code>public class AuthFilter implements ContainerResponseFilter {
    @Override
    public void filter(ContainerRequestContext requestContext, 
            ContainerResponseContext responseContext) {
        Cookie[] cookies = requestContext.getCookies();
        boolean authenticated = false;
        for(Cookie cookie : cookies) {
            // 1. This is my first concern. What is better/more secure
            //    than what I'm doing here?
            if(""my_app_auth_cookie"".equals(cookie.getName())) {
                authenticated = true;
            }
        }

        if(authenticated == false) {
            responseContext.sendDirect(""/auth/login"");
        }
    }
}
</code></pre>

<p>If they are not authenticated they redirect to <code>/auth/login</code> which hits a <code>AuthController</code> (again, registered with the <code>environment</code> as a resource):</p>

<pre><code>@Path(""/auth"")
@Produces(MediaType.TEXT_HTML)
public class AuthController {
    @GET
    @Path(""/login"")
    public LoginPageView login() {
        // Render some ""login.ftl"" template as HTML.
    }

    @POST
    @Path(""/authenticate"")
    public ??? authenticate(??? username, ??? password) {
        // 2. Somehow send 'username' and 'password' to Shiro...
        MyAppUser user = myAppRealm.authenticate(username, password);

        // Now what do I do with 'user'?
    }
}
</code></pre>

<p>When the user submits the form on the login page (which might be a POST to <code>/auth/authenticate</code>) we somehow hand their inputted credentials off to Shiro (again I'd like to use that Dropwizard-Shiro lib since I will likely also be using it for my REST endpoints).</p>
","<java><authentication><cookies><shiro><dropwizard>","0","33683300"
"25114907","Annotations on Spring while using Shiro , NullPointerException","<pre><code>@DependsOn(value=""userService"")
public class AuthcRealm implements Realm {

@Autowired
@Lazy(value=false)
@Qualifier(value=""userService"")
private UserServiceImpl userService;//here I did the injection

public AuthcRealm() {
    System.out.print(""realm constructor"");
}

public String getName() {
    return ""AuthenticateRealm"";
}

public boolean supports(AuthenticationToken token) {
    return token instanceof UsernamePasswordToken;
}

public AuthenticationInfo getAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    //serServiceImpl userService=new UserServiceImpl();
    User user=new User();
    user.setUsername((String)token.getPrincipal());
    user.setCredential(new String((char[])token.getCredentials()));
    System.out.println((String)token.getPrincipal());
    System.out.println(new String((char[])token.getCredentials()));
    System.out.println(userService.getClass().toString());//at here I got a NullPointerException

    if(!userService.isExist(user)){
        System.out.println(""user not exist"");
        throw new UnknownAccountException();
    }

    if(!userService.isValid(user)){
        throw new IncorrectCredentialsException();
    }

    return new SimpleAuthenticationInfo(user.getUsername(), user.getCredential(), getName()); 

    }
}
</code></pre>

<p>tomcat gives me error output below:</p>

<pre><code>    Serious: Servlet.service() for servlet [spring] in context with path [/Fentalk] threw exception [Request processing failed; nested exception is org.apache.shiro.authc.AuthenticationException: Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - ADMIN, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).] with root cause
java.lang.NullPointerException
    at com.fentalk.shiro.realm.AuthcRealm.getAuthenticationInfo(AuthcRealm.java:46)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
    at com.fentalk.ctrl.AccountController.doLogin(AccountController.java:58)
</code></pre>

<p>Mostly telling me my userService failed to inject , getting a <code>NullPointerException</code></p>

<p>The token is firstly build in my <code>AccountController</code>.</p>

<p>I already made sure spring is scanning this class , and the token is not null.</p>

<p>Some good fellas ask for shiro configuration, here it is</p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""authRealm"" /&gt; 
&lt;/bean&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;  
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;  
    &lt;property name=""loginUrl"" value=""/home/index.jsp"" /&gt;  
    &lt;property name=""successUrl"" value=""/main/index"" /&gt;  
    &lt;property name=""filterChainDefinitions""&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id="" authRealm"" class=""com.fentalk.shiro.realm.AuthcRealm""&gt;   
&lt;/bean&gt;


&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;
</code></pre>
","<java><spring><annotations><shiro>","1","25132516"
"8574591","tapestry apache shiro requireroles annotation","<p>I tried this to prevent role doctor, and employee from accessing the page.</p>

<pre><code>@RequiresRoles(value = {""doctor"", ""employee""})
</code></pre>

<p>But now, doctor and employee cannot access the page.
However, <code>@RequiresRoles(""doctor"")</code> works fine. Doctor can only access the page</p>

<p>What went wrong?</p>

<p>I am using tapestry5, tapestry-security(apache shiro).</p>
","<tapestry><shiro><tynamo>","2","8576054"
"12775343","Can a JSF Page level permission be set using Shiro","<p>I'm just wondering if we have a page level permission settings in Shiro? For example I have a jsf page that I only want to show in user with role staff and permission delete.</p>

<p>In JBoss we have something like:</p>

<pre><code>&lt;page xmlns=""http://jboss.com/products/seam/pages""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://jboss.com/products/seam/pages http://jboss.com/products/seam/pages-2.1.xsd""&gt;
    &lt;restrict&gt;#{persistentPermissionResolver.hasPermission('staff','delete')}&lt;/restrict&gt;
&lt;/page&gt;
</code></pre>

<p>Is this functionality also available in JavaEE6 + Shiro + JSF? It seems the JSP and JSF plugin only supports enabling a certain portion of a webpage being accessible to a certain role with a certain permission.</p>

<p>Thanks,
<br />czetsuya</p>
","<security><jsf-2><java-ee-6><shiro>","1","12833620"
"24967472","Apache Shiro and Wildfly 8.1 JSESSIONID issue","<p>I have migrated Wildfly server from 8.0 final to 8.1 final and Apache Shiro started having problems when creating user sessions. </p>

<p>The exact same application runs without any problem on 8.0 final but with 8.1 users cannot establish sessions every time they log in they are redirected to the login page even though they were authenticated successfully. </p>

<p>I cannot figure out what has changed since 8.0 that would cause this issue.     </p>
","<shiro><jsessionid><wildfly-8>","0","25092859"
"27687084","Spring MVC, Rest and Shiro. @RequiresAuthentication not works","<p>I use Spring 4.1.2, Shiro 1.2.3 (core, web, spring) and I am creating RestControllers. In class like in example I use @RequiresAuthentication annotation to prevent accessing method.</p>

<pre><code>@RestController
@RequestMapping(""/api"")
public class CarController {

    @RequestMapping(""/secure"")
    @RequiresAuthentication
    public String secure() {
        Subject subject = SecurityUtils.getSubject();
        return ""Should be 'true' == "" + subject.isAuthenticated();
    }


    @RequestMapping(""/insecure"")
    public String insecure() {
        Subject subject = SecurityUtils.getSubject();
        return ""Should be 'false' == "" + subject.isAuthenticated();
    }
}
</code></pre>

<p>Unfortunately I can access both of the methods. Also both of them return <code>false</code> as a result of <code>subject.isAuthenticated()</code>. What am I missing?</p>
","<java><spring><spring-mvc><shiro>","2",""
"10071480","Integrating Gigya's login to My application login(using shiro apache)","<p>My application login is developed using Shiro Apache, it's working fine but now i want to integrate that application Gigya's login Any one please specify the steps to add i follow the official website for that mentioned below i didn't got that</p>

<p><a href=""http://developers.gigya.com/030_Server_SDKs/java"" rel=""nofollow noreferrer"">http://developers.gigya.com/030_Server_SDKs/java</a></p>
","<java><shiro><gigya>","2","10123178"
"25336663","A new JSESSIONID is created on every page refresh but not from all browsers","<p>I am using Grails 2.4.3 with shiro plugin 1.2.1 on Jetty 9.1.5
The problem is that a new JSESSIONID is generated every time a page is reloaded (Shiro should not do this).</p>

<p>But it gets really strange since this is not always the case:
If I use Chrome, Firefox or IE from a Windows 7 machine, I get the problem.
If I use Chrome or Firefox on a machine with Ubuntu, the behavior is the right one (the JSESSIONID cookie is kept even when the page is reloaded)</p>

<p>I tried to use a different cookie name as someone else suggested in other post but this did not fix the problem; the cookie with the new name was being generated again on every page refresh.</p>

<p>The serverURL I use in my grails application is of the form <code>http://subdomain2.subdomain1.com</code> as it is suggested (no slash at the end)</p>

<p>I checked the requests from all the browsers and they all look the same (with the same headers except for the user-agent) so I don't really understand why the server creates a new session with every refresh in some cases and it does not on some others.</p>

<p>I have a HttpSessionListener listener on 'sessionCreated' so I can perfectly see that.
... but I don't understand why and this is driving me nuts.
Any suggestions? </p>
","<session><grails><jetty><shiro>","1",""
"30209893","How to Hash Submitted passwords using JdbcRealm in Shiro?","<p>I've created an application and been using Shiro for the authentication.
I've followed most of the guides and also some of the posted questions here regarding shiro and Jdbc Realm.</p>

<p>Here is my shiro.ini file:</p>

<pre><code>[main]
authc.loginUrl=/jsp/loginForm.jsp
authc.successUrl=/test/successUrl.jsp
authc.rememberMeParam = login-remember-me
logout.redirectUrl=/index.jsp

hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 500000
hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true

hashService.privateSalt = someBase64EncodedSaltValue

realm = org.apache.shiro.realm.jdbc.JdbcRealm
realm.permissionsLookupEnabled = false
realm.authenticationQuery = SELECT password FROM userTable WHERE username = ?

ps = org.apache.shiro.authc.credential.DefaultPasswordService
ps.hashService = $hashService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $ps

jof = org.apache.shiro.jndi.JndiObjectFactory
jof.resourceName = java:comp/env/jdbc/theResourceName
jof.requiredType = javax.sql.DataSource
jof.resourceRef = true

realm.dataSource = $jof
realm.credentialsMatcher = $pm

securityManager.realms = $realm
</code></pre>

<p>and i'm using the following code in Java to save the password in the database:</p>

<pre><code>DefaultHashService hashService = new DefaultHashService();
hashService.setHashIterations(500000);
hashService.setHashAlgorithmName(Sha256Hash.ALGORITHM_NAME);
hashService.setPrivateSalt(new SimpleByteSource(
    ""someBase64EncodedSaltValue"")); // Same salt as in shiro.ini, but NOT
                                      // base64-encoded.
hashService.setGeneratePublicSalt(true);

DefaultPasswordService pwService = new DefaultPasswordService();
pwService.setHashService(hashService);
this.password = pwService.encryptPassword(password);
</code></pre>

<p>Everything looks good and is saving as expected but the problem is when I am logging in. I've traced the execution to JdbcRealm.class and I've seen that the value compared is the ""raw string password"" and the encrypted password from the database.</p>

<p>Did I miss any step configuring? </p>
","<shiro><jdbcrealm>","1",""
"13684634","Shiro blows up with database-sessions enabled","<p>I'm attempting to secure a grails application using the shiro plugin. I have a simple authentication system in place that works fine with a simple <code>app-run</code> in development mode. However, once I run the application in production mode (<code>grails prod run-app --stacktrace</code>) Any attempt to login or register throws the error below and refuses to function:</p>

<pre><code>| Error 2012-12-03 05:35:15,081 [http-bio-8080-exec-9] ERROR databasesession.GormPersisterService  - [Assertion failed] - this String argument must have length; it must not be null or empty
Message: [Assertion failed] - this String argument must have length; it must not be null or empty
   Line | Method
-&gt;&gt;  45 | deleteBySessionId in grails.plugin.databasesession.PersistentSessionAttributeValue
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|   111 | invalidate        in grails.plugin.databasesession.GormPersisterService
|    90 | proxySession . .  in grails.plugin.databasesession.SessionProxyFilter
|    42 | getSession        in grails.plugin.databasesession.SessionProxyFilter$1
|   147 | getSession . . .  in org.apache.shiro.web.servlet.ShiroHttpServletRequest
|   188 | getSession        in     ''
|   108 | createSession . . in org.apache.shiro.web.session.mgt.ServletContainerSessionManager
|    64 | start             in     ''
|   121 | start . . . . . . in org.apache.shiro.mgt.SessionsSecurityManager
|   336 | getSession        in org.apache.shiro.subject.support.DelegatingSubject
|   314 | getSession . . .  in     ''
|   182 | mergePrincipals   in org.apache.shiro.mgt.DefaultSubjectDAO
|   163 | saveToSession . . in     ''
|   144 | save              in     ''
|   383 | save . . . . . .  in org.apache.shiro.mgt.DefaultSecurityManager
|   350 | createSubject     in     ''
|   183 | createSubject . . in     ''
|   283 | login             in     ''
|   257 | login . . . . . . in org.apache.shiro.subject.support.DelegatingSubject
|    68 | register          in pfm.SignupController
|   195 | doFilter . . . .  in grails.plugin.cache.web.filter.PageFragmentCachingFilter
|    63 | doFilter          in grails.plugin.cache.web.filter.AbstractFilter
|    55 | doFilter . . . .  in org.apache.shiro.grails.SavedRequestFilter
|   449 | executeChain      in org.apache.shiro.web.servlet.AbstractShiroFilter
|   365 | call . . . . . .  in org.apache.shiro.web.servlet.AbstractShiroFilter$1
|    90 | doCall            in org.apache.shiro.subject.support.SubjectCallable
|    83 | call . . . . . .  in     ''
|   380 | execute           in org.apache.shiro.subject.support.DelegatingSubject
|   362 | doFilterInternal  in org.apache.shiro.web.servlet.AbstractShiroFilter
|   125 | doFilter          in org.apache.shiro.web.servlet.OncePerRequestFilter
|    51 | doFilterInternal  in grails.plugin.databasesession.SessionProxyFilter
|   886 | runTask           in java.util.concurrent.ThreadPoolExecutor$Worker
|   908 | run . . . . . . . in     ''
^   680 | run               in java.lang.Thread
</code></pre>

<p>Since database-session is disabled in development mode and the stacktrace contains <code>databasesession</code> I'm assuming that's where the problem lies. I have no idea what's causing it or how to fix it.</p>

<p>Some specs that might be helpful:</p>

<pre><code>Grails 2.1.1
compile "":shiro:1.1.4""
</code></pre>

<p>Let me know if I can supply more information and thanks in advance</p>

<p>Update:
Here is the code that triggers it, in the auth controller:</p>

<pre><code>  def signIn = {
        def authToken = new UsernamePasswordToken(params.username, params.password as String)

        // Support for ""remember me""
        if (params.rememberMe) {
            authToken.rememberMe = true
        }

        // If a controller redirected to this page, redirect back
        // to it. Otherwise redirect to the root URI.
        def targetUri = params.targetUri ?: ""/""

        // Handle requests saved by Shiro filters.
        def savedRequest = WebUtils.getSavedRequest(request)
        if (savedRequest) {
            targetUri = savedRequest.requestURI - request.contextPath
            if (savedRequest.queryString) targetUri = targetUri + '?' + savedRequest.queryString
        }

        try{
            // Perform the actual login. An AuthenticationException
            // will be thrown if the username is unrecognised or the
            // password is incorrect.
            SecurityUtils.subject.login(authToken)

            log.info ""Redirecting to '${targetUri}'.""
            redirect(uri: targetUri)
        }
        catch (AuthenticationException ex){
            // Authentication failed, so display the appropriate message
            // on the login page.
            log.info ""Authentication failure for user '${params.username}'.""
            flash.message = message(code: ""login.failed"")

            // Keep the username and ""remember me"" setting so that the
            // user doesn't have to enter them again.
            def m = [ username: params.username ]
            if (params.rememberMe) {
                m[""rememberMe""] = true
            }

            // Remember the target URI too.
            if (params.targetUri) {
                m[""targetUri""] = params.targetUri
            }

            // Now redirect back to the login page.
            redirect(action: ""login"", params: m)
        }
    }
</code></pre>

<p>The associated domain classes:</p>

<pre><code>class User {
    String username
    String passwordHash
    byte[] passwordSalt
    Manager manager

    static hasMany = [ roles: Role, permissions: String ]

    static constraints = {
        username(nullable: false, blank: false, unique: true)
        manager(nullable: true)
    }
}
</code></pre>

<p>And finally the security filter:</p>

<pre><code>class SecurityFilters {

    def publicActions = [
        signup: ['index','register'],
        auth:['*','*']
    ]

    private boolean findAction(controllerName, actionName){
        def c = publicActions[controllerName]
        return(c)?c.find{(it==actionName||it=='*')}!=null:false
    }

    def filters = {

        all(uri: ""/**""){
            before = {
                //Check for public controller/actions
                def isPublic=findAction(controllerName,actionName)

                if(isPublic) return true

                // Ignore direct views (e.g. the default main index page).
                if (!controllerName) return true

                accessControl()
            }
        }
    }
}
</code></pre>
","<grails><shiro>","2","13698994"
"4785020","JMX Client Session","<p>I've bean studying JMX for a while, but I'm stuck. </p>

<p>I have an application that exposes some functionality to remote clients via JMX, although existing security features may be sufficiant for most cases my application uses Apache Shiro framework as the security backend. </p>

<p>My problem is that i don't how to gather client data serverside. Shiro needs a way to identify a client (subject), normally executing thread is associated with a subject but online JMX documentation does not give much clue about thread model of remote JMX. </p>

<p>How can i associate a client with a thread or is there a way to retrieve client data inside the interacted MBeans? </p>
","<java><jmx><mbeans><shiro>","1","4913457"
"22500765","Java- Retrieving permissions from LDAP for shiro","<p>im trying to get the User Permissions (read, write, browse,...) for LDAP objects using a java application with shiro. I dont have much experience with LDAP. I set up a server with Apache Directory Studio for testing purpose. Then i created a domain (dc=testdomain) and added a subentry with the ""accessControlSubentry"" objectclass and added the ""prescriptiveACI"" attribute. Everthing works the way it should if i browse the server with Apache DS and i can connect to the server in my java app. </p>

<p>In order to get the permissions i subclassed the ActiveDirectoryRealm from shiro. But i cant manage to make the query get the subentrys. </p>

<pre><code>private Set&lt;String&gt; getPermissionsForUser(String username, LdapContext ldapContext) throws NamingException{
    Set&lt;String&gt; permissions;
    permissions = new LinkedHashSet&lt;String&gt;();

    SearchControls searchCtls = new SearchControls();
    searchCtls.setSearchScope(SearchControls.SUBTREE_SCOPE);
    searchCtls.setReturningAttributes(new String[]{""prescriptiveACI""});

    String searchFilter = ""(objectClass=subentry)"";
    String searchBase = ""dc=testdomain"";
    NamingEnumeration answer = ldapContext.search(searchBase, searchFilter, searchCtls);

    while (answer.hasMoreElements()) {
        SearchResult sr = (SearchResult) answer.next();
        if (log.isDebugEnabled()) {
            log.debug(""Retrieving permissions for user ["" + sr.getName() + ""]"");
        }

        Attributes attrs = sr.getAttributes();

        if (attrs != null) {
            NamingEnumeration ae = attrs.getAll();
            while (ae.hasMore()) {
                Attribute attr = (Attribute) ae.next();

                if (attr.getID().equals(""prescriptiveACI"")) {

                    if (log.isDebugEnabled()) {
                        log.debug(""Permissions found"");
                    }
                }
            }
        }
    }
    return permissions;

}
</code></pre>

<p>When I change the searchFilter to ""(objectClass=*)"" i get all the OrganisationUnits in the domain. But i just cant seem to find the subentry objects that i need for the prescriptiveACI attribute.</p>

<p>Here is the content of my Shiro.ini file</p>

<pre><code>activeDirectoryRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealmPermissions
activeDirectoryRealm.systemUsername = uid=admin,ou=system
activeDirectoryRealm.systemPassword = secret
activeDirectoryRealm.url = ldap://localhost:10389
activeDirectoryRealm.searchBase = """"
</code></pre>

<p>How can i make the search query subentries? Or is there a better/alternative way to get the permission from the LDAP server?</p>
","<java><ldap><shiro>","2",""
"30368965","Embedded Jetty + ShiroFilter problems","<p>I haven't asked questions here yet, but after around 2 months of struggle on this, I decided to finally ask for help.</p>

<p>I am new to Java, this is actually my first project (just for fun), in which I am trying to create a web server with Jetty (without a web.xml descriptor) and Shiro authentication (with shiro.ini configuration file), but for some reason I cannot make it work. I tried pretty much everything I found on the internet, tried starting over, Read all The FMs... But nothing...</p>

<p>The final situation is that I get errors about no EnvironmentListener registered:</p>

<pre><code>javax.servlet.ServletException: java.lang.IllegalStateException: No WebEnvironment found: no EnvironmentLoaderListener registered?
    at org.apache.shiro.web.servlet.AbstractFilter.init(AbstractFilter.java:105)
    at org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:138)
    at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:852)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:341)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:742)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
    at org.eclipse.jetty.server.Server.start(Server.java:399)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
    at org.eclipse.jetty.server.Server.doStart(Server.java:366)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
    at MyPackage.Main.main(Main.java:89)
</code></pre>

<p>So after a lot of reading, I ended up with this addition to the code:</p>

<pre><code>EnvironmentLoaderListener listener = new EnvironmentLoaderListener();
secured.callContextInitialized(listener, new ServletContextEvent(secured.getServletContext()));
</code></pre>

<p>I also had a different error before, related to SecurityManager not set (or something), but for some reason, I don't get that error now?</p>

<p>To fix it, I used that code (it is commented now, as apparently I don't need it anymore, but anyways, at this point it makes no difference if it is commented or not...)</p>

<pre><code>    //Factory&lt;SecurityManager&gt; factory=new IniSecurityManagerFactory(""src/main/resources/shiro.ini"");
    //SecurityManager securityManager=factory.getInstance();
    //SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>So after all, I ended up with this error:</p>

<pre><code>Exception in thread ""main"" java.lang.NullPointerException
    at org.eclipse.jetty.server.handler.ContextHandler$Context.log(ContextHandler.java:2059)
    at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:127)
    at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
    at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:801)
    at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:499)
    at MyPackage.Main.main(Main.java:72)
</code></pre>

<p>This is my code, I guess it has much to optimize, but as I am a newbie to Java, I am open to any suggestions...</p>

<pre><code>import java.util.EnumSet;
import javax.servlet.DispatcherType;
import javax.servlet.ServletContextEvent;
import org.apache.jasper.servlet.JspServlet;
import org.apache.log4j.PropertyConfigurator;
import org.apache.shiro.web.env.EnvironmentLoaderListener;
import org.apache.shiro.web.servlet.ShiroFilter;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.handler.HandlerCollection;
import org.eclipse.jetty.servlet.DefaultServlet;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;

public class Main {

    public static void main(String[] args) {
        System.out.println(""Initializing server..."");
        PropertyConfigurator.configure(""config//log4j.properties"");

        final ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);

        context.setContextPath(""/"");
        context.setResourceBase(""src/main/webapp/main"");
        context.setClassLoader(Thread.currentThread().getContextClassLoader());

        context.addServlet(DefaultServlet.class, ""/*"");

        context.addServlet(""MyPackage.CheckLogin"", ""/checklogin"");

        final ServletHolder jsp = context.addServlet(JspServlet.class, ""*.jsp"");
        jsp.setInitParameter(""classpath"", context.getClassPath());

        final ServletContextHandler secured = new ServletContextHandler(ServletContextHandler.SESSIONS);

        secured.setContextPath(""/protected"");
        secured.setResourceBase(""src/main/webapp/protected"");
        secured.setClassLoader(Thread.currentThread().getContextClassLoader());

        secured.addServlet(DefaultServlet.class, ""/*"");

        final ServletHolder jsp2 = secured.addServlet(JspServlet.class, ""*.jsp"");
        jsp2.setInitParameter(""classpath"", context.getClassPath());

        EnvironmentLoaderListener listener = new EnvironmentLoaderListener();
        secured.callContextInitialized(listener, new ServletContextEvent(secured.getServletContext()));  

        //Factory&lt;SecurityManager&gt; factory=new IniSecurityManagerFactory(""src/main/resources/shiro.ini"");
        //SecurityManager securityManager=factory.getInstance();
        //SecurityUtils.setSecurityManager(securityManager);

        secured.addFilter(ShiroFilter.class,""/protected/*"",EnumSet.of(DispatcherType.REQUEST,DispatcherType.FORWARD,DispatcherType.INCLUDE,DispatcherType.ERROR));

        HandlerCollection hc = new HandlerCollection();
        hc.addHandler(secured);
        hc.addHandler(context);

        final Server server = new Server(8080);     
        server.setHandler(hc);

        System.out.println(""Starting server..."");
        try {
            server.start();
        } catch(Exception e) {
            System.out.println(""Failed to start server!"");
            e.printStackTrace();
            return;
        }

        System.out.println(""Server running..."");
        while(true) {
            try {
                server.join();
            } catch(InterruptedException e) {
                System.out.println(""Server interrupted!"");
            }
        }
    }
}
</code></pre>

<p>I pretty much tried everything I could figure out, so please help me fix it, as it is now driving me crazy...</p>

<p>If any additional information is needed, please let me know and I will provide it :)</p>

<p>edit: I tried to go through all the listed classes in the stack trace, but after a few hours spent in reading the different java classes and functions in them, I got into a dead end...</p>

<p>Jetty jar version: jetty-all-9.3.0-M2</p>
","<java><nullpointerexception><jetty><shiro><embedded-jetty>","3",""
"24503513","NullPointerException using Shiro","<p>I'm adding shiro to an existing Web application(using spring mvc), but I always got NullPointerException. </p>

<p>Here are the error message:</p>

<pre><code>Servlet.service() for servlet [jsp] in context with path [/haha-web] threw exception [Filtered request failed.] with root cause
    java.lang.NullPointerException
        at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:125)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
        at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
        at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
        at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)

org.apache.catalina.core.StandardWrapperValve invoke
Servlet.service() for servlet [static] in context with path [/haha-web] threw exception [Filtered request failed.] with root cause
    java.lang.NullPointerException
        at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:125)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
        at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
        at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
        at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)

org.apache.catalina.core.StandardWrapperValve invoke
Servlet.service() for servlet [static] in context with path [/haha-web] threw exception [Filtered request failed.] with root cause
    java.lang.NullPointerException
        at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:125)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
        at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
        at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
        at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
        at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
</code></pre>

<p>I checked the source code of Shiro, seems the sessionManager is Null.</p>

<p>Here are part of my shiro config:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:util=""http://www.springframework.org/schema/util""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd""&gt;

    &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
        &lt;property name=""cacheManagerConfigFile"" value=""classpath:spring/ehcache.xml""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""credentialsMatcher"" class=""org.haha.security.credentials.RetryLimitHashedCredentialsMatcher""&gt;
        &lt;constructor-arg ref=""cacheManager""/&gt;
        &lt;property name=""hashAlgorithmName"" value=""md5""/&gt;
        &lt;property name=""hashIterations"" value=""2""/&gt;
        &lt;property name=""storedCredentialsHexEncoded"" value=""true""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""userRealm"" class=""org.haha.security.realm.UserRealm""&gt;
        &lt;property name=""operatorService"" ref=""operatorService""/&gt;
        &lt;property name=""credentialsMatcher"" ref=""credentialsMatcher""/&gt;
        &lt;property name=""cachingEnabled"" value=""true""/&gt;
        &lt;property name=""authenticationCachingEnabled"" value=""true""/&gt;
        &lt;property name=""authenticationCacheName"" value=""authenticationCache""/&gt;
        &lt;property name=""authorizationCachingEnabled"" value=""true""/&gt;
        &lt;property name=""authorizationCacheName"" value=""authorizationCache""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionIdGenerator"" class=""org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator""/&gt;

    &lt;bean id=""sessionIdCookie"" class=""org.apache.shiro.web.servlet.SimpleCookie""&gt;
        &lt;constructor-arg value=""sid""/&gt;
        &lt;property name=""httpOnly"" value=""true""/&gt;
        &lt;property name=""maxAge"" value=""180000""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""&gt;
        &lt;property name=""activeSessionsCacheName"" value=""shiro-activeSessionCache""/&gt;
        &lt;property name=""sessionIdGenerator"" ref=""sessionIdGenerator""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionValidationScheduler"" class=""org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler""&gt;
        &lt;property name=""sessionValidationInterval"" value=""1800000""/&gt;
        &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
        &lt;property name=""globalSessionTimeout"" value=""1800000""/&gt;
        &lt;property name=""deleteInvalidSessions"" value=""true""/&gt;
        &lt;property name=""sessionValidationSchedulerEnabled"" value=""true""/&gt;
        &lt;property name=""sessionValidationScheduler"" ref=""sessionValidationScheduler""/&gt;
        &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt;
        &lt;property name=""sessionIdCookieEnabled"" value=""true""/&gt;
        &lt;property name=""sessionIdCookie"" ref=""sessionIdCookie""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realm"" ref=""userRealm""/&gt;
        &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;/bean&gt;

    &lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
        &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
        &lt;property name=""arguments"" ref=""securityManager""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;property name=""loginUrl"" value=""/home""/&gt;
        &lt;property name=""successUrl"" value=""/home""/&gt;
        &lt;property name=""unauthorizedUrl"" value=""/home""/&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /js/** = anon
                /api-js/** = anon
                /img/** = anon
                /css/** = anon
                /** = authc
            &lt;/value&gt;
        &lt;/property&gt;         
    &lt;/bean&gt;

&lt;/beans&gt;
</code></pre>

<p>I'm new to Shiro, and I've tried everything I could in the past 4 days T_T, hope someone can help me.</p>
","<shiro>","1","24523385"
"36656767","How to authenticate user in Java code with database","<p>I would like to use Apache Shiro with database authentication. But I can't make database design changes. I would like to use my custom SQL command and Java logic to authenticate user. Is this possible? I tried this configuration in shiro.ini:</p>

<p>saltedJdbcRealm=com.crm.web.authentication.JdbcRealm</p>

<p>And custom Java class:</p>

<pre><code>public class JdbcRealm extends AuthorizingRealm
{
    @Resource(name = ""jdbc/DefaultDB"")
    private DataSource dataSource;

    protected static final String DEFAULT_AUTHENTICATION_QUERY = ""select passwd from user where username = ?"";

    protected static final String DEFAULT_SALTED_AUTHENTICATION_QUERY = ""select passwd, passwd_salt from user where username = ?"";

    protected static final String DEFAULT_USER_ROLES_QUERY = ""select role_name from user_roles where username = ?"";

    protected static final String DEFAULT_PERMISSIONS_QUERY = ""select permission from roles_permissions where role_name = ?"";
    private static final Logger log = LoggerFactory.getLogger(JdbcRealm.class);

    public enum SaltStyle
    {
        NO_SALT, CRYPT, COLUMN, EXTERNAL
    };
    protected String authenticationQuery = DEFAULT_AUTHENTICATION_QUERY;
    protected String userRolesQuery = DEFAULT_USER_ROLES_QUERY;
    protected String permissionsQuery = DEFAULT_PERMISSIONS_QUERY;
    protected boolean permissionsLookupEnabled = false;

    protected SaltStyle saltStyle = SaltStyle.NO_SALT;

    public void setDataSource(DataSource dataSource)
    {
        this.dataSource = dataSource;
    }

    public void setAuthenticationQuery(String authenticationQuery)
    {
        this.authenticationQuery = authenticationQuery;
    }

    public void setUserRolesQuery(String userRolesQuery)
    {
        this.userRolesQuery = userRolesQuery;
    }

    public void setPermissionsQuery(String permissionsQuery)
    {
        this.permissionsQuery = permissionsQuery;
    }

    public void setPermissionsLookupEnabled(boolean permissionsLookupEnabled)
    {
        this.permissionsLookupEnabled = permissionsLookupEnabled;
    }

    public void setSaltStyle(SaltStyle saltStyle)
    {
        this.saltStyle = saltStyle;
        if (saltStyle == SaltStyle.COLUMN &amp;&amp; authenticationQuery.equals(DEFAULT_AUTHENTICATION_QUERY))
        {
            authenticationQuery = DEFAULT_SALTED_AUTHENTICATION_QUERY;
        }
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException
    {
        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        String username = upToken.getUsername();
        // Null username is invalid
        if (username == null)
        {
            throw new AccountException(""Null usernames are not allowed by this realm."");
        }
        Connection conn = null;
        SimpleAuthenticationInfo info = null;
        try
        {
            conn = dataSource.getConnection();
            String password = null;
            String salt = null;
            switch (saltStyle)
            {
                case NO_SALT:
                    password = getPasswordForUser(conn, username)[0];
                    break;
                case CRYPT:
                    // TODO: separate password and hash from getPasswordForUser[0]
                    throw new ConfigurationException(""Not implemented yet"");
                //break;
                case COLUMN:
                    String[] queryResults = getPasswordForUser(conn, username);
                    password = queryResults[0];
                    salt = queryResults[1];
                    break;
                case EXTERNAL:
                    password = getPasswordForUser(conn, username)[0];
                    salt = getSaltForUser(username);
            }
            if (password == null)
            {
                throw new UnknownAccountException(""No account found for user ["" + username + ""]"");
            }
            info = new SimpleAuthenticationInfo(username, password.toCharArray(), getName());

            if (salt != null)
            {
                info.setCredentialsSalt(ByteSource.Util.bytes(salt));
            }
        }
        catch (SQLException e)
        {
            final String message = ""There was a SQL error while authenticating user ["" + username + ""]"";
            if (log.isErrorEnabled())
            {
                log.error(message, e);
            }
            throw new AuthenticationException(message, e);
        }
        finally
        {
            JdbcUtils.closeConnection(conn);
        }
        return info;
    }

    private String[] getPasswordForUser(Connection conn, String username) throws SQLException
    {
        String[] result;
        boolean returningSeparatedSalt = false;
        switch (saltStyle)
        {
            case NO_SALT:
            case CRYPT:
            case EXTERNAL:
                result = new String[1];
                break;
            default:
                result = new String[2];
                returningSeparatedSalt = true;
        }

        PreparedStatement ps = null;
        ResultSet rs = null;
        try
        {
            ps = conn.prepareStatement(authenticationQuery);
            ps.setString(1, username);
            // Execute query
            rs = ps.executeQuery();
            // Loop over results - although we are only expecting one result, since usernames should be unique
            boolean foundResult = false;
            while (rs.next())
            {
                // Check to ensure only one row is processed
                if (foundResult)
                {
                    throw new AuthenticationException(""More than one user row found for user ["" + username + ""]. Usernames must be unique."");
                }
                result[0] = rs.getString(1);
                if (returningSeparatedSalt)
                {
                    result[1] = rs.getString(2);
                }
                foundResult = true;
            }
        }
        finally
        {
            JdbcUtils.closeResultSet(rs);
            JdbcUtils.closeStatement(ps);
        }
        return result;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)
    {
        //null usernames are invalid
        if (principals == null)
        {
            throw new AuthorizationException(""PrincipalCollection method argument cannot be null."");
        }
        String username = (String) getAvailablePrincipal(principals);
        Connection conn = null;
        Set&lt;String&gt; roleNames = null;
        Set&lt;String&gt; permissions = null;
        try
        {
            conn = dataSource.getConnection();
            // Retrieve roles and permissions from database
            roleNames = getRoleNamesForUser(conn, username);
            if (permissionsLookupEnabled)
            {
                permissions = getPermissions(conn, username, roleNames);
            }
        }
        catch (SQLException e)
        {
            final String message = ""There was a SQL error while authorizing user ["" + username + ""]"";
            if (log.isErrorEnabled())
            {
                log.error(message, e);
            }
            // Rethrow any SQL errors as an authorization exception
            throw new AuthorizationException(message, e);
        }
        finally
        {
            JdbcUtils.closeConnection(conn);
        }
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo(roleNames);
        info.setStringPermissions(permissions);
        return info;
    }

    protected Set&lt;String&gt; getRoleNamesForUser(Connection conn, String username) throws SQLException
    {
        PreparedStatement ps = null;
        ResultSet rs = null;
        Set&lt;String&gt; roleNames = new LinkedHashSet&lt;String&gt;();
        try
        {
            ps = conn.prepareStatement(userRolesQuery);
            ps.setString(1, username);
            // Execute query
            rs = ps.executeQuery();
            // Loop over results and add each returned role to a set
            while (rs.next())
            {
                String roleName = rs.getString(1);
                // Add the role to the list of names if it isn't null
                if (roleName != null)
                {
                    roleNames.add(roleName);
                }
                else
                {
                    if (log.isWarnEnabled())
                    {
                        log.warn(""Null role name found while retrieving role names for user ["" + username + ""]"");
                    }
                }
            }
        }
        finally
        {
            JdbcUtils.closeResultSet(rs);
            JdbcUtils.closeStatement(ps);
        }
        return roleNames;
    }

    protected Set&lt;String&gt; getPermissions(Connection conn, String username, Collection&lt;String&gt; roleNames) throws SQLException
    {
        PreparedStatement ps = null;
        Set&lt;String&gt; permissions = new LinkedHashSet&lt;&gt;();
        try
        {
            ps = conn.prepareStatement(permissionsQuery);
            for (String roleName : roleNames)
            {
                ps.setString(1, roleName);
                ResultSet rs = null;
                try
                {
                    // Execute query
                    rs = ps.executeQuery();
                    // Loop over results and add each returned role to a set
                    while (rs.next())
                    {
                        String permissionString = rs.getString(1);
                        // Add the permission to the set of permissions
                        permissions.add(permissionString);
                    }
                }
                finally
                {
                    JdbcUtils.closeResultSet(rs);
                }
            }
        }
        finally
        {
            JdbcUtils.closeStatement(ps);
        }
        return permissions;
    }

    protected String getSaltForUser(String username)
    {
        return username;
    }
}
</code></pre>

<p>But when I run the code I get:</p>

<pre><code>org.apache.shiro.authc.AuthenticationException: Authentication token of type [class org.apache.shiro.authc.UsernamePasswordToken] could not be authenticated by any configured realms.  Please ensure that at least one realm can authenticate these tokens.
</code></pre>

<p>Am I missing some configuration in shiro.ini</p>
","<java><shiro>","10",""
"30344441","Shiro Filter without redirect","<p>I have a REST-Interface that gets called from the Front-End code via jquery-Ajax-Requests. The called url is secured with the following shiro.ini:</p>

<pre><code>/api/** = authc
</code></pre>

<p>If the user is not authenticated Shiro wants to redirect to the login-Url and the ajax-Request can't handle that. I'd prefer a HTML status code as answer.
What's the best way to achieve this? Thanks for any answers!</p>
","<java><ajax><shiro>","3",""
"11534949","Multiple login urls in Shiro","<p>I am trying to configure apache shiro to authenticate our application based on apache click.
We have two different login urls for two types of users in the same application</p>

<p>1) For District users : districtlogin.jsp
2) For State Users : statelogin.jsp</p>

<p>How can i specify these 2 urls in the shiro.ini file</p>

<p>Now only one url is working at a time .</p>

<p>I used the below methods</p>

<p>shiro.loginUrl = /statelogin.jsp
shiro.loginUrl = /districtlogin.jsp</p>

<p>Thankyou</p>
","<url><shiro>","1",""
"10899150","Shiro Guice, where can I set the loginUrl, usernameParam, passwordParam, etc for the FormAuthenticationFilter?","<p>In the current setup, I use the shiro.ini.</p>

<p>Moving to Guice, where is the correct place to set these values for the FormAuthenticatorFilter (authc)?</p>
","<guice><shiro>","2","10899821"
"30263507","Null Pointer Exception When Autowiring Class","<p>I am building a REST API using Spring Boot with Shiro for authentication. I am getting a NullPointerException when I try to Autowire a repository in my realm code. Autowiring the repository elsewhere does not produce this error.</p>

<p>Here is my authorizing realm:</p>

<pre><code>@Component
public class CCDAuthorizingRealm extends AuthorizingRealm {

    @Autowired
    private UserRepository userRepository;

    public CCDAuthorizingRealm() { }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        AuthenticationInfo authenticationInfo = null;
        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;
        String username = token.getUsername();
        User user = null;
        try {
            user = userRepository.findByUsername(username);
        } catch (Exception e) {
            e.printStackTrace(System.err);
        }

        if (user != null) {
            authenticationInfo = new SimpleAuthenticationInfo(
                    new SimplePrincipalCollection(username, username),
                    user.getPassword());
        }

        return authenticationInfo;
    }
    ....
}
</code></pre>

<p>The exception occurs when I try to call the findByUsername() method.</p>

<p>Here is the code for the repository that I am injecting.</p>

<pre><code>@Transactional(readOnly=true)
@RepositoryRestResource(collectionResourceRel=""users"", path=""users"")
public interface UserRepository extends PagingAndSortingRepository&lt;User, Long&gt; {
    User findByUsername(@Param(""user"") String user);
    ....
}
</code></pre>

<p>To test, I autowired the repository into my Application class and printed the results, and I got no errors. For completeness, here is the code to show that:</p>

<pre><code>@SpringBootApplication
public class Application implements CommandLineRunner {
    @Autowired
    public UserRepository userRepository;

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Override
    public void run(String... strings) {
        System.out.println(""\nServer up\n"");
        User user = userRepository.findOne(new Long(1));
        System.out.println(user.getUsername());
    }
}
</code></pre>

<p>Any help is greatly appreciated.</p>

<p><strong>EDIT</strong></p>

<p>As far as I can tell this question is not a duplicate, and the answer to the other question does not resolve my problem. I am injecting the bean and informing the IoC container of the component, but the autowiring still results in a NPE.</p>

<p>Using scopes does not help, because I only need the single service object. The Configurable tag is not necessary, because I am autowiring and do not need to create a new object. </p>

<p><strong>UPDATE</strong></p>

<p>Here is where I am calling CCDAuthorizingRealm. I'm new to using Shiro, but I'm pretty sure this is correct.</p>

<pre><code>@RestController
@RequestMapping(produces=""application/json"")
public class AuthenticationController {

    CCDAuthorizingRealm realm = new CCDAuthorizingRealm();

    SecurityManager sm = new DefaultSecurityManager(realm);

    public AuthenticationController() { }

    /**
     * Authenticate user with supplied credentials
     *
     * @param login - credentials
     * @return success or failure message
     */
    @RequestMapping(value = ""/login"", method = RequestMethod.POST, consumes=""application/json"")
    public String login(@RequestBody LoginInfo login) {
        String response;
        UsernamePasswordToken token = new UsernamePasswordToken(
                    login.getUsername(),
                    login.getPassword(),
                    false);
        try {
            SecurityUtils.setSecurityManager(sm);
            Subject currentUser = SecurityUtils.getSubject();
            if (currentUser.isAuthenticated()) {
                currentUser.logout();
            }
            currentUser.login(token);
            response = token.toString();
        } catch (AuthenticationException e) {
            response = ""Error: Incorrect username or password"";
        }

        return response;
    }
}
</code></pre>

<p>I currently try creating a new instance of my realm in the controller. I do this because when I try:</p>

<pre><code>@Autowired
CCDAuthorizingRealm realm;
SecurityManager sm = new DefaultSecurityManager(realm);
</code></pre>

<p>I would get a runtime error when initializing the Security Manager because it would complain about realm being null. I don't understand why realm is null, however, since it is annotated as a component. Perhaps this is the root of my problem.</p>
","<java><spring><nullpointerexception><autowired><shiro>","0","30268647"
"10221534","Shiro immediate user locking","<p>Shiro seems to cache authentication information in web application. When I try to lock the user in database during his session (set locked = true), he continues to work and no authentication code (<em>doGetAuthenticationInfo</em>) is called. Lock is only applied when user logouts and try to login again.</p>

<p>It is strange as Shiro's caching should be disabled by default.</p>

<p>How could I lock user during his activity not waiting for him to logout in Shiro? Maybe I am missing some concept?</p>
","<java><security><shiro>","1",""
"23782406","Logout all still-logged-in users from WebApp using Shiro and Spring WebMVC (Java8, Spring 4.x)","<p>I'm fairly new to shiro, so here's my question:</p>

<p>I've implemented Shiro into an application using Spring WebMVC / Spring Framework (4.x)on a Tomcat 8 container. The Roles and Permissions are working fine so far, the login, too, but Problem is, that sessions are still working when I redeploy my war-file / stop/restart the server, which is not intended here.</p>

<p>Would be great to get a hint what I have to do to implement something like an ""auto-logout"" of all logged-in users after a redeploy/restart of the server, e.g. redirecting to loginpage and showing a modal or s.th. saying ""you've been logged out due to [reasons]"".</p>

<p>Best regards,
Dominik</p>
","<java><spring-mvc><session-timeout><shiro><tomcat8>","3","23784022"
"20406295","Correct way to use Apache Shiro on distributed system using RMI?","<p>I'm looking for some guidelines/tips on how to implement Apache Shiro as a part of a distributed system (client-server) using Java RMI.</p>

<p>I've looked at the answer to this thread : <a href=""https://stackoverflow.com/questions/13632442/how-to-organize-rmi-client-server-architecture"">How to organize RMI Client-Server architecture</a> and I'm thinking of using something similar. What I have planned is a remote object (possibly a Singleton?) that handles the authentication when the client log in. If the log in is successful a new session-object is created. But I'm not quite sure where this object would belong and what information to store in it. Should it be passed on to the client or exists as another remote object. </p>

<p>I'm thinking that it should be used as some kind of session facade where each request from the client is being authorized by Shiro. 
I'm not sure whether it is best (and possible) to give the client a unique token/identifier that Shiro knows about and can authorized based on for each method-invocation, or to create a remote session-facade object that exists for each connection and stores the information about the current user and so forth.</p>

<p>Also I don't know quite how Shiro handles the Subject when used in multi-threaded application and whether either of the mentioned proposals would cause a conflict. </p>

<p>I'm looking forward to hear your thoughts on this - Thanks!</p>
","<java><rmi><distributed><shiro>","1",""
"15971779","Making GAE Shiro and Resteasy work together","<p>I am trying to make GAE-Shiro and Resteasy together. So I tried doing a quick port. However I am getting this error:</p>

<pre><code>[ERROR] java.lang.RuntimeException: java.lang.InstantiationException: com.cilogi.shiro.guice.ServeModule
[ERROR]     at org.jboss.resteasy.plugins.guice.GuiceResteasyBootstrapServletContextListener.getModules(GuiceResteasyBootstrapServletContextListener.java:83)
[ERROR]     at org.jboss.resteasy.plugins.guice.GuiceResteasyBootstrapServletContextListener.contextInitialized(GuiceResteasyBootstrapServletContextListener.java:27)
[ERROR]     at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548)
[ERROR]     at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
[ERROR]     at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
[ERROR]     at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
[ERROR]     at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
[ERROR]     at org.mortbay.jetty.Server.doStart(Server.java:224)
[ERROR]     at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
[ERROR]     at com.google.appengine.tools.development.JettyContainerService.startContainer(JettyContainerService.java:228)
[ERROR]     at com.google.appengine.tools.development.AbstractContainerService.startup(AbstractContainerService.java:255)
[ERROR]     at com.google.appengine.tools.development.AbstractServer.startup(AbstractServer.java:79)
[ERROR]     at com.google.appengine.tools.development.DevAppServerImpl$Servers.startup(DevAppServerImpl.java:451)
[ERROR]     at com.google.appengine.tools.development.DevAppServerImpl.start(DevAppServerImpl.java:198)
[ERROR]     at com.google.appengine.tools.development.gwt.AppEngineLauncher.start(AppEngineLauncher.java:97)
[ERROR]     at com.google.gwt.dev.DevMode.doStartUpServer(DevMode.java:509)
[ERROR]     at com.google.gwt.dev.DevModeBase.startUp(DevModeBase.java:1068)
[ERROR]     at com.google.gwt.dev.DevModeBase.run(DevModeBase.java:811)
[ERROR]     at com.google.gwt.dev.DevMode.main(DevMode.java:311)
[ERROR] Caused by: java.lang.InstantiationException: com.cilogi.shiro.guice.ServeModule
[ERROR]     at java.lang.Class.newInstance0(Class.java:359)
[ERROR]     at java.lang.Class.newInstance(Class.java:327)
[ERROR]     at org.jboss.resteasy.plugins.guice.GuiceResteasyBootstrapServletContextListener.getModules(GuiceResteasyBootstrapServletContextListener.java:70)
[ERROR]     ... 22 more
</code></pre>

<p>Here is my current web.xml configuration</p>

<pre><code>    &lt;context-param&gt;
        &lt;param-name&gt;resteasy.guice.modules&lt;/param-name&gt;
&lt;!--         &lt;param-value&gt;org.jboss.errai.ui.demo.server.MyServletModule&lt;/param-value&gt; --&gt;
        &lt;param-value&gt;com.cilogi.shiro.guice.ServeModule&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;
            org.jboss.resteasy.plugins.guice.GuiceResteasyBootstrapServletContextListener
        &lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;context-param&gt;  
        &lt;param-name&gt;resteasy.servlet.mapping.prefix&lt;/param-name&gt;  
        &lt;param-value&gt;/&lt;/param-value&gt;  
    &lt;/context-param&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;Resteasy&lt;/servlet-name&gt;
        &lt;servlet-class&gt;
            org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher
        &lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Resteasy&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;context-param&gt;
       &lt;param-name&gt;user-base-url&lt;/param-name&gt;
       &lt;param-value&gt;/user/admin&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;context-param&gt;
        &lt;param-name&gt;static-base-url&lt;/param-name&gt;
        &lt;param-value&gt;&lt;/param-value&gt;
    &lt;/context-param&gt;


    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;com.cilogi.shiro.guice.ServeContextListener&lt;/listener-class&gt;
    &lt;/listener&gt;


    &lt;mime-mapping&gt;
        &lt;extension&gt;manifest&lt;/extension&gt;
        &lt;mime-type&gt;text/cache-manifest&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;

    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt; 
</code></pre>
","<java><google-app-engine><jax-rs><resteasy><shiro>","3","21819169"
"3733019","Shiro permission string has denied feature?","<p>I use shiro plugin for grails and allow user to add permission at runtime.
My controller has many actions such as index,list,edit,create,save,update,search,delete ....
Suppose that controller name is ""foo""
The permission string for simple foo controller is 
foo:*
means everybody which has this permission can access all actions of foo controller.
but if I want to deny only delete actions I must compose the permission string
like this foo:index,list,edit,create,save,update,search
This work out but the permission string is very long, if my controller has the actions more than this.
It would be better if there are the syntax like this foo:[delete] 
add square bracket or something like that to deny only delete action but allow the rest.</p>

<p>Thank you in advance.</p>
","<java><apache><shiro>","1",""
"7584484","Is there a way to get the IP address of the client/caller in a Shiro Filter in Grails","<p>sorry if this is a dumb question. I have some web service calls that are implemented in Grails controllers and we use the Shiro plugin for security. I want to be able to create a whitelist of IP addresses for certain operations that should only come from our own servers or trusted partners. I am finding the documentation a little spares on this subject. My first thought was to try and implement the whitelist here. I wouldn't be surprised if there is a simpler way to do this. I am a bit of a Shiro newb. Could sure use a copy of Shiro for Dummies!</p>

<pre><code>class ShiroSecurityFilters {
     def filters = {
        all(uri: ""/**"") {
            before = {
                // Ignore direct views (e.g. the default main index page).
                if (controllerName in ['foo', 'bar']) {
                  return true
                }
                 // Access control by convention.
                accessControl()
            }
        }
    }
}
</code></pre>
","<security><grails><shiro>","0","7587230"
"21764696","Spring Rest with shiro","<p>I am building two separate project , Rest services using spring 4.0 and a dynamic website using ZK and Spring .</p>

<p>I want to secure both Rest Services and the Website so user need to be authorized before browsing the website or requesting the Rest Services .</p>

<p>I am wondering if we can have one place for authorization , is this possible and how to share the identity of user between both sites ?</p>

<p>I am thinking of Shiro ?</p>

<p>Any Ideas</p>

<p>BR
Shahbour</p>
","<java><spring><rest><spring-mvc><shiro>","0","21765111"
"25902310","Shiro Path Pattern exclude","<p>In my shiro application, I want to define a <code>AuthenticationFilter</code> for all paths except REST.</p>

<p>ie <code>/rest/...</code> doesnt go through it but everything else would.</p>

<p>I'm using <code>Shiro-Guice</code> so my filter setups are of the form </p>

<pre><code>addFilterChain(""/rest/**"" ,restFilter)
addFilterChain(""/**"", filter)    //I want this one to work on everything except my rest filter
</code></pre>

<p>I looked at <a href=""https://stackoverflow.com/questions/2952196/learning-ant-path-style"">this question</a> about Ant path pattern style but there doesnt seem to be support for regexes. </p>
","<java><ant><guice><shiro>","1","25907268"
"29408897","how to decrypt shiro password stored in database..?","<p>I am storing user encrypted password in database.</p>

<p>code :</p>

<pre><code>String username = ""admin"";
String encrypted_password = createPassword(""admin$321""); 
// $shiro1$SHA-256$500000$mAXboFyyOtBVoGi6AD8LXw==$acHoVyuQyOSOKfjqwAHXyEVTH7p9cH79yI+0O15NS0U=
System.out.println(getOriginalPassword(encrypted_password));

private static String createPassword(String password) {
DefaultPasswordService passwordService = new DefaultPasswordService();
DefaultHashService hashService = new DefaultHashService();
hashService.setHashIterations(passwordService.DEFAULT_HASH_ITERATIONS);
hashService.setHashAlgorithmName(passwordService.DEFAULT_HASH_ALGORITHM);
hashService.setGeneratePublicSalt(true);

passwordService.setHashService(hashService);
String encryptedPassword = passwordService.encryptPassword(password);
System.out.println(encryptedPassword);
return encryptedPassword;
}

private static String getOriginalPassword(String encrypted_password) {
    return null;
}
</code></pre>

<p>how to decrypt stored password..?</p>
","<java><shiro><password-recovery>","0",""
"8779957","Grails: How to protect gsp views with shiro?","<p>I am using shiro to protect my grails application, using the default setup as with</p>

<pre><code>grails shiro-quick-start
</code></pre>

<p>and a custom user. So far, all controller actions are protected, but if I put in the URL to a GSP-File (say, index.gsp), I do not get a login prompt.</p>

<p>The default filter I use is</p>

<pre><code> def filters = {
    all(uri: ""/**"") {
        before = {      
            accessControl()             
        }
    }       
}
</code></pre>

<p>but seemingly GSP-Files do not match this URI-Filter. What URI-Filter do I have to use? I am using grails 1.3.7 and shiro plugin 1.1.3</p>
","<grails><filter><uri><shiro>","1","8785166"
"27902945","Configure ""apiKey.properties"" file in ""shiro.ini"" file in Heroku Java Web App","<p>I am trying to build up a Web Application in Heroku with Stormpath User Management addon and Apache Shiro.
When I go through the sample code its mentioned in ""shiro.ini"" file to provide the ""apiKey.properties"" file's path in property ""stormpathClient.apiKeyFileLocation"".
Please suggest how we can configure ""apiKey.properties"" file's path which contains STORMPATH API KEY ID and SECRET in Heroku application.</p>
","<heroku><shiro><stormpath>","1","27930290"
"15298821","Shiro with Spring MVC Wildcard permissions not working","<p>I have couple of permissions as:</p>

<pre><code>inventory:po:view
inventory:po:create
inventory:po:update
</code></pre>

<p>In the JSP, below works:</p>

<pre><code>&lt;shiro:hasPermission name=""inventory:po:create""&gt;
   &lt;li&gt;&lt;a href='&lt;c:url value=""/inventory/document/viewDocument?doctype=2"" /&gt;'&gt;Purchase Order&lt;/a&gt;&lt;/li&gt;                   
&lt;/shiro:hasPermission&gt;
</code></pre>

<p>However, below doesn't.</p>

<pre><code>&lt;shiro:hasPermission name=""inventory:po:*""&gt;
&lt;/shiro:hasPermission&gt;
</code></pre>

<p>Shiro Version is 1.2.1. I also tried using the subject.isPermitted() call in and that doesn't work too.</p>

<p>I'm sure this is supposed to be pretty straight forward, but is there anything I miss in the configuration to enable wildcard support ? Please advice.</p>

<p><strong>Shiro Configuration:</strong></p>

<pre><code>&lt;beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd""&gt;

&lt;!-- Security Manager --&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""jdbcRealm"" /&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
&lt;/bean&gt;

&lt;!-- Caching --&gt;
&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
    &lt;property name=""cacheManager"" ref=""ehCacheManager"" /&gt;
&lt;/bean&gt;

&lt;bean id=""ehCacheManager""
    class=""org.springframework.cache.ehcache.EhCacheManagerFactoryBean"" /&gt;

&lt;bean id=""sessionDAO""
    class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"" /&gt;

&lt;bean id=""sessionManager""
    class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""sessionDAO"" ref=""sessionDAO"" /&gt;
&lt;/bean&gt;


&lt;!-- JDBC Realm Settings --&gt;
&lt;bean id=""jdbcRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
    &lt;property name=""name"" value=""jdbcRealm"" /&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
    &lt;property name=""authenticationQuery""
        value=""SELECT password FROM system_user_accounts WHERE username=? and status=10"" /&gt;
    &lt;property name=""userRolesQuery""
        value=""SELECT role_code FROM system_roles r, system_user_accounts u, system_user_roles ur WHERE u.user_id=ur.user_id AND r.role_id=ur.role_id AND u.username=?"" /&gt;
    &lt;property name=""permissionsQuery""
        value=""SELECT code FROM system_roles r, system_permissions p, system_role_permission rp WHERE r.role_id=rp.role_id AND p.permission_id=rp.permission_id AND r.role_code=?"" /&gt;



    &lt;property name=""permissionsLookupEnabled"" value=""true""&gt;&lt;/property&gt;
    &lt;property name=""cachingEnabled"" value=""true"" /&gt;
&lt;/bean&gt;

&lt;!-- Spring Integration --&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans. Only run after 
    the lifecycleBeanProcessor has run: --&gt;
&lt;bean id=""annotationProxy""
    class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
    depends-on=""lifecycleBeanPostProcessor"" /&gt;
&lt;bean id=""authorizationAttributeSourceAdvisor""
    class=""org.apache.shiro.sprinemphasized textg.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;!-- Secure Spring remoting: Ensure any Spring Remoting method invocations 
    can be associated with a Subject for security checks. --&gt;
&lt;bean id=""secureRemoteInvocationExecutor""
    class=""org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;!-- Passthrough for Login page --&gt;
&lt;bean id=""passThruLogin"" class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/login"" /&gt;
&lt;/bean&gt;

&lt;!-- Shiro filter --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""/login"" /&gt;
    &lt;property name=""successUrl"" value=""/dashboard"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/error"" /&gt;
    &lt;property name=""filters""&gt;
        &lt;map&gt;
            &lt;entry key=""authc"" value-ref=""passThruLogin"" /&gt;
        &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt; 
            &lt;!-- !!! Order matters !!! --&gt;
            /authenticate = anon
            /login = anon
            /logout = anon
            /error = anon
            /static/** = anon
            /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p></p>
","<spring-mvc><shiro>","1",""
"24362036","Apache Shiro: RememberMe feature doesn't work with default password service","<p>I  am developing a jsf-based project using Apache Shiro 1.2 for security. I have a problem with 'remember me' feature. </p>

<pre><code>[main]

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password from user where username = ?
jdbcRealm.userRolesQuery = select role from userroles where userID = (select id FROM user WHERE username = ?)

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = 12345
ds.databaseName = testdb
jdbcRealm.dataSource= $ds

authc.loginUrl = /index.xhtml
user.loginUrl = /index.xhtml

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher

#or this configuration
#passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
#credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#credentialsMatcher.hashAlgorithmName = SHA-256
#credentialsMatcher.storedCredentialsHexEncoded = true
#credentialsMatcher.hashIterations = 5000
</code></pre>

<p>Java class</p>

<pre><code>PasswordService passwordService = new DefaultPasswordService();
String encryptedPassword = passwordService.encryptPassword(password);

Subject currentUser         = SecurityUtils.getSubject();
UsernamePasswordToken token = new UsernamePasswordToken(username, encryptedPassword);
token.setRememberMe(rememberMe);
</code></pre>

<p>What could be the problem be?</p>
","<shiro><remember-me>","0",""
"13356404","Shiro and Tomcat AccessLogValve","<p>I'm using <code>Shiro</code> (v1.2.1) as security framework, it works perfectly, but in access log for <code>Tomcat</code> (v7.0.32) you cannot get remote user in logging when authenticated user access any resource. for my sample web application I used default configuration provided in <code>Shiro</code> SVN example <a href=""https://svn.apache.org/repos/asf/shiro/trunk/samples/web/"" rel=""nofollow"">repo</a>. </p>

<pre><code>
127.0.0.1 - - [13/Nov/2012:08:22:55 +0200] ""POST /pacs/login.jsp HTTP/1.1"" 302 - // User here not logged
127.0.0.1 - - [13/Nov/2012:08:22:55 +0200] ""GET /pacs/ HTTP/1.1"" 200 821 // Here user is accessing protected page, so we got permission.
</code></pre>

<p>Is there any way this could be solved?</p>
","<java><java-ee><tomcat><shiro>","1","13375156"
"36946989","Using pac4j-saml, how do I get the sp-metadata based on shiro.ini setting","<p>I need to perform a SSO within the various WARs that are created in an EAR application. I followed the demo provided here <a href=""https://github.com/pac4j/buji-pac4j-demo"" rel=""nofollow"">https://github.com/pac4j/buji-pac4j-demo</a> and configured each shiro.ini in each WAR inside the EAR in exact same way as one provided in the demo. I am using the resource:samlKeystore.jks (with same credentials) and trying to connect with the same okta (resource:metadata-okta.xml) IDP. However, When I clicked on the ""Protected url by SAML : saml/index.jsp"" link, am getting this error:</p>

<p>2016-04-29 16:20:11,460 ERROR [io.undertow.request] (default task-13) UT005023: Exception handling request to /MyWebA/saml/index.jsp: javax.servlet.ServletException: org.pac4j.saml.exceptions.SAMLException: Keystore has no private keys
    at org.apache.shiro.web.servlet.AdviceFilter.cleanup(AdviceFilter.java:196)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:148)</p>

<p>....</p>

<p>Caused by: org.pac4j.saml.exceptions.SAMLException: Keystore has no private keys
    at org.pac4j.saml.crypto.KeyStoreCredentialProvider.getPrivateKeyAlias(KeyStoreCredentialProvider.java:175)
    at org.pac4j.saml.crypto.KeyStoreCredentialProvider.(KeyStoreCredentialProvider.java:98)
    at org.pac4j.saml.crypto.KeyStoreCredentialProvider.(KeyStoreCredentialProvider.java:105)</p>

<p>This is strange as I have the actually samlKeystore.jks in the resources folder.</p>

<p>My questions are:</p>

<p>1) Why am I getting the ""Keystore has no private keys"" issue even though I am using the same keystore that came with the demo? BTW, running the demo as is did not have this issue.</p>

<p>2) Should I want to configure an IDP myself, I will need the an SP metadata that describes my EAR application. I notice that the shiro.ini has this configuration set as: saml2Config.serviceProviderMetadataPath = resource:sp-metadata.xml. But I can find the sp-metadata.xml (if it meant to generate one). How do I generate the sp-metadata.xml using the shiro.ini? Since am using the buji-pac4j and pac4j-saml, I couldn't figure out how I could do that with the 2 options described here <a href=""https://github.com/pac4j/pac4j/wiki/Clients#saml-support"" rel=""nofollow"">https://github.com/pac4j/pac4j/wiki/Clients#saml-support</a></p>

<p><strong>Edited to include by pom.xml and shiro.ini</strong></p>

<pre><code>     &lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
      &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
      &lt;parent&gt;
        &lt;groupId&gt;MyEARProject&lt;/groupId&gt;
        &lt;artifactId&gt;MyEARProject&lt;/artifactId&gt;
        &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
      &lt;/parent&gt;
      &lt;groupId&gt;MyEAR&lt;/groupId&gt;
      &lt;artifactId&gt;MyEAR&lt;/artifactId&gt;
      &lt;packaging&gt;ear&lt;/packaging&gt;  
        &lt;properties&gt;
            &lt;mywebversion&gt;0.0.2&lt;/mywebversion&gt;
            &lt;pac4jVersion&gt;1.8.8&lt;/pac4jVersion&gt;
            &lt;bujiVersion&gt;1.4.2&lt;/bujiVersion&gt;
            &lt;javaVersion&gt;1.8&lt;/javaVersion&gt;
        &lt;/properties&gt;   
      &lt;dependencies&gt;    
            &lt;dependency&gt;
                &lt;groupId&gt;io.buji&lt;/groupId&gt;
                &lt;artifactId&gt;buji-pac4j-servlet&lt;/artifactId&gt;
                &lt;version&gt;${bujiVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-oauth&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-openid&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-cas&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-http&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-saml&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-oidc&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-gae&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-ldap&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-sql&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-mongo&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.pac4j&lt;/groupId&gt;
                &lt;artifactId&gt;pac4j-stormpath&lt;/artifactId&gt;
                &lt;version&gt;${pac4jVersion}&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
                &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
                &lt;version&gt;1.0.13&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
                &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
                &lt;version&gt;3.0.1&lt;/version&gt;
                &lt;scope&gt;provided&lt;/scope&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;
                &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
                &lt;version&gt;2.2&lt;/version&gt;
                &lt;scope&gt;provided&lt;/scope&gt;
            &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;net.sf.ehcache&lt;/groupId&gt;
            &lt;artifactId&gt;ehcache-core&lt;/artifactId&gt;
            &lt;version&gt;2.5.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
             &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
             &lt;artifactId&gt;shiro-ehcache&lt;/artifactId&gt;
             &lt;version&gt;1.2.4&lt;/version&gt;
             &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency    
            &lt;dependency&gt;
                &lt;groupId&gt;com.my&lt;/groupId&gt;
                &lt;artifactId&gt;webApp1&lt;/artifactId&gt;
                &lt;version&gt;${mywebversion}&lt;/version&gt;
                &lt;type&gt;war&lt;/type&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;com.my&lt;/groupId&gt;
                &lt;artifactId&gt;webAppRest&lt;/artifactId&gt;
                &lt;version&gt;${mywebversion}&lt;/version&gt;
                &lt;type&gt;war&lt;/type&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;com.my&lt;/groupId&gt;
                &lt;artifactId&gt;webApp2&lt;/artifactId&gt;
                &lt;version&gt;${mywebversion}&lt;/version&gt;
                &lt;type&gt;war&lt;/type&gt;
            &lt;/dependency&gt;
      &lt;/dependencies&gt; 
    &lt;/project&gt;
</code></pre>

<p>Here is my shiro.ini config</p>

<pre><code>[main]
############################################################################
# PROVIDERS :
############################################################################
#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
#sessionManager.sessionDAO = $sessionDAO
#cookie = org.apache.shiro.web.servlet.SimpleCookie
#cookie.name = SSOcookie
#cookie.path = /
#cookie.domain = localhost
#sessionManager.sessionIdCookie = $cookie
#securityManager.sessionManager = $sessionManager
#cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#cacheManager.cacheManagerConfigFile = classpath:ehcache.xml
#securityManager.cacheManager = $cacheManager
#securityManager.sessionMode = native
#Para testing:
#ssl.enabled=false    
subjectFactory = io.buji.pac4j.ClientSubjectFactory
securityManager.subjectFactory = $subjectFactory    
facebookClient = org.pac4j.oauth.client.FacebookClient
facebookClient.key = 145278422258960
facebookClient.secret = be21409ba8f39b5dae2a7de525484da8    
twitterClient = org.pac4j.oauth.client.TwitterClient
twitterClient.key = CoxUiYwQOSFDReZYdjigBA
twitterClient.secret = 2kAzunH5Btc4gRSaMr7D7MkyoJ5u1VzbOOzE8rBofs    
simpleAuthenticator = org.pac4j.http.credentials.authenticator.test.SimpleTestUsernamePasswordAuthenticator    
formClient = org.pac4j.http.client.indirect.FormClient
formClient.loginUrl = http://localhost:8080/webApp1/loginForm.jsp
formClient.authenticator = $simpleAuthenticator    
basicAuthClient = org.pac4j.http.client.indirect.IndirectBasicAuthClient
basicAuthClient.authenticator = $simpleAuthenticator    
casClient = org.pac4j.cas.client.CasClient
casClient.casLoginUrl = https://casserverpac4j.herokuapp.com
#casClient.gateway=true    
vkClient = org.pac4j.oauth.client.VkClient
vkClient.key = 4224582
vkClient.secret = nDc4IHTqu8ioFMkHKifq    
saml2Config = org.pac4j.saml.client.SAML2ClientConfiguration
saml2Config.keystorePath = resource:samlKeystore.jks
saml2Config.keystorePassword = pac4j-demo-passwd
saml2Config.privateKeyPassword = pac4j-demo-passwd
saml2Config.identityProviderMetadataPath = resource:metadata-okta.xml
saml2Config.maximumAuthenticationLifetime = 3600
saml2Config.serviceProviderEntityId = http://localhost:8080/webApp1/callback?client_name=SAML2Client
saml2Config.serviceProviderMetadataPath = resource:sp-metadata.xml    
saml2Client = org.pac4j.saml.client.SAML2Client
saml2Client.configuration = $saml2Config    
clients = org.pac4j.core.client.Clients
clients.callbackUrl = http://localhost:8080/webApp1/callback
clients.clients = $facebookClient,$twitterClient,$formClient,$basicAuthClient,$casClient,$vkClient,$saml2Client    
############################################################################
# REALM &amp; FILTERS :
############################################################################
clientsRealm = io.buji.pac4j.ClientRealm
clientsRealm.defaultRoles = ROLE_USER
clientsRealm.clients = $clients    
clientsFilter = io.buji.pac4j.ClientFilter
clientsFilter.clients = $clients
clientsFilter.failureUrl = /error500.jsp    
facebookRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
facebookRoles.client = $facebookClient
twitterRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
twitterRoles.client = $twitterClient
formRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
formRoles.client = $formClient
basicAuthRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
basicAuthRoles.client = $basicAuthClient
casRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
casRoles.client = $casClient
vkRoles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
vkRoles.client = $vkClient
saml2Roles = io.buji.pac4j.filter.ClientRolesAuthorizationFilter
saml2Roles.client = $saml2Client    
[urls]
/facebook/** = facebookRoles[ROLE_USER]
/twitter/** = twitterRoles[ROLE_USER]
/form/** = formRoles[ROLE_USER]
/basicauth/** = basicAuthRoles[ROLE_USER]
/cas/** = casRoles[ROLE_USER]
/vk/** = vkRoles[ROLE_USER]
/saml/** = saml2Roles[ROLE_USER]
/callback = clientsFilter
/logout = logout
/** = anon
</code></pre>

<p>As since I want to perform a SSO within the various WARs that are in my EAR, I initially added the EhCacheManager but then I got the following error.</p>

<pre><code>2016-05-01 22:03:38,126 INFO  [org.apache.shiro.web.env.EnvironmentLoader] (ServerService Thread Pool -- 163) Starting Shiro environment initialization.
2016-05-01 22:03:38,179 ERROR [org.apache.shiro.web.env.EnvironmentLoader] (ServerService Thread Pool -- 163) Shiro environment initialization failed: org.apache.shiro.config.ConfigurationException: Unable to instantiate class [org.apache.shiro.cache.ehcache.EhCacheManager] for object named 'cacheManager'.  Please ensure you've specified the fully qualified class name correctly.
    at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:151)
    at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:119)
    at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:161)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:124)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:102)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:88)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
    at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
    at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
    at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
    at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:221)
    at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:133)
    at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
    at io.undertow.servlet.core.ApplicationListeners.contextInitialized(ApplicationListeners.java:187)
    at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:198)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:100)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:82)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)
    at org.jboss.threads.JBossThread.run(JBossThread.java:320)
Caused by: org.apache.shiro.util.UnknownClassException: Unable to load class named [org.apache.shiro.cache.ehcache.EhCacheManager] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found.
    at org.apache.shiro.util.ClassUtils.forName(ClassUtils.java:148)
    at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:164)
    at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:144)
    ... 26 more
</code></pre>

<p>Does Buji-pac4j work with the EhCache configuration for SSO with WARs?</p>
","<java><apache><saml><cas><shiro>","0",""
"29010211","Associate thread from DeferredResult and Spring AsyncRestTemplate to Shiro","<p>how can I associate a thread resulting from a Spring deferred result to  Apache Shiro Subject via subject.associateWith(work); </p>

<p>It's clear for callable or runnables but not for the async Spring Objects.</p>

<pre><code>   @RequestMapping(value = ""etc/async/{atbId}"", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
    @ResponseBody
    public DeferredResult&lt;ResponseEntity&lt;String&gt;&gt; getEtcById(HttpServletResponse response,
                               @PathVariable(""atbId"") long atbId,                               
                               HttpSession session) throws IOException {

        log.debug(""Enter async getEtcById with ListenableFuture"");
        final String userName = (String) session.getAttribute(SessionKeys.USER_ID);
        final AuthenticatedAsyncRestTemplate restTemplate = new AuthenticatedAsyncRestTemplate();

        final DeferredResult&lt;ResponseEntity&lt;String&gt;&gt; result = new DeferredResult&lt;&gt;(100000); 
        ListenableFuture&lt;ResponseEntity&lt;String&gt;&gt; future = 
                restTemplate.getForEntity(""http://localhost:8079/ts.download/download/etc/{atbId}?userName={userName}"", String.class, atbId, userName);  

        future.addCallback(  
                  new ListenableFutureCallback&lt;ResponseEntity&lt;String&gt;&gt;() {  
                    @Override  
                    public void onSuccess(ResponseEntity&lt;String&gt; response) {  
                        // Will be called in HttpClient thread  
                        log.debug(""ListenableFuture onSuccess: "" + response.getBody());                         
                        result.setResult(response);  
                    }  

                    @Override  
                    public void onFailure(Throwable t) {  
                        log.error(""ListenableFuture onFailure"", t);  
                        result.setErrorResult(t.getMessage());  
                    }  
                });  

        log.debug(""Leaving async getEtcById"");
        return result;
    }
</code></pre>

<p>The rest call works but I get this error message:</p>

<blockquote>
  <p>Servlet.service() for servlet [spring] in context with path
  [/mycontext] threw exception [java.lang.RuntimeException:
  org.apache.shiro.UnavailableSecurityManagerException: No
  SecurityManager accessible to the calling code, either bound to the
  org.apache.shiro.util.ThreadContext or as a vm static singleton.  This
  is an invalid application configuration.] with root cause
  org.apache.shiro.UnavailableSecurityManagerException: No
  SecurityManager accessible to the calling code, either bound to the
  org.apache.shiro.util.ThreadContext or as a vm static singleton.  This
  is an invalid application configuration.  at
  org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
    at org.apache.shiro.subject.Subject$Builder.(Subject.java:627)
    at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
    at
  org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSubject(ShiroHttpServletRequest.java:88)
    at
  org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSubjectPrincipal(ShiroHttpServletRequest.java:93)
    at
  org.apache.shiro.web.servlet.ShiroHttpServletRequest.getUserPrincipal(ShiroHttpServletRequest.java:111)
    at
  org.springframework.web.servlet.FrameworkServlet.getUsernameForRequest(FrameworkServlet.java:1079)
    at
  org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1065)
    at
  org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:996)
    at
  org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)     at
  org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)     at
  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
    at
  org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at
  org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:749)
    at
  org.apache.catalina.core.ApplicationDispatcher.doDispatch(ApplicationDispatcher.java:660)
    at
  org.apache.catalina.core.ApplicationDispatcher.dispatch(ApplicationDispatcher.java:626)
    at
  org.apache.catalina.core.AsyncContextImpl$1.run(AsyncContextImpl.java:225)
    at
  org.apache.catalina.core.AsyncContextImpl.doInternalDispatch(AsyncContextImpl.java:368)
    at
  org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
    at
  org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
    at
  org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
    at
  org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
    at
  org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)
    at
  org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at
  org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:300)
    at
  org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1636)
    at
  org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:599)
    at
  org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1721)
    at
  org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1679)
    at
  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at
  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)</p>
</blockquote>
","<spring><rest><spring-mvc><asynchronous><shiro>","1",""
"22617478","Protect REST URL with same path and different http methods","<p>I have a situation that I need some assistance with. I have four REST URL with same path and different http methods</p>

<pre><code>/api/users/** GET,POST,PUT,DELETE
</code></pre>

<p>I want to use Shiro to protoct the PUP, POST, DELETE and keep GET is anonymous. I configured the following URLs  but with out luck</p>

<pre><code>/api/users/** =rest[user:update,user:delete,user:create]
/api/users/** =anon
</code></pre>
","<rest><shiro>","0","22645340"
"21368193","How do I handle ajax authentication after initial Login with Shiro","<p>I have implemented the usual username/password login process with Shiro for my single page webapp which will submit the username and password over https in production. I use a REST back end rather than a typical MVC framework of any sort to facilitate my SPA. Typically with a REST API a BasicAuth is used to log in, and in response if successful an encrypted token is returned either as a cookie or a response header. Subsequent calls would return the cookie or header to avoid having to resend username and password. Usually the token is an ecnrypted username possibly with some other info that can be derived on the server side either as a session token or something else.</p>

<p>Anyway, as I said I am using Shiro and I understand Shiro can use multiple realms for authentication and authorization. What I am trying to do for my web site is require the initial username/password login, then after a user is logged in, somehow avoid the Shiro UsernamePassword authentication process and instead use the token check process. </p>

<p>I think the right way is to provide my own custom authentication realm and credentials matcher.. and I have a public domain SHA256 salted password bit of code that stores the salt, iterations and password in one string that I'd like to use. What I am not sure of is how to configure the shiro.ini... do I need to provide two custom classes, one for my own username/password for initial login, then another for my token authentication? Or can I utilize the built-in shiro usernamePassword, and will it's rememberMe feature be good enough in jquery $.ajax() calls? Perhaps I can use the Shiro implementation but also need to attach the shiro rememberMe cookie to all my $.ajax() calls? </p>

<p>Just a little confused really on the best approach to provide good username/password initial login and subsequent calls without needing to resent username/password... and to support session invalidation and logout functionality.</p>

<p>Another thought is to not use Shiro, instead use my own servlet filter to check for the initial login, if authenticated, return the response header (or cookie) myself with my own encrypted token that I keep in HttpSession or in a database back end for the duration of the session, and make sure in my jquery ajax that after each response to look for the token, and resend it in the subsequent requests.</p>

<p>Thanks</p>
","<ajax><authentication><single-page-application><shiro>","1",""
"18345485","How can I configure the maximum number of simultaneous threads used for Jersey REST calls?","<p>I'm working on a server application that uses <code>Jersey JAX-RS</code> to handle <code>REST</code>, <code>Shiro</code> to handle authentication, and it's all running on a <code>Tomcat</code> instance.</p>

<p>The problem I'm experiencing is that the REST calls appear to be handled serially (or at least, with only a small number of simultaneous threads).</p>

<p>I've written a small test in <code>NodeJS</code> that logs roughly 80 users into the server within about 5 seconds.  What I've found is that the response times get progressively longer for each user.  Here's my output:</p>

<pre><code>Login completed in 3256 ms
Login completed in 3752 ms
Login completed in 3830 ms
Login completed in 3957 ms
Login completed in 4304 ms
Login completed in 4528 ms
Login completed in 4724 ms
Login completed in 4814 ms
Login completed in 5072 ms
Login completed in 5171 ms
</code></pre>

<p>... removed some, you get the idea</p>

<pre><code>Login completed in 25337 ms
Login completed in 26364 ms
Login completed in 26738 ms
Login completed in 27114 ms
Login completed in 27266 ms
Login completed in 27337 ms
Login completed in 27847 ms
Login completed in 28365 ms
Login completed in 28571 ms
Login completed in 32358 ms
</code></pre>

<p>The login call does some db work and then returns.  The interesting part is that I'm also timing the call on the server side, and it <em>always</em> reports a login time of roughly 3s - 6s.</p>

<p>This tells me that the requests are sitting in a queue somewhere before they ever hit my code.  I've read that <code>Jersey</code> is supposed to start a new thread for every request, but is there a maximum that I'm hitting?  If so, how can I increase/configure it?  Or is this a <code>Tomcat</code> configuration problem?</p>

<p>I've disabled <code>Shiro</code> to ensure that it is not causing the problem.</p>
","<java><tomcat><jersey><jax-rs><shiro>","2",""
"26959357","How to prevent accessing a Servlet unauthenticated with Apache Shiro?","<p>I am using Apache Shiro for my web application's admin authentication. All the admin content is placed under the <em>/admin</em> directory and I have an <em>AdminServlet</em> that handles the requests to the admin features. The Admin Servlet's URL mapping is <em>/Admin</em>. Shiro successfully intercepts the request and redirects to the login page if the user wants to access something under <em>/admin</em>. However, I type in <em>/Admin</em> to the URL bar of the browser I can essentially bypass Shiro and get to the admin page without authentication.
How can I protect my servlet so that it only performs a request if it is authenticated?</p>

<p>Here's the relevant bits of my code:</p>

<p>shiro.ini:</p>

<pre><code>[main]
shiro.loginUrl = /login.jsp
[urls]
/login.jsp = authc
/logout = logout
/admin/** = authc
</code></pre>

<p>web.xml:</p>

<pre><code>&lt;servlet&gt;
    &lt;servlet-name&gt;AdminServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;mypackage.servlet.AdminServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;AdminServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/Admin&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Whatever functionality the servlet has, it always ends up creating a <em>RequestDispatcher</em> forwarding to some file located under <em>/admin</em>.</p>

<p>I tried putting /Admin/** (as the servlet URL mapping) into the shiro.ini file to be an authenticated content but as a result I kept getting redirected to the login page after submitting the credentials.</p>

<p>Thank you in advance!</p>
","<java><apache><servlets><shiro>","0","27879602"
"32257932","Does Apache Shiro support bCrypt?","<p>Does the Apache Shiro Authentication Framework support the use of the bCrypt password hashing algorithm? If not, is there a way to get it working with Shiro?</p>

<p>Are there any other Authentication frameworks like Shiro supporting bCrypt, other than Spring Security?</p>
","<java><shiro><jbcrypt>","3",""
"25626825","Configuration Hazelcast and Shiro","<p>I am currently having trouble configuring Shiro and Hazelcast in conjunction:</p>

<p>web.xml:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter&gt;
    &lt;filter-name&gt;hazelcastWebFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
[...]
    &lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;hazelcastWebFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>ApplicationContext.xml:</p>

<pre><code>&lt;!-- Hazelcast configuration--&gt;
&lt;hz:hazelcast id=""hazelcastInstance""&gt;
    &lt;hz:config&gt;
        &lt;hz:instance-name&gt;${hazelcast.instance}&lt;/hz:instance-name&gt;
        &lt;hz:group name=""${hazelcast.group}"" password=""${hazelcast.password}""/&gt;
        &lt;hz:network port=""${hazelcast.port}"" port-auto-increment=""${hazelcast.port.autoincrement}""&gt;
            &lt;hz:join&gt;
                &lt;hz:multicast enabled=""${hazelcast.multicast.enabled}""
                              multicast-group=""${hazelcast.multicast.group}""
                              multicast-port=""${hazelcast.multicast.port}""
                              multicast-time-to-live=""${hazelcast.multicast.timetolive}""
                              multicast-timeout-seconds=""${hazelcast.multicast.timeoutseconds}""&gt;&lt;/hz:multicast&gt;
            &lt;/hz:join&gt;
        &lt;/hz:network&gt;
    &lt;/hz:config&gt;
&lt;/hz:hazelcast&gt;
[...]
&lt;bean id=""hazelcastWebFilter"" class=""com.hazelcast.web.WebFilter"" depends-on=""hazelcastInstance""&gt;
    &lt;constructor-arg name=""properties""&gt;
        &lt;props&gt;
            &lt;prop key=""map-name""&gt;shiro-activeSessionCache&lt;/prop&gt;
            &lt;prop key=""sticky-session""&gt;${hazelcast.webfilter.stickysession}&lt;/prop&gt;
            &lt;prop key=""instance-name""&gt;${hazelcast.instance}&lt;/prop&gt;
        &lt;/props&gt;
    &lt;/constructor-arg&gt;
&lt;/bean&gt;

&lt;!-- Shiro --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/s/Login.app""/&gt;
    &lt;property name=""successUrl"" value=""/goMain.app""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp""/&gt;
    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""authc"" value-ref=""auth""/&gt;
            &lt;entry key=""authcpda"" value-ref=""pdaAuth""/&gt;
        &lt;/util:map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            HERE ARE PATHS onfigured
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""auth"" class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/s/Login.app""/&gt;
&lt;/bean&gt;

&lt;bean id=""pdaAuth"" class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/s/pda/login.app""/&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""PRODUCTRealm""/&gt;
    &lt;property name=""cacheManager"" ref=""shiroCacheManager""/&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""&gt;&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!--&lt;bean id=""shiroCacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager""/&gt;--&gt;
&lt;bean id=""shiroCacheManager"" class=""de.logentis.Hazelcast.HazelcastCacheManager""/&gt;

&lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt;
    &lt;property name=""sessionValidationSchedulerEnabled"" value=""false""/&gt;
&lt;/bean&gt;

&lt;!-- Define the Shiro Realm implementation you want to use to connect to your back-end --&gt;
&lt;!-- security datasource: Netversys DB --&gt;
&lt;bean id=""PRODUCTRealm"" class=""PRODUCTNAMEJdbcRealm""&gt;
    &lt;property name=""dataSource"" ref=""dataSource""/&gt;
    &lt;property name=""schema"" value=""${PRODUCTdb.schema}""/&gt;
&lt;/bean&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
      depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p>HazelcastCacheManager is from: <a href=""https://github.com/stormpath/shiro-hazelcast-web-sample/blob/master/src/main/java/com/stormpath/samples/shiro/hazelcast/cache/HazelcastCacheManager.java"" rel=""nofollow"">https://github.com/stormpath/shiro-hazelcast-web-sample/blob/master/src/main/java/com/stormpath/samples/shiro/hazelcast/cache/HazelcastCacheManager.java</a></p>

<p>Problem 1: I can't log into the Application. I'm instantly logged out.</p>

<p>Problem 2: A JSESSIONID appears as query parameter (?). Was definitely never before</p>

<p>Problem 3: The hazelcastsession seems lost, although a Cookie exists</p>

<p>Problem 4: I have 3 Cookies: 2 JSESSIONID and 1 hazelcast.</p>

<p>Any help will be appreciated </p>
","<java><shiro><hazelcast>","0",""
"10939732","Shiro: Forcing second realm authentication even though existing session is already authenticated via other realm","<p>In my web application that uses Apache Shiro for AuthC and AuthZ I have two authentication realms: One for the regular web interface (called <code>SsoRealm</code>) and another one for the REST API (called <code>RestRealm</code>) using an API token. The principals authenticated by both realms have disjunct permissions (and <code>AuthenticationTokens</code>). If there is no pre-existing session and an API call arrives via the REST interface everything is fine and the authentication (and authorization) happens via the <code>RestRealm</code>. However, if there is an existing session previously authenticated via the
<code>SsoRealm</code> no authentication attempt via the <code>RestRealm</code> happens and the consecutive authorization check (using <code>Subject.isPermitted</code>) fails as the subject is from the wrong realm.</p>

<p>The corresponding authentication filters are registered as (using Shiro Guice):</p>

<pre><code>addFilterChain(""/api/x/*/y"", REST_AUTH, NO_SESSION_CREATION);
addFilterChain(""/**"", SSO_AUTH);
</code></pre>

<p>Is there anything I can do to force a re-authentication with the ""correct"" realm?</p>

<p>Would a custom <code>AuthenticationStrategy</code> help (i.e., does the <code>AuthenticationStrategy</code> contract allow the implementation of a strategy ""if <code>RestRealm</code> is involved, the <code>RestRealm</code> authentication needs to be successful"")? AFAICS <code>ModularRealmAuthenticator.doMultiRealmAuthentication</code> is not called again if there is an existing authenticated session...</p>
","<java><guice><shiro>","0","11028924"
"20016289","Apache shiro authentication , authorisation and SSO with Active Directory","<p>I'm a complete newbie on the concepts of web security and I was having a pre-conceived notion that securing the application is incredibly hard. </p>

<p>Looking at a video on Apache shiro, I have a feeling that the complexity of security has all been abstracted in form of a nice, simple, unified API.</p>

<p>I'm trying to write a security layer which will be responsible for Authorization and SSO for my underlying SOAP based webservices.</p>

<p>The  permissions will all be sourced from LDAP (OpenDS) which will be maintained on my side (ie not external), as they reflect the bunch of functionality available on my system.</p>

<p>I have a requirement that clients can have their user management in Active Directory (external) and once they log-in to AD (probably their windows login), they should automatically be authenticated to be able to consume my services.</p>

<p>Then I will check whether the user has got the right authorization to consume a specific service.</p>

<p>This effectively means, Authentication is done externally but authorisation is done internally as far as my boundaries are concerned. But my security layer has to understand that the user has been authenticated and know who the user is.</p>

<p>Is this achievable in Shiro? Any pointers would be of great help.</p>
","<active-directory><single-sign-on><shiro>","4",""
"31836795","Map Shiro's AuthenticationException with Jersey's ExceptionMapper","<h2>Preface</h2>

<p>First of all, my sincerest apologies for this question being extremely long, but I honestly have no idea on how to shorten it, since each part is kind of a special case. Admittedly, I may be blind on this since I am banging my head against the wall for a couple of days now and I am starting to get desperate.</p>

<p>My utmost respect and thankfulness to all of you who read through it.</p>

<h2>The aim</h2>

<p>I would like to be able to map <a href=""https://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/authc/AuthenticationException.html"" rel=""noreferrer"" title=""JavaDoc for org.apache.shiro.authc.AuthenticationException"">Shiro's AuthenticationException</a> and it's subclasses to <a href=""https://jersey.java.net/apidocs/1.19/jersey/javax/ws/rs/core/Response.html"" rel=""noreferrer"" title=""JavaDoc for javax.ws.rs.core.Response"">JAX-RS Responses</a> by using <a href=""https://jersey.java.net/apidocs/1.19/jersey/javax/ws/rs/ext/ExceptionMapper.html"" rel=""noreferrer"" title=""JavaDoc for javax.ws.rs.ext.ExceptionMapper"">Jersey ExceptionMappers</a>, set up using a <a href=""https://google.github.io/guice/api-docs/3.0/javadoc/com/google/inject/Injector.html"" rel=""noreferrer"" title=""JavaDoc for com.google.inject.Injector"">Guice 3.0 Injector</a> which creates an embedded Jetty.</p>

<h2>The environment</h2>

<ul>
<li>Guice 3.0</li>
<li>Jetty 9.2.12.v20150709</li>
<li>Jersey 1.19.1</li>
<li>Shiro 1.2.4</li>
</ul>

<h2>The setup</h2>

<p>The embedded Jetty is created using a Guice Injector</p>



<pre class=""lang-java prettyprint-override""><code>// imports omitted for brevity
public class Bootstrap {

    public static void main(String[] args) throws Exception {

      /*
       * The ShiroWebModule is passed as a class
       * since it needs a ServletContext to be initialized
       */
        Injector injector = Guice.createInjector(new ServerModule(MyShiroWebModule.class));

        Server server = injector.getInstance(Server.class);

        server.start();
        server.join();
    }
}
</code></pre>

<p>The <code>ServerModule</code> binds a Provider for the Jetty Server:</p>

<pre class=""lang-java prettyprint-override""><code>public class ServerModule extends AbstractModule {

    Class&lt;? extends ShiroWebModule&gt; clazz;

    public ServerModule(Class &lt;?extends ShiroWebModule&gt; clazz) {
        this.clazz = clazz;
    }

    @Override
    protected void configure() {
        bind(Server.class)
         .toProvider(JettyProvider.withShiroWebModule(clazz))
         .in(Singleton.class);
    }

}
</code></pre>

<p>The <code>JettyProvider</code> sets up a Jetty WebApplicationContext, registers the ServletContextListener necessary for Guice and a few things more, which I left in to make sure no ""side effects"" may be hidden:</p>

<pre class=""lang-java prettyprint-override""><code>public class JettyProvider implements Provider&lt;Server&gt;{

    @Inject
    Injector injector;

    @Inject
    @Named(""server.Port"")
    Integer port;

    @Inject
    @Named(""server.Host"")
    String host;

    private Class&lt;? extends ShiroWebModule&gt; clazz;

    private static Server server;

    private JettyProvider(Class&lt;? extends ShiroWebModule&gt; clazz){
        this.clazz = clazz;
    }

    public static JettyProvider withShiroWebModule(Class&lt;? extends ShiroWebModule&gt; clazz){
        return new JettyProvider(clazz);
    }

    public Server get() {       

        WebAppContext webAppContext = new WebAppContext();
        webAppContext.setContextPath(""/"");

        // Set during testing only
        webAppContext.setResourceBase(""src/main/webapp/"");
        webAppContext.setParentLoaderPriority(true);

        webAppContext.addEventListener(
          new MyServletContextListener(injector,clazz)
        );

        webAppContext.addFilter(
          GuiceFilter.class, ""/*"",
          EnumSet.allOf(DispatcherType.class)
        );

        webAppContext.setThrowUnavailableOnStartupException(true);

        QueuedThreadPool threadPool = new QueuedThreadPool(500, 10);

        server = new Server(threadPool);

        ServerConnector connector = new ServerConnector(server);
        connector.setHost(this.host);
        connector.setPort(this.port);

        RequestLogHandler requestLogHandler = new RequestLogHandler();
        requestLogHandler.setRequestLog(new NCSARequestLog());

        HandlerCollection handlers = new HandlerCollection(true);

        handlers.addHandler(webAppContext);
        handlers.addHandler(requestLogHandler);

        server.addConnector(connector);
        server.setStopAtShutdown(true);
        server.setHandler(handlers);
        return server;
    }

}
</code></pre>

<p>In <code>MyServletContextListener</code>, I created a child injector, which gets initialized with the JerseyServletModule:</p>

<pre class=""lang-java prettyprint-override""><code>public class MyServletContextListener extends GuiceServletContextListener {

    private ServletContext servletContext;

    private Injector injector;

    private Class&lt;? extends ShiroWebModule&gt; shiroModuleClass;
    private ShiroWebModule module;

    public ServletContextListener(Injector injector,
            Class&lt;? extends ShiroWebModule&gt; clazz) {
        this.injector = injector;
        this.shiroModuleClass = clazz;
    }

    @Override
    public void contextInitialized(ServletContextEvent servletContextEvent) {

        this.servletContext = servletContextEvent.getServletContext();
        super.contextInitialized(servletContextEvent);

    }

    @Override
    protected Injector getInjector() {
        /*
         * Since we finally have our ServletContext
         * we can now instantiate our ShiroWebModule
         */
        try {
            module = shiroModuleClass.getConstructor(ServletContext.class)
                    .newInstance(this.servletContext);
        } catch (InstantiationException | IllegalAccessException
                | IllegalArgumentException | InvocationTargetException
                | NoSuchMethodException | SecurityException e) {
            e.printStackTrace();
        }

    /*
     * Now, we create a child injector with the JerseyModule
     */
        Injector child = injector.createChildInjector(module,
                new JerseyModule());

        SecurityManager securityManager = child
                .getInstance(SecurityManager.class);
        SecurityUtils.setSecurityManager(securityManager);

        return child;
    }

}
</code></pre>

<p>The JerseyModule, a subclass of <code>JerseyServletModule</code> now put everything together:</p>

<pre class=""lang-java prettyprint-override""><code>public class JerseyModule extends JerseyServletModule {

    @Override
    protected void configureServlets() {
        bindings();
        filters();
    }

    private void bindings() {

        bind(DefaultServlet.class).asEagerSingleton();
        bind(GuiceContainer.class).asEagerSingleton();
        serve(""/*"").with(DefaultServlet.class);
    }

    private void filters() {
        Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();

    // Make sure Jersey scans the package
        params.put(""com.sun.jersey.config.property.packages"",
                ""com.example.webapp"");

        params.put(""com.sun.jersey.config.feature.Trace"", ""true"");

        filter(""/*"").through(GuiceShiroFilter.class,params);
        filter(""/*"").through(GuiceContainer.class, params);

        /* 
         * Although the ExceptionHandler is already found by Jersey
         * I bound it manually to be sure
         */
        bind(ExceptionHandler.class);

        bind(MyService.class);

    }

}
</code></pre>

<p>The <code>ExceptionHandler</code> is extremely straightforward and looks like this:</p>

<pre class=""lang-java prettyprint-override""><code>@Provider
@Singleton
public class ExceptionHandler implements
        ExceptionMapper&lt;AuthenticationException&gt; {

    public Response toResponse(AuthenticationException exception) {
        return Response
                .status(Status.UNAUTHORIZED)
                .entity(""auth exception handled"")
                .build();
    }

}
</code></pre>

<h2>The problem</h2>

<p>Now everything works fine when I want to access a restricted resource and enter correct principal/credential combinations. But as soon as enter a non-existing user or a wrong password, I want an <code>AuthenticationException</code> to be thrown by Shiro and I want it to be handled by the above <code>ExceptionHandler</code>.</p>

<p>Utilizing the default <code>AUTHC</code> filter provided by Shiro in the beginning, I noticed that AuthenticationExceptions are silently swallowed and the user is redirected to the login page again.</p>

<p>So I subclassed Shiro's FormAuthenticationFilter to throw an <code>AuthenticationException</code> if there is one:</p>

<pre class=""lang-java prettyprint-override""><code>public class MyFormAutheticationFilter extends FormAuthenticationFilter {

    @Override
    protected boolean onLoginFailure(AuthenticationToken token,
            AuthenticationException e, ServletRequest request,
            ServletResponse response) {
        if(e != null){
            throw e;
        }
        return super.onLoginFailure(token, e, request, response);
    }
}
</code></pre>

<p>And I also tried it with throwing the exception <code>e</code> wrapped in a <a href=""https://jersey.java.net/apidocs/1.19/jersey/com/sun/jersey/api/container/MappableContainerException.html"" rel=""noreferrer"" title=""JavaDoc for com.sun.jersey.api.container.MappableContainerException"">MappableContainerException</a>.</p>

<p>Both approaches cause the same problem: Instead of the exception being handled by the defined <code>ExceptionHandler</code>, a <code>javax.servlet.ServletException</code> is thrown:</p>

<pre class=""lang-java prettyprint-override""><code>  javax.servlet.ServletException: org.apache.shiro.authc.AuthenticationException: Unknown Account!
    at org.apache.shiro.web.servlet.AdviceFilter.cleanup(AdviceFilter.java:196)
    at org.apache.shiro.web.filter.authc.AuthenticatingFilter.cleanup(AuthenticatingFilter.java:155)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:148)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.guice.web.SimpleFilterChain.doFilter(SimpleFilterChain.java:41)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
    at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
    at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:118)
    at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:113)
    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
    at org.eclipse.jetty.server.Server.handle(Server.java:499)
    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
    at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.shiro.authc.AuthenticationException: Unknown Account!
    at com.example.webapp.security.MyAuthorizingRealm.doGetAuthenticationInfo(MyAuthorizingRealm.java:27)
    at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
    at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53)
    at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:154)
    at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
    at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
    at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
    at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
    ... 32 more
</code></pre>

<h2>The question, after all</h2>

<p>Given that the environment can't be changed, how can I achieve that a server instance still can be requested via Guice, while Shiro's exceptions are handled with Jersey's auto discovered ExceptionMappers?</p>
","<jersey><guice><shiro><embedded-jetty>","11",""
"15364126","Encapsulating Shiro Subject","<p>I would like to encapsulate Apache Shiro in a Servlet environment. I want to create MySecurityUtils and use Shiro SecurityUtils.getSubject in a static method. My question is whether this is a correct way to use SecurityUtils.getSubject method in a static method. Can this cause any problems in multithreaded servlet environment?</p>

<p>MySecurityUtils.java</p>

<pre><code>import org.apache.shiro.subject.Subject;
import org.apache.shiro.SecurityUtils;

public class MySecurityUtils {

    public static MyUser getUser() {
        Subject currentUser = SecurityUtils.getSubject();
        MyUser myUser = new MyUser(currentUser);
        ...
    }
}
</code></pre>

<p>MyUser.java</p>

<pre><code>public class MyUser {
   // ... constructors
   public boolean isPermitted(..) {subject.isPermitted(...)}
}
</code></pre>
","<java><security><servlets><shiro>","0","15379813"
"41410446","SpringBoot + Apache Shiro Java Config","<p>I have problems with implement SprigBoot WebApp using Apache Shiro(I had same problems with Spring Security but I read that Shiro is easier to implement - Unfortunately for me Not).</p>

<p>So, at the beginning, I use springboot and shiro, my web pages are with *.html using thymeleaf and bootstrap, I use database MySQL using Hibernate and I don't want static users just from db, I'm trying to implements Shiro basing on a few tutorials but I can't do it.</p>

<p>What is my problem exactly? - I can't login. After clicking Login nothing happens, just ""refres"" page.</p>

<p>Bottom is full of my code:</p>

<p><strong>pom.xml Dependencies</strong></p>

<pre><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.3.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;1.3.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
        &lt;version&gt;1.3.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
        &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.webjars&lt;/groupId&gt;
        &lt;artifactId&gt;bootstrap&lt;/artifactId&gt;
        &lt;version&gt;3.3.7&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.webjars&lt;/groupId&gt;
        &lt;artifactId&gt;jquery&lt;/artifactId&gt;
        &lt;version&gt;2.1.4&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;
        &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;
        &lt;scope&gt;provided&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.webjars&lt;/groupId&gt;
        &lt;artifactId&gt;webjars-locator&lt;/artifactId&gt;
        &lt;version&gt;0.32&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

<p><strong>MainStConfig.java Configuration</strong> </p>

<pre><code>@Configuration
@EnableWebMvc
@ComponentScan(basePackages = {""app.controllers"", ""app.service""})
public class MainStConfig extends WebMvcConfigurerAdapter {
    private static final String[] CLASSPATH_RESOURCE_LOCATIONS = { 
            ""classpath:/META-INF/resources/"",
            ""classpath:/resources/"", 
            ""classpath:/static/"", 
            ""classpath:/public/"", 
            ""classpath:/webjars/""
    };
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler(""/**"").addResourceLocations(CLASSPATH_RESOURCE_LOCATIONS);
    }


    @Bean
    public DispatcherServlet dispatcherServlet() {

        DispatcherServlet servlet = new DispatcherServlet();
        servlet.setDispatchOptionsRequest(true);

        return servlet;
    }
    @Bean
    public ServletRegistrationBean dispatcherRegistration(DispatcherServlet dispatcherServlet) {

        ServletRegistrationBean registration = new ServletRegistrationBean(dispatcherServlet);
        registration.addUrlMappings(""/*"");

        return registration;
    }
    @Bean(name = ""shiroFilter"")
    public ShiroFilterFactoryBean shiroFilter() {

        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
        shiroFilter.setLoginUrl(""/login.html"");
        shiroFilter.setSuccessUrl(""/index.html"");
        shiroFilter.setUnauthorizedUrl(""/index.html?error"");


        Map&lt;String, String&gt; filterChain = new HashMap&lt;&gt;(); 
        filterChain.put(""/"", ""anon"");
        filterChain.put(""/login"", ""authc,roles[guest]"");
        filterChain.put(""/admin/**"", ""authc,roles[ADMIN]"");
        filterChain.put(""/student/**"", ""authc,roles[STUDENT]"");
        filterChain.put(""/teacher/**"", ""roles,roles[TEACHER]"");

        shiroFilter.setFilterChainDefinitionMap(filterChain);
        shiroFilter.setSecurityManager(securityManager());


        Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
        filters.put(""anon"", new AnonymousFilter());
        filters.put(""authc"", new FormAuthenticationFilter());
        filters.put(""logout"", new LogoutFilter());
        filters.put(""roles"", new RolesAuthorizationFilter());
        filters.put(""user"", new UserFilter());
        shiroFilter.setFilters(filters);

        return shiroFilter;
    }
    @Bean
    public org.apache.shiro.mgt.SecurityManager securityManager() {

        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(userRealm());

        return securityManager;
    }
    @Bean(name = ""userRealm"")
    @DependsOn(""lifecycleBeanPostProcessor"")
    public UserRealm userRealm() {
        return new UserRealm();
    }
    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }
    }
</code></pre>

<p><strong>MainStApplication.java StartUp app</strong></p>

<pre><code>@SpringBootApplication
public class MainStApplication {
    public static void main(String[] args) {
        SpringApplication.run(MainStApplication.class, args);
    }
}
</code></pre>

<p><strong>MainStInitializer.java</strong></p>

<pre><code>public class MainStInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {
    @Override
    protected Class&lt;?&gt;[] getRootConfigClasses() {
        return new Class[] { MainStConfig.class };
    }
    @Override
    protected Class&lt;?&gt;[] getServletConfigClasses() {
        return null;
    }
    @Override
    protected String[] getServletMappings() {
        return new String[] { ""/"" };
    }
}
</code></pre>

<p><strong>UserRealm.java</strong></p>

<pre><code>public class UserRealm extends AuthorizingRealm {

    @Autowired
    private UserManager userManager;

    public UserRealm() {
        setName(""userRealm"");
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        UsernamePasswordToken upat = (UsernamePasswordToken) token;
        User user = userManager.getByUsername(upat.getUsername());

        if (user != null &amp;&amp; user.getPassword().equals(new String(upat.getPassword()))) {
            return new SimpleAuthenticationInfo(user, user.getPassword(), getName());
        } else {
            throw new AuthenticationException(""Invalid username/password combination!"");
        }
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        User user = (User)principals.getPrimaryPrincipal();

        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
        info.addRole(user.getType().toString());
        info.addStringPermission(user.getType().toString());

        return info;
    }
}
</code></pre>

<p><strong>LoginController</strong> </p>

<pre><code>@Controller
    public class LoginController {

        @ModelAttribute(""userR"")
        public User getUser() {
            return new User();
        }
        @RequestMapping(value = ""/login"", method = RequestMethod.GET)
        public String login() {
            return ""login"";
        }
        @RequestMapping(value = ""/admin/index"", method = RequestMethod.GET)
        public String admin() {
            return ""admin/index"";
        }
        @RequestMapping(value = ""/student/index"", method = RequestMethod.GET)
        public String student() {
            return ""student/index"";
        }
        @RequestMapping(value = ""/teacher/index"", method = RequestMethod.GET)
        public String teacher() {
            return ""teacher/index"";
        }


        @RequestMapping(value = ""/login"", method = RequestMethod.POST)
        public String login(String username, String password) {
            Subject currentUser = SecurityUtils.getSubject();
            if (StringUtils.hasText(username) &amp;&amp; StringUtils.hasText(password)) {
                try {
                    currentUser.login(new UsernamePasswordToken(username, password));
                } catch (Exception e) {
                    return ""login"";
                }
                return ""redirect:index"";
            } else {
                return ""login"";
            }
        }

        /*@RequestMapping(value = ""/login"", method=RequestMethod.POST)
        public String login(Model model, @ModelAttribute(""userR"") User user, RedirectAttributes redirectAttrs) {
            model.addAttribute(""login"", user.getLogin());


            if(user.getLogin().equals(""a"")) {
                return ""redirect:/admin/index"";
            }
            if(user.getLogin().equals(""s"")) {
                return ""redirect:/student/index"";
            }
            if(user.getLogin().equals(""t"")) {
                return ""redirect:/teacher/index"";
            }       

            return ""index"";
        }*/
    }
</code></pre>

<p><strong>IndexController.java</strong></p>

<pre><code>@Controller
@RequestMapping(""/"")
public class IndexController {
    @RequestMapping({""/"", ""/index""})
    String index() {
        return ""index"";
    }
    @RequestMapping(""/login"")
    String login() {
        return ""login"";
    }
}
</code></pre>

<p><strong>UserManager</strong> this class using dao and User class from other project added to build path. For clarity - UserHash in future will be to hashing passwords, actually passwords in db are not hashed(hash_hash column in UserHash table), bottom example</p>

<pre><code>@Controller
public class UserManager {
    private UserDao dao = new UserDao();


    public UserManager() {

    }

    public model.user.User getByUsername(String name) {
        model.entity.User u = this.dao.findByLogin(name);
        model.entity.UserHash h = this.dao.findPassByLogin(name);

        return new model.user.User(u).build(h);
    }

}
</code></pre>

<p>And screen of my db:
<a href=""https://i.stack.imgur.com/pmc7k.png"" rel=""nofollow noreferrer"">Screen of 2 tables in DB: User and UserHash</a></p>

<p>Could someone help me to configure Shiro that I can correctly login using data from DB?</p>

<p><strong>UPDATE 1.</strong>
And here is my login.html page</p>

<pre><code>&lt;body&gt;
    &lt;div id=""bodyContainer""&gt;
        &lt;div id=""header""&gt;&lt;/div&gt;
        &lt;div id=""body""&gt;
            &lt;div class=""loginPanel panel-default center-block""&gt;
                &lt;div class=""panel-body""&gt;
                    &lt;div&gt;
                        &lt;p th:if=""${loginError}"" class=""error""&gt;Wrong user or password&lt;/p&gt;

                        &lt;form th:action=""@{login}"" th:object=""${userR}"" method=""post""&gt;
                            &lt;center&gt;&lt;h1&gt;Panel logowania&lt;/h1&gt;&lt;/center&gt;
                            &lt;div class=""loginPanelInputFields""&gt;
                                &lt;span class=""input-group-addon"" id=""sizing-addon1""&gt;Login&lt;/span&gt;
                                &lt;input type=""text"" th:field=""*{login}"" id=""username""
                                    name=""username"" class=""form-control"" placeholder=""login...""
                                    aria-describedby=""sizing-addon1"" /&gt;
                            &lt;/div&gt;
                            &lt;br /&gt;
                            &lt;div class=""loginPanelInputFields""&gt;
                                &lt;span class=""input-group-addon"" id=""sizing-addon1""&gt;Haslo&lt;/span&gt;
                                &lt;input type=""password"" th:field=""*{password}"" id=""password""
                                    name=""password"" class=""form-control"" placeholder=""haslo...""
                                    aria-describedby=""sizing-addon1"" /&gt;
                            &lt;/div&gt;
                            &lt;br /&gt; 
                            &lt;br /&gt; 
                            &lt;input type=""submit"" class=""btn btn-info text-center center-block"" value=""Zaloguj"" /&gt;
                        &lt;/form&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id=""footer""&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>
","<java><spring><spring-boot><shiro>","1",""
"23547461","Redirect to the last page visited after login using Shiro","<p>What is the better way to login with apache shiro and redirect to the last page visited?</p>

<p>I only have this:</p>

<pre><code>SecurityUtils.getSubject().login(new UsernamePasswordToken(username, password, rememberMe);
</code></pre>
","<jsf><shiro>","1","23547496"
"28004938","Trouble Implementing Hashed Passwords Authentication in Shiro 1.3.0","<p>Okay— I’ve been spinning my wheels here for a week trying to figure this out myself, and I’ve gotten nowhere. The Shiro documentation/tutorials out there seem to be too fragmented between the various versions and deprecated design paradigms, such that I am having a hard time figuring out exactly how to implement this myself. Even the official documentation leaves a lot of blanks that leave the novice dazed and confused. I’ve been following this (now somewhat outdated) BalusC tutorial on setting up Apache Shiro authentication in a JSF application (Link: <a href=""http://balusc.blogspot.sg/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">http://balusc.blogspot.sg/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a>). I was able to following the article up through the <strong>“Hashing the password”</strong> section, which is where the article really starts showing it’s age (claims no support for salting), and drove me to look elsewhere for implementing this crucial feature.</p>

<p>Below are the basics of my development environment.<br/></p>

<p><strong>IDE:</strong> NetBeans 8.0.2<br/>
<strong>Server:</strong> TomEE 1.7.1<br/>
<strong>DB:</strong> MySQL 5.5<br/>
<strong>Application Frameworks:</strong><br/>
JSF 2.2<br/>
OmniFaces 1.8.1 (hasn’t yet come into play, other than me using o:form tags in anticipation of further use)<br/>
JPA 2.0 (as TomEE 1.7.1 claims to not support 2.1, at least that’s what NetBeans tells me...)<br/>
Apache DeltaSpike 1.2.1 (Core and JPA modules ONLY; assists with CDI+JPA persistence)<br/>
Apache Shiro 1.3.0-SNAPSHOT (Core and Web modules ONLY)<br/></p>

<p><strong>What I was able to get working:</strong><br/>
- Authenticate users from MySQL database; reading raw/plain-text usernames and passwords<br/>
- Registration form to save new users in raw/plain-text format to the users table</p>

<p>Here the relevant configurations for this:<br/>
<strong>shiro.ini</strong></p>

<pre><code>[main]
# As per BalusC's guide for Ajax aware custom User Filter. Do not use @WebFilter annotation or web.xml to register this filter!
user = ds.nekotoba.filter.FacesAjaxAwareUserFilter
user.loginUrl = /faces/public/login.xhtml

#Define Realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role FROM userroles WHERE user_id = (SELECT id FROM users WHERE username = ?)

#Define Datasource
dataSource = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.serverName = localhost
dataSource.port = ####
dataSource.user = ********
dataSource.password = ********
dataSource.databaseName = ********
jdbcRealm.dataSource = $dataSource

#Add realm to securityManager
securityManager.realms = $jdbcRealm

[urls]
/faces/javax.faces.resource/** = anon
/faces/public/login.xhtml = user
/faces/public/app/** = user
</code></pre>

<p><strong>User Create Method</strong> <code>create()</code></p>

<pre><code>public Long create(User user) {
    //Set created date
    user.setCreatedDate(new Date());

    //Persist to DB
    em.persist(user);
    return user.getId();
}
</code></pre>

<p><strong>Programmatic User Login Method</strong> (from custom JSF login form) <code>login()</code></p>

<pre><code>public void login() throws IOException {
    try {
        SecurityUtils.getSubject().login(new UsernamePasswordToken(username, password, remember));
        SavedRequest savedRequest = WebUtils.getAndClearSavedRequest(Faces.getRequest());
        Faces.redirect(savedRequest != null ? savedRequest.getRequestUrl() : Globals.HOME_URL);
    } catch (AuthenticationException ae) {
        Messages.addGlobalError(""不明なユーザ、また試してみてください。"");
        ae.printStackTrace();
    }
}
</code></pre>

<p>This is all pretty simple, and works— but my problem comes in when trying to convert all of this to use hashed passwords. I was able to get a hashed password, and associated salt saved to the DB from a modified create method— but I can’t seem to get the right settings in my <code>shiro.ini</code> to successfully login using these hashed users.</p>

<p>Updated <code>shiro.ini</code> (to implement new hashed password matching). Note the added <code>PasswordService</code>, <code>PasswordMatcher</code>, and updated <code>authenticationQuery</code> which now includes the salt column. I’ve only included the updated portions of the ini file for brevity.</p>

<pre><code>#Include salt column in authentication query
jdbcRealm.authenticationQuery = SELECT password, salt FROM users WHERE username = ?

#Use Default PasswordService/Matcher. This should use SHA-256, with 500,000 iteration hashing.
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher
</code></pre>

<p>Updated <code>create()</code> method, which hashes the password, and extracts the salt for separate storage in the DB.</p>

<pre><code>public Long create(User user) {
    HashingPasswordService hps = new DefaultPasswordService();
    //Hash password given in registration form using the DefaultPasswordService,
    //this should use the same defaults at the PasswordService/Matcher defined in shiro.ini
    Hash hash = hps.hashPassword(user.getPassword());
    //Set user.password to hashed version for persisting to DB
    String hashedPass = hash.toBase64();
    user.setPassword(hashedPass);
    //Get related salt from hash and set in user object for persisting to DB
    String salt = hash.getSalt().toBase64();
    user.setSalt(""salt"");

    //Set created date
    user.setCreatedDate(new Date());

    //Persist to DB
    em.persist(user);
    return user.getId();
}
</code></pre>

<p>This is where I get stuck— I assume at this point I need to update the login method to also handle the hashing of the inputted password by the user by retrieving the salt from the DB, and hashing the submitted password and then matching to the stored hashed password from the DB— but all attempts I have tried have been unsuccessful. And trying to authenticate with the <code>login()</code> method from above just gets me an error stating the supplied credentials did not match...</p>

<p>I have tried implementing some of the code in this (Japanese) tutorial (日本語が少し知っていますよ), but it seems a bit off to me (Link: <a href=""http://d.hatena.ne.jp/apyo/touch/20120603/1338739210"" rel=""nofollow"">http://d.hatena.ne.jp/apyo/touch/20120603/1338739210</a>). Isn’t hashing/salting supported by Shiro? I don’t see why I should have to rewrite/override Shiro methods (as per that tutorial) to accomplish authenticating a user against hashed data, something that is claimed to be supported by the framework.  I would think there is some delivered method out there I should be using, I just can’t find the right one. Of course, it could be that the way I am hashing/storing/retrieving the user data is causing issues… I am just too new to the framework to know. Any help would be greatly appreciated.</p>

<p><strong>EDIT</strong>
Okay-- So it seems like perhaps it is ""the norm"" to have to override a method in the delivered JdbcRealm to implement verification of user password+salt. I have implemented the following custom realm, but am getting a <code>NullPointerException</code> when the method is called.</p>

<p><strong>CustomJdbcRealm.java</strong> (based on above linked tutorial)<br/></p>

<pre><code>import java.util.List;
import javax.inject.Inject;
import javax.persistence.EntityManager;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SaltedAuthenticationInfo;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.authc.credential.DefaultPasswordService;
import org.apache.shiro.codec.Base64;
import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.realm.jdbc.JdbcRealm;
import org.apache.shiro.util.ByteSource;

/**
 * @author mousouchop
 *
 * Modification Log: 2015-01-17 Original.
 */
public class CustomJdbcRealm extends JdbcRealm {
    @Inject
    private EntityManager em;

    /**
     * 認証情報を返却する。
     * @param token
     * @return 
     */
    @Override
    protected SaltedAuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)
        throws AuthenticationException {

        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        String username = upToken.getUsername();
        SaltedAuthenticationInfo info = null;

        System.out.println(""TEST######## TOKEN-UN: ""+upToken.getUsername());

        // Here I switched out a plain JDBC query for a JPA query (Perhaps this is part of my problem?)
        List&lt;String&gt; queryResults = em.createNamedQuery(""User.ps"")
                .setParameter(""username"", username)
                .getResultList();
        System.out.println(""TEST######## RESULT CT: ""+queryResults.size());
        String password = queryResults.get(0);
        String salt = queryResults.get(1);
        System.out.println(""TEST######## PW: ""+password);
        System.out.println(""TEST######## SLT: ""+salt);

        // ShiroデフォルトのjdbcRealmをそのまま使い、SecurityManagerをshiro.iniで初期化する方法だと、
        // saltStyleが設定できない。saltをAuthenticationInfoに渡す方法は用意されているが、
        // DefaultPasswordServiceを使うとバグ？でsaltが無視されてしまう(まだ調査中です)
        // とりあえずブログ用に強引にゴリゴリとHashクラスを生成する。
        // ハッシュアルゴリズムが固定になってしまっているが、
        // まぁよしとする。別に動的に生成しなければいけない場面もないだろうし。
        Sha256Hash credentials = Sha256Hash.fromBase64String(password);
            credentials.setSalt(ByteSource.Util.bytes(Base64.decode(salt)));
        // SimpleHashクラスとDefautoPasswordServiceでハッシュ回数のデフォルト値が異なる。
        // 整合性が取れてないとも言えるが、これはこれでいいのかな。
    credentials.setIterations(DefaultPasswordService.DEFAULT_HASH_ITERATIONS);
        // principals,credentials,realm名を設定して、AuthenticationInfoを生成する。
        info = new SimpleAuthenticationInfo(username, credentials, getName());

        return info;
    }
}
</code></pre>

<p>Of the ""TEST"" output lines that I have-- the first returns the entered username... I get the <code>NPE</code> before any of the others print out. Maybe I will try using plain JDBC calls in just this one class...</p>
","<apache><jsf><authentication><jsf-2.2><shiro>","1","28014263"
"26688452","Why is a request to a @RequiresUser not redirected to the login page?","<p>The setup is as follows: An embedded Jetty 9.3.0.M0 runs a GuiceServlet 3.0, which in turn uses Jersey 1.18.1 for mapping and all the other nifty stuff it can do. Shiro 1.2.3 was added to this setup to provide security. When doing the configuration of Shiro in general and the filterChains in a ShiroWebModule, the setup works flawless.</p>

<p>When using Shiro's AOP feature to annotate my methods with <a href=""http://shiro.apache.org/java-annotations-list.html"" rel=""nofollow"">Shiro's annotations</a>, requests to the annotated method's URL do not get redirected to the login page. Instead, an <a href=""https://shiro.apache.org/static/1.2.3/apidocs/index.html?org/apache/shiro/authz/UnauthenticatedException.html"" rel=""nofollow"">org.apache.shiro.authz.UnauthenticatedException</a> exception is thrown by Jersey's ContainerResponse:</p>

<pre><code>ERROR com.sun.jersey.spi.container.ContainerResponse -
The RuntimeException could not be mapped to a response,
re-throwing to the HTTP container
org.apache.shiro.authz.UnauthenticatedException: Attempting to perform a user-only operation.
The current Subject is not a user (they haven't been authenticated or remembered from a previous login).  Access denied.
at org.apache.shiro.authz.aop.UserAnnotationHandler.assertAuthorized(UserAnnotationHandler.java:61)
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.invoke(AuthorizingAnnotationMethodInterceptor.java:67)
at org.apache.shiro.guice.aop.AopAllianceMethodInterceptorAdapter.invoke(AopAllianceMethodInterceptorAdapter.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$TypeOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:185)
at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
at com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:263)
at com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:178)
at com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:62)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:118)
at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:113)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)
at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583)
at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1126)
at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1060)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at org.eclipse.jetty.server.Server.handle(Server.java:498)
at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:265)
at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:243)
at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:610)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:539)
at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public java.lang.String org.example.product.ExampleApp.controller.Index.secured()
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
</code></pre>

<p>The browser shows an <code>javax.servlet.ServletException: Filtered request failed.</code>.</p>

<p>However, an according Jersey ExceptionMapper is implemented and bound:</p>

<pre><code>/* other imports omitted for readability */
import org.apache.shiro.authz.UnauthenticatedException;

public  class UnauthenticatedExceptionHandler
                implements ExceptionMapper&lt;UnauthenticatedException&gt;{

  public Response toResponse(UnauthenticatedException exception) {      
    return Response.status(Status.FORBIDDEN).type(MediaType.TEXT_PLAIN)
            .entity(""Authorization required"").build();
  }
}
</code></pre>

<p>so even when Shiro does not redirect the request to the login page, the ExceptionMapper should trigger, which it doesn't. The bound ExceptionMappers for <code>NotFoundException</code> et al work.</p>

<p>The necessary MethodInterceptors are defined and bound in a module, which gets installed in my ""main"" module:</p>

<pre><code>/* imports ommitted for readability */
public class ShiroMethodInterceptorModule extends AbstractModule {

@Override
protected void configure() {
    bindInterceptor(Matchers.any(), Matchers.annotatedWith(RequiresRoles.class),
            new ShiroMethodInterceptor(new RoleAnnotationMethodInterceptor()));
    bindInterceptor(Matchers.any(), Matchers.annotatedWith(RequiresUser.class),
            new ShiroMethodInterceptor(new UserAnnotationMethodInterceptor()));
    bindInterceptor(Matchers.any(), Matchers.annotatedWith(RequiresPermissions.class),
            new ShiroMethodInterceptor(new PermissionAnnotationMethodInterceptor()));
    bindInterceptor(Matchers.any(), Matchers.annotatedWith(RequiresGuest.class),
            new ShiroMethodInterceptor(new GuestAnnotationMethodInterceptor()));
    bindInterceptor(Matchers.any(), Matchers.annotatedWith(RequiresAuthentication.class),
            new ShiroMethodInterceptor(new AuthenticatedAnnotationMethodInterceptor()));
  }

}
</code></pre>

<p>The implementation of ShiroMethodInterceptor (shamelessly copied from @pabiagioli<a href=""https://github.com/pabiagioli/shiro-guice-jersey-bootstrap/blob/master/src/main/java/com/pampanet/sample/shiro/modules/ShiroMethodInterceptor.java"" rel=""nofollow"">'s ""shiro-guice-jersey-bootstrap"" project</a>) is as follows:</p>

<pre><code>public class ShiroMethodInterceptor implements MethodInterceptor{

static final Logger logger = Logger.getLogger(ShiroMethodInterceptor.class.getName());

private org.apache.shiro.aop.MethodInterceptor methodInterceptor;

public ShiroMethodInterceptor(org.apache.shiro.aop.MethodInterceptor methodInterceptor) {
    this.methodInterceptor = methodInterceptor;
}


  public Object invoke(MethodInvocation methodInvocation) throws Throwable {
    return methodInterceptor.invoke(new ShiroMethodInvocation(methodInvocation));
  }

  private static class ShiroMethodInvocation implements org.apache.shiro.aop.MethodInvocation {

    private final MethodInvocation methodInvocation;

    public ShiroMethodInvocation(MethodInvocation methodInvocation) {
        this.methodInvocation = methodInvocation;
    }

    public Object proceed() throws Throwable {
        return methodInvocation.proceed();
    }

    public Method getMethod() {
        return methodInvocation.getMethod();
    }

    public Object[] getArguments() {
        return methodInvocation.getArguments();
    }

    public Object getThis() {
        return methodInvocation.getThis();
    }
  }
}
</code></pre>

<p>The project is build with maven, and the relevant dependencies defined are:</p>

<ul>
<li>jersey-guice 1.18.1
<ul>
<li>guice 3.0</li>
<li>guice-servlet 3.0</li>
<li>jersey-servlet 1.18.1</li>
</ul></li>
<li>shiro-core 1.2.3</li>
<li>shiro-web 1.2.3</li>
<li>shiro-guice 1.2.3</li>
<li>shiro-aspectj 1.2.3</li>
</ul>

<p><em>Edit:</em> For being complete: The Realm is created by an according provider, the ShiroWebModule's configure method looks like this:</p>

<pre><code>protected void configureShiroWeb() {

    bindConstant().annotatedWith(Names.named(""shiro.loginUrl""))
            .to(""/login"");

    addFilterChain(""/"", ANON);

    addFilterChain(""/login"", AUTHC);
    addFilterChain(""/logout"", LOGOUT);

    /* The following rule is activated when not using AOP
     * annotations
     * addFilterChain(""/**"", AUTHC);
     */

}   
</code></pre>

<p>I'd really appreciate any pointers. Please do not hesitate to ask for further information.</p>

<p><em>Edit2: This may be unrelated, but I add it here for completeness.</em> Further investigating this problem I noticed that if wrong or empty credentials are given even when I configure Shiro completely in a ShiroWebModule and disable annotations and AOP altogether, as far as I can see a Runtime Exception exception is thrown which is cought by jersey and wrapped into a WebApplicationException:</p>

<pre><code>javax.ws.rs.WebApplicationException
at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
at com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:263)
at com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:178)
at com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:62)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at org.apache.shiro.guice.web.SimpleFilterChain.doFilter(SimpleFilterChain.java:44)
at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at org.apache.shiro.guice.web.SimpleFilterChain.doFilter(SimpleFilterChain.java:41)
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:118)
at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:113)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)
at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583)
at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1126)
at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1060)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at org.eclipse.jetty.server.Server.handle(Server.java:498)
at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:265)
at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:243)
at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:610)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:539)
at java.lang.Thread.run(Thread.java:744)

javax.ws.rs.WebApplicationException
at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540)
at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
at com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:263)
at com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:178)
at com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:62)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at org.apache.shiro.guice.web.SimpleFilterChain.doFilter(SimpleFilterChain.java:44)
at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at org.apache.shiro.guice.web.SimpleFilterChain.doFilter(SimpleFilterChain.java:41)
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)
at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)
at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:118)
at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:113)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)
at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583)
at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1126)
at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1060)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at org.eclipse.jetty.server.Server.handle(Server.java:498)
at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:265)
at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:243)
at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:610)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:539)
at java.lang.Thread.run(Thread.java:744)
</code></pre>
","<jersey><jetty><guice><shiro>","1",""
"14798915","Apache Shiro for desktop application?","<p>is it possibile to use Apache Shiro for desktop applications?</p>

<p>thanks in advance!</p>
","<java><apache><desktop-application><shiro><rbac>","1","14817837"
"10170719","Jersey and other JAX-RS api extensions - e.g. Shiro, Guice","<p>Does Jersey got any extensions to support frameworks like Shiro, Guice for example? Or do you use them seperately, independent from jersey?</p>

<p>How does it look for other JAX-RS frameworks. Restlet, RestEasy - do they provide any extensions or is it done seperately as well?</p>

<p>I already know that they got their own implementation of OAuth instead of cooperating with other OAuth framworks.</p>
","<jersey><guice><resteasy><restlet><shiro>","0","10192982"
"21007848","Run ""grails shiro-quick-start --prefix=org.example.Shiro"" with Grails 2.3","<p>I seem to be unable to run </p>

<pre><code>    grails shiro-quick-start --prefix=org.example.Shiro
</code></pre>

<p>in the terminal when I'm on Grails 2.3. Anyone know why that is?</p>

<p>I have a feeling it is to do with me being unable to run</p>

<pre><code>    grails install-plugin shiro
</code></pre>

<p>also as it says</p>

<pre><code>Since Grails 2.3, it is no longer possible to install plugins using the install-plugin command.
Plugins must be declared in the grails-app/conf/BuildConfig.groovy file.

Example:
grails.project.dependency.resolution = {
   ...
   plugins {
      compile "":shiro:1.2.0""
   }
}
</code></pre>
","<grails><grails-plugin><shiro>","0","21012060"
"20526509","Authentication Filter in Shiro with Spring + JSF","<p>i have some problem with Shiro authentication filter. I used spring framework (3.2) and JSF 2.2 in my project.</p>

<p>I've already done spring xml, web.xml, faces-config configuration file just like shiro official guide.</p>

<p>Here's my spring xml configuration (applicationContext.xml)</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/faces/login.xhtml""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
               /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""propertyConfigurer""
      class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""
      p:location=""/WEB-INF/jdbc.properties"" /&gt;

&lt;bean id=""myRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
    &lt;property name=""dataSource"" ref=""dataSource""/&gt;
    &lt;property name=""authenticationQuery"" value=""SELECT password FROM User WHERE nip = ?""/&gt;
    &lt;property name=""userRolesQuery"" value=""SELECT role FROM User WHERE nip = ?""/&gt;
    &lt;property name=""permissionsLookupEnabled"" value=""true"" /&gt;
    &lt;property name=""permissionsQuery"" value=""SELECT action FROM role_action WHERE role = ?""/&gt;

&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.mgt.DefaultSecurityManager""&gt;
    &lt;property name=""realm"" ref=""myRealm""/&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Here's my web.xml</p>

<pre><code>&lt;web-app&gt;
&lt;context-param&gt;
    &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
    &lt;param-value&gt;Development&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.request.RequestContextListener&lt;/listener-class&gt;
&lt;/listener&gt;

 &lt;!--///////////////////////////SPRING SERVLET////////////////////////////////--&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;appServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;appServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;


&lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;session-config&gt;
    &lt;session-timeout&gt;
        30
    &lt;/session-timeout&gt;
&lt;/session-config&gt;
&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;faces/index.xhtml&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p></p>

<p>The problem is authentication filter not working as expected. I'm not get redirected to login.xhtml if i have not login. In that case i still can access any page without login.  </p>

<p>Is there any problem with my config ? Or what should i do ? Thanks</p>
","<spring><jsf><shiro>","0",""
"21526352","Apache Camel - Invoking http or rest calls (filtered through Shiro Security)","<p>Need some suggestions to find out if its possible in Camel for the below scenario. </p>

<p>We are trying use Apache Camel for integration testing of a web application. Application has to accessed through rest service calls. Each Application requests is filtered through shiro security. When I make a restful call or a http call to this application, I need to set up the necessary shiro authentication information in the header and make sure the camel request is processed successfully.  Is there a way to do this in camel - ""invoking a http or rest calls to access the application whose requests are secured by apache shiro"" ? I see Camel has a shiro security component which is more like either authorizing camel routes or defining the security for the camel routes and I dont see I can use them for this purpose?</p>

<p>I did try setting up the shiro authentication tokens in the header in different possible ways (For eg: using Exchange's Authentication property) but it doesnt work. Any suggestions please?</p>

<p><strong>UPDATES:</strong>
Shiro maintains its own session and looks for userId and his/her Permissions (referred to as Shiro Subject) to make sure its an authenticated and authorized request. Whenever we send a request to a Shiro secured application, it filters the request, validate the request to find out if its authorized to access to application functions and then allow us in.If the user information is not available in the Shiro session, it will take you to the login screen. Our web application has exposed the functionalities as rest services.Is it feasible in Camel to make a call to such an application which is embedded with Apache Shiro security? Basically I am should mock the Shiro subject and set in the HTTP header to make it look like a Shiro Authenticated request.</p>

<p>I tried making http calls with Shiro Authentication token set up in the exchange headers. But its failing. Is this possible in Camel or am I going in the wrong direction? Any suggestion or help in this regard is very much appreciated. Below is a subset of code I have been playing around with.</p>

<p>// wrap it in a Subject</p>

<pre><code>Subject subjectUnderTest = new Subject.Builder(getSecurityManager())
        .principals(new SimplePrincipalCollection(""Username"", ""RealmName"")).authenticated(true).buildSubject();    

MockEndpoint OutEndpoint = getMockEndpoint(""mock.out"");

OutEndpoint.expectedMessageCount(1);

Endpoint InEndpoint = context.getEndpoint(""direct.in"");


Map&lt;String, Object&gt; headers = new HashMap&lt;String, Object&gt;();

headers.put(Exchange.HTTP_METHOD, ""GET"");

headers.put(Exchange.AUTHENTICATION, subjectUnderTest);

template.sendBodyAndHeaders(InEndpoint, ""test body"", headers);
</code></pre>

<p>Thanks Viggy</p>
","<rest><apache-camel><shiro>","1",""
"33875435","Shiro Session Clustering with Hazelcast, not on the Web","<p>I have written a Netty-based REST service which is deployed directly (i.e. without a Web/Application server). For authn, authz and session management I am using Apache Shiro. Now I want to be able to load-balance this service without using sticky sessions on our load-balancer; and I am trying to set that up using in-process Hazelcast instances.</p>

<p>So far I have managed to have two instances of my service running on two different machines create a Hazelcast cluster with two members; but even so, if I authenticate on one machine, the other still doesn't recognize the session. So I think I have probably made a mistake in my shiro.ini and/or my hazelcast.xml configuration files.</p>

<p>I am essentially using the HazelCastCacheManager class from here <a href=""https://github.com/stormpath/shiro-hazelcast-web-sample/blob/master/src/main/java/com/stormpath/samples/shiro/hazelcast/cache/HazelcastCacheManager.java"" rel=""nofollow"">https://github.com/stormpath/shiro-hazelcast-web-sample/blob/master/src/main/java/com/stormpath/samples/shiro/hazelcast/cache/HazelcastCacheManager.java</a></p>

<p>Here is my hazelcast.xml (our setup doesn't allow multicast, I have to specify the machine IPs directly):</p>

<pre><code>&lt;hazelcast&gt;
  &lt;properties&gt;
    &lt;property name=""hazelcast.logging.type""&gt;slf4j&lt;/property&gt;
  &lt;/properties&gt;

  &lt;map name=""shiro-activeSessionsCache""&gt;
    &lt;async-backup-count&gt;1&lt;/async-backup-count&gt;
    &lt;time-to-live-seconds&gt;600&lt;/time-to-live-seconds&gt;
  &lt;/map&gt;

  &lt;network&gt;
    &lt;join&gt;
      &lt;multicast enabled=""false""&gt;&lt;/multicast&gt;
      &lt;tcp-ip enabled=""true""&gt;
        &lt;member&gt;x.x.x.x:8050&lt;/member&gt; &lt;!-- server A --&gt;
        &lt;member&gt;x.x.x.x:8050&lt;/member&gt; &lt;!-- server B --&gt;
      &lt;/tcp-ip&gt;
    &lt;/join&gt;
    &lt;interfaces enabled=""true""&gt;
        &lt;interface&gt;x.x.x.*&lt;/interface&gt;
    &lt;/interfaces&gt;
    &lt;port port-count=""20"" auto-increment=""false""&gt;8050&lt;/port&gt;    
  &lt;/network&gt;

&lt;/hazelcast&gt;
</code></pre>

<p>And a portion of my shiro.ini</p>

<pre><code>sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager = org.apache.shiro.session.mgt.DefaultSessionManager

sessionDAO.activeSessionsCacheName = shiro-activeSessionsCache
securityManager.sessionManager.sessionDAO = $sessionDAO

cacheManager = HazelcastCacheManager

securityManager.cacheManager = $cacheManager

sessionManager.globalSessionTimeout = 600000
sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
sessionValidationScheduler.interval = 600000
sessionManager.sessionValidationScheduler = $sessionValidationScheduler

securityManager.sessionManager=$sessionManager
</code></pre>

<p>What am I missing? How can I instruct Shiro to share the session among all Hazelcast instances? Or is my mistake in the HazelcastCacheManager class?</p>

<p>Here is the log Hazelcast produces when I start up my two services:</p>

<p>This is the first service starting up:</p>

<pre><code>log4j:WARN No appenders could be found for logger (org.apache.commons.beanutils.converters.BooleanConverter).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Nov 24, 2015 9:03:42 AM com.hazelcast.config.XmlConfigLocator
INFO: Loading 'hazelcast.xml' from working directory.
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Interfaces is enabled, trying to pick one address matching to one of: [x.x.x.*]
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Prefer IPv4 stack is true.
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Picked Address[x.x.x.x]:8050, using socket ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=8050], bind any local is true
[main] INFO com.hazelcast.spi.OperationService - [x.x.x.x]:8050 [dev] [3.5.3] Backpressure is disabled
[main] INFO com.hazelcast.spi.impl.operationexecutor.classic.ClassicOperationExecutor - [x.x.x.x]:8050 [dev] [3.5.3] Starting with 16 generic operation threads and 32 partition operation threads.
[main] INFO com.hazelcast.system - [x.x.x.x]:8050 [dev] [3.5.3] Hazelcast 3.5.3 (20151011 - 64c663a) starting at Address[x.x.x.x]:8050
[main] INFO com.hazelcast.system - [x.x.x.x]:8050 [dev] [3.5.3] Copyright (c) 2008-2015, Hazelcast, Inc. All Rights Reserved.
[main] INFO com.hazelcast.instance.Node - [x.x.x.x]:8050 [dev] [3.5.3] Creating TcpIpJoiner
[main] INFO com.hazelcast.core.LifecycleService - [x.x.x.x]:8050 [dev] [3.5.3] Address[x.x.x.x]:8050 is STARTING
[cached1] INFO com.hazelcast.nio.tcp.SocketConnector - [x.x.x.x]:8050 [dev] [3.5.3] Connecting to /x.x.x.x:8050, timeout: 0, bind-any: true
[cached1] INFO com.hazelcast.nio.tcp.SocketConnector - [x.x.x.x]:8050 [dev] [3.5.3] Could not connect to: /x.x.x.x:8050. Reason: SocketException[Connection refused to address /x.x.x.x:8050]
[cached1] INFO com.hazelcast.cluster.impl.TcpIpJoiner - [x.x.x.x]:8050 [dev] [3.5.3] Address[x.x.x.x]:8050 is added to the blacklist.
[main] INFO com.hazelcast.cluster.impl.TcpIpJoiner - [x.x.x.x]:8050 [dev] [3.5.3]

Members [1] {
        Member [x.x.x.x]:8050 this
}
</code></pre>

<p>And this is the continuation when the second service starts:</p>

<pre><code>[main] INFO com.hazelcast.core.LifecycleService - [x.x.x.x]:8050 [dev] [3.5.3] Address[x.x.x.x]:8050 is STARTED
[main] INFO org.apache.shiro.config.IniSecurityManagerFactory - Realms have been explicitly set on the SecurityManager instance - auto-setting of realms will not occur.
Open your web browser and navigate to https://127.0.0.1:8113/
[hz._hzInstance_1_dev.IO.thread-Acceptor] INFO com.hazelcast.nio.tcp.SocketAcceptor - [x.x.x.x]:8050 [dev] [3.5.3] Accepting socket connection from /x.x.x.x:35316
[cached2] INFO com.hazelcast.nio.tcp.TcpIpConnectionManager - [x.x.x.x]:8050 [dev] [3.5.3] Established socket connection between /x.x.x.x:8050
[hz._hzInstance_1_dev.generic-operation.thread-10] INFO com.hazelcast.cluster.ClusterService - [x.x.x.x]:8050 [dev] [3.5.3]

Members [2] {
        Member [x.x.x.x]:8050 this
        Member [x.x.x.x]:8050
}
</code></pre>

<p>This is the second service starting up, with the first one already running:</p>

<pre><code>log4j:WARN No appenders could be found for logger (org.apache.commons.beanutils.converters.BooleanConverter).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Nov 24, 2015 9:04:16 AM com.hazelcast.config.XmlConfigLocator
INFO: Loading 'hazelcast.xml' from working directory.
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Interfaces is enabled, trying to pick one address matching to one of: [x.x.x.*]
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Prefer IPv4 stack is true.
[main] INFO com.hazelcast.instance.DefaultAddressPicker - [LOCAL] [dev] [3.5.3] Picked Address[x.x.x.x]:8050, using socket ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=8050], bind any local is true
[main] INFO com.hazelcast.spi.OperationService - [x.x.x.x]:8050 [dev] [3.5.3] Backpressure is disabled
[main] INFO com.hazelcast.spi.impl.operationexecutor.classic.ClassicOperationExecutor - [x.x.x.x]:8050 [dev] [3.5.3] Starting with 8 generic operation threads and 16 partition operation threads.
[main] INFO com.hazelcast.system - [x.x.x.x]:8050 [dev] [3.5.3] Hazelcast 3.5.3 (20151011 - 64c663a) starting at Address[x.x.x.x]:8050
[main] INFO com.hazelcast.system - [x.x.x.x]:8050 [dev] [3.5.3] Copyright (c) 2008-2015, Hazelcast, Inc. All Rights Reserved.
[main] INFO com.hazelcast.instance.Node - [x.x.x.x]:8050 [dev] [3.5.3] Creating TcpIpJoiner
[main] INFO com.hazelcast.core.LifecycleService - [x.x.x.x]:8050 [dev] [3.5.3] Address[x.x.x.x]:8050 is STARTING
[cached1] INFO com.hazelcast.nio.tcp.SocketConnector - [x.x.x.x]:8050 [dev] [3.5.3] Connecting to /x.x.x.x:8050, timeout: 0, bind-any: true
[cached1] INFO com.hazelcast.nio.tcp.TcpIpConnectionManager - [x.x.x.x]:8050 [dev] [3.5.3] Established socket connection between /x.x.x.x:35316
[hz._hzInstance_1_dev.generic-operation.thread-3] INFO com.hazelcast.cluster.ClusterService - [x.x.x.x]:8050 [dev] [3.5.3]

Members [2] {
        Member [x.x.x.x]:8050
        Member [x.x.x.x]:8050 this
}

[main] INFO com.hazelcast.core.LifecycleService - [x.x.x.x]:8050 [dev] [3.5.3] Address[x.x.x.x]:8050 is STARTED
[main] INFO org.apache.shiro.config.IniSecurityManagerFactory - Realms have been explicitly set on the SecurityManager instance - auto-setting of realms will not occur.
Open your web browser and navigate to https://127.0.0.1:8113/
</code></pre>
","<java><session><load-balancing><hazelcast><shiro>","0","33918961"
"18197516","shiro + ehcache + replication: login and logout not being replicated","<p>Our web application is using shiro for authentication. We're storing sessions in EHCache, backed by a filestore, and using replication to ensure that all web servers have all of the sessions. We are using peer to peer replication, not the multicast configuration. Things seem to work most of the time. However, from time to time, logins or logouts will not be replicated.</p>

<p>We will see stacktraces with the following exception: 
org.apache.shiro.session.UnknownSessionException: There is no session with id [dc996ea4-daff-431f-946b-6a5a214f9477]</p>

<p>If the file goes out of sync, it stays out of sync.</p>

<p>Does anyone have a suggestion as to why we might see this behavior?</p>
","<java><ehcache><shiro>","1","18238946"
"27461624","simple login with shiro wildfly jsf and primefaces","<p>I'm trying to port this example <a href=""https://github.com/danielmt/shiro-primefaces-example"" rel=""nofollow"">shiro-primefaces-example</a> written for glassfish, but I have trobles with the datasource. The example has two config files:</p>

<p><strong>glassfish-web.xml:</strong></p>

<pre><code>&lt;glassfish-web-app error-url=""""&gt;
&lt;context-root&gt;/shiro-primefaces-example&lt;/context-root&gt;
&lt;resource-ref&gt;
&lt;res-ref-name&gt;jdbc/shiro-primefaces&lt;/res-ref-name&gt;
&lt;jndi-name&gt;java:app/jdbc/shiro-primefaces&lt;/jndi-name&gt;
&lt;/resource-ref&gt;
&lt;class-loader delegate=""false""/&gt;
&lt;parameter-encoding default-charset=""UTF-8""/&gt;
&lt;/glassfish-web-app&gt;
</code></pre>

<p><strong>glassfish-resources.xml:</strong></p>

<pre><code>&lt;resources&gt;

&lt;jdbc-connection-pool name=""pool/shiro-primefaces""
datasource-classname=""org.postgresql.ds.PGConnectionPoolDataSource""
res-type=""javax.sql.ConnectionPoolDataSource""
steady-pool-size=""5""
pool-resize-quantity=""1""
max-pool-size=""10""&gt;
&lt;property name=""serverName"" value=""localhost""/&gt;
&lt;property name=""PortNumber"" value=""5432""/&gt;
&lt;property name=""DatabaseName"" value=""shiro_primefaces""/&gt;
&lt;property name=""User"" value=""shiro_primefaces""/&gt;
&lt;property name=""Password"" value=""testpass""/&gt;
&lt;/jdbc-connection-pool&gt;
&lt;jdbc-resource pool-name=""pool/shiro-primefaces"" jndi-name=""java:app/jdbc/shiro-primefaces""/&gt;
&lt;/resources&gt;
</code></pre>

<p>My datasource in standalone.xml is ""java:jboss/datasources/mysql"".</p>

<p><strong>shiro.ini:</strong></p>

<pre><code>...
datasource.resourceName = java:jboss/datasources/mysql
...
</code></pre>

<p>When I try to login I get this error:</p>

<pre><code>...
at   org.jboss.weld.util.el.ForwardingMethodExpression.invoke(ForwardingMethodExpression.java:40)
at org.jboss.weld.el.WeldMethodExpression.invoke(WeldMethodExpression.java:50)
at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:105)
at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:87)
... 50 more
Caused by: java.lang.NullPointerException
at org.example.shiro.bean.security.ShiroLoginBean.doLogin(ShiroLoginBean.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
</code></pre>

<p>Do you need to create the file jboss-web.xml or something?</p>
","<java><jsf><jboss><wildfly><shiro>","0","27466748"
"23484313","Configure auto logout in apache shiro","<p>I need to auto Logout a user when he leaves the web application for a certain period. I am using Shiro's DefaultWebSessionManager.</p>

<pre><code>&lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""globalSessionTimeout"" value=""1800000""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Currently with this configuration - Logout only happens when we make server request after a period of in-activity. Is there a way to auto-logut after the timeout period so that it doesn wait for a server request, just signs off automatically after a period of inactivity.</p>
","<session-timeout><shiro>","0",""
"34974140","How can I get all active sessions with Apache Shiro ehcache-terracotta?","<p>In my maven application, I want to provide that if a user log in a new account, another account that already open will be log out. I am using Apache shiro, ehcache and terracotta for this.
I want to get all active sessions to check whether that user is logined previously. I can take users and their session id from all servers using Hazelcast(this works), but i can not take session (because it is not serializable)</p>

<p>I use clustered servers in project. Servers have same ip address but their ports are different.
x.x.x.x:7002 -->server1,
x.x.x.x:7003 -->server2
how can i define that ports in ehcache configuration file?
how can i take all active sessions from that ports with terracotta?</p>

<p>Please help</p>

<p>ehcache.xml:</p>

<pre><code>&lt;ehcache&gt;
&lt;terracottaConfig url=""x.x.x.x:9510""/&gt;

&lt;diskStore path=""java.io.tmpdir/shiro-ehcache""/&gt;
&lt;defaultCache
    maxElementsInMemory=""10000""
    eternal=""false""
    timeToIdleSeconds=""120""
    timeToLiveSeconds=""120""
    overflowToDisk=""false""
    diskPersistent=""false""
    diskExpiryThreadIntervalSeconds=""120""&gt;
    &lt;!-- &lt;terracotta/&gt;--&gt;
&lt;/defaultCache&gt;
&lt;cache name=""myactiveSessionCache""
       maxElementsInMemory=""10000""
       eternal=""true""
       timeToLiveSeconds=""0""
       timeToIdleSeconds=""0""
       diskPersistent=""false""
       overflowToDisk=""false""
       diskExpiryThreadIntervalSeconds=""600""&gt;
    &lt;!-- &lt;terracotta/&gt;--&gt;
&lt;/cache&gt;
&lt;!-- Add more cache entries as desired, for example,
Realm authc/authz caching: --&gt;
&lt;/ehcache&gt;
</code></pre>

<p>shiro.ini:</p>

<pre><code>sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager .cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $cacheManager 
securityManager.sessionManager = $sessionManager
</code></pre>

<p>Login.java:</p>

<pre><code>User newuser = ..//get from db with username and password
UsernamePasswordToken token = new UsernamePasswordToken(username, password);
Subject currentUser = new Subject.Builder().buildSubject();
token.setRememberMe(true);
currentUser = getSubject();
currentUser.login(token);

//at here, i take all active users and their's session id with Hazelcast. 
//and check that is 'newuser' in all active users list?
if (!activeuserList.containsKey(newuser)) {
    activeuserList.put(newuser, currentUser.getSession().getId());
} else {
    Serializable s = activeuserList.get(newuser);
    isSessionActive(s);
}
}

...
//check -- is session active?
public void isSessionActive(Serializable s) {
DefaultWebSecurityManager securityManager = (DefaultWebSecurityManager)   SecurityUtils.getSecurityManager();
DefaultWebSessionManager sessionManager = (DefaultWebSessionManager) securityManager.getSessionManager();
EnterpriseCacheSessionDAO sessionDao = (EnterpriseCacheSessionDAO) sessionManager.getSessionDAO();
Cache&lt;Serializable, Session&gt; activeSessionsCache = sessionDao.getActiveSessionsCache();
if (activeSessionsCache.keys().contains(s)) {
        //previous session is closed.
        activeuserList.remove(newuser);
        activeSessionsCache.get(s).stop();
        //new session id is added to list
        activeuserList.put(newuser, currentUser.getSession().getId());
    }
}
</code></pre>
","<ehcache><shiro><terracotta>","2",""
"21354354","Plain password and encrypted password doesn't match in Shiro","<pre><code>public void doRegister() throws SQLException{ 
    String password = ""test"";
    PasswordService dps = new DefaultPasswordService(); 
     String temp = dps.encryptPassword(password); 
     System.out.println(""AAAA  ""+dps.passwordsMatch(password, temp)); 

} 
</code></pre>

<p>this outputs AAAA false </p>

<p>What is the problem?</p>
","<java><shiro>","1","21362649"
"21298820","Get a ClassCastException when Spring upload file filter by Apache Shiro","<p>I used Apache Shiro for AA of a Web project, Spring is also used. When upload file, will get following exception, I can not find relevant case from google. Anybody have seen this before?</p>

<pre><code>java.lang.ClassCastException: org.apache.shiro.web.servlet.ShiroHttpServletRequest cannot be cast to org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest&lt;/h1&gt;&lt;HR size=""1"" noshade=""noshade""&gt;&lt;p&gt;&lt;b&gt;type&lt;/b&gt; Exception report&lt;/p&gt;&lt;p&gt;&lt;b&gt;message&lt;/b&gt; &lt;u&gt;java.lang.ClassCastException: org.apache.shiro.web.servlet.ShiroHttpServletRequest cannot be cast to org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt; &lt;u&gt;The server encountered an internal error that prevented it from fulfilling this request.&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;exception&lt;/b&gt; &lt;pre&gt;javax.servlet.ServletException: java.lang.ClassCastException: org.apache.shiro.web.servlet.ShiroHttpServletRequest cannot be cast to org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest
org.apache.shiro.web.servlet.AdviceFilter.cleanup(AdviceFilter.java:196)
org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:148)
org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
com.weardex.web.filter.auth.AuthFilter.doFilter(AuthFilter.java:62)
org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
</code></pre>
","<spring><security><web><upload><shiro>","0",""
"18444266","Struts 2, Spring Plugin + Shiro integration: Autowiring issue","<p>I have an issue with Struts2(2.3.15.1) Spring plugin. I use Shiro for security, and configure it with Annotations. The code looks like this:</p>

<pre><code>public class Order2Action extends BaseAction {

 @Autowired  private UserDAO userDAO;

 private static final Logger log = LoggerFactory.getLogger(Order2Action.class);


 @Action(value = ""list2"",
    results = {@Result(name = SUCCESS, location = ""list.jsp"")}
 )
 @RequiresRoles(ROLE_DATA_OPERATOR)
 public String showOrderList() throws InterruptedException {
   log.info(""UserDAOImpl {}"", userDAO);
   return SUCCESS;
 }
}
</code></pre>

<p>In this case UserDAO is not injected to Action. But if I comment out the string ""@RequiresRoles(ROLE_DATA_OPERATOR)"" - UserDAO is injected to Action.</p>

<p>What could be the problem here?</p>

<p>My ApplicationContext conf looks like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xmlns:context=""http://www.springframework.org/schema/context""
   xmlns:tx=""http://www.springframework.org/schema/tx""
   xsi:schemaLocation=""http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                       http://www.springframework.org/schema/context
                       http://www.springframework.org/schema/context/spring-context-3.0.xsd
                       http://www.springframework.org/schema/tx
                       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd""&gt;

    &lt;!-- enable processing of annotations such as @Autowired and @Configuration --&gt;
    &lt;context:annotation-config/&gt;
    &lt;context:component-scan base-package=""ee""/&gt;


&lt;bean id=""makuDataSource"" class=""org.springframework.jndi.JndiObjectFactoryBean""&gt;
    ...
&lt;/bean&gt;

&lt;!--Shiro security configuration --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/maku/auth/login""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/maku/auth/unauthenticated""/&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""cacheManager"" ref=""shiroCacheMan""/&gt;
    &lt;property name=""realm"" ref=""jdbcRealm""/&gt;
&lt;/bean&gt;

&lt;bean id=""jdbcRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
    &lt;property name=""dataSource"" ref=""makuDataSource""/&gt;
    &lt;property name=""credentialsMatcher""&gt;
        &lt;bean class=""org.apache.shiro.authc.credential.PasswordMatcher""/&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean name=""shiroCacheMan"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""/&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""&gt;
    &lt;property name=""proxyTargetClass"" value=""true"" /&gt;
&lt;/bean&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;/beans&gt;
</code></pre>

<p>UserDAO:</p>

<pre><code>public interface UserDAO {
  User getByUsername(String username);
}

@Repository
public class UserDAOImpl extends AbstractJDBCDAO implements UserDAO {

  @Override
  public User getByUsername(String username){
    return makuTmpl.queryForObject(""select id, username, fullname from users where     username=?"",
    new RowMapper&lt;User&gt;() {
      @Override
      public User mapRow(ResultSet rs, int i) throws SQLException {
        User u = new User();
        u.setId(rs.getLong( 1 ));
        u.setUsername(rs.getString(2));
        u.setFullname(rs.getString(3));
        return u;
      }
    }, username);
  }
}
</code></pre>
","<java><spring><struts2><shiro><struts2-spring-plugin>","0",""
"30463057","authc filter is not calling MyRealm in shiro with spring","<p>I'm working on project with <em>spring/hibernate/jax-rs(jersey)</em>. I wanted to integrate shiro to my project. I did configurations as in documentation. I have my own implementation of Realm. </p>

<p><strong>Q:</strong> Problem is when authBasic path is called, it works fine with MyRealm. But when i call for authc(FormAuthenticationFilter) <strong>it shows login page and when I enter credentials it goes to login page again and no call to MyRealm.</strong> </p>

<p>I had project with same technologies except spring(no spring) before and I used same MyRealm. it worked fine. </p>

<p>Here is my code:
<strong>web.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns=""http://java.sun.com/xml/ns/j2ee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
 version=""2.4""&gt;

 &lt;display-name&gt;Restful Web Application&lt;/display-name&gt;

    &lt;context-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;classpath:spring-context.xml&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;
            org.springframework.web.context.ContextLoaderListener
        &lt;/listener-class&gt;
    &lt;/listener&gt;

     &lt;!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml --&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
            &lt;param-value&gt;true&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;


    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;jersey-serlvet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;
            org.glassfish.jersey.servlet.ServletContainer
        &lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
            &lt;param-value&gt;kg.enesaitech.barbulak.ws&lt;/param-value&gt;            
        &lt;/init-param&gt;       
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;jersey-serlvet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

&lt;/web-app&gt;
</code></pre>

<p><strong>spring-context.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
    xmlns:context=""http://www.springframework.org/schema/context""
    xmlns:tx=""http://www.springframework.org/schema/tx""

    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd""&gt;

    &lt;context:annotation-config/&gt;
    &lt;context:component-scan base-package=""kg.enesaitech.barbulak.*"" /&gt;



    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;property name=""loginUrl"" value=""/login.html""/&gt;
        &lt;property name=""successUrl"" value=""/apps/warehause_manager""/&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /logout = logout
                /apps/admin/** = authcBasic
                /apps/accountant/** = authc
                /apps/production_manager/** = authc, roles[admin]
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realm"" ref=""myRealm""/&gt;
    &lt;/bean&gt;
    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

    &lt;bean id=""myRealm"" class=""kg.enesaitech.barbulak.security.MyRealm""&gt;&lt;/bean&gt;  




    &lt;bean name=""transactionManager"" class=""org.springframework.orm.jpa.JpaTransactionManager""&gt;
             &lt;property name=""entityManagerFactory"" ref=""entityManagerFactory""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""entityManagerFactory"" class=""org.springframework.orm.jpa.LocalEntityManagerFactoryBean""&gt;
        &lt;property name=""persistenceUnitName"" value=""barbulak"" /&gt;
    &lt;/bean&gt;
    &lt;bean id=""mapper"" class=""org.dozer.DozerBeanMapper"" lazy-init=""false""&gt;
        &lt;property name=""customFieldMapper"" ref=""dozerCustomFieldMapper"" /&gt;

    &lt;bean id=""dozerCustomFieldMapper"" class=""kg.enesaitech.barbulak.providers.MyCustomFieldMapper"" /&gt;

    &lt;tx:annotation-driven/&gt;




&lt;/beans&gt;
</code></pre>

<p><strong>MyRealm.java</strong> if it helps</p>

<pre><code>package kg.enesaitech.barbulak.security;



public class MyRealm extends AuthorizingRealm {

    UsersHome usersHome = new UsersHome();
    RoleHome roleHome = new RoleHome();

    protected boolean permissionsLookupEnabled = false;

    public MyRealm() {
        super();
    }


    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)
                throws org.apache.shiro.authc.AuthenticationException {

        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        String username = upToken.getUsername();

        AuthenticationInfo info = null;
        Users user = usersHome.getByUserName(username);

        if(user == null || user.getUserPass() == null){
            throw new UnknownAccountException(""No account found for user ["" + username + ""]"");
        }
        info = new SimpleAuthenticationInfo(username, user.getUserPass().toCharArray(), getName());

        return info;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        if (principals == null) {
            throw new AuthorizationException(""PrincipalCollection method argument cannot be null."");
        }

        String username = (String) getAvailablePrincipal(principals);
        System.out.println(""Auth | username : "" + username);


        Set&lt;String&gt; roleNames = roleHome.getNameSetByUserName(username);


        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo(roleNames);
        return info;
    }

}
</code></pre>

<p>Any suggestions will be appreciated. </p>

<p>Note: I tried using shiro.ini configuration but it doesn't worked too. roles filter doesn't call MyRealm too. Only authcBasic is working right(calling Realm).</p>
","<java><spring><security><shiro><realm>","1","30512387"
"32884383","Apache shiro Active Directory login via domain name","<p>We are currently using apache shiro to authenticate users against a active directory.</p>

<p>Currently we have the users login via the ldap account name, like firstname.lastname@adsdomain.local</p>

<p>Now we should change the system, that the users can login via the sAMAccountName attribute.
The idea is that the users enter the sAMAccountName name in the login box,
and shiro then does match this against the firstname.lastname@adsdomain.local for the login.</p>

<p>The shiro.ini currently looks like this:</p>

<pre><code>activeDirectoryRealm.systemUsername = systemuser
activeDirectoryRealm.systemPassword = *******
activeDirectoryRealm.searchBase = dc=corp,dc=adsdomain,dc=local
activeDirectoryRealm.url = ldap://&lt;adsserver-ip&gt;:389
activeDirectoryRealm.principalSuffix = @adsdomain.local
</code></pre>
","<active-directory><shiro>","0",""
"20214904","Guice @SessionScoped annotation causes IllegalArgumentException with Shiro HttpSession","<p>I have an Apache Wicket 1.5 application that uses Shiro for security, and Guice for dependency injection.
Most of its pages are stateless, but some of my model objects (user data, current menu state, ...) need to be consistent across all requests in the same session. All of these objects have both logic (mostly simple finder methods using remote EJB3 interfaces to access a database) and state, and all of them implement Serializable.</p>

<p>Here's a short excerpt that should convey the idea:</p>

<pre><code>@SessionScoped
public class UsersImpl implements Users, Serializable {

    private static final long serialVersionUID = 8841809043461673585L;
    private final Logger log = LoggerFactory.getLogger( UsersImpl.class );

    @Inject
    public UserService users;

    @Inject
    public RoleService roles;

    private UserDTO currentUser;

    public UserVO findUserByUser( UserVO user ) {
        UserDTO userDto = null;
        try {
            userDto = users.findUserByUser( user.toUserDTO() );
        } catch( Exception e ) {
            log.error( ""Error finding user:""+user.id, e );
        }
        return userDto != null ? new UserVO( userDto ) : null;
    }

(...)

}
</code></pre>

<p>I developed and unit tested the classes using <code>@Singleton</code> (for simplicity), and everything works fine this way, but I get frequent errors like this, now that I have switched to <code>@SessionScoped</code> for production:</p>

<pre><code>Guice provision errors:
1) Error in custom provider, org.apache.shiro.session.InvalidSessionException:
   java.lang.IllegalArgumentException: 
   HttpSession based implementations of the Shiro Session interface requires attribute keys to be String objects.  The HttpSession class does not support anything other than String keys.
</code></pre>

<p>Obviously, Guice seems to use some custom Key object to store the objects in the session, and the Shiro HttpSession implementation can't handle that. Strangely enough, though, this exception does not occur for all of the <code>@SessionScoped</code> classes, but certainly for more than one. </p>

<p>I have been searching the web like crazy, looking for an idea what I could do - some way to force Guice to use Strings for keys, some other way to make the HttpSession more compatible, anything - but I can't seem to find any helpful information. Also, judging from my search results for the error message, I seem to be the only person on the planet who even has this problem at all... </p>

<p>Is there any way to make this work? Or am I doing something wrong here?</p>
","<java><guice><shiro><java-ee-5><wicket-1.5>","4","20225749"
"18840261","Tomcat7.0.40 auto shutdown with a project running on it, its built with Spring MVC, Atmosphere, Apache Shiro, Oracle","<p>My project is built with SpringMVC, Atmosphere to accomplish real-time push data, this project also integrate with apache shiro to do security control.</p>

<p>This project is running on Apache tomcat7.0.40, Windows Server 2008 R2 x64 16G memory, jvm version is:
java version ""1.6.0_45""
Java(TM) SE Runtime Environment (build 1.6.0_45-b06)
Java HotSpot(TM) 64-Bit Server VM (build 20.45-b01, mixed mode)</p>

<p>My problem is: Tomcat always auto shutdown, and this ""auto shutdown"" seems random.</p>

<p>Can anybody can help me to identify the route cause?</p>

<p>Atmosphere config in web.xml:</p>

<pre><code>&lt;servlet&gt;
    &lt;servlet-name&gt;meteorServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.atmosphere.cpr.MeteorServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
    &lt;param-name&gt;org.atmosphere.servlet&lt;/param-name&gt;
        &lt;param-value&gt;org.springframework.web.servlet.DispatcherServlet&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;WEB-INF/config/**/*-servlet.xml&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.cpr.AtmosphereInterceptor&lt;/param-name&gt;
        &lt;param-value&gt;org.atmosphere.interceptor.HeartbeatInterceptor&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.cpr.sessionSupport&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.filter.name&lt;/param-name&gt;
        &lt;param-value&gt;shiroFilter&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;org.atmosphere.websocket.messageContentType&lt;/param-name&gt;
        &lt;param-value&gt;application/json&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;filterMappingUrlPattern&lt;/param-name&gt;
        &lt;param-value&gt;/*&lt;/param-value&gt;
    &lt;/init-param&gt;

    &lt;load-on-startup&gt;0&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;meteorServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>My Shiro filter in web.xml:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;async-supported&gt;true&lt;/async-supported&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>I use Spring's scheduled task to push data to client every 6 seconds, related code:</p>

<pre><code>@Scheduled(cron = ""0/6 * * * * *"")
@Override
public void run() {
    try {
        if (isFetchAllData()) {
            List&lt;T&gt; allData = getAll();
            setMainCache(allData);
        } else {
            List&lt;T&gt; updatedData = getUpdated();
            setUpdatedCache(updatedData);
            pushData(updatedData);
        }
    } catch (Throwable e) {
        logger.error(""Error"", e);
        throw new ApplicationException(e);
    }
}

private synchronized void pushData(List&lt;T&gt; updatedData) {
    List&lt;TaskUnit&gt; toRemove = new ArrayList&lt;TaskUnit&gt;();
    for (TaskUnit taskUnit : taskUnits) {
        AtmosphereResource resource = taskUnit.getResource();
        Map&lt;String, Object&gt; queryParam = taskUnit.getQueryParam();
        List&lt;T&gt; filteredDataList = filterData(updatedData, queryParam);
        try {
            if (!resource.isResumed() &amp;&amp; !resource.isCancelled() &amp;&amp; ((AtmosphereResourceImpl)resource).isInScope()) {
                resource.getResponse().write(objectMapper.writeValueAsString(filteredDataList));
            } else {
                logger.debug(""AtmosphereResource isResumed:"" + resource.isResumed() + "" isCancelled:"" + resource.isCancelled() + "" isInScope:""+ ((AtmosphereResourceImpl)resource).isInScope());
                toRemove.add(taskUnit);
            }
        } catch (IllegalStateException e1) {
            toRemove.add(taskUnit);
            logger.error(""Remove task unit from taskunits list"", e1);
        } catch (Throwable e) {
            logger.error(""Write List to string failed!"", e);
            throw new ApplicationException(e);
        }
    }
    taskUnits.removeAll(toRemove);
}
</code></pre>

<p>piece of log:</p>

<pre><code>#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00000001800057b2, pid=3200, tid=7536
#
# JRE version: 6.0_45-b06
# Java VM: Java HotSpot(TM) 64-Bit Server VM (20.45-b01 mixed mode windows-amd64 compressed oops)
# Problematic frame:
# C  [tcnative-1.dll+0x57b2]
#
# If you would like to submit a bug report, please visit:
#   http://java.sun.com/webapps/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  T H R E A D  ---------------

Current thread (0x0000000007b88000):  JavaThread ""tmTaskScheduler-1"" [_thread_in_native, id=7536, stack(0x000000000c610000,0x000000000c710000)]

siginfo: ExceptionCode=0xc0000005, reading address 0x0000000000000040

Stack: [0x000000000c610000,0x000000000c710000],  sp=0x000000000c70e280,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [tcnative-1.dll+0x57b2]  Java_org_apache_tomcat_jni_Socket_sendbb+0x72

[error occurred during error reporting (printing native stack), id 0xc0000005]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  org.apache.tomcat.jni.Socket.sendbb(JII)I+0
j  org.apache.coyote.http11.InternalAprOutputBuffer.flushBuffer()V+22
J  org.apache.coyote.http11.InternalAprOutputBuffer$SocketOutputBuffer.doWrite(Lorg/apache/tomcat/util/buf/ByteChunk;Lorg/apache/coyote/Response;)I
J  org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(Lorg/apache/tomcat/util/buf/ByteChunk;Lorg/apache/coyote/Response;)I
j  org.apache.coyote.http11.AbstractOutputBuffer.doWrite(Lorg/apache/tomcat/util/buf/ByteChunk;Lorg/apache/coyote/Response;)I+49
j  org.apache.coyote.Response.doWrite(Lorg/apache/tomcat/util/buf/ByteChunk;)V+6
j  org.apache.catalina.connector.OutputBuffer.realWriteBytes([BII)V+38
j  org.apache.tomcat.util.buf.ByteChunk.flushBuffer()V+71
j  org.apache.tomcat.util.buf.ByteChunk.append([BII)V+159
j  org.apache.catalina.connector.OutputBuffer.writeBytes([BII)V+15
j  org.apache.catalina.connector.OutputBuffer.write([BII)V+12
j  org.apache.catalina.connector.CoyoteOutputStream.write([BII)V+7
j  org.apache.catalina.connector.CoyoteOutputStream.write([B)V+5
j  org.atmosphere.cpr.AtmosphereResponse.write([BZ)Lorg/atmosphere/cpr/AtmosphereResponse;+63
j  org.atmosphere.cpr.AtmosphereResponse.write([B)Lorg/atmosphere/cpr/AtmosphereResponse;+3
j  org.atmosphere.cpr.AtmosphereInterceptorWriter.writeReady(Lorg/atmosphere/cpr/AtmosphereResponse;[B)V+2
j  org.atmosphere.cpr.AtmosphereInterceptorWriter.invokeInterceptor(Lorg/atmosphere/cpr/AtmosphereResponse;[BII)V+113
j  org.atmosphere.cpr.AtmosphereInterceptorWriter.write(Lorg/atmosphere/cpr/AtmosphereResponse;[BII)Lorg/atmosphere/cpr/AsyncIOWriter;+6
j  org.atmosphere.cpr.AtmosphereInterceptorWriter.write(Lorg/atmosphere/cpr/AtmosphereResponse;[B)Lorg/atmosphere/cpr/AsyncIOWriter;+6
j  org.atmosphere.cpr.AtmosphereResponse$2.write([B)V+47
j  org.atmosphere.cpr.AtmosphereResponse.write(Ljava/lang/String;Z)Lorg/atmosphere/cpr/AtmosphereResponse;+70
j  org.atmosphere.cpr.AtmosphereResponse.write(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResponse;+3
j  org.iosh.base.service.AbstractWebSocketService.pushData(Ljava/util/List;)V+76
j  org.iosh.base.service.AbstractWebSocketService.run()V+32
j  sun.reflect.GeneratedMethodAccessor127.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+36
J  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
j  org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;+7
J  org.springframework.aop.framework.ReflectiveMethodInvocation.proceed()Ljava/lang/Object;
j  org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation()Ljava/lang/Object;+4
j  org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;)Ljava/lang/Object;+58
j  org.springframework.transaction.interceptor.TransactionInterceptor.invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;+40
J  org.springframework.aop.framework.ReflectiveMethodInvocation.proceed()Ljava/lang/Object;
j  org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;+18
J  org.springframework.aop.framework.ReflectiveMethodInvocation.proceed()Ljava/lang/Object;
j  org.springframework.aop.framework.JdkDynamicAopProxy.invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;+322
j  com.sun.proxy.$Proxy85.run()V+9
j  sun.reflect.GeneratedMethodAccessor140.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+36
J  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
j  org.springframework.scheduling.support.ScheduledMethodRunnable.run()V+19
j  org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run()V+4
j  org.springframework.scheduling.concurrent.ReschedulingRunnable.run()V+9
j  java.util.concurrent.Executors$RunnableAdapter.call()Ljava/lang/Object;+4
j  java.util.concurrent.FutureTask$Sync.innerRun()V+30
j  java.util.concurrent.FutureTask.run()V+4
j  java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)V+1
j  java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run()V+15
j  java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Ljava/lang/Runnable;)V+66
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+33
j  java.lang.Thread.run()V+11
v  ~StubRoutines::call_stub

---------------  P R O C E S S  ---------------

Java Threads: ( =&gt; current thread )
  0x000000000b0a6000 JavaThread ""com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2"" daemon [_thread_in_native, id=7768, stack(0x000000000bfe0000,0x000000000c0e0000)]
  0x000000000b0a6800 JavaThread ""com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1"" daemon [_thread_in_native, id=480, stack(0x000000000adb0000,0x000000000aeb0000)]
  0x000000000b0a1000 JavaThread ""com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0"" daemon [_thread_in_native, id=3612, stack(0x000000000ac90000,0x000000000ad90000)]
  0x0000000008f17800 JavaThread ""http-apr-8081-exec-10"" daemon [_thread_blocked, id=7316, stack(0x0000000011bd0000,0x0000000011cd0000)]
  0x000000000ab07000 JavaThread ""http-apr-8081-exec-9"" daemon [_thread_blocked, id=7668, stack(0x000000000c4a0000,0x000000000c5a0000)]
  0x000000000ab08000 JavaThread ""http-apr-8081-exec-8"" daemon [_thread_blocked, id=5396, stack(0x000000000c0e0000,0x000000000c1e0000)]
  0x0000000008f16800 JavaThread ""http-apr-8081-exec-7"" daemon [_thread_blocked, id=4344, stack(0x0000000011ad0000,0x0000000011bd0000)]
  0x0000000008f16000 JavaThread ""http-apr-8081-exec-6"" daemon [_thread_blocked, id=4328, stack(0x00000000119d0000,0x0000000011ad0000)]
  0x0000000008f15000 JavaThread ""http-apr-8081-exec-5"" daemon [_thread_blocked, id=6668, stack(0x00000000118d0000,0x00000000119d0000)]
  0x0000000008f14800 JavaThread ""http-apr-8081-exec-4"" daemon [_thread_blocked, id=8108, stack(0x00000000117d0000,0x00000000118d0000)]
  0x0000000008f13800 JavaThread ""http-apr-8081-exec-3"" daemon [_thread_blocked, id=7648, stack(0x000000000c1e0000,0x000000000c2e0000)]
  0x0000000008f13000 JavaThread ""http-apr-8081-exec-2"" daemon [_thread_blocked, id=8072, stack(0x0000000009ab0000,0x0000000009bb0000)]
  0x0000000008f12800 JavaThread ""http-apr-8081-exec-1"" daemon [_thread_blocked, id=8044, stack(0x00000000099b0000,0x0000000009ab0000)]
  0x0000000008f11000 JavaThread ""ajp-apr-8009-AsyncTimeout"" daemon [_thread_blocked, id=7364, stack(0x00000000116d0000,0x00000000117d0000)]
  0x0000000008f10000 JavaThread ""ajp-apr-8009-Acceptor-0"" daemon [_thread_in_native, id=7460, stack(0x00000000115d0000,0x00000000116d0000)]
  0x0000000008f0f800 JavaThread ""ajp-apr-8009-CometPoller-7"" daemon [_thread_blocked, id=2280, stack(0x00000000114d0000,0x00000000115d0000)]
  0x0000000008f0e800 JavaThread ""ajp-apr-8009-CometPoller-6"" daemon [_thread_blocked, id=7068, stack(0x00000000113d0000,0x00000000114d0000)]
  0x0000000008f0e000 JavaThread ""ajp-apr-8009-CometPoller-5"" daemon [_thread_blocked, id=8008, stack(0x00000000112d0000,0x00000000113d0000)]
  0x0000000008f0d000 JavaThread ""ajp-apr-8009-CometPoller-4"" daemon [_thread_blocked, id=7128, stack(0x00000000111d0000,0x00000000112d0000)]
  0x0000000008f0c800 JavaThread ""ajp-apr-8009-CometPoller-3"" daemon [_thread_blocked, id=8124, stack(0x00000000110d0000,0x00000000111d0000)]
  0x0000000008f0c000 JavaThread ""ajp-apr-8009-CometPoller-2"" daemon [_thread_blocked, id=3648, stack(0x0000000010fd0000,0x00000000110d0000)]
  0x000000000856c000 JavaThread ""ajp-apr-8009-CometPoller-1"" daemon [_thread_blocked, id=7660, stack(0x0000000010ed0000,0x0000000010fd0000)]
  0x000000000856b800 JavaThread ""ajp-apr-8009-CometPoller-0"" daemon [_thread_blocked, id=6624, stack(0x0000000010dd0000,0x0000000010ed0000)]
  0x000000000856a800 JavaThread ""ajp-apr-8009-Poller-7"" daemon [_thread_blocked, id=8056, stack(0x0000000010cd0000,0x0000000010dd0000)]
  0x000000000856a000 JavaThread ""ajp-apr-8009-Poller-6"" daemon [_thread_blocked, id=8132, stack(0x0000000010bd0000,0x0000000010cd0000)]
  0x0000000008569800 JavaThread ""ajp-apr-8009-Poller-5"" daemon [_thread_blocked, id=7476, stack(0x0000000010ad0000,0x0000000010bd0000)]
  0x0000000008568800 JavaThread ""ajp-apr-8009-Poller-4"" daemon [_thread_blocked, id=7976, stack(0x00000000109d0000,0x0000000010ad0000)]
  0x0000000008568000 JavaThread ""ajp-apr-8009-Poller-3"" daemon [_thread_blocked, id=7392, stack(0x00000000108d0000,0x00000000109d0000)]
  0x0000000008567000 JavaThread ""ajp-apr-8009-Poller-2"" daemon [_thread_blocked, id=7844, stack(0x00000000107d0000,0x00000000108d0000)]
  0x0000000008566800 JavaThread ""ajp-apr-8009-Poller-1"" daemon [_thread_blocked, id=6156, stack(0x00000000106d0000,0x00000000107d0000)]
  0x0000000008565800 JavaThread ""ajp-apr-8009-Poller-0"" daemon [_thread_blocked, id=7028, stack(0x00000000105d0000,0x00000000106d0000)]
  0x0000000008565000 JavaThread ""http-apr-8081-AsyncTimeout"" daemon [_thread_blocked, id=7892, stack(0x00000000104d0000,0x00000000105d0000)]
  0x0000000008fe2000 JavaThread ""http-apr-8081-Acceptor-0"" daemon [_thread_in_native, id=7840, stack(0x00000000103d0000,0x00000000104d0000)]
  0x0000000008fe1000 JavaThread ""http-apr-8081-Sendfile-0"" daemon [_thread_blocked, id=5184, stack(0x00000000102d0000,0x00000000103d0000)]
  0x0000000008fe0800 JavaThread ""http-apr-8081-CometPoller-7"" daemon [_thread_blocked, id=7528, stack(0x00000000101d0000,0x00000000102d0000)]
  0x0000000008fdf800 JavaThread ""http-apr-8081-CometPoller-6"" daemon [_thread_blocked, id=6872, stack(0x00000000100d0000,0x00000000101d0000)]
  0x0000000008fdf000 JavaThread ""http-apr-8081-CometPoller-5"" daemon [_thread_blocked, id=7928, stack(0x000000000ffd0000,0x00000000100d0000)]
  0x0000000008fde000 JavaThread ""http-apr-8081-CometPoller-4"" daemon [_thread_blocked, id=1672, stack(0x000000000fed0000,0x000000000ffd0000)]
  0x0000000008fdd800 JavaThread ""http-apr-8081-CometPoller-3"" daemon [_thread_blocked, id=7908, stack(0x000000000fdd0000,0x000000000fed0000)]
  0x0000000008fdc800 JavaThread ""http-apr-8081-CometPoller-2"" daemon [_thread_blocked, id=6804, stack(0x000000000fcd0000,0x000000000fdd0000)]
  0x0000000008fdc000 JavaThread ""http-apr-8081-CometPoller-1"" daemon [_thread_blocked, id=844, stack(0x000000000fbd0000,0x000000000fcd0000)]
  0x0000000008fdb800 JavaThread ""http-apr-8081-CometPoller-0"" daemon [_thread_blocked, id=7416, stack(0x000000000eaf0000,0x000000000ebf0000)]
  0x0000000008fda800 JavaThread ""http-apr-8081-Poller-7"" daemon [_thread_in_native, id=8168, stack(0x000000000e9f0000,0x000000000eaf0000)]
  0x000000000ab0f000 JavaThread ""http-apr-8081-Poller-6"" daemon [_thread_blocked, id=3040, stack(0x000000000e8f0000,0x000000000e9f0000)]
  0x000000000ab0e800 JavaThread ""http-apr-8081-Poller-5"" daemon [_thread_blocked, id=7292, stack(0x000000000e7f0000,0x000000000e8f0000)]
  0x000000000ab0d800 JavaThread ""http-apr-8081-Poller-4"" daemon [_thread_in_native, id=2216, stack(0x000000000e6f0000,0x000000000e7f0000)]
  0x000000000ab0d000 JavaThread ""http-apr-8081-Poller-3"" daemon [_thread_in_native, id=7868, stack(0x000000000e5f0000,0x000000000e6f0000)]
  0x000000000ab0c000 JavaThread ""http-apr-8081-Poller-2"" daemon [_thread_in_native, id=6832, stack(0x000000000e4f0000,0x000000000e5f0000)]
  0x000000000ab0b800 JavaThread ""http-apr-8081-Poller-1"" daemon [_thread_blocked, id=1392, stack(0x000000000d410000,0x000000000d510000)]
  0x000000000ab0a800 JavaThread ""http-apr-8081-Poller-0"" daemon [_thread_in_native, id=5268, stack(0x000000000d310000,0x000000000d410000)]
  0x000000000ab0a000 JavaThread ""ContainerBackgroundProcessor[StandardEngine[Catalina]]"" daemon [_thread_blocked, id=7912, stack(0x000000000d210000,0x000000000d310000)]
  0x000000000ab06800 JavaThread ""FileWatchdog"" daemon [_thread_blocked, id=7904, stack(0x000000000c3a0000,0x000000000c4a0000)]
  0x000000000ab05800 JavaThread ""tmTaskScheduler-12"" [_thread_blocked, id=7272, stack(0x000000000d110000,0x000000000d210000)]
  0x000000000ab05000 JavaThread ""tmTaskScheduler-11"" [_thread_blocked, id=5936, stack(0x000000000d010000,0x000000000d110000)]
  0x000000000ab04000 JavaThread ""tmTaskScheduler-10"" [_thread_blocked, id=4620, stack(0x000000000cf10000,0x000000000d010000)]
  0x000000000ab03800 JavaThread ""tmTaskScheduler-9"" [_thread_blocked, id=7436, stack(0x000000000ce10000,0x000000000cf10000)]
  0x000000000ab03000 JavaThread ""tmTaskScheduler-8"" [_thread_blocked, id=8084, stack(0x000000000cd10000,0x000000000ce10000)]
  0x000000000ab02000 JavaThread ""tmTaskScheduler-7"" [_thread_blocked, id=5752, stack(0x000000000cc10000,0x000000000cd10000)]
  0x000000000ab01800 JavaThread ""tmTaskScheduler-6"" [_thread_blocked, id=4960, stack(0x000000000cb10000,0x000000000cc10000)]
  0x000000000ab00800 JavaThread ""tmTaskScheduler-5"" [_thread_blocked, id=7144, stack(0x000000000ca10000,0x000000000cb10000)]
  0x000000000ab00000 JavaThread ""tmTaskScheduler-4"" [_thread_in_native, id=4524, stack(0x000000000c910000,0x000000000ca10000)]
  0x0000000008d13800 JavaThread ""tmTaskScheduler-3"" [_thread_blocked, id=7800, stack(0x000000000c810000,0x000000000c910000)]
  0x0000000008ab9800 JavaThread ""tmTaskScheduler-2"" [_thread_blocked, id=7532, stack(0x000000000c710000,0x000000000c810000)]
=&gt;0x0000000007b88000 JavaThread ""tmTaskScheduler-1"" [_thread_in_native, id=7536, stack(0x000000000c610000,0x000000000c710000)]
  0x000000000851b800 JavaThread ""Timer-0"" daemon [_thread_blocked, id=7716, stack(0x0000000009bb0000,0x0000000009cb0000)]
  0x0000000007998000 JavaThread ""GC Daemon"" daemon [_thread_blocked, id=8088, stack(0x0000000009760000,0x0000000009860000)]
  0x00000000070bd800 JavaThread ""Low Memory Detector"" daemon [_thread_blocked, id=7880, stack(0x0000000007650000,0x0000000007750000)]
  0x00000000070b2000 JavaThread ""C2 CompilerThread1"" daemon [_thread_blocked, id=4276, stack(0x0000000007550000,0x0000000007650000)]
  0x00000000070ad000 JavaThread ""C2 CompilerThread0"" daemon [_thread_blocked, id=7212, stack(0x0000000007450000,0x0000000007550000)]
  0x00000000070aa800 JavaThread ""Attach Listener"" daemon [_thread_blocked, id=7232, stack(0x0000000007350000,0x0000000007450000)]
  0x00000000070a5800 JavaThread ""Signal Dispatcher"" daemon [_thread_blocked, id=7508, stack(0x0000000007250000,0x0000000007350000)]
  0x0000000000527000 JavaThread ""Finalizer"" daemon [_thread_blocked, id=6768, stack(0x0000000006f50000,0x0000000007050000)]
  0x0000000000524800 JavaThread ""Reference Handler"" daemon [_thread_blocked, id=6252, stack(0x0000000006e50000,0x0000000006f50000)]
  0x000000000055b800 JavaThread ""main"" [_thread_in_native, id=4396, stack(0x00000000024b0000,0x00000000025b0000)]

Other Threads:
  0x000000000051d800 VMThread [stack: 0x0000000006d50000,0x0000000006e50000] [id=6956]
  0x00000000070ce800 WatcherThread [stack: 0x0000000007750000,0x0000000007850000] [id=3716]

VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap
 PSYoungGen      total 71296K, used 40645K [0x00000007aab60000, 0x00000007afa70000, 0x0000000800000000)
  eden space 70336K, 56% used [0x00000007aab60000,0x00000007ad2294b0,0x00000007af010000)
  from space 960K, 96% used [0x00000007af1e0000,0x00000007af2c8000,0x00000007af2d0000)
  to   space 5312K, 0% used [0x00000007af540000,0x00000007af540000,0x00000007afa70000)
 PSOldGen        total 174656K, used 68580K [0x0000000700200000, 0x000000070ac90000, 0x00000007aab60000)
  object space 174656K, 39% used [0x0000000700200000,0x00000007044f9208,0x000000070ac90000)
 PSPermGen       total 71360K, used 71250K [0x00000006fb000000, 0x00000006ff5b0000, 0x0000000700200000)
  object space 71360K, 99% used [0x00000006fb000000,0x00000006ff5949d0,0x00000006ff5b0000)

Code Cache  [0x00000000025b0000, 0x0000000002d10000, 0x00000000055b0000)
 total_blobs=2370 nmethods=1878 adapters=444 free_code_cache=42726464 largest_free_block=8064

VM Arguments:
jvm_args: -Djava.util.logging.config.file=C:\Tomcat81\conf\logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=C:\Tomcat81\endorsed -Dcatalina.base=C:\Tomcat81 -Dcatalina.home=C:\Tomcat81 -Djava.io.tmpdir=C:\Tomcat81\temp 
java_command: org.apache.catalina.startup.Bootstrap start
Launcher Type: SUN_STANDARD

Environment Variables:
JAVA_HOME=C:\Java\jdk1.6.0_45
JRE_HOME=C:\Java\jdk1.6.0_45
CLASSPATH=C:\Tomcat81\bin\bootstrap.jar;C:\Tomcat81\bin\tomcat-juli.jar
PATH=C:\Perl64\site\bin;C:\Perl64\bin;C:\Oracle\db11g\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Java\jdk1.6.0_45\bin
USERNAME=Administrator
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 44 Stepping 2, GenuineIntel



---------------  S Y S T E M  ---------------

OS: Windows NT 6.1 , 64 bit Build 7601 Service Pack 1

CPU:total 4 (4 cores per cpu, 1 threads per core) family 6 model 44 stepping 2, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt

Memory: 4k page, physical 16763996k(11271648k free), swap 33526148k(24216276k free)

vm_info: Java HotSpot(TM) 64-Bit Server VM (20.45-b01) for windows-amd64 JRE (1.6.0_45-b06), built on Apr  1 2013 12:31:37 by ""java_re"" with MS VC++ 8.0 (VS2005)

time: Wed Sep 11 15:19:00 2013
elapsed time: 20345 seconds
</code></pre>
","<oracle><spring-mvc><tomcat7><shiro><atmosphere>","0","18843572"
"24733432","Spring autowire not working with security configuration","<p>I get an exception <code>java.lang.IllegalArgumentException: Not an entity Error</code>. I've gone through my code and I think I have all the right annotations. I'm using shiro for authentication and an error is thrown at runtime. This was working before and I don't understand the issues now.</p>

<p>This is my pojo class:</p>

<pre><code> @Entity
 @Table(name =""message"") 
 public class Message implements Serializable{  
     ...
 } 
</code></pre>

<p>This is my repository:</p>

<pre><code>@Repository
@Component(value = ""messageRepository"")
public interface MessageRepository extends JpaRepository&lt;User, Long&gt; {
    ...
}
</code></pre>

<p>Snippet of my web security configuration, which throws the error</p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager"" depends-on=""messageRepository""&gt;
    &lt;property name=""realm"" ref=""myRealm"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>This is the error:</p>

<pre><code>Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' defined in ServletContext resource [/WEB-INF/web-security-config.xml]: Cannot resolve reference to bean 'securityManager' while setting bean property 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageRepository': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: Not an entity: class com.mycompany.messages.model.Message
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1387) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1128) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:198) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:86) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:101) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:87) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:69) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:359) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322) ~[spring-aop-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:409) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1488) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    ... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageRepository': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: Not an entity: class com.mycompany.messages.model.Message
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1454) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:306) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:285) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
    ... 68 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not an entity: class com.mycompany.messages.model.Message
    at org.hibernate.ejb.metamodel.MetamodelImpl.entity(MetamodelImpl.java:158) ~[hibernate-entitymanager-4.0.1.Final.jar:4.0.1.Final]
    at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.&lt;init&gt;(JpaMetamodelEntityInformation.java:52) ~[spring-data-jpa-1.1.0.M1.jar:na]
    at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getMetadata(JpaEntityInformationSupport.java:61) ~[spring-data-jpa-1.1.0.M1.jar:na]
    at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:145) ~[spring-data-jpa-1.1.0.M1.jar:na]
    at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:83) ~[spring-data-jpa-1.1.0.M1.jar:na]
    at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:66) ~[spring-data-jpa-1.1.0.M1.jar:na]
    at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:131) ~[spring-data-commons-core-1.2.1.RELEASE.jar:na]
    at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:114) ~[spring-data-commons-core-1.2.1.RELEASE.jar:na]
    at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:38) ~[spring-data-commons-core-1.2.1.RELEASE.jar:na]
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
</code></pre>

<p>Thanks for your help.</p>
","<java><spring-mvc><annotations><autowired><shiro>","1",""
"5832013","Hashed and Salted Password is not always the same","<p>I am using Apache Shiro as my security layer in my Spring app and I am encountering a really weird situation.</p>

<p>Firstly, this is how my security system is set up. When a user registers their password is hashed with a securely generated random salt. The salt and hashed password are then stored in my DB. Everything works 100% when they register and login works great too, but then a couple of days go by and suddenly their hashed passwords aren't matching any longer. Here is my code:</p>

<pre><code>import org.apache.shiro.codec.Base64;
import org.apache.shiro.crypto.hash.Sha256Hash;

public static void main(String[] args) {
        String plainPassword = ""testing"";
        String salt = ""8AFTpriREtydSg39+37rQHNRyvZLuXqyXYgWXI55f1PbhbUQSeFGCLKsHpA6thZKs3uQeNNJHksqcV5oaNcr9lQiXMMyC8Duqr2aQaqyjLKpNMVlB69jJ7emNq0K6ccfBdv/O4JGT2U689LeNg6CqN+9kqW2GBgT2CIVOlapA34="";

        System.out.println(new Sha256Hash(plainPassword.toCharArray(), Base64.decode(salt), 1024).toBase64());
}
</code></pre>

<p>The resulting hashed password is:</p>

<pre><code>b8VLt/eKV8F5kwDjRgdkM+PAvQC8sk7Ooflt91juaXA= 
</code></pre>

<p>But the password I have in my database, which was working and was generated with the exact same salt a couple of days ago was:</p>

<pre><code>xZNBNlUa8vRQq0qY5bbkETzZtzztGRTH2KZKijQdilU=
</code></pre>

<p>So as you can imagine, I am completely stumped. Does anyone know if I am doing something wrong? Or if I have left a step out.</p>

<p>Update 1: After registering a new user in my system, it looks like all the other users in the system have their passwords changed for some reason. So this has nothing to do with the way the password hash is generated and more to do with my database access layer.</p>
","<java><hash><salt><shiro>","3","5833427"
"14776620","How to manage web sessions for different web apps with single sign on?","<p>I have 2 osgi distributed web apps A(A1, A2) and B(B1, B2), i am using shiro to share the http sessions for single sign on so that logginng in one system logs in the other too. But I want the session data to be separated between system A and B apart from the authentication/authorization data,so I need a way to share the authentication data and separate system specific session data of A and B. I am thinking to use shiro for single sign on and use a different distributed session for each system to store system specific data, the main workflow would be  : </p>

<ol>
<li>log in system A with shiro, create an another session(or some data holder object to store the session data) using the shiro session id,stores it in backend(db or cache).</li>
<li>do stuff in system A, put session data into the  session created above, writes to backend.</li>
<li>When another request comes in system A, look for a session with the id matching the shiro session id, if found, use it, else create new one.</li>
</ol>

<p>Does it make sense? Is it the right way to solve my problem? What is the best way? Please share your thoughts.
Any input is appreciated.
Thank you.</p>
","<osgi><shiro>","0",""
"30978100","Apache Shiro credentials matching for basic authentication always fails","<p>I am trying to implement basic authentication with Apache Shiro. I  added the listener and filter to my web.xml file:</p>

<pre><code>&lt;listener&gt;
 &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
 &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
 &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
 &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
 &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
 &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
 &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
 &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>and applied the authcBasic filter to the protected pages in my shiro.ini file:</p>

<pre><code>[urls]
/api/users = anon
/login.html = anon
/** = authcBasic
</code></pre>

<p>Also, I'm using an Sha256CredentialsMatcher and a JdbcRealm subclass as the realm:</p>

<pre><code>[main]
jdbcRealm = my.package.SaltColumnJDBCRealm
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024 
jdbcRealm.credentialsMatcher = $sha256Matcher
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE email = ?
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
securityManager.realms = $jdbcRealm
</code></pre>

<p>Realm class:</p>

<pre><code>public class SaltColumnJDBCRealm extends org.apache.shiro.realm.jdbc.JdbcRealm
{
    public SaltColumnJDBCRealm()
    {
        this.setSaltStyle(SaltStyle.COLUMN);
    }
}
</code></pre>

<p>Users can be added to the database by POSTing a JSON object to a RESTful webservice:</p>

<pre><code>import javax.ejb.EJB;
import javax.enterprise.context.RequestScoped;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import org.apache.shiro.crypto.RandomNumberGenerator;
import org.apache.shiro.crypto.SecureRandomNumberGenerator;
import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.util.ByteSource;

@Path(""/users"")
@RequestScoped
public class UserService
{
    @EJB
    UserDao userDao;

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    public void register(User user)
    {
        try
        {
            encryptPassword(user);
            userDao.persist(user);
        }
        catch(InvalidEntityException | UnsupportedEncodingException e)
        {
            throw new WebApplicationException(e);
        }
    }

    private static void encryptPassword(User user) throws UnsupportedEncodingException
    {
        RandomNumberGenerator rng = new SecureRandomNumberGenerator();
        ByteSource salt = rng.nextBytes();

        String hashedPasswordBase64 = new Sha256Hash(user.getPassword(), salt, 1024).toBase64();
        user.setPassword(hashedPasswordBase64);
        user.setSalt(salt.toBase64());
    }
}
</code></pre>

<p>(This is pretty much following the <a href=""http://shiro.apache.org/realm.html#Realm-HashingCredentials"" rel=""nofollow"">tutorial from the Shiro web page</a>.)</p>

<p>This registration of new users works fine, and when a client tries to authenticate, the user name and password reach the server without issues. But then the login always fails.</p>

<p>I have already tracked down the issue by debugging to the following point:
The Sha256CredentialsMatcher retrieves the salt that matches the received user name from the database and hashes the received password utilizing this salt. Afterwards it compares the result with the password hash already stored in the database for this user name. It's just that in my case these hashes never match, even when a correct combination of user name and password was sent by the client. It appears as if the salt and/or the password hash get changed during the process of storing them in the database and retrieving them again. Or as if somehow the <code>Sha256Hash(...)</code> constructor and the <code>Sha256CredentialsMatcher.doCredentialsMatch(...)</code> method arrive at different results when hashing the same password. But I'm out of ideas how this might happen.</p>

<p>I have already tried storing the salt in the database as <code>salt.toString()</code> instead of <code>salt.toBase64()</code>:</p>

<pre><code>public class UserService
{
    ... 
    private static void encryptPassword(User user) throws UnsupportedEncodingException
    {
        ... 
        user.setSalt(salt.toString());
...
</code></pre>

<p>The error happens with both variants.</p>
","<java><authentication><shiro>","0","32569356"
"31009567","Configuring authorization for JNDILdapRealm in Shiro","<p>My question is actually this question exactly: <a href=""https://stackoverflow.com/questions/12173492/shiro-jndildaprealm-authorization-against-ldap/"">Shiro JndiLdapRealm authorization against LDAP</a></p>

<p>To summarize, the <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/realm/ldap/JndiLdapRealm.html"" rel=""nofollow noreferrer"">Shiro documentation</a> states: </p>

<blockquote>
  <p>If you wish to perform authorization based on an LDAP schema, you must subclass this one (JNDILdapRealm) and override that method (doGetAuthorizationInfo) to reflect your organization's data model.</p>
</blockquote>

<p>I am confused by the accepted solution, as searchBase is undefined, and it seems like something that is a part of ActiveDirectoryRealm, rather than JndiLdapRealm. getRoleNamesForGroups is also undefined, but I assume that in my mapping the group name would be the role name.</p>

<p>I am trying to get the authorization to map ldap groups -> shiro roles for <a href=""http://www.forumsys.com/tutorials/integration-how-to/ldap/online-ldap-test-server/"" rel=""nofollow noreferrer"">Forumsys's Test Ldap Server</a>, and then return those in the doGetAuthorizationInfo. The code I am using to configure my subclass LdapRealm (which extends JndiLdapRealm, and which works for authentication) is as follows:</p>

<pre><code>LdapRealm ldapRealm = new LdapRealm();
ldapRealm.setUserDnTemplate(""uid={0},dc=example,dc=com"");
JndiLdapContextFactory cf1 = new JndiLdapContextFactory();
cf1.setUrl(""ldap://ldap.forumsys.com:389"");
ldapRealm.setContextFactory(cf1);
</code></pre>

<p>Does anyone have an example of what the functional authorization code should look like? Or is there a simple modification to the accepted answer on the other question that would work?</p>

<p>Alternatively, is there a way to get Forumsys's test server to work with ActiveDirectoryRealm instead (which to my understand, implements authorization)?</p>
","<java><active-directory><ldap><jndi><shiro>","2","31074072"
"29067064","Apache Shiro authentication failing second time around","<p>I have a JavaEE web application that is making use of Apache Shiro for a security framework.  I've implemented a custom JPA authorization realm so I can store my user accounts using JPA.  My custom realm looks something like this...</p>

<pre><code>public class JPAAuthorizingRealm extends AuthorizingRealm {

    /**
     * Logger for this class
     */
    private static final Logger logger = Logger
            .getLogger(JPAAuthorizingRealm.class);

    public static final String REALM_NAME = ""jpaRealm"";

    private UserAccountRepository accountRepository = null;

    @SuppressWarnings(""unchecked"")
    public JPAAuthorizingRealm() {
        super();

        setName(""JpaRealm"");
        setAuthenticationCachingEnabled(false);
        setCachingEnabled(false);

        HashedCredentialsMatcher matcher = new HashedCredentialsMatcher();
        matcher.setHashAlgorithmName(""SHA-256"");
        matcher.setHashIterations(SecurityConstants.PASSWORD_HASH_ITERATIONS);
        setCredentialsMatcher(matcher);

        try {
            BeanManager beanManager = (BeanManager) new InitialContext()
                    .lookup(""java:comp/BeanManager"");
            Bean&lt;UserAccountRepository&gt; accountRepositoryBean = (Bean&lt;UserAccountRepository&gt;) beanManager
                    .resolve(beanManager.getBeans(UserAccountRepository.class));
            CreationalContext&lt;?&gt; creationalContext = beanManager
                    .createCreationalContext(null);
            UserAccountRepository accountRepository = accountRepositoryBean
                    .create((CreationalContext&lt;UserAccountRepository&gt;) creationalContext);
            this.accountRepository = accountRepository;
        } catch (NamingException e) {
            logger.error(
                    ""JPAAuthorizingRealm() - exception while creating user account repository"", e); //$NON-NLS-1$
        }
    }

  &lt;snip&gt;
</code></pre>

<p>I am able to create user accounts (in a separate class) successfully, with a hashed password that can be used to authenticate.  My problem is, I am only able to authenticate <strong><em>one time</em></strong>.  If I login a user, I see that my Shiro <code>Subject</code> says I am authenticated.  If I logout, however, and try to log back in using the exact same credentials (or even a different account altogether) the login never seems to be applied.  I see that my <code>Subject</code> has <code>isAuthenticated() == true</code> immediately after authentication, but on subsequent requests it says <code>isAuthenticated() == false</code>.  Even if I open up a completely separate browser I see the same behavior.  Once my first user has successfully logged in, I am unable to login a second user.</p>

<p>My login code looks like this, and is implemented within a stateless EJB...</p>

<pre><code>AuthenticationToken token = new UsernamePasswordToken(loginName,
        password);
try {
    this.subject.login(token);
} catch (IncorrectCredentialsException e) {
    logger.error(""authenticateUser(String, String)"", e); //$NON-NLS-1$

    throw new InvalidCredentialsException(e);
} catch (AuthenticationException e) {
    logger.error(""authenticateUser(String, String)"", e); //$NON-NLS-1$

    throw new UserAuthenticationException(e);
}
</code></pre>

<p>My logout code looks like this...</p>

<pre><code>SecurityUtils.getSubject().logout();
Faces.invalidateSession();
</code></pre>

<p>My shiro.ini file looks like this:</p>

<pre><code>[main]
# listener = org.apache.shiro.config.event.LoggingBeanListener

authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /login.xhtml

jpaRealm=com.myapp.JPAAuthorizingRealm

[urls]
/login.xhtml = authc
</code></pre>

<p>Once again, when I authenticate the <strong><em>first time</em></strong>, everything works as expected.  My Subject says I'm authenticated on every request.  If I pull up a separate browser and try to authenticate as a second user, the authentication never goes through.  Any ideas what could be causing this?  I'm somewhat new to Apache Shiro, so it's entirely possible I'm doing something wrong.</p>

<p><strong>UPDATE:</strong>  I've done a bit more testing, and replaced my custom JPA realm with a standard Shiro JDBC realm just to narrow down where the problem lies.  The new JDBC realm configuration results in the exact same behavior as before.  However, I've now noticed that if I login as <strong>user1</strong> from Browser A (Safari, login successful) successfully, and then try to login as <strong>user2</strong> on a separate browser (Firefox, login <em>seemingly</em> unsuccessful) then go <em>BACK</em> to Browser A and hit refresh, I see myself authenticated as <strong>user1</strong>.  It seems as though there's some sort of state management issue going on, but I can't for the life of me figure out what.</p>

<p>Here's my new shiro.ini, as well as the CDI producer that I'm using to produce my Subject and SecurityManager objects.  Can ANYONE help me out with this?  It's very frustrating.</p>

<p>shiro.ini:  </p>

<pre><code>[main]
hashService=org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations=10000
hashService.hashAlgorithmName=SHA-256

passwordService=org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService

passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService=$passwordService

authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /login.xhtml

jdbcDataSource=org.apache.shiro.jndi.JndiObjectFactory
jdbcDataSource.resourceName=java:jboss/datasources/MyDataSource
jdbcDataSource.resourceRef=true

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT hashedPassword FROM tbl_user_account WHERE loginname = ?
jdbcRealm.permissionsLookupEnabled=false
#jdbcRealm.credentialsMatcher = $sha256Matcher
jdbcRealm.credentialsMatcher=$passwordMatcher
jdbcRealm.dataSource = $jdbcDataSource

securityManager.realms = $jdbcRealm

[urls]
/login.xhtml = authc
</code></pre>

<p>CDI Producer:</p>

<pre><code>@Singleton
public class SecurityProducer {

    /**
     * Logger for this class
     */
    private static final Logger logger = Logger
            .getLogger(SecurityProducer.class);

    private org.apache.shiro.mgt.SecurityManager securityManager;

    /**
     * Initializes the {@link org.apache.shiro.mgt.SecurityManager} after bean
     * creation
     */
    @PostConstruct
    public void init() {
        if (logger.isDebugEnabled()) {
            logger.debug(""init() - start""); //$NON-NLS-1$
        }

        final String iniFile = ""classpath:shiro.ini"";
        securityManager = new IniSecurityManagerFactory(iniFile).getInstance();
        SecurityUtils.setSecurityManager(securityManager);

        if (logger.isDebugEnabled()) {
            logger.debug(""init() - end""); //$NON-NLS-1$
        }
    }

    /**
     * Produces an Apache Shiro {@link org.apache.shiro.mgt.SecurityManager}
     * 
     * @return The security manager
     */
    @Produces
    @Named(""securityManager"")
    public org.apache.shiro.mgt.SecurityManager getSecurityManager() {
        if (logger.isDebugEnabled()) {
            logger.debug(""getSecurityManager() - start""); //$NON-NLS-1$
        }

        if (logger.isDebugEnabled()) {
            logger.debug(""getSecurityManager() - end""); //$NON-NLS-1$
        }
        return securityManager;
    }

    /**
     * Produces an Apache Shiro {@link Subject}
     * 
     * @return The subject
     */
    @Produces
    @Named(""subject"")
    public Subject getSubject() {
        if (logger.isDebugEnabled()) {
            logger.debug(""getSubject() - start""); //$NON-NLS-1$
        }

        Subject subject = SecurityUtils.getSubject();
        if (logger.isDebugEnabled()) {
            logger.debug(""getSubject() - Subject subject="" + subject); //$NON-NLS-1$
        }

        if (subject.isAuthenticated() || subject.isRemembered()) {
            boolean authenticated = subject.isAuthenticated();
            boolean remembered = subject.isRemembered();
            Object principal = subject.getPrincipal();
            if (logger.isDebugEnabled()) {
                logger.debug(""getSubject() - authenticated="" + authenticated + "", remembered="" + remembered + "", principal="" + principal); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
            }
        } else {
            if (logger.isDebugEnabled()) {
                logger.debug(""getSubject() - User is not authenticated or remembered""); //$NON-NLS-1$
            }
        }

        if (logger.isDebugEnabled()) {
            logger.debug(""getSubject() - end""); //$NON-NLS-1$
        }
        return subject;
    }
}
</code></pre>
","<java><security><java-ee><authentication><shiro>","2",""
"26904668","Can I use Apache Shiro for a hierarchical user model?","<p>I'm designing an application where users are organized in multiple levels hierarchies. Users can be assigned to any levels of this hierarchy with a role.</p>

<p><a href=""http://i59.tinypic.com/14ya3vd.png"" rel=""nofollow noreferrer"">organization hierarchy example http://i59.tinypic.com/14ya3vd.png</a></p>

<p>So, I want to know if there is a way to adapt Apache Shiro to this hierarchies, where I can define permissions for roles IN organizations, it means, not just have an ""admin"" role which can do any action on any user, but an ""admin"" of the ""organization A"" which can do any actions on any users which belong to the ""organization A"" or any suborganizations of it.</p>

<p>I think what I'm looking for is a path mechanism, similar to the Apache Shiro wildcard system, but with paths to organizations, something like:</p>

<pre><code>users:*:organizationA/*
</code></pre>

<p>This would mean a permission over users for any action over all the users within the organization A and all its suborganizations.</p>

<p>In the end, what I need is a permission system over resources in a hierarchical user model. Is there a way to model something like that with Apache Shiro? Should I use any other framework, or do I need to add some code to achieve this with Shiro?</p>
","<java><apache><java-ee><permissions><shiro>","1",""
"25240425","Expected response in Apache Shiro when auth fails?","<p>I have implemented bearer token authentication (Authentication in each request with a client-id and access-token in the header). </p>

<p>When I use the wrong credentials (Access-Token), I get back a ""200 OK"" with empty body, is this expected? Shouldn't it be a 401 or 404? When I use correct credentials I get back ""200 OK"" expected Json response, with body content.</p>

<p>I'm using the DefaultPasswordService and AuthorizingRealm. Maybe I miss something?</p>

<p>Using Shiro 1.2.3 </p>
","<authentication><shiro><bearer-token>","0","25387113"
"34057192","How create apache shiro authorization with JPA?","<p>I change shiro auth from native SQL to JPA and I have some quations.
I make for example <a href=""http://www.dziurdziak.pl/2014/03/shiro-jpa-realm.html"" rel=""nofollow noreferrer"">this link</a> and <a href=""https://stackoverflow.com/questions/15605038/unable-to-inject-my-dao-in-a-custom-apache-shiro-authorizingrealm"">this link</a></p>

<p>but i have errors.</p>

<pre><code>[2015-12-03 08:58:33,087] Artifact ear:ear exploded: Artifact is being deployed, please wait...
[2015-12-03 08:59:06,931] Artifact ear:ear exploded: Error during artifact deployment. See server log for details.
[2015-12-03 08:59:06,932] Artifact ear:ear exploded: java.io.IOException: com.sun.enterprise.admin.remote.RemoteFailureException: Error occurred during deployment: Exception while loading the app : java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.NoClassDefFoundError: org/apache/commons/collections/FastHashMap. Please see server.log for more details.
</code></pre>

<p>I not understend how it work. I Create JpaAuthorizingRealm class:</p>

<pre><code>public class JpaAuthorizingRealm extends AuthorizingRealm {

    public static final String REALM_NAME = ""MY_REALM"";
    public static final int HASH_ITERATIONS = 200;

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(final PrincipalCollection principals) {
        Long userId = (Long) principals.fromRealm(getName()).iterator().next();
        User user = ShiroDao.me().userById(userId);
        if (user != null) {
            SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
            for (Role role : user.getRoles()) {
                info.addRole(role.getRoleName());
                for (Permission permition : user.getPermissions()) {
                    info.addStringPermission(permition.getPermission());
                }
            }
            return info;
        } else {
            return null;
        }
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(final AuthenticationToken authToken) throws AuthenticationException {
        UsernamePasswordToken token = (UsernamePasswordToken) authToken;
        User user = ShiroDao.me().userByname(token.getUsername());
        if (user != null) {
            return new SimpleAuthenticationInfo(user.getId(), user.getPassword(), getName());
        } else {
            return null;
        }
    }

    @Override
    @Inject
    public void setCredentialsMatcher(final CredentialsMatcher credentialsMatcher) {
        super.setCredentialsMatcher(credentialsMatcher);
    }

}
</code></pre>

<p>And models User, Role and Permission. And in ini file i registered :</p>

<pre><code>[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

# realms to be used
adRealm = myPackeg.CustomActiveDirectoryRealm
adRealm.url = ldap://myIP

noPassWordCredentialMatcher=myPackeg.CustomNoPassMatcher

userRealm=myPackeg.JpaAuthorizingRealm
userRealm.permissionsLookupEnabled=true
userRealm.credentialsMatcher=$noPassWordCredentialMatcher

authc.loginUrl = /login.xhtml
user.loginUrl = /login.xhtml
authc.successUrl  = /index.xhtml?faces-redirect=true
roles.unauthorizedUrl = /error/ErrorInsufficientPrivileges.xhtml?faces-redirect=true

securityManager.realms= $adRealm, $customSecurityRealm
authcStrategy = org.apache.shiro.authc.pam.AllSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

;multipleroles = myPackeg.MultipleRolesAuthorizationFilter
multipleroles = myPackeg.MultipleRolesAuthorizationFilter

[roles]

[urls]
/javax.faces.resource/** = anon
/error/ = anon
/login.xhtml = authc
/logout = logout
#/admin/ChangePassword.xhtml= authc, roles[user]
/admin/**= authc, roles[administrator]
/reports/qcforcc_report.xhtml= authc, roles[user]
/reports/**= authc, roles[administrator]
/** = authc, roles[user]
#/** = user, multipleroles[""administrator"", ""user""]
</code></pre>

<p>And if i change <code>JpaAuthorizingRealm extends AuthorizingRealm</code> to <code>JpaAuthorizingRealm extends JdbcRealm</code> error not shows. </p>

<p>Maby somebode know how create shiro auth with JPA?</p>
","<java><jpa><shiro>","1",""
"31989586","Attempt to lookup non-existant entry: uid=dhruv@xyz.com,ou=users,o=xyz,dc=xyz,dc=com:","<p>I am getting the below exception while trying to authenticate user from LDAP.</p>

<pre><code>javax.naming.AuthenticationException: [LDAP: error code 49 - INVALID_CREDENTIALS: Bind failed: Attempt to lookup non-existant entry: uid=dhruv@xyz.com,ou=users,o=xyz,dc=xyz,dc=com:
org.apache.directory.api.ldap.model.exception.LdapNoSuchObjectException: Attempt to lookup non-existant entry: uid=dhruv@idfc.com,ou=users,o=novopay,dc=novopay,dc=com
    at org.apache.directory.server.core.shared.partition.DefaultPartitionNexus.lookup(DefaultPartitionNexus.java:460)
    at org.apache.directory.server.core.authn.AuthenticationInterceptor.bind(AuthenticationInterceptor.java:568)
    at org.apache.directory.server.core.DefaultOperationManager.bind(DefaultOperationManager.java:439)
    at org.apache.directory.server.ldap.handlers.request.BindRequestHandler.handleSimpleAuth(BindRequestHandler.java:184)
    at org.apache.directory.server.ldap.handlers.request.BindRequestHandler.handle(BindRequestHandler.java:636)
    at org.apache.directory.server.ldap.handlers.request.BindRequestHandler.handle(BindRequestHandler.java:66)
    at org.apache.directory.server.ldap.handlers.LdapRequestHandler.handleMessage(LdapRequestHandler.java:193)
    at org.apache.directory.server.ldap.handlers.LdapRequestHandler.handleMessage(LdapRequestHandler.java:56)
    at org.apache.mina.handler.demux.DemuxingIoHandler.messageReceived(DemuxingIoHandler.java:221)
    at org.apache.directory.server.ldap.LdapProtocolHandler.messageReceived(LdapProtocolHandler.java:217)
    at org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter.messageReceived(DefaultIoFilterChain.java:854)
    at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:542)
    at org.apache.mina.core.filterchain.DefaultIoFilterChain.access$1300(DefaultIoFilterChain.java:48)
    at org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:943)
    at org.apache.mina.core.filterchain.IoFilterEvent.fire(IoFilterEvent.java:74)
    at org.apache.mina.core.session.IoEvent.run(IoEvent.java:63)
    at org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$Worker.runTask(UnorderedThreadPoolExecutor.java:475)
    at org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$Worker.run(UnorderedThreadPoolExecutor.java:429)
    at java.lang.Thread.run(Thread.java:745)


BindRequest = 
MessageType : BIND_REQUEST
Message ID : 1
    BindRequest
        Version : '3'
        Name : 'uid=dhruv@idfc.com,ou=users,o=novopay,dc=novopay,dc=com'
        Simple authentication : '(omitted-for-safety)'
]
    at com.sun.jndi.ldap.LdapCtx.mapErrorCode(LdapCtx.java:3087) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:3033) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2835) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2749) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtx.&lt;init&gt;(LdapCtx.java:316) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:193) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtxFactory.getUsingURLs(LdapCtxFactory.java:211) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:154) ~[na:1.7.0_79]
    at com.sun.jndi.ldap.LdapCtxFactory.getInitialContext(LdapCtxFactory.java:84) ~[na:1.7.0_79]
    at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:684) ~[na:1.7.0_79]
    at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:307) ~[na:1.7.0_79]
    at javax.naming.InitialContext.init(InitialContext.java:242) ~[na:1.7.0_79]
    at javax.naming.ldap.InitialLdapContext.&lt;init&gt;(InitialLdapContext.java:153) ~[na:1.7.0_79]
    at org.apache.shiro.realm.ldap.JndiLdapContextFactory.createLdapContext(JndiLdapContextFactory.java:508) ~[shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.ldap.JndiLdapContextFactory.getLdapContext(JndiLdapContextFactory.java:495) ~[shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.realm.ldap.JndiLdapRealm.queryForAuthenticationInfo(JndiLdapRealm.java:375) ~[shiro-core-1.2.3.jar:1.2.3]
    at in.novopay.webapp.portal.core.security.realm.AppRealm.doGetAuthenticationInfo(AppRealm.java:139) ~[AppRealm.class:na]
    at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) [shiro-core-1.2.3.jar:1.2.3]
    at in.novopay.webapp.portal.user.AuthenticationController.login(AuthenticationController.java:162) [AuthenticationController.class:na]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_79]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_79]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_79]
    at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_79]
    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) [spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137) [spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:868) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:650) [servlet-api.jar:na]
    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842) [spring-webmvc-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:731) [servlet-api.jar:na]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) [catalina.jar:7.0.61]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.61]
    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat7-websocket.jar:7.0.61]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.61]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.61]
    at in.novopay.utils.web.filter.GZIPFilter.doFilter(GZIPFilter.java:18) [web-utils-1.0.jar:na]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.61]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.61]
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.2.3.jar:1.2.3]
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.3.jar:1.2.3]
    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344) [spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261) [spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.61]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.61]
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220) [catalina.jar:7.0.61]
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122) [catalina.jar:7.0.61]
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505) [catalina.jar:7.0.61]
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170) [catalina.jar:7.0.61]
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReport`enter code here`Valve.java:103) [catalina.jar:7.0.61]
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950) [catalina.jar:7.0.61]
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) [catalina.jar:7.0.61]
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423) [catalina.jar:7.0.61]
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079) [tomcat-coyote.jar:7.0.61]
    at enter code hereorg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:620) [tomcat-coyote.jar:7.0.61]
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:318) [tomcat-coyote.jar:7.0.61]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_79]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_79]
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-coyote.jar:7.0.61]
    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_79]
</code></pre>
","<ldap><shiro>","2",""
"25048954","Apache Shiro on App Engine - rememberMe not working","<p>At this point I am completely stumped on how Shiro ""rememberMe"" services are supposed to work.</p>

<p>I am using Shiro with my app which is hosted on Google App Engine.</p>

<p>I have <strong>sessions-enabled</strong> set to <strong>TRUE</strong> in my <strong>appengine-web.xml</strong> file.</p>

<p>I can see the ""rememberMe"" cookie being created when I log in to my app.
I can also find the cookie (in Chrome > Settings > Cookies) after closing the browser and re-opening.
So the cookie is apparently there.</p>

<p>My login code is basically as follows using a form-based login...</p>

<pre><code>    UsernamePasswordToken token = new UsernamePasswordToken( email, password );
    token.setRememberMe(true); 
    theSubject.login(token);
</code></pre>

<p>If Authentication is successful, I query for the User object.</p>

<p>The problem is when I close the browser and re-visit the site, the call to:  <strong>SecurityUtils.getSubject().isRemembered()</strong>
is always ""false"".</p>

<p>What am I doing wrong here?</p>
","<google-app-engine><cookies><shiro><remember-me>","0","25069271"
"13367035","Need Shiro C# client","<p>As per detailed architecture <a href=""http://shiro.apache.org/architecture.html"" rel=""nofollow"">http://shiro.apache.org/architecture.html</a>
Apache shiro support C# clients but I was not able to find a good documentation/example on how to create one. If you can are aware any documentation or ideas on how to do this would be much appreciated.</p>
","<c#><shiro>","0","13383918"
"19210924","How can attribute-level permissions be defined in Apache Shiro","<p>From the <a href=""http://shiro.apache.org/java-authorization-guide.html"" rel=""nofollow"">docs</a> I read that it's possible to define attribute-level permissions (as well as resource and instance levels) </p>

<blockquote>
  <p>Attribute Level - The permission now specifies an attribute of an instance or resource. A user can edit the address on the IBM customer record.</p>
</blockquote>

<p>How can these permissions be defined declaratively using the <code>&lt;resource&gt;:&lt;action&gt;:&lt;instance&gt;</code> format in which permissions in Shiro are usually defined? It would seem logical to be if it's possible to do something like <code>&lt;resource&gt;:&lt;action&gt;:&lt;instance&gt;:&lt;attributename&gt;</code> but I can't find docs anywhere discussing this. </p>
","<shiro>","2","19603409"
"16341944","Store Permissions for Apache Shiro","<p>I'm starting with the framework Apache Shiro, I felt great and very flexible. Within an application we want to control permissions for certain parts of the web with jsp tags for ""<strong>shiro: hasPermission</strong>"".</p>

<p>Shiro I understand that things like this can tell <strong>Module4:action1</strong>, but for more complex scenarios as <strong><em>module1-> module1.1-> action3</em></strong> not think of a structure to store this in the database.</p>

<p><img src=""https://i.stack.imgur.com/o2GPf.png"" alt=""enter image description here""></p>

<p>Depending on the model of our application suggestion What I do to store the permissions on the database, What tables could use?.</p>

<p>Thanks In Advance</p>
","<java><jsp><shiro>","2","16378000"
"27701603","Query on string based wildcard shiro permission","<p>I am storing my permissions in the wildcard string format for e.g. (Menu:dashboard,Report:first etc). I have a separate report table which stores all reports and its attributes. But there is no foreign key relation between report and permission table. (If I store permissions in relational way, this can be done) </p>

<p>Now I have to retrieve all reports users are entitled to for displaying on UI. 
One way is to query all reports and then filter based on the Subject's allowable permissions. But I just want to know the best practice, how other people in this group handle this situation. </p>

<p>EDIT </p>

<p>Anyone has any opinion on this or if they can share how they are managing permissions.
Thanks </p>
","<java><shiro>","0",""
"16633417","GORM (Hibernate) tries to map non-domain classes; gives DuplicateMappingException","<p>I am upgrading my Grails app from version 2.1.0. Prior to this upgrade the application was behaving fine. I downloaded and set-up the new version of Grails (initially I tried version 2.2.1 but tried going to 2.2.2 today) and did a Grails upgrade on my app.</p>

<p>Since that upgrade my app won't start, citing a DuplicateMappingException. </p>

<pre><code>DuplicateMappingException: duplicate import: User refers to both com.mycompany.myapp.User and net.security.User (try using auto-import=""false"")
</code></pre>

<p>or</p>

<pre><code>DuplicateMappingException: duplicate import: Role refers to both net.security.Role and com.mycompany.myapp.Role (try using auto-import=""false"")
</code></pre>

<p><strong>So it seems to me that GORM for some reason thinks it needs to map these <code>net.security</code> classes to the database.</strong></p>

<p><code>Role</code> and <code>User</code> are domain classes I use with the Shiro security plugin for Grails.</p>

<p>I have tried adding <code>autoImport false</code> to the mapping block in my domain classes. This caused problems in other parts of the system where <code>User</code> or <code>Role</code> are used. I haven't pursued this further because I am sure that there shouldn't be a conflict here.</p>

<p>So I'm looking if anyone has an idea what might be causing this, or some things I might try to fix it.</p>

<p>FYI I have tried a Grails clean on the project.</p>

<p>Thanks</p>
","<grails><gorm><grails-plugin><shiro><grails-2.2>","0",""
"19424298","Apache Shiro, No GUI?","<p>We started to work on Apache Shiro as our authorization provider.
Many authorization providers have a user interface in order to define the users and their roles (Like a crowd, Open Am, etc..).</p>

<p>Do you know if Apache Shiro also supports some user interface or do we need to implement separate UI for defining roles and such?</p>

<p>Thanks,
ray.</p>
","<java><single-sign-on><shiro>","0","19604240"
"16801120","implement vaadin shiro and openDJ (LDAP)","<p>I have made a login form with Vaadin 7 by this tutorial:
<a href=""https://vaadin.com/wiki/-/wiki/Main/Creating%20a%20simple%20login%20view"" rel=""nofollow"">https://vaadin.com/wiki/-/wiki/Main/Creating%20a%20simple%20login%20view</a>.
I have to verify users with my LDAP (openDJ) with shiro.
I have put this into my clickEvent method:</p>

<pre><code>Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; ldapFactory = new     IniSecurityManagerFactory(""classpath:active.ini"");
org.apache.shiro.mgt.SecurityManager sManager = ldapFactory.getInstance();
SecurityUtils.setSecurityManager(sManager);

Subject currentUser = SecurityUtils.getSubject();

if (!currentUser.isAuthenticated()) {
    UsernamePasswordToken token = new UsernamePasswordToken(""user"", ""password"");
    try {
        currentUser.login(token);
    } catch (UnknownAccountException ex) {
        logger.info(""Unknown user"");
    } catch (IncorrectCredentialsException ex) {
        logger.info(""Incorrect credentials"");
    } catch (LockedAccountException ex) {
        logger.info(""Account is Locked"");
    } catch (AuthenticationException ex) {
        logger.info(""Authentication Exception"");
    }
}

logger.info(""User ["" + currentUser.getPrincipal() +""] logged succesfully"");
currentUser.logout();
</code></pre>

<p>I have a error on logger and I don't know if this can work? 
I have a active.ini file, and it looks like this:</p>

<pre><code>'ldapRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm 
 ldapRealm.url = C:\Users\User\OpenDJ'
</code></pre>

<p>I searched for a tutorial or example but there isn't one for vaadin shiro and ldap (openDJ).</p>
","<eclipse><ldap><vaadin><shiro><opendj>","1",""
"14261778","Shiro-Guice Filter Chain Roles Configuration","<p>How can I configure the Roles in the <code>addFilterChain</code> Method??</p>

<p>in the INI file it is something like</p>

<pre><code>[url]
/secure/** = authc, roles[admin]
</code></pre>

<p>How would it be in the Java method?</p>

<pre><code>addFilterChain(""/secure/**"", ROLES);
</code></pre>
","<java><security><roles><shiro>","3","14263155"
"29799349","Undestanding how secure/httponly cookie works for java applications","<p>I have been having a behaviour that I can only qualify as weird due to my  current level of understanding of this.</p>

<p>I have apache version : 2.4.7 on Ubuntu proxying through AJP 1.3 tomcat 7.0.52.0 running a spring application (MVC) with apache shiro 1.2 as security framework. </p>

<p>I have set headers entry in apache2.conf as shown below</p>

<pre><code>Header always append X-Frame-Options SAMEORIGIN
Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure
</code></pre>

<p>I have the very same behaviour if flags is enforced on tomcat side using either or all of the methods below:</p>

<ul>
<li>conf/context.xml with useHttpOnly=""true"" attribute of the context tag</li>
<li>conf/server.xml  with secure=""true"" attribute of the ajp or http</li>
<li><p>connector    WEB-INF/web.xml with the following</p>

<p><code>&lt;cookie-config&gt;
        &lt;http-only&gt;true&lt;/http-only&gt;
        &lt;secure&gt;true&lt;/secure&gt;
    &lt;/cookie-config&gt;</code> </p></li>
</ul>

<p>After this what happens is that at at <code>/login</code> there is a secure and httponly flag, after the authentication is successful all these flags vanish within the app, throughout any call to the server. Once the user logs out, the flags come back with an extra one : <code>DeleteMe</code> on both the jsessionid and RememberMe.</p>

<p>This /login page creates the jsessionid with secure and httponly flags
<img src=""https://i.stack.imgur.com/RkGkB.png"" alt=""jsessionid at login""></p>

<p>When the authentication is successful the 2 step auth jsessionid has no flags</p>

<p><img src=""https://i.stack.imgur.com/fa3cl.png"" alt=""2 step authentication""></p>

<p>In the account dashboard too there is no flag</p>

<p><img src=""https://i.stack.imgur.com/36UN1.png"" alt=""account Dashboard""></p>

<p>But at the logout the flags are back
<img src=""https://i.stack.imgur.com/TqymT.png"" alt=""logout""></p>

<p>My questions though  are</p>

<p><strong>1</strong>: is this the usual behaviour<br>
<strong>2</strong>: If this is the actual behaviour, does this mean the cookie is secure throughout the life of the session id?   </p>
","<java><apache><tomcat><cookies><shiro>","1",""
"29603379","How to use JNDI with WAS (Web Spehere Application Server 8.5.5)","<p>Haven't really used Web Sphere Application Server (8.5.5) before neither I have any actual experience with JNDI alltogether and I have even been working with Shiro only for couple of days.
Still I would need to get a custom Shiro-realm to the JNDI so that both the application and the Shiro would share a common instance of the realm (and so that the realm would have access to ejb-resources via inject)</p>

<p>This is how I have done this so far:</p>

<p>WEB-INF/shiro.ini</p>

<pre><code>[main]
realmFactory = org.apache.shiro.realm.jndi.JndiRealmFactory
realmFactory.jndiNames = realms/ShiroRealm
...
</code></pre>

<p>A custom Shiro-Realm (just mocks for now)</p>

<pre><code>import javax.faces.bean.SessionScoped;
@SessionScoped
public class MockRealm extends AuthorizingRealm implements Serializable {

  @Inject public UserMB user;

  @Override protected AuthenticationInfo doGetAuthenticationInfo(...) ...
  @Override protected AuthorizationInfo doGetAuthorizationInfo(...) ...
}
</code></pre>

<p>A custom CredentialsMatcher</p>

<pre><code>public class MockCredentialsMatcher implements CredentialsMatcher {

  @Override public boolean doCredentialsMatch(...) ...
}
</code></pre>

<p>And I have a shiro-startup class as follows</p>

<pre><code>@Singleton
@Startup
public class ShiroStartup {

  @Inject
  private MockRealm realm;

  @PostConstruct
  public void setup() {
    Hashtable&lt;String, String&gt; env = new Hashtable&lt;String, String&gt;();
        env.put(Context.INITIAL_CONTEXT_FACTORY, ""com.ibm.websphere.naming.WsnInitialContextFactory"");
    InitialContext ic = new InitialContext(env);

    try {
    Object obj = ic.lookup(""realms/ShiroRealm""); // This is expected to fail when the application is published
        } catch (NamingException ne) {
            this.realm.setCredentialsMatcher(new MockCredentialsMatcher());
            ic.rebind(""realms/ShiroRealm"", this.realm);
            System.out.println(""Bound: realms/ShiroRealm"";
        }
    } catch (NamingException e) {
        e.printStackTrace();
    }
  }
}
</code></pre>

<p>I found a post earlier that suggest to do bridge the injection-scopes this way and actually this works, but only when this code is run on GlassFish (v4).
I'm pretty sure this should also work with WAS 8.5.5, but can't resolve this error. (maybe trivial to someone, but ...)</p>

<p>The error I get is a complain that the jndi name ""realms/ShiroRealm"" is not found / can not be used. (I'll post the exact Exception later, currently having trouble running the server at all)
I have not found how the name should be given (and this is starting to take time, even that I'd expect this kind of information would be easy to find), so I  post in here in hopes that some one could advice me.</p>

<p>(Note: I copied here only the parts I thought relevant. When debugging the code when run on GlassFish, I get hits in all correct places when expected)</p>

<p>// Update (for completeness, though I do not think these are relevant for this question)<br/>
The contents of beans.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans
  xmlns=""http://java.sun.com/xml/ns/javaee""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://docs.jboss.org/cdi/beans_1_0.xsd""&gt;
  &lt;interceptors&gt;
    &lt;class&gt;com.example.interceptor.ShiroSecuredInterceptor&lt;/class&gt;
  &lt;/interceptors&gt;
&lt;/beans&gt;
</code></pre>

<p><br/>
The contents of ejb-jar.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;ejb-jar xmlns=""http://java.sun.com/xml/ns/javaee""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd""
  version=""3.1""&gt;
&lt;interceptors&gt;
  &lt;interceptor&gt;
    &lt;interceptor-class&gt;com.example.interceptor.ShiroSecuredInterceptor&lt;/interceptor-class&gt;
    &lt;/interceptor&gt;
  &lt;/interceptors&gt;
  &lt;assembly-descriptor&gt;
    &lt;interceptor-binding&gt;
      &lt;ejb-name&gt;*&lt;/ejb-name&gt;
    &lt;interceptor-class&gt;com.example.interceptor.ShiroSecuredInterceptor&lt;/interceptor-class&gt;
    &lt;/interceptor-binding&gt;
  &lt;/assembly-descriptor&gt;
&lt;/ejb-jar&gt;
</code></pre>

<p>The constents of web.xml<br/></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
  xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"" id=""WebApp_ID""
  version=""3.1""&gt;
&lt;display-name&gt;shiroTest&lt;/display-name&gt;
&lt;context-param&gt;
  &lt;param-name&gt;javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL&lt;/param-name&gt;
  &lt;param-value&gt;true&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;welcome-file-list&gt;
  &lt;welcome-file&gt;Login.xhtml&lt;/welcome-file&gt;
    &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;
  &lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
  &lt;/listener&gt;
  &lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
  &lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
  &lt;/filter-mapping&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>// UPDATE <br/>
finally got the server back online and was able to get the Exception thrown</p>

<pre><code> [4/17/15 12:16:22:053 EEST] 00000043 SystemErr     R javax.naming.NameNotFoundException: Context: securityoffNode01Cell/nodes/securityoff/servers/server1, name: realms/ShiroRealm: First component in name realms/ShiroRealm not found. [Root exception is org.omg.CosNaming.NamingContextPackage.NotFound: IDL:omg.org/CosNaming/NamingContext/NotFound:1.0]
</code></pre>

<p>Incase the full stack trace is important, I put it on the pastebin for a while.
<a href=""http://pastebin.com/sANAqCJL"" rel=""nofollow"">http://pastebin.com/sANAqCJL</a></p>

<p>(Realized that the project that I used to test this configuration on GlassFish is a simple 'war'-project where the actual implementation deployed on WAS is in ear. May or may not be relevant between these servers.)</p>

<p>// UPDATE 2
After reading this (not completely yet, still reading and testing):
<a href=""http://www-01.ibm.com/support/knowledgecenter/SS7JFU_7.0.0/com.ibm.websphere.express.iseries.doc/info/iseriesexp/ae/cejb_bindingsejbfp.html"" rel=""nofollow"">http://www-01.ibm.com/support/knowledgecenter/SS7JFU_7.0.0/com.ibm.websphere.express.iseries.doc/info/iseriesexp/ae/cejb_bindingsejbfp.html</a></p>

<p>I tried using a name: ""ejblocal:MockRealm"".
Well, this seems to be ok for it. However continued with this same issue, the following Exception is now.</p>

<pre><code>[4/17/15 13:17:47:536 EEST] 000000ac webapp        E com.ibm.ws.webcontainer.webapp.WebApp logServletError SRVE0293E: [Servlet Error]-[com.ibm.ws.webcontainer.extension.DefaultExtensionProcessor]: java.lang.IllegalStateException: Unable to look up realm with jndi name 'ejblocal:MockRealm'.
</code></pre>

<p>It looks like the jndi name used in shiro.ini still needs to fixed something else, but the 'ejbLocal:MockRealm"" or ""simply ""MockRealm"" is not ok.
I hope to find solution soon, I will post a real answer then.</p>
","<jndi><shiro><websphere-8>","2","31939625"
"23364454","How to configure Apache Shiro with Struts1.3 and tomcat7?","<p>We have Web Application which is running with Struts1.3 , Google-Guice and ApacheTomcat7.
Now I want to integrate security framework Apache shiro.</p>

<p>Following is my configuration in pom.xml for downloading dependencies:</p>

<pre><code> &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.2.3&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;1.2.3&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>Following is the Web.xml configuration(Filters &amp; Listener):</p>

<pre><code> &lt;listener&gt;
     &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;

&lt;/filter&gt;

&lt;!-- Make sure any request you want accessible to Shiro is filtered. /* catches all --&gt;
&lt;!-- requests.  Usually this filter mapping is defined first (before all others) to --&gt;
&lt;!-- ensure that Shiro works in subsequent filters in the filter chain:             --&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt; 
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Following is my shiro.ini file configuration:
                [main]</p>

<pre><code>            # specify login page
            authc.loginUrl = /welcome.do 
            # name of request parameter with username; if not present filter assumes 'username'
            authc.usernameParam = user
            # name of request parameter with password; if not present filter assumes 'password'
            authc.passwordParam = password


            # redirect after successful login
            authc.successUrl  = /Views/welcome.jsp



            # Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.
            # A real application might want to use a more robust caching solution (e.g. ehcache or a
            # distributed cache).  When using such caches, be aware of your cache TTL settings: too high
            # a TTL and the cache won't reflect any potential changes in Stormpath fast enough.  Too low
            # and the cache could evict too often, reducing performance.
            cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
            securityManager.cacheManager = $cacheManager

            ds = com.jolbox.bonecp.BoneCPDataSource
            ds.driverClass = oracle.jdbc.driver.OracleDriver
            ds.jdbcUrl = jdbc:oracle:thin:@10.87.54.2:1521:WAPD
            ds.username = USRIG395
            ds.password = changeme123
            # other BoneCP connection pool settings as desired

            jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
            jdbcRealm.dataSource = $ds

            jdbcRealm.authenticationQuery = ""SELECT password FROM users WHERE username = ?""
            jdbcRealm.userRolesQuery = ""SELECT authority FROM user_roles WHERE username = ?""

            [urls]
            # enable authc filter for all application pages/**=authc



            [users]
            [roles]
            [urls]
             /** = authcBasic
</code></pre>

<p>After that when I start my tomcat it will give me following errors, it does not allow me to start my application:</p>

<pre><code>            Apr 29, 2014 5:32:00 PM org.apache.catalina.core.StandardContext listenerStart
            SEVERE: Exception sending context initialized event to listener instance of class org.apache.shiro.web.env.EnvironmentLoaderListener
            java.lang.IllegalAccessError: tried to access method org.apache.shiro.web.util.WebUtils.normalize(Ljava/lang/String;)Ljava/lang/String; from class org.apache.shiro.web.env.IniWebEnvironment
                at org.apache.shiro.web.env.IniWebEnvironment.getServletContextResourceStream(IniWebEnvironment.java:280)
                at org.apache.shiro.web.env.IniWebEnvironment.convertPathToIni(IniWebEnvironment.java:249)
                at org.apache.shiro.web.env.IniWebEnvironment.createIni(IniWebEnvironment.java:163)
                at org.apache.shiro.web.env.IniWebEnvironment.getDefaultIni(IniWebEnvironment.java:134)
                at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:82)
                at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
                at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
                at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:221)
                at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:133)
                at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
                at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4779)
                at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5273)
                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
                at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1566)
                at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1556)
                at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
                at java.util.concurrent.FutureTask.run(FutureTask.java:138)
                at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
                at java.lang.Thread.run(Thread.java:662)
            Apr 29, 2014 5:32:00 PM org.apache.catalina.core.StandardContext startInternal
            SEVERE: Error listenerStart
            ERROR - Shiro environment initialization failed
            java.lang.IllegalAccessError: tried to access method org.apache.shiro.web.util.WebUtils.normalize(Ljava/lang/String;)Ljava/lang/String; from class org.apache.shiro.web.env.IniWebEnvironment
                at org.apache.shiro.web.env.IniWebEnvironment.getServletContextResourceStream(IniWebEnvironment.java:280)
                at org.apache.shiro.web.env.IniWebEnvironment.convertPathToIni(IniWebEnvironment.java:249)
                at org.apache.shiro.web.env.IniWebEnvironment.createIni(IniWebEnvironment.java:163)
                at org.apache.shiro.web.env.IniWebEnvironment.getDefaultIni(IniWebEnvironment.java:134)
                at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:82)
                at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
                at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
                at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:221)
                at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:133)
                at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
                at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4779)
                at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5273)
                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
                at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1566)
                at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1556)
                at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
                at java.util.concurrent.FutureTask.run(FutureTask.java:138)
                at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
                at java.lang.Thread.run(Thread.java:662)
</code></pre>

<p>Is there any error in my configuration or any configuration misssing on my part? Please let me if I Missing something to describe in my problem?</p>

<p>Thanks in advance.</p>
","<tomcat7><struts-1><shiro>","0","23366808"
"7116368","An error occured installing the plugin [shiro-1.1.3]: Unable to delete","<p>Grails 2.0.0.M1 + shiro-1.1.3</p>

<blockquote>
  <p>grails> install-plugin shiro</p>
  
  <p>| Resolving plugin JAR dependencies..</p>
  
  <p>delete logs...</p>
  
  <p>| Plugin installed.</p>
  
  <p>grails> compile --staktrace</p>
  
  <p>| Error An error occured installing the plugin [shiro-1.1.3]: Unable
  to delete file
  D:\TZProfile.grails\2.0.0.M1\projects\Vote\plugins\shiro-1.1.3\lib\shiro-co
  re-1.1.0.jar</p>
  
  <p>| Error Error running script compile --staktrace:
  org.codehaus.groovy.grails.cli .ScriptExitException (Use --stacktrace
  to see the full trace)</p>
</blockquote>
","<grails><grails-plugin><shiro>","0",""
"16046233","Remember me functionality + other security concerns","<p>I want to implement a simple remember me for logged in users, so they will stay logged in after closing the browser. So I was thinking creating a cookie that holds a unique key generated by UUID.randomUUID, and on the server side I map it to a username. </p>

<p>Is that secure enough? What are the risks? Should I take precautions to prevent hackers from trying random keys? </p>

<p>I was thinking about using a framework for authentication like spring security or apache shiro, but I couldn't find any benefit that they give me (I don't need complex access control, just user registration/login). Am I missing something crucial in terms of security?</p>

<p><strong>update</strong></p>

<p>I guess my question is actually: do frameworks like spring and shiro do something substantially more sophisticated for remember me functionality that produce security that I probably can't match?</p>
","<java><spring-security><shiro>","1",""
"27521731","Vaadin & Apache Shiro - Session Expired","<p>User logs in ok, logs out ok, but if he immediately makes another attempt to log in (input login/pass + enter) he receives popup</p>

<pre><code>Session Expired
Take note of any unsaved data, and click here or press ESC key to continue.
</code></pre>

<p>Log in operation handled by Apache Shiro:</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
currentUser.login(new UsernamePasswordToken(event.getLogin(), event.getPassword()));
</code></pre>

<p>Log out operation also:</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
currentUser.logout();
</code></pre>

<p>After the log out user is redirected to login page and when he enters credentials again he gets the warning about expired session. Why new session is not started? How to start it? Or maybe this approach isn't correct at all?</p>

<p>P.S. I also tried</p>

<pre><code>VaadinSession.getCurrent().close();
</code></pre>

<p>but result was the same.</p>
","<java><gwt><vaadin><shiro><vaadin7>","3",""
"30587879","Subject no longer authenticated in session after logging in with Shiro","<p>I am using Guice + Jersey + Shiro to login via a REST API and then use the same HTTP session under which I logged in to and have my permissions work for that resource. </p>

<p>Below is my code. </p>

<p>Firstly, my servlet configuration:-</p>

<pre><code>public class ServletConfiguration extends GuiceServletContextListener
{
    private ServletContext mServletContext;

    @Override
    public void contextInitialized(ServletContextEvent inEvent)
    {
        mServletContext = inEvent.getServletContext();

        super.contextInitialized(inEvent);
    }

    @Override
    protected Injector getInjector()
    {
        mServletContext.addListener(new au.com.tt.agora.configuration.CbiCleanupHttpSessionListener());

        return Guice.createInjector(new JerseyServletModule() {
            @Override
            protected void configureServlets()
            {
                install(new TTShiroWebModule(mServletContext));
                install(new ShiroAopModule());

                filter(""/*"").through(GuiceShiroFilter.class);

                bind(ShiroLoginResource.class);
                bind(ShiroResource.class);

                filter(""/*"").through(GuiceContainer.class);
            }
        });
    }
}
</code></pre>

<p>Now, this is my test realm:-</p>

<p>package au.com.tt.agora.configuration.shiro;</p>

<pre><code>import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;

public class TestRealm extends AuthorizingRealm
{

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken inToken) throws AuthenticationException
    {
        UsernamePasswordToken upToken = (UsernamePasswordToken) inToken;

        if (upToken.getUsername().equals(""Kamal"") || upToken.getUsername().equals(""NotKamal""))
            return new SimpleAuthenticationInfo(upToken.getUsername(), upToken.getPassword(), getName());

        return null;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection inPrincipals)
    {
        String username = (String) inPrincipals.fromRealm(getName()).iterator().next();
        SimpleAuthorizationInfo authzInfo = new SimpleAuthorizationInfo();
        if (username.equals(""Kamal""))
        {
            authzInfo.addStringPermission(""PRODMA:READ:AU"");
            authzInfo.addStringPermission(""PRODMA:WRITE:KB"");
            authzInfo.addStringPermission(""SUPPMA:READ:KB"");
        }
        else
        {
            authzInfo.addStringPermission(""PRODMA:READ:AU"");
            authzInfo.addStringPermission(""PRODMA:WRITE:KB"");
        }

        return authzInfo;
    }
}
</code></pre>

<p>This is the web module</p>

<pre><code>package au.com.tt.agora.configuration.shiro;

import javax.servlet.ServletContext;

import org.apache.shiro.guice.web.ShiroWebModule;

public class TTShiroWebModule extends ShiroWebModule
{

    public TTShiroWebModule(ServletContext inServletContext)
    {
        super(inServletContext);
    }

    @SuppressWarnings(""unchecked"")
    @Override
    protected void configureShiroWeb()
    {
        bindRealm().to(TestRealm.class);
        addFilterChain(""**/shiroResource/*"", ANON);
    }

}
</code></pre>

<p>Here is the resource I use to login:-</p>

<pre><code>package au.com.tt.agora.configuration.jaxrs.resources;

import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;

import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;

import com.google.inject.Inject;

import au.com.tt.agora.configuration.option.ClientProvider;
import au.com.tt.agora.configuration.option.ConfigurationProvider;
import au.com.tt.agora.login.web.request.LoginRequest;
import au.com.tt.agora.login.web.request.LoginResponse;
import au.com.tt.agora.login.web.service.LoginHandler;
import au.com.tt.calypso.cbi.CalypsoException;

@Path(""/{client}/shiroLogin"")
public class ShiroLoginResource
{
    private static final String ROUTING_TOKEN_HEADER = ""proxy-jroute"";

    @POST
    @Path(""/standard"")
    @Produces(MediaType.TEXT_PLAIN)
    @Consumes(MediaType.APPLICATION_JSON)
    public String login(@Context HttpServletRequest inServletRequest) throws CalypsoException
    {
        Subject subject = SecurityUtils.getSubject();
        subject.login(new UsernamePasswordToken(""Kamal"", ""Password"", false));
        return getSessionIdWithRouting(inServletRequest);
    }

    private String getSessionIdWithRouting(HttpServletRequest inRequest)
    {
        String sessionId = inRequest.getSession().getId();

        return(sessionId);
    }
}
</code></pre>

<p>And here is the resource I am calling:-</p>

<pre><code>package au.com.tt.agora.configuration.jaxrs.resources;

import javax.servlet.http.HttpSession;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.apache.shiro.subject.Subject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.inject.Inject;

@Path(""/{client}/shiroResource"")
public class ShiroResource
{
    private static final Logger LOG = LoggerFactory.getLogger(ShiroResource.class);

    @Inject
    public ShiroResource()
    {
    }

    @POST
    @Path(""requiresProdma.do"")
    @Produces(MediaType.TEXT_PLAIN)
    @RequiresPermissions({ ""PRODMA:*:*"" })
    public String prodmaRequired()
    {
        return ""Success"";
    }

    @POST
    @Path(""requiresSuppma.do"")
    @Produces(MediaType.TEXT_PLAIN)
    @RequiresPermissions({ ""SUPPMA:*:*"" })
    public String suppmaRequired()
    {
        Subject subject = SecurityUtils.getSubject();
        subject.getPrincipal();
        return ""Success"";
    }
}
</code></pre>

<p>If I put a breakpoint into suppmaRequired and call this resource, I can see that subject is not authenticated. </p>

<p>My understanding on how Shiro works is obviously faulty, but I don't know what I am not doing.  Can anyone point me in the right direction?</p>

<p>Not sure if it makes a difference, but I am using URL rewriting to access the web session.</p>

<p>Basically, I am using the fetch API to test this. Here is an example:-</p>

<pre><code>fetch(""http://localhost/app/tt/shiroLogin/standard"", {
  method: ""POST"",
  headers: {
    ""Content-Type"" : ""application/json""
  } ,
  body: '{""username"":""myName"",""password"":""myPassword""}'
})
.then(function(res) {
  return res.text();
})
.then(function(sessionId) {
  return fetch(""http://localhost/app/tt/shiroResource/requiresSuppma.do;JSESSIONID="" + sessionId,
              {
                method: ""POST""
              });  
})
.then(function(res) {
    return res.text();
})
.then(function(res) {
  console.log(res);
});
</code></pre>

<p>I am also deploying to glassfish.</p>
","<java><jersey><guice><shiro>","1",""
"34698311","Single Sign on with Apache Shiro and Tomcat","<p>I have two separate maven modules: One of them is a rest application, and the other a web app.</p>

<p>They run on the same tomcat 7 server, deployed as different wars, and use Shiro for authentication and authorization.</p>

<p>Since the web application needs to make ajax calls to the rest services, I thought it would be nice to add this SSO thing to both applications. So as suggested by <a href=""https://stackoverflow.com/a/26875767"">this answer</a>, I made the necessary changes to the modules, hoping it would be an easy task, but it wasn't to me. I can authenticate in each application separately, but cannot manage to make them share the session info. Every time I log in the web app and try to access a rest service, I'm redirected to the rest service login page, and vice-versa.</p>

<p>Here is the shiro.ini content for the web app:</p>

<pre><code>[main]

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256

dataSource = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.user = ****
dataSource.password = ****
dataSource.port = ****
dataSource.url = jdbc:mysql://localhost:****/****
dataSource.databaseName = ****

jdbcRealm = com.camacua.shiro.realm.SaltAwareJdbcRealm
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.saltStyle = COLUMN
jdbcRealm.saltedAuthenticationQuery = select password, password_salt, userId from AccountInfo where username = ?
jdbcRealm.userRolesQuery = select role_name from AccountInfo_Role where accountInfo_username = ?
jdbcRealm.permissionsQuery = select permission_name from Role_Permission where role_name = ?
securityManager.realm = $jdbcRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO
cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = SSOcookie
cookie.path = /
cookie.domain = localhost
sessionManager.sessionIdCookie = $cookie
securityManager.sessionManager = $sessionManager

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $cacheManager

securityManager.sessionMode = native

#Para testing:
ssl.enabled=false

shiro.loginUrl = /login.jsp

[urls]
/css/**=anon
/img/**=anon
/logout = logout
/** = ssl,authc
</code></pre>

<p>And the shiro.ini file for the rest app:</p>

<pre><code>[main]
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256

dataSource = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.user = ****
dataSource.password = ****
dataSource.port = ****
dataSource.url = jdbc:mysql://localhost:****/****
dataSource.databaseName = ****

jdbcRealm = com.camacua.shiro.realm.SaltAwareJdbcRealm
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.saltStyle = COLUMN
jdbcRealm.saltedAuthenticationQuery = select password, password_salt, userId from AccountInfo where username = ?
jdbcRealm.userRolesQuery = select role_name from AccountInfo_Role where accountInfo_username = ?
jdbcRealm.permissionsQuery = select permission_name from Role_Permission where role_name = ?
securityManager.realm = $jdbcRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO
cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = SSOcookie
cookie.path = /
cookie.domain = localhost
sessionManager.sessionIdCookie = $cookie
securityManager.sessionManager = $sessionManager

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $cacheManager

securityManager.sessionMode = native

#ssl.enabled=false

authc.loginUrl = /login

[urls]
/test/** = anon
/** = authc
</code></pre>

<p>The ehcache.xml file contains exactly what the stormpath site suggests in both projects:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;ehcache xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:noNamespaceSchemaLocation=""ehcache.xsd"" updateCheck=""true""
         monitoring=""autodetect"" dynamicConfig=""true""&gt;

    &lt;diskStore path=""java.io.tmpdir"" /&gt;

    &lt;cacheManagerPeerProviderFactory
            class=""net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory""
            properties=""peerDiscovery=automatic,
                        multicastGroupAddress=230.0.0.1,
                        multicastGroupPort=4446, timeToLive=1""
            propertySeparator="","" /&gt;

    &lt;cacheManagerPeerListenerFactory
            class=""net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"" /&gt;

    &lt;cache name=""shiro-activeSessionCache"" maxElementsInMemory=""600""
           eternal=""true"" overflowToDisk=""true"" memoryStoreEvictionPolicy=""LFU""&gt;
        &lt;cacheEventListenerFactory
                class=""net.sf.ehcache.distribution.RMICacheReplicatorFactory"" /&gt;
    &lt;/cache&gt;

    &lt;defaultCache maxElementsInMemory=""100"" eternal=""true""
                  overflowToDisk=""true"" memoryStoreEvictionPolicy=""LFU""&gt;
    &lt;/defaultCache&gt;
&lt;/ehcache&gt;
</code></pre>

<p>As you can see, I'm using a custom realm, but I'm pretty sure it's working properly, since the authentication part is not giving me problems at all. any suggestion on what I'm doing wrong? Thanks in advance.</p>

<p><strong>UPDATE:</strong> I just copied the web project and renamed it. Running the two web twin applications has the same effect.</p>
","<maven><tomcat7><single-sign-on><shiro>","0","34779291"
"17673190","Shiro session creation flooding","<p>I notice that even as an anonymous user, a shiro session is created (and inserted into my db in my case) at my first access to a web page. After a successful login, the session record is simply updated with the appropriate attributes.</p>

<p>Now i tried 'stress-testing' the main page url with :</p>

<pre><code>curl -s ""http://myapp.com?[1-1000]""
</code></pre>

<p>And my fear came true as i count the created session is as much as the loop.</p>

<p>So the question here is, is there anyway i can avoid having a session creation flood by a web crawler or a spammer ?</p>
","<shiro>","0","17675921"
"25518964","How to show firstname of the user in grails with shiro","<p>i am new to grails and trying to show the firstname  of the user with: ""shiro:principal property=""firstName""</p>

<p>but it gives me the following error:</p>

<pre><code>Error executing tag 'shiro:principal': No such property: firstName for class: java.lang.String
</code></pre>

<p>If i just to use ""shiro:principal"" it does print the username, but i need first name.</p>

<p>the domain class looks like this:</p>

<pre><code>class ShiroUser {

    String firstName
    String lastName
    String username
</code></pre>

<p>thanks for your help!</p>
","<grails><shiro><principal>","2",""
"26705995","Shiro - Cannot authenticate using hashed passwords","<p>I'm attempting to use Shiro for Authentication and Authorization for a JSF Web Application I'm building.  Unfortunately, I'm still having some difficulty wrapping my head around how it all fits together.</p>

<p>I've been successful (100% using the shiro.ini file) configuring authentication back to a JDBC realm where a test set of credentials are stored.  It has worked perfectly for me when credentials are stored in plaintext.  </p>

<p>My ultimate goal is to unify an existing credential set in a MySQL database.  The passwords are stored as SHA-256 salted hashes.  I've spent an entire day reading over the documentation (minus Javadocs) that is available, but I'm still having some difficulty understanding exactly how to set it up.</p>

<p>In an attempt to implement in stages, I've modified my shiro.ini as follows with the intention of simply using SHA-256 hashes:</p>

<pre><code>[main]
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/Communicator_dev
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
dataSource.resourceRef = true;

jdbcRealm.authenticationQuery = select password from account where site_id = ?
jdbcRealm.userRolesQuery = select user_role from web_roles where site_id = ?

# From https://stackoverflow.com/questions/20742666/shiro-with-jdbc-and-hashed-passwords.
#
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
#configure the passwordService to use the settings you desire
#...
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService
#...
# Finally, set the matcher on a realm that requires password matching for account authentication:
jdbcRealm.credentialsMatcher = $passwordMatcher
</code></pre>

<p>The actual login logic is programmatic in a page backing bean.  Here's the simple test source I'm currently using:</p>

<pre><code>    // Create auth token
    UsernamePasswordToken token = new UsernamePasswordToken(this.siteID, this.password);
    // Get the current subject
    Subject currentUser = SecurityUtils.getSubject();
    // Attempt to login
    try {
        currentUser.login(token);
    } catch (AuthenticationException e) {
        System.out.println(""Invalid creds."");
        return """";
    }
    return ""authenticated.xhtml?faces-redirect=true"";
</code></pre>

<p>This code works perfectly with plaintext passwords stored in my RDBMS, but now that I've hashed them, It's failing.  </p>

<p>From my understanding of the framework, I believe the problem lies with the AuthenticationToken.  I know that I need to use a different token to ultimately implement the Salted Hashes stored in my RDBMS, but I'm confused on how to proceed.</p>

<p>(1) I don't want to reinvent the wheel.  Does Shiro have something that does this natively?  I've checked out Les' links to PasswordMatcher and PasswordService (from link <a href=""https://stackoverflow.com/questions/20742666/shiro-with-jdbc-and-hashed-passwords"">shiro with jdbc and hashed passwords</a>) but this still isn't clear.  Do I need to sub-classingPasswordMatcher?</p>

<p>(2) An architecture question: Who actually calls the doCredentialsMatch(..) method?  Is it the Realm during the execution of the login(...) method?  </p>

<p>(3) The AuthenticationInfo parameter of the doCredentialsMap(...) method .. Is that supplied by the Realm?  Since Realms encapsulate the actual security data, is this an object created from, in my case, the SQL queries that return the password from the RDBMS?</p>

<p>Thank you very much for your time!  I'm hoping to be able to contribute to the documentation when I get my head wrapped around it all.</p>
","<mysql><shiro>","1",""
"25926992","Custom filter in apache shiro","<p>I have two set of users one is anonymous and another is valid users (authenticated using cas server). So for anonymous I don't have ticket but for users I have the ticket. But I want to make the resource available to both with some nifty feature will be provided to valid users. My resources are available as REST services. Therefore between two calls (say /foo and /bar. here /foo must be called before /bar) I have to check whether the calling user is same or not?</p>

<p>Therefore I would like to generate a ticket for anonymous user also. so that in /bar, I can check same anonymous user has actually request /bar.</p>

<p>Can anyone suggest how can I solve the above problem using apache shiro.</p>

<p>Also as I have very little knowledge about Apache shiro, I would like to know which one is better apache shiro or spring security (in case of REST services developed using jersey 2)</p>
","<shiro>","3",""
"21009502","multiple JSESSIONID cookie with JSF","<p>I have JEE application Wildfly RC1 JEE7  - CDI,EJB, JSF Mojarra 2.2.4 
In my application i use h:outputLink for create links simply without calling bean actions.</p>

<p>like this</p>

<pre><code>&lt;h:outputLink styleClass=""btn btn-primary"" value=""#{request.contextPath}/views/product/addproduct.xhtml"" &gt;
    &lt;i class=""glyphicon glyphicon-plus"" /&gt;
    add product
&lt;/h:outputLink&gt;
</code></pre>

<p>After many navigation, Bean actions don't work. In chrome i discover 3 cookies JSESSIONID with different path corresponding to each navigation link</p>

<p>Any idea to handle this</p>
","<jsf><java-ee><shiro><jsf-2.2><jsessionid>","0","21222737"
"38474361","Shiro.ini ldap server credentials","<p>I'm using Apache Shiro plugin combined with LDAP for users authenticaion. To do it I need to keep LDAP server username and password. I really don't want to modify source code of the app and want to keep credentials in a config file shiro.ini
For now my shiro.ini looks like this</p>

<pre><code>[main]
ldapRealm = org.apache.zeppelin.server.LdapGroupRealm
ldapRealm.contextFactory.environment[ldap.searchBase] = OU=Users,DC=mycompany,DC=local
ldapRealm.contextFactory.url = ldap://myldapserver:389
ldapRealm.userDnTemplate = uid={0},ou=Users,dc=mycompany,dc=local
ldapRealm.contextFactory.authenticationMechanism = SIMPLE
securityManager.realms = $ldapRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.globalSessionTimeout = 86400000

shiro.loginUrl = /api/login
</code></pre>

<p>What would be a name of a property to do it?
Thanks in advance</p>
","<apache><authentication><shiro>","0",""
"34410401","Not able to set success URL in Apache Shiro","<p>I was trying to use Apache Shiro as a security framework to secure my web application. While doing that I wanted to set the success URL that a user is redirected to after successful login. By default the client gets redirected to the originally requested page after successful login (mentioned in the API).</p>

<p><a href=""https://shiro.apache.org/static/1.2.1/apidocs/src-html/org/apache/shiro/web/filter/authc/AuthenticationFilter.html"" rel=""nofollow"">https://shiro.apache.org/static/1.2.1/apidocs/src-html/org/apache/shiro/web/filter/authc/AuthenticationFilter.html</a></p>

<p>My question is, can we change this default behaviour and redirect the user to a particular success page on login?</p>

<p>From what I know, we can mention this in the shiro.ini file</p>

<pre><code>authc.successUrl  = /personalaccountpage.html
</code></pre>

<p>where authc is the implicit object provided in shiro enabled applications. But this doesn't seem to be picked by the application. The user is always redirected to the requested URL.</p>

<p>I know this is illogical saying I want to redirect the user to some other page even though user requested a particular page, but then I would like to understand the purpose of the configuration provided to us given below :</p>

<p>authc.successUrl</p>

<p>I am using Apache Shiro 1.2.4 and Tomcat 7 as the Container for my web application.</p>

<p>Here are the main files involed here:</p>

<p><strong>shiro.ini file</strong></p>

<pre><code># =============================================================================
# Tutorial INI configuration
#
# Usernames/passwords are based on the classic Mel Brooks' film ""Spaceballs"" :)
# =============================================================================


[main]

# specify login page
authc.loginUrl = /login.jsp

# redirect after successful login
authc.successUrl  = /personalaccountpage.html

# name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = user
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = pass
# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
authc.rememberMeParam = remember

# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[users]
root = secret, admin
guest = guest, guest
presidentskroob = 12345, president
darkhelmet = ludicrousspeed, darklord, schwartz
lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]
admin = *
schwartz = lightsaber:*
goodguy = winnebago:drive:eagle5

[urls]
/**=authc
</code></pre>

<p><strong>web.xml of my webapp</strong></p>

<pre><code>&lt;web-app xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
    version=""2.5""&gt;

    &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p><strong>login.jsp page for my webapp. User redirected here for logging in when any URL requested</strong></p>

<pre><code>    &lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
        pageEncoding=""ISO-8859-1""%&gt;
    &lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
    &lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
    &lt;title&gt;Please Log In&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
&lt;form name=""loginform"" action="""" method=""post""&gt;
        &lt;table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""3""&gt;
            &lt;tr&gt;
                &lt;td&gt;Username:&lt;/td&gt;
                &lt;td&gt;&lt;input type=""text"" name=""user"" maxlength=""30""&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Password:&lt;/td&gt;
                &lt;td&gt;&lt;input type=""password"" name=""pass"" maxlength=""30""&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td colspan=""2"" align=""left""&gt;&lt;input type=""checkbox"" name=""remember""&gt;&lt;font size=""2""&gt;Remember Me&lt;/font&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td colspan=""2"" align=""right""&gt;&lt;input type=""submit"" name=""submit"" value=""Login""&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/table&gt;
    &lt;/form&gt;
    &lt;/body&gt;
    &lt;/html&gt;
</code></pre>

<p>Please let me know if I missed any detail.</p>
","<java><tomcat><java-ee><tomcat7><shiro>","2",""
"31766032","Why doesn't Shiro's AnonymousFilter create new web sessions in this example?","<p>I have two applications secured with Shiro allowing anonymous access to all pages. One is a WAR deployed inside a Jetty server, and the other is a standalone Java application with an embedded Jetty server.</p>

<ol>
<li>Why does the standalone app not create sessions but the WAR app does?</li>
<li>How do I configure the standalone app so that sessions are created?</li>
<li>Why does the standalone app require the session manager to be explicitly defined in the shiro.ini but the WAR app does not? (Removing it means the authcBasic filter doesn't work either).</li>
</ol>

<h3>WAR app</h3>

<p>WEB-INF/shiro.ini:</p>

<pre><code>[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

[urls]
/** = anon
</code></pre>

<p>WEB-INF/web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""
     version=""3.1""&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;

&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;home.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;/web-app&gt;
</code></pre>

<p>home.jsp:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>pom.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;!--suppress osmorcNonOsgiMavenDependency --&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd""&gt;

    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;com.foo.example&lt;/groupId&gt;
    &lt;artifactId&gt;apache-shiro-tutorial-webapp&lt;/artifactId&gt;
    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;Apache Shiro Tutorial Webapp&lt;/name&gt;
    &lt;packaging&gt;war&lt;/packaging&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
                &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;9.1.0.v20131115&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;webApp&gt;
                        &lt;contextPath&gt;/&lt;/contextPath&gt;
                    &lt;/webApp&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
            &lt;version&gt;1.2.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
            &lt;version&gt;1.2.2&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre>

<h3>Standalone app</h3>

<p>classpath:shiro.ini:</p>

<pre><code>[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

[urls]
/** = anon
</code></pre>

<p>Main.java:</p>

<pre><code>import org.apache.shiro.SecurityUtils;
import org.apache.shiro.web.env.EnvironmentLoaderListener;
import org.apache.shiro.web.servlet.ShiroFilter;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.FilterHolder;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;

import javax.servlet.DispatcherType;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.io.IOException;

import static java.util.EnumSet.allOf;

public class Main {

    public static void main(String[] args) throws Exception {
        Server server = new Server(8080);
        ShiroFilter shiroFilter = new ShiroFilter();

        ServletContextHandler context = new ServletContextHandler();
        context.addEventListener(new EnvironmentLoaderListener());
        context.setContextPath(""/"");
        context.addFilter(new FilterHolder(shiroFilter), ""/"", allOf(DispatcherType.class));
        context.addServlet(new ServletHolder(dummyServlet), ""/"");

        server.setHandler(context);

        server.start();
        SecurityUtils.setSecurityManager(shiroFilter.getSecurityManager());
        server.join();
    }

    private static HttpServlet dummyServlet = new HttpServlet() {
        @Override
        protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
            resp.getWriter().write(""OK"");
        }
    };
}
</code></pre>

<p>pom.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;test&lt;/groupId&gt;
    &lt;artifactId&gt;test&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
        &lt;artifactId&gt;jetty-server&lt;/artifactId&gt;
        &lt;version&gt;9.3.1.v20150714&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
        &lt;artifactId&gt;jetty-servlet&lt;/artifactId&gt;
        &lt;version&gt;9.3.1.v20150714&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
            &lt;version&gt;1.7.5&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;
            &lt;version&gt;1.7.5&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
            &lt;version&gt;1.0.13&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
&lt;/dependencies&gt;

&lt;/project&gt;
</code></pre>

<h2>Proving the standalone app works (and therefore the AnonymousFilter is the problem)</h2>

<p>In the standalone app, if I replace the shiro.ini file with:</p>

<pre><code>[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

[users]
name = password

[urls]
/** = authcBasic
</code></pre>

<p>then I can log in as ""name"" and a session <em>is</em> created. It seems to only be the anonymous filter which refuses to create sessions.</p>

<h3>Other info</h3>

<p>When I say ""a session is created"" I mean when I browse to localhost:8080/ the I can see the <code>Set-Cookie: JSESSIONID=blahblahblah</code> header in the response from the server. No such cookie is ever set by the anonymous filter in the standalone app.</p>
","<java><session><shiro><embedded-jetty>","4","32170544"
"33281215","How to block shiro's session timeout for a specific url?","<p>I have configured the Shiro global timeout with Spring in my webapp, so if my web page(client) doesn't have any request during the past 30 minutes(just instance), the session of the client will timeout and page redirect to a login page. This is already ok. My problem is as following:</p>

<p>The web page has a ajax request in the background, which will request the server at set intervals. And every time it requests will clear the timeout counter of the session in Shiro, so the client session will never timeout!</p>

<p>Is it possible to configure the Shiro to make some specific urls will not clear or refresh the session timeout???</p>

<p>It's really hard to title the problem, also for searching. But I think there always are some people have the same requirement! Anyone has any idea, please tell me. Thank you very much~</p>

<p>My part configuration is as follows,</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""filters""&gt;
        &lt;map&gt;
            &lt;entry key=""ssl"" value-ref=""sslFilter""/&gt;
            &lt;entry key=""login"" value-ref=""userLoginFilter""/&gt;
            &lt;entry key=""nosessi"" value-ref=""unSessionFilter""/&gt;
        &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /alarms/current-alarm-states = nosessi
            /js/** = anon
            /css/** = anon
            /images/** = anon
            /login = anon,ssl
            /login/** = anon,ssl
            /** = login,ssl
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realms""&gt;
        &lt;list&gt;
            &lt;ref bean=""userRealm""/&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""sessionManager"" class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""sessionListeners""&gt;
        &lt;list&gt;
            &lt;ref bean=""sessionListener""/&gt;
            &lt;ref bean=""tsSessionListener""/&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;!-- 3 minutes: 180000 --&gt;
    &lt;property name=""globalSessionTimeout"" value=""180000""/&gt;
    &lt;property name=""sessionIdCookie.name"" value=""MY_SESSIONID""/&gt;
&lt;/bean&gt;
</code></pre>
","<spring-mvc><session><shiro>","0",""
"27883870","Spring integration test with Shiro cause UnavailableSecurityManagerException","<p>I am doing spring webapp's integration, but the shiro can't load normally.</p>

<p>My Question is similar with the question <a href=""https://stackoverflow.com/questions/17881188/org-apache-shiro-unavailablesecuritymanagerexception-no-securitymanager-accessi"">org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code</a>. However, it's solution is not for me.</p>

<p>In my web.xml the Shiro is configured like this：</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/&gt;
    &lt;filter-calss&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/&gt;
        &lt;param-value&gt;true&lt;/&gt;
    &lt;/&gt;
&lt;/&gt;
</code></pre>

<p>And my spring configuration applicationContext.xml is like this:</p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""...""/&gt;
    &lt;property name=""sessionManager"" ref=""...""/&gt;
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.shiroFilterFactoryBean""&gt;
    &lt;property name=""filters""&gt;
        &lt;map&gt;
            &lt;entry key=""ssl"" value-ref=""...""/&gt;
            &lt;entry key=""login"" value-ref=""...""/&gt;
        &lt;/map&gt;
    &lt;/&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property .../&gt;
&lt;/bean&gt;
</code></pre>

<p>In the spring's Controller, I use the Shiro like this:</p>

<pre><code>@RequestMapping(...)
public String login(){
    ...
    Subject sb = SecurityUtils.getSubject();
    if(sb.getPrincipal()!=null &amp;&amp; sb.isAuthenticated()){
        return """";
    }
    return """";
}
</code></pre>

<p>It can do well in my web app. However, when i do integration test with spring, problem coming. My test code like this:</p>

<pre><code>@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration
@ContextHirerchy({
    load the previous applicationContext.xml
})
public class LoginIntegrationTest{

    @Autowired WebApplicationContext wac;

    MockMvc mockmvc;

    @Before
    public void setup(){
        this. mockmvc = MockMvcBuilders.webAppContextSetup(wac).build();
    }

    @Test
    public void testLogin(){
        this.mockmvc.perform(""/login"")
               .andExpect(...);
    }
}
</code></pre>

<p>And,the exception is :</p>

<pre><code>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
</code></pre>

<p>It seems shiro didn't init right. Does anybody has the experience that integration test with Shiro, please tell me. Thank you very much.</p>
","<spring><integration-testing><shiro>","2",""
"21877539","Shiro session timeout shows an error: There is no session with id using Struts2","<p>I have this codes using Shiro:</p>

<p>LoginAction.java:</p>

<pre><code>@Action(value = ""loginUser"", results = { @Result(name = ""error"", type = ""tiles"", location = ""error"") })
public String loginRegisterUser() {

    String retStr = null;

    Subject currentUser = SecurityUtils.getSubject();
    UsernamePasswordToken token = new UsernamePasswordToken(loginUser.getUserName(),loginUser.getUserPassword());
    token.setRememberMe(true);

    try {           

        Session session = currentUser.getSession();

        session.setAttribute(""USERID"", loginUser.getUserName());
        session.setAttribute(""SESSIONID"", session.getId());

        System.out.println(""USERID: "" + session.getAttribute(""USERID""));
        System.out.println(""SESSIONID: "" + session.getAttribute(""SESSIONID""));

        // session.setAttribute(""LOGINUSER"", loginUser); //TODO by Carmela: Add Resource Details
        sessionAttributes.put(""USERID"", session.getAttribute(""USERID""));
        sessionAttributes.put(""SESSIONID"", session.getAttribute(""SESSIONID""));

        currentUser.login(token);

        session.stop();
        currentUser.getSession(true);

        if (currentUser.isAuthenticated()) {
            session = currentUser.getSession(false);
            session.touch();

            session.setAttribute(""USERID"", sessionAttributes.get(""USERID""));
            session.setAttribute(""SESSIONID"", sessionAttributes.get(""SESSIONID""));

            System.out.println(""user is authenticated!!!!!"");
            System.out.println(""isAuthenticated USERID: "" + session.getAttribute(""USERID""));
            System.out.println(""isAuthenticated SESSIONID: "" + session.getAttribute(""SESSIONID""));

            session.setTimeout(30000);

            retStr = ""loginUserSuccess"";
        }
    } catch (ExpiredSessionException e) {
        System.out.println(""LoginAction ExpiredSessionException"");
    } catch (UnknownAccountException uae) {
        addActionError(""Unknown account."");
        retStr = ""loginUserLogin"";
        uae.printStackTrace();
    } catch (IncorrectCredentialsException iae) {
        addActionError(""Incorrect Username and Password."");
        retStr = ""loginUserLogin"";
        iae.printStackTrace();
    } catch (LockedAccountException lae) {
        addActionError(""Your account has been locked."");
        retStr = ""loginUserLogin"";
        lae.printStackTrace();
    } catch (AuthenticationException ae) {
        addActionError(""Enter Valid Username or Password"");
        retStr = ""loginUserLogin"";
        ae.printStackTrace();
    } catch (Exception e) {
        addActionError(""Error!"");
        retStr = ""loginUserLogin"";
        e.printStackTrace();
    }

    return retStr;
}
</code></pre>

<p>shiro.ini:</p>

<pre><code>[main]
shiro.loginUrl = /login.jsp
ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = uid={0},ou=users,dc=example,dc=com
ldapRealm.contextFactory.url = ldap://10.62.24.210:10389
ldapRealm.contextFactory.systemUsername = something
ldapRealm.contextFactory.systemPassword = password
ldapRealm.contextFactory.authenticationMechanism = simple
ldapRealm.authorizationCachingEnabled = false
</code></pre>

<p>Whenever my session timesout after 30 seconds and hit the same url, it shows me the<br>
    error:</p>

<pre><code>Messages: Session with id [6944e751-96bd-49ad-aab9-66ed42da4c9c] has expired. Last 
access time: 2/19/14 6:00 PM. Current time: 2/19/14 6:03PM. Session timeout is set to  
30 seconds (0 minutes) 
File: org/apache/shiro/session/mgt/SimpleSession.java
</code></pre>

<p>When I hit again the same url, it shows me this message:</p>

<pre><code>Messages: There is no session with id [6944e751-96bd-49ad-aab9-66ed42da4c9c] 
File: org/apache/shiro/session/mgt/eis/AbstractSessionDAO.java
</code></pre>

<p>Can anyone help me? Thanks in advance.</p>
","<java><session><shiro>","2",""
"1663040","Run code in Hibernate Filters","<p>I have a fairly sophisticated security mechanism that I implemented using Apache Shiro (formerly JSecurity).  In order to know the exact visibility rules for an object, I need to run some code (i.e. lookup user's roles, permissions, groups, etc).  I'd like to run queries that tell me objects that the current user is authorized to see. </p>

<p>I found that hibernate filters give you ability to apply a filter to your objects / queries, which seems to be what I could use here.  </p>

<p>However, the examples I found seem to be centered on the database (i.e. say I have a field / column isVisible, filter whenever it's set to true).   Is there a way I can run some code as a hibernate filter, or is it just a thin layer that adds a little WHERE clause to all your queries.  </p>

<p>I am actually using this inside Grails / GORM infrastructure, so perhaps there are some other solutions that are valid.  A <a href=""http://grails.org/plugin/hibernate-filter"" rel=""nofollow noreferrer"">plugin exists</a> that integrates hibernate filters, but unless I can use it with some code to run as part of hibernate filtering process, it won't really help me here.</p>
","<hibernate><grails><filter><shiro><jsecurity>","2","1682661"
"20612498","Accessing specific controller in grails shiro plugin","<p>I have a grails application in which I am using shiro plugin to add security. I do not give access to any of the urls without login to any user. All goes fine. Now I want to find whether there is any way to allow access to some of the urls without login ? Some links should be working without login.</p>
","<grails><grails-plugin><shiro>","2","20627941"
"26864824","Apache Shiro with AngulaJS","<p>i am new with AngularJS when i am creating AngularJS project setup with apache shiro configuration there is a problem with login page its not redirecting properly in shiroFilter could any one help me or any one have sample project by using <code>Apache Shiro with AngularJS</code></p>
","<angularjs><apache><spring-mvc><shiro>","2",""
"28898549","shiro with spring mvc login form error Could not load JDBC driver class [oracle.jdbc.OracleDriver]","<p>hi all  i am trying to build login form using shiro and spring mvc 3 
i am getting following error</p>

<pre><code>    2015-03-06 17:42:05,097 DEBUG [org.apache.shiro.spring.LifecycleBeanPostProcessor] - Initializing bean [cacheManager]... 
2015-03-06 17:42:05,098 DEBUG [org.apache.shiro.cache.ehcache.EhCacheManager] - cacheManager property not set.  Constructing CacheManager instance...  
2015-03-06 17:42:05,102 DEBUG [org.apache.shiro.io.ResourceUtils] - Opening resource from class path [org/apache/shiro/cache/ehcache/ehcache.xml] 
2015-03-06 17:42:05,148 TRACE [org.apache.shiro.cache.ehcache.EhCacheManager] - instantiated Ehcache CacheManager instance. 
2015-03-06 17:42:05,148 DEBUG [org.apache.shiro.cache.ehcache.EhCacheManager] - implicit cacheManager created successfully. 
2015-03-06 17:42:05,195 DEBUG [org.apache.shiro.spring.LifecycleBeanPostProcessor] - Destroying bean [cacheManager]... 
2015-03-06 17:42:05,201 ERROR [org.springframework.web.context.ContextLoader] - Context initialization failed 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilter' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'securityManager' while setting bean property 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'jdbcRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'driverClassName' threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [oracle.jdbc.OracleDriver]
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:106)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1325)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
    at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:722)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:410)
    at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4701)
    at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5204)
    at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5199)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'jdbcRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'driverClassName' threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [oracle.jdbc.OracleDriver]
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:106)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1325)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:322)
    ... 22 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRealm' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'driverClassName' threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [oracle.jdbc.OracleDriver]
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:106)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1325)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:322)
    ... 32 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'driverClassName' threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [oracle.jdbc.OracleDriver]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1361)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:322)
    ... 42 more
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'driverClassName' threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [oracle.jdbc.OracleDriver]
    at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)
    at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1358)
    ... 50 more
</code></pre>

<p>application context.xml</p>

<p>
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd""></p>

<pre><code>&lt;!-- &lt;bean id=""dataSource"" class=""org.springframework.jdbc.datasource.DriverManagerDataSource""&gt; 
    &lt;property name=""driverClassName"" value=""org.hsqldb.jdbcDriver"" /&gt; &lt;property 
    name=""url"" value=""jdbc:hsqldb:mem:shiro-spring"" /&gt; &lt;property name=""username"" 
    value=""sa"" /&gt; &lt;/bean&gt; --&gt;

&lt;!-- &lt;bean id=""dataSource"" class=""org.springframework.jdbc.datasource.DriverManagerDataSource""&gt; 
    &lt;property name=""driverClassName"" value=""oracle.jdbc.OracleDriver""/&gt; &lt;property 
    name=""url"" value=""jdbc:oracle:thin:@192.168.0.180:1521:ORCL""/&gt; &lt;property 
    name=""username"" value=""DEVINTEGWALLET_V3""/&gt; &lt;property name=""password"" value=""DEVINTEGWALLET_V3""/&gt; 
    &lt;/bean&gt; --&gt;

&lt;!-- Populates the sample database with sample users and roles. --&gt;
&lt;bean id=""bootstrapDataPopulator"" class=""org.apache.shiro.samples.spring.BootstrapDataPopulator""&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
&lt;/bean&gt;


&lt;bean id=""dataSource""
    class=""org.springframework.jdbc.datasource.DriverManagerDataSource""
    p:driverClassName=""oracle.jdbc.OracleDriver"" p:url=""jdbc:oracle:thin:@192.168.0.180:1521:ORCL""
    p:username=""DEVINTEGWALLET_V3"" p:password=""DEVINTEGWALLET_V3"" /&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager"" /&gt;
    &lt;!-- Single realm app. If you have multiple realms, use the 'realms' property 
        instead. --&gt;
    &lt;property name=""sessionMode"" value=""native"" /&gt;
    &lt;property name=""realm"" ref=""jdbcRealm"" /&gt;
&lt;/bean&gt;

&lt;!-- Let's use some enterprise caching support for better performance. You 
    can replace this with any enterprise caching framework implementation that 
    you like (Terracotta+Ehcache, Coherence, GigaSpaces, etc --&gt;
&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
    &lt;!-- Set a net.sf.ehcache.CacheManager instance here if you already have 
        one. If not, a new one will be creaed with a default config: &lt;property name=""cacheManager"" 
        ref=""ehCacheManager""/&gt; --&gt;
    &lt;!-- If you don't have a pre-built net.sf.ehcache.CacheManager instance 
        to inject, but you want a specific Ehcache configuration to be used, specify 
        that here. If you don't, a default will be used.: &lt;property name=""cacheManagerConfigFile"" 
        value=""classpath:some/path/to/ehcache.xml""/&gt; --&gt;
&lt;/bean&gt;

&lt;!-- Used by the SecurityManager to access security data (users, roles, 
    etc). Many other realm implementations can be used too (PropertiesRealm, 
    LdapRealm, etc. --&gt;
&lt;bean id=""jdbcRealm""
    class=""org.apache.shiro.samples.spring.realm.SaltAwareJdbcRealm""&gt;
    &lt;property name=""name"" value=""jdbcRealm"" /&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
    &lt;property name=""credentialsMatcher""&gt;
        &lt;!-- The 'bootstrapDataPopulator' Sha256 hashes the password (using the 
            username as the salt) then base64 encodes it: --&gt;
        &lt;bean class=""org.apache.shiro.authc.credential.HashedCredentialsMatcher""&gt;
            &lt;property name=""hashAlgorithmName"" value=""SHA-256"" /&gt;
            &lt;!-- true means hex encoded, false means base64 encoded --&gt;
            &lt;property name=""storedCredentialsHexEncoded"" value=""false"" /&gt;
        &lt;/bean&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- ========================================================= Shiro Spring-specific 
    integration ========================================================= --&gt;
&lt;!-- Post processor that automatically invokes init() and destroy() methods 
    for Spring-configured Shiro objects so you don't have to 1) specify an init-method 
    and destroy-method attributes for every bean definition and 2) even know 
    which Shiro objects require these methods to be called. --&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

&lt;!-- Enable Shiro Annotations for Spring-configured beans. Only run after 
    the lifecycleBeanProcessor has run: --&gt;
&lt;bean
    class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
    depends-on=""lifecycleBeanPostProcessor"" /&gt;
&lt;bean
    class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;!-- Secure Spring remoting: Ensure any Spring Remoting method invocations 
    can be associated with a Subject for security checks. --&gt;
&lt;bean id=""secureRemoteInvocationExecutor""
    class=""org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

&lt;!-- Define the Shiro Filter here (as a FactoryBean) instead of directly 
    in web.xml - web.xml uses the DelegatingFilterProxy to access this bean. 
    This allows us to wire things with more control as well utilize nice Spring 
    things such as PropertiesPlaceholderConfigurer and abstract beans or anything 
    else we might need: --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""/login"" /&gt;
    &lt;property name=""successUrl"" value=""/Done"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized"" /&gt;
    &lt;!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
        bean defined will be automatically acquired and available via its beanName 
        in chain definitions, but you can perform overrides or parent/child consolidated 
        configuration here if you like: --&gt;
    &lt;!-- &lt;property name=""filters""&gt; &lt;util:map&gt; &lt;entry key=""aName"" value-ref=""someFilterPojo""/&gt; 
        &lt;/util:map&gt; &lt;/property&gt; --&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /favicon.ico = anon
            /logo.png = anon
            /shiro.css = anon
            /s/login =
            anon
            # allow WebStart to pull the jars for the swing app:
            /*.jar =
            anon
            # everything else requires authentication:
            /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p></p>

<p>LoginCommand.java</p>

<pre><code>*package org.apache.shiro.samples.spring.web;

public class LoginCommand {
    private String username;
    private String password;
    public String getUsername() {
        return username;
    }
    public void setUsername(String username) {
        this.username = username;
    }
    public String getPassword() {
        return password;
    }
    public LoginCommand(String username, String password) {
        this.username = username;
        this.password = password;
    }
    @Override
    public String toString() {
        return ""LoginCommand [username="" + username + "", password="" + password
                + ""]"";
    }

    public void setPassword(String password) {
        this.password = password;
    }

}*
</code></pre>

<p>LoginController.java</p>

<pre><code>package org.apache.shiro.samples.spring.web;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import javax.naming.AuthenticationException;
import javax.validation.Valid;

@Controller(""/login"")
public class LoginController {
    @RequestMapping(""/onsubmit"")
    public String onSubmit(@Valid LoginCommand command, BindingResult result) {
        UsernamePasswordToken token = new UsernamePasswordToken(
                command.getUsername(), command.getPassword());
        try {
            SecurityUtils.getSubject().login(token);
        } catch (Exception e) {
            e.printStackTrace();
            return ""login"";
        }
        if (result.hasErrors()) {
            return ""login"";
        } else {
            return ""success"";
        }
    }
}
</code></pre>

<p>BootstrapDataPopulator.java</p>

<pre><code>package org.apache.shiro.samples.spring;

import javax.sql.DataSource;

import org.springframework.beans.factory.InitializingBean;
import org.springframework.jdbc.core.JdbcTemplate;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.shiro.crypto.hash.Sha256Hash;


public class BootstrapDataPopulator implements InitializingBean {

    private static final String CREATE_TABLES = ""create table users (\n""
            + ""    username varchar(255) primary key,\n""
            + ""    password varchar(255) not null\n"" + "");\n"" + ""\n""
            + ""create table roles (\n""
            + ""    role_name varchar(255) primary key\n"" + "");\n"" + ""\n""
            + ""create table user_roles (\n""
            + ""    username varchar(255) not null,\n""
            + ""    role_name varchar(255) not null,\n""
            + ""    constraint user_roles_uq unique ( username, role_name )\n""
            + "");\n"" + ""\n"" + ""create table roles_permissions (\n""
            + ""    role_name varchar(255) not null,\n""
            + ""    permission varchar(255) not null,\n""
            + ""    primary key (role_name, permission)\n"" + "");"";

    private static final Logger log = LoggerFactory
            .getLogger(BootstrapDataPopulator.class);

    protected DataSource dataSource = null;

    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }

    public void afterPropertiesSet() throws Exception {
        // because we're using an in-memory hsqldb for the sample app, a new one
        // will be created each time the
        // app starts, so create the tables and insert the 2 sample users on
        // bootstrap:

        JdbcTemplate jdbcTemplate = new JdbcTemplate(this.dataSource);
        jdbcTemplate.execute(CREATE_TABLES);

        // password is 'user1' SHA hashed and base64 encoded:
        // The first argument to the hash constructor is the actual value to be
        // hased. The 2nd is the
        // salt. In this simple demo scenario, the username and the password are
        // the same, but to clarify the
        // distinction, you would see this in practice:
        // new Sha256Hash( &lt;password&gt;, &lt;cryptographically strong randomly
        // generated salt&gt; (not the username!) )
        String query = ""insert into users values ('user1', '""
                + new Sha256Hash(""user1"", ""user1"").toBase64() + ""' )"";
        jdbcTemplate.execute(query);
        log.debug(""Created user1."");

        // password is 'user2' SHA hashed and base64 encoded:
        query = ""insert into users values ( 'user2', '""
                + new Sha256Hash(""user2"", ""user2"").toBase64() + ""' )"";
        jdbcTemplate.execute(query);
        log.debug(""Created user2."");

        query = ""insert into roles values ( 'role1' )"";
        jdbcTemplate.execute(query);
        log.debug(""Created role1"");

        query = ""insert into roles values ( 'role2' )"";
        jdbcTemplate.execute(query);
        log.debug(""Created role2"");

        query = ""insert into roles_permissions values ( 'role1', 'permission1')"";
        jdbcTemplate.execute(query);
        log.debug(""Created permission 1 for role 1"");

        query = ""insert into roles_permissions values ( 'role1', 'permission2')"";
        jdbcTemplate.execute(query);
        log.debug(""Created permission 2 for role 1"");

        query = ""insert into roles_permissions values ( 'role2', 'permission1')"";
        jdbcTemplate.execute(query);
        log.debug(""Created permission 1 for role 2"");

        query = ""insert into user_roles values ( 'user1', 'role1' )"";
        jdbcTemplate.execute(query);
        query = ""insert into user_roles values ( 'user1', 'role2' )"";
        jdbcTemplate.execute(query);
        log.debug(""Assigned user1 roles role1 and role2"");

        query = ""insert into user_roles values ( 'user2', 'role2' )"";
        jdbcTemplate.execute(query);
        log.debug(""Assigned user2 role role2"");
    }
}
</code></pre>

<p>login.jsp</p>

<pre><code>&lt;%@ include file=""include.jsp""%&gt;

&lt;html&gt;

&lt;div id=""contentBox""&gt;

    &lt;form:form method=""POST"" commandName=""LoginCommand"" action=""login/onsubmit""&gt;
        &lt;table&gt;
            &lt;tr&gt;
                &lt;td&gt;Login Name :&lt;/td&gt;
                &lt;td&gt;&lt;form:input path=""name"" /&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Login Password :&lt;/td&gt;
                &lt;td&gt;&lt;form:input path=""password"" /&gt;&lt;/td&gt;
            &lt;/tr&gt;

            &lt;input type=""submit"" /&gt;

        &lt;/table&gt;
    &lt;/form:form&gt;

    &lt;p&gt;Try logging in with username/passwords: user1/user1 and
        user2/user2.&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>logoutController.java</p>

<pre><code>package org.apache.shiro.samples.spring.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.shiro.SecurityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class LogoutController {
    @RequestMapping(""/logout"")
    protected String logout(HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        SecurityUtils.getSubject().logout();
        return ""login"";
    }
}
</code></pre>

<p>please help me the error . thank you </p>
","<spring><login><shiro>","0",""
"31126976","Shiro page level access","<p>I'm fairly new to Apache Shiro, but hopefully this is a simple question. I've spent a fair amount of time searching for an answer but can't find one.</p>

<p>I have an admin page as a JSP which I want to display various links based on the user permissions. For example:</p>

<pre><code>&lt;%@ taglib prefix=""shiro"" uri=""http://shiro.apache.org/tags"" %&gt;

&lt;shiro:hasPermission name=""admin:user:update""&gt;
   &lt;li class=""admin-link update-user""&gt;Update Users&lt;/li&gt;
&lt;/shiro:hasPermission&gt;
&lt;shiro:hasPermission name=""admin:role:update""&gt;
   &lt;li class=""admin-link update-role""&gt;Update Roles&lt;/li&gt;
&lt;/shiro:hasPermission&gt;
</code></pre>

<p>This works nicely. However, if the user has no permissions for the links on that page, I'd like to display a message. I don't care which link(s) they have rights to, any link would stop the message displaying.</p>

<p>I thought of doing:</p>

<pre><code>&lt;%@ taglib prefix=""shiro"" uri=""http://shiro.apache.org/tags"" %&gt;
&lt;shiro:hasPermission name=""admin""&gt;
   &lt;shiro:hasPermission name=""admin:user:update""&gt;
      &lt;li class=""admin-link update-user""&gt;Update Users&lt;/li&gt;
   &lt;/shiro:hasPermission&gt;
   &lt;shiro:hasPermission name=""admin:role:update""&gt;
      &lt;li class=""admin-link update-role""&gt;Update Roles&lt;/li&gt;
   &lt;/shiro:hasPermission&gt;
&lt;/shiro:hasPermission&gt;
&lt;shiro:lacksPermission name=""admin""&gt;
    Sorry, you do not have admin rights
&lt;/shiro:lacksPermission&gt;
</code></pre>

<p>However, I'm using wildcard permissions so having a specific permission like ""admin:role:update"" does not imply the generic permission like ""admin"", so the ""you do not have admin rights"" message always shows.</p>

<p>(That is:
<code>new WildcardPermission(""admin"").implies(new WildcardPermission(""admin:user:update"")</code> is true but <code>new WildcardPermission(""admin:user:update"").implies(new WildcardPermission(""admin"")</code> is false)</p>

<p>Is there an easy way to do this, or do I need to define a new permission with ""admin page rights"" and ensure that any roles which get rights to use any links also need this new permission? (Which sounds like a maintenance hassle).</p>
","<permissions><shiro>","1",""
"17108492","apache shiro Implementatation","<p>I have knowledge of <code>spring</code> <code>jsf</code> and <code>hibernate</code>. I have integrated them and create my own framework. Now I want to add session management to my framework using Apache Shiro. But I do not have any knowledge of Apache Shiro. Can any one guide me on using Apache Shiro. If any tutorials or eBooks available would be of great help.</p>
","<apache><shiro>","3",""
"31804499","netbeans 8.0.1 cant find shiro.ini","<p>I added this <code>shir.ini</code> under web pages  under WEB-INF:</p>

<pre><code>[main]
# Objects and their properties are defined here, 
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
 shiro.loginUrl  = /index.jsp 
[users]
root  = 12345,admin
guest = 12345,guest

[roles]
admin = *

[urls]
/index.xhtml = authc
/login.xhtml = authc
/info.xhtml  = anon
/logout = logout
/admin/** = authc, roles[admin]
</code></pre>

<p>but in glassfish server 4.1 window, I got this error:</p>

<pre><code>SEVERE:   [admin-listener(5)] INFO org.apache.shiro.web.env.EnvironmentLoader - Starting Shiro environment initialization.
SEVERE:   [admin-listener(5)] ERROR org.apache.shiro.web.env.EnvironmentLoader - Shiro environment initialization failed
SEVERE:   org.apache.shiro.config.ConfigurationException: Shiro INI configuration was either not found or discovered to be empty/unconfigured.
</code></pre>

<p>Do you what it the cause or how to fix it?</p>
","<java><netbeans><glassfish><shiro>","1",""
"27512543","How do I simulate session cookies for RESTful service (Grails, Shiro)?","<p>I have an existing Grails application which uses the Nimble plugin (therefore Apache Shiro security underneath).</p>

<p>I am adding a RESTful JSON API to it.</p>

<p>My <code>login</code> method manages to get the session ID from Shiro and returns it to the client:</p>

<pre><code>class ApiController {
    def login(String username, String password) {
        def authToken = new UsernamePasswordToken(username, password)
        SecurityUtils.subject.login(authToken)

        render(contentType:""text/json"") {
            [
                sessionId: SecurityUtils.subject.getSession().getId()
            ]
        }
    }

    def getData() {
        SecurityUtils.subject... // either expect to already find a properly populated SecurityUtils.subject or a way to otherwise get it
    }
}
</code></pre>

<p>This looks like:</p>

<pre><code>{""sessionId"":""61FE89F60F94A4EF7B796783E7A326BC""}
</code></pre>

<p>That is quite encouraging, as it is the same one that I see being passed in a cookie when from the browser:</p>

<pre><code>Cookie:auth=Z3Vlc3Q6dGx1c2lz; m=2663:t|34e2:|47ba:t|4e99:t|6ef2:t|370d:t|3c0d:t|64b8:t|2a03:t|18c3:t|79d4:chart|640c:small|678e:3600%7C60|796a:t; OX_plg=swf|sl|wmp|shk|pm; _ga=GA1.1.441292120.1405856016; __atuvc=0%7C47%2C0%7C48%2C0%7C49%2C432%7C50%2C17%7C51; JSESSIONID=61FE89F60F94A4EF7B796783E7A326BC
</code></pre>

<p>However, I now cannot quite figure out how to properly pass this JSESSIONID from the mobile application in a way so that the existing Nimble / Shiro / Grails / Servlet (not sure what level) authentication filters recognize it as a proper session identifier and associate the request with the session.</p>

<p>I tried manually passing a Cookie with <code>JSESSIONID=&lt;sessionId&gt;</code> (using Dispatch on Android) but it appeared to have no effect (although perhaps my parameters to <code>newValidCookie</code> aren't all correct):</p>

<pre><code>val cookie = com.ning.http.client.cookie.Cookie.newValidCookie(""JSESSIONID"", token, null, token, null, -1, -1, false, false)
val svc = host / ""api"" / ""getData"" addCookie cookie
Http(svc OK as.String) 
</code></pre>

<p>I also tried to append <code>;jsessionid=&lt;sessionId&gt;</code> to the URL and that also did nothing.</p>

<p>I also tried doing <code>new Subject.Builder().sessionId(sessionId).buildSubject();</code> in the <code>getData()</code> but the <code>.sessionId()</code> there didn't like a <code>String</code>.</p>

<p>I haven't figured out so far where exactly the processing of the session cookie takes place.</p>

<p>How do I properly assemble a session cookie so that a mobile app can use the application in the same way as the web client?</p>

<p>P.S. My plan B is to simply pass username/password in the authentication headers upon every request and have <code>ApiController</code> do the <code>subject.login</code> every time, but I'd prefer to rather do it using the session ID that's already used for the web application.</p>
","<session><grails><cookies><session-cookies><shiro>","1",""
"6125901","Shiro, Hibernate and Envers","<p>I've got shiro implemented and it's working quite well.  We're now trying to implement envers to do audit logging of our entities in hibernate and that works as well.  One problem is we're trying to get the subject making the change from shiro both in normal mode and in runAs mode.<br>
Shiro gets the subject from the current thread and it seems that by the time envers' AuditEventListener is called it's already in a separate thread.  Where would be a good hook in hibernate to bind shiro's subject to the current thread.  Shiro already has methods to do this but I'd need to override hibernates event caller to bind the subject to the new thread somehow or add additional data to the event that would let me grab it later.</p>
","<hibernate><shiro><hibernate-envers>","1","6159428"
"5108747","How do we configure the grails shiro plugin v1.1.3?","<p>I'm finding it very difficult in discovering the correct method to configure my app to work with the plug, I am using grails 1.3.6 and the Shiro plugin 1.1.3 </p>

<p>I've setup my application according the quick-start guide on the plugin docs site but when I want to configure things further, i.e. set the login success URL I'm finding myself hitting roadblocks.</p>

<p>What I don't understand is after research I see 3 ways of setting options..</p>

<ol>
<li><p>setting explicit options as single lines in config.groovy i.e. security.shiro.redirectUrl = ""/blah""</p></li>
<li><p>Quite often I see this type of block on nabble and Stack Overflow but with no hint where it goes:</p>

<p>security {
shiro {
filter { successUrl:""/blah/"" }
}
}</p></li>
</ol>

<p>I tried this approach to set the successUrl but it has no effect.</p>

<ol>
<li>I've seen references to the SecurityFilters.groovy file but cannot see where I would put a successUrl in this file..</li>
</ol>

<p>So if anyone can clear this up for me, that'd be great :-)</p>

<p>Thanks,</p>
","<grails><shiro>","3","5239955"
"21127986","Shiro-Oauth plugin","<p>I am trying to use the Shiro-Oauth 0.3 plugin with the following set up.
Config:</p>

<pre><code>oauth {
    providers {
        google {
            api = org.scribe.builder.api.GoogleApi
            key = 'key'
            secret = 'secret'
            scope = 'https://www.googleapis.com/auth/userinfo.email'
            callback = ""${grails.serverURL}/oauth/google/callback""
            successUri = '/oauth/success?provider=google'
            failureUri = '/oauth/failure'
        }
    }
    debug = true
}

security.shiro.oauth.linkAccountUrl = ""/oauth/linkaccount""
</code></pre>

<p>Build config:</p>

<pre><code>repositories {
    mavenRepo ""http://repo.desirableobjects.co.uk/""
}

plugins {
    compile ("":shiro:1.2.0"") {
        excludes ""servlet-api""
    }

    compile "":shiro-oauth:0.3""
}
</code></pre>

<p>When I run the project I get the following:</p>

<p>Configuring Shiro ...</p>

<pre><code>| Error 2014-01-14 17:49:04,233 [localhost-startStop-1] ERROR context.GrailsContextLoader  -         Error initializing the application: Error creating bean with name 'uk.co.desirableobjects.oauth.scribe.OauthController': Initialization of bean failed; nested   exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class   [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception  is java.lang.IllegalArgumentException: Callback must be a valid URL or 'oob'
Message: Error creating bean with name 'uk.co.desirableobjects.oauth.scribe.OauthController': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class  [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Callback must be a valid URL or 'oob'
   Line | Method
-&gt;&gt; 303 | innerRun in java.util.concurrent.FutureTask$Sync
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|   138 | run      in java.util.concurrent.FutureTask
|   895 | runTask  in java.util.concurrent.ThreadPoolExecutor$Worker
|   918 | run      in     ''
^   695 | run . .  in java.lang.Thread
Caused by BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Callback must be a valid URL or 'oob'
-&gt;&gt; 303 | innerRun in java.util.concurrent.FutureTask$Sync
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|   138 | run      in java.util.concurrent.FutureTask
|   895 | runTask  in java.util.concurrent.ThreadPoolExecutor$Worker
|   918 | run      in     ''
^   695 | run . .  in java.lang.Thread
Caused by BeanInstantiationException: Could not instantiate bean class     [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Callback must be a valid URL or 'oob'
-&gt;&gt; 303 | innerRun in java.util.concurrent.FutureTask$Sync
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|   138 | run      in java.util.concurrent.FutureTask
|   895 | runTask  in java.util.concurrent.ThreadPoolExecutor$Worker
|   918 | run      in     ''
^   695 | run . .  in java.lang.Thread
Caused by IllegalArgumentException: Callback must be a valid URL or 'oob'
-&gt;&gt;  80 | check    in org.scribe.utils.Preconditions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|    66 | checkValidOAuthCallback in     ''
|    87 | callback in org.scribe.builder.ServiceBuilder
|    84 | doCall   in uk.co.desirableobjects.oauth.scribe.OauthService$_buildService_closure1
|    66 | buildService in uk.co.desirableobjects.oauth.scribe.OauthService
|    43 | &lt;init&gt;   in     ''
|   303 | innerRun in java.util.concurrent.FutureTask$Sync
|   138 | run      in java.util.concurrent.FutureTask
|   895 | runTask  in java.util.concurrent.ThreadPoolExecutor$Worker
|   918 | run      in     ''
^   695 | run . .  in java.lang.Thread
| Error Forked Grails VM exited with error
</code></pre>

<p>Anybody any ideas on why this is being caused? </p>
","<grails><oauth><shiro>","0","21128182"
"37439494","Using a Shiro Filter on JAX-RS without Web.xml","<p>I am using JAX-RS and I have a rest service that I would like to secure using shiro basic auth. I currently have a class that extends Application as per the Servlet 3 spec and everything run fine. I can't seem to get Shiro basic auth filter to work and since I have no web.xml, it will not let me add a filter chain there. Is there a way to programatically add a filter in my application sub class? </p>
","<java><web-services><rest><shiro>","0","37439807"
"9378825","Setting up an ini file in grails","<p>I am trying to use an ini file to login into a grails application with the shiro plugin. I have created an ini file and put it in the config folder. The ini is displayed below.</p>

<pre><code>[main]

[users]
admin=heslo, Administrator

[roles]
Administrator = *

[urls]
</code></pre>

<p>I created a service with the method <code>createSecurityManager()</code> which I call at bootstrap:</p>

<pre><code>def createSecurityManager() {
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
    SecurityManager securityManager = factory.getInstance();
    println securityManager
    SecurityUtils.setSecurityManager(securityManager);
    securityManager
}
</code></pre>

<p>When I try logging in using the username <code>admin</code> and password <code>heslo</code>, the login fails.</p>
","<grails><ini><shiro>","1",""
"26611948","Apache Shiro get subject method and Netty context","<p>Shiro documentation says, </p>

<p><strong>""Shiro acquires Subject data based on the currently executing Thread via its own framework integration code, and this is the preferred way to use Shiro""</strong></p>

<p>If Shiro is getting subject from currently executing thread and Netty handles more than 1 requests using 1 thread. So, how get subject method will return subject information for a given request? And if Shiro is not handling this situation, do I need to add extra mechanism to achieve this?</p>

<p>Thanks.</p>
","<multithreading><netty><shiro>","0",""
"22918311","Get to the grails domain object from the Shiro Subject","<p>I'm doing a simple little grails app and decided on Shiro for signup/security and I've run into a (probably silly) problem.</p>

<p>I've generated the User (and Realm) class, and then extended the User to have a one-to-many association with Posts (ie the User can write, eg, blog entries, is the idea). But how do I get the Domain object from the Shiro subject?</p>

<p>I've tried the following:</p>

<pre><code>def currentUser = SecurityUtils.getSubject()
def posts = Post.findByUser(currentUser)
</code></pre>

<p>But that gives me: ""Message: No converter found capable of converting from type org.apache.shiro.web.subject.support.WebDelegatingSubject to type com.lordfoom.challengetrackr.User""</p>

<p>The domain classes are as follows:</p>

<pre><code>class User {
    String username
    String passwordHash

    static hasMany = [ roles: Role, permissions: String, posts: Post ]

    static constraints = {
        username(nullable: false, blank: false, unique: true)
    }
}



class Post {

    String title;
    String body; 

    static belongsTo = [user:User]
    static constraints = {
        title(nullable:false, blank: false, unique: true)
        user(unique:true)
    }
}
</code></pre>

<p>Is there a simple way to get from the Shiro Subject to the currently logged in user's domain object? Or do I have to look it up somehow? </p>

<p>Any help appreciated.</p>
","<java><grails><groovy><shiro>","2","22920805"
"19271703","Apache Shiro: PermissionsQuery seems to return nothing","<p>In <code>shiro.ini</code> I declare the following SQL-queries:</p>

<pre><code>jdbcRealm.authenticationQuery = SELECT password FROM Person WHERE email = ?
jdbcRealm.userRolesQuery = SELECT id FROM SecurityRole WHERE id = (SELECT securityRole_id FROM Person WHERE email = ?)
jdbcRealm.permissionsQuery = SELECT action FROM SecurityPermission WHERE id = (SELECT permissions_id FROM securityrole_securitypermission WHERE securityrole_id = ?)
</code></pre>

<p>When I replace the <code>?</code> in the last query with <code>1</code> an run it on the db it returns the expected result: <code>rest:*</code><br>
But <code>SecurityUtils.getSubject().isPermitted(new WildcardPermission(""rest""));</code> will return <code>false</code> although the logged in user has an assigned role with id = 1, <code>securityrole_securitypermission</code> has an entry with ids 1 and 1, and <code>securitypermission</code> with id 1 has <code>action</code> = ""rest:*"".</p>

<p><img src=""https://i.stack.imgur.com/hcaw0.png"" alt=""enter image description here""></p>
","<jdbc><shiro>","2","19279091"
"39916424","Setting Apache Shiro in Spring Boot and Spring Security Environnement","<p>I am currently working on the development of a website (doing server and frontend).</p>

<p>The server is using java, configured with spring boot and spring security for authentication.</p>

<p>I need to use Shiro in this environnement to check for permisions and roles.
Therefore I need to plug shiro authentication and spring security's so I can log only once from my REST API.</p>

<p>What I did is : </p>

<p>I implemented my own AuthenticationProvider for spring security :</p>

<pre><code>class MyDaoAuthenticationProvider extends DaoAuthenticationProvider 
</code></pre>

<p>and in the method</p>

<pre><code>public Authentication authenticate
</code></pre>

<p>I logged my Shiro user:</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();

UsernamePasswordToken authenticationToken = new UsernamePasswordToken();
authenticationToken.setUsername(username);
authenticationToken.setPassword(authentication.getCredentials().toString().toCharArray());
currentUser.login(authenticationToken);
</code></pre>

<p>This gives me a connected User and I can use the </p>

<pre><code>SecurityUtils.getSubject()
</code></pre>

<p>to get the user</p>

<p>But my subject is often null just after logging in and if i connect with multiple users on multiple browsers, I can't get the right connected user</p>

<p>For example, I connect with user and toto</p>

<p>I make an action with toto but the line above gives me user.</p>

<p>I can't get it to work right and have no idea why it's not working.</p>

<p>For my configuration of shiro, I did :</p>

<p>directly in my spring security configuration:</p>

<pre><code> @Configuration
 @EnableWebSecurity
 public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

 ...

 @Bean
 @DependsOn(""realm"")
 public DefaultWebSecurityManager securityManager() {
    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
    AuthorizingRealm realm = realm();
    securityManager.setRealm(realm());
    securityManager.setSessionManager(new DefaultWebSessionManager());
    securityManager.setRememberMeManager(new CookieRememberMeManager());
    return securityManager;
 }

 @Bean
 public AuthorizingRealm realm() {
    AuthorizingRealm realm = new AuthorizingRealm() {
        @Override
        protected AuthenticationInfo d oGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException
        {...}

        @Override
        protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection)
        {...}

    return realm;
 }

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 ...
 SecurityUtils.setSecurityManager(securityManager());
 }
}
</code></pre>

<p>I am kind of stuck there and don't know if my configuration is correct.
What am I missing or what is wrong in what i did ?</p>

<p>If anyone has and idea, that would be great.
Thanks.</p>

<p>(I nedd to use both spring security AND shiro, in this project)</p>
","<java><spring-security><spring-boot><configuration><shiro>","0",""
"34535123","Apache Shiro HashedCredentialsMatcher generates wrong salt","<p>I'm facing the problem that Shiro shows some odd behavior in converting a byte 
array to a salt.</p>

<p>I started to implement all classes involved in the process into my application which are:</p>

<ul>
<li>org.apache.shiro.realm.AuthenticatingRealm</li>
<li>org.apache.shiro.authc.credential.HashedCredentialsMatcher</li>
</ul>

<p>Upon User creation the user password is hashed with a generated salt and then stored in my database:</p>

<pre><code>import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.crypto.RandomNumberGenerator;
import org.apache.shiro.crypto.SecureRandomNumberGenerator;

RandomNumberGenerator rng = new SecureRandomNumberGenerator();
Object salt = rng.nextBytes();
String hashedPasswordBase64 = new Sha256Hash(password, salt, 1024).toBase64();
</code></pre>

<p>shiro.ini looks like this:</p>

<pre><code># SALTED JDBC REALM

saltedJdbcRealm=com.mycompany.ssp.SaltedJdbcRealm

dataSource = org.postgresql.ds.PGSimpleDataSource
dataSource.databaseName = Self-Service-Portal
dataSource.serverName = localhost
dataSource.portNumber = 5432
dataSource.user = postgres
dataSource.password = admin

saltedJdbcRealm.dataSource = $dataSource
saltedJdbcRealm.authenticationQuery = SELECT umgmt_users.password, umgmt_users.salt FROM umgmt_users WHERE umgmt_users.user = ?

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher

# base64 encoding, not hex in this example:
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024

saltedJdbcRealm.credentialsMatcher = $sha256Matcher

################################################################################
# SECURITY MANAGER #

securityManager.realms = $saltedJdbcRealm
strategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $strategy

################################################################################
</code></pre>

<p>my custom saltedJdbcRealm just overrides the doGetAuthenticationInfo. This code is from this blog <a href=""http://meri-stuff.blogspot.de/2011/04/apache-shiro-part-2-realms-database-and.html"" rel=""nofollow noreferrer"">-></a></p>

<pre><code>@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    //identify account to log to
    UsernamePasswordToken userPassToken = (UsernamePasswordToken) token;
    String username = userPassToken.getUsername();

    if (username == null) {
        log.debug(""Username is null."");
        return null;
    }

    // read password hash and salt from db 
    PasswdSalt passwdSalt = getPasswordForUser(username);

    if (passwdSalt == null) {
        log.debug(""No account found for user ["" + username + ""]"");
        return null;
    }

    // return salted credentials
    SimpleAuthenticationInfo info = new SimpleAuthenticationInfo(username, passwdSalt.password, getName());
    info.setCredentialsSalt(new SimpleByteSource(passwdSalt.salt));

    return info;
}
</code></pre>

<p>Debugging after <code>return info</code> goes like this:</p>

<ul>
<li>AuthenticatingRealm.java: Mehtod: assertCredentialsMatch()</li>
<li>HashedCredentialsMatcher.java: Method: doCredentialsMatch()</li>
<li>HashedCredentialsMatcher.java: Method: hashProvidedCredentials()</li>
</ul>

<p>Looking for the error I ended up finding it here in
org.apache.shiro.authc.credential.HashedCredentialsMatcher.java:</p>

<pre><code>protected Object hashProvidedCredentials(AuthenticationToken token, AuthenticationInfo info) {
    Object salt = null;
    if (info instanceof SaltedAuthenticationInfo) {

        // STOP HERE AND SEE BELOW PART 1!!!

        salt = ((SaltedAuthenticationInfo) info).getCredentialsSalt();

        // STOP HERE AND SEE BELOW PART 2!!!

    } else {
        //retain 1.0 backwards compatibility:
        if (isHashSalted()) {
            salt = getSalt(token);
        }
    }
    return hashProvidedCredentials(token.getCredentials(), salt, getHashIterations());
}
</code></pre>

<p><strong>Part 1:</strong></p>

<p>lets take a look at the variable info:</p>

<p><a href=""https://i.stack.imgur.com/NSqGm.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NSqGm.jpg"" alt=""""></a></p>

<p>The full byte array is the following:</p>

<pre><code>57 109 102 43 65 87 118 88 70 76 105 82 116 104 113 108 116 100 101 108 79 119 61 61
</code></pre>

<p>which correctly represents the salt in my database:</p>

<pre><code>9mf+AWvXFLiRthqltdelOw==
</code></pre>

<p>Next Step in the code is to extract the Salt from the info variable and store it in the variable salt of type Object.</p>

<p><strong>Part 2:</strong></p>

<p>looking at the variable salt after this line:</p>

<pre><code>salt = ((SaltedAuthenticationInfo) info).getCredentialsSalt();
</code></pre>

<p>executed I get this result:</p>

<pre><code>OW1mK0FXdlhGTGlSdGhxbHRkZWxPdz09
</code></pre>

<p><strong>Edit:</strong></p>

<p>I did another example and show you the 2 methods that 1) hash the submitted password 2) take the password from database for comparison &amp; that they are not 
the same:</p>

<p>I start off with 2 variables, token (submitted password) &amp; info (stored password information):</p>

<p><a href=""https://i.stack.imgur.com/tORnt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tORnt.png"" alt=""enter image description here""></a></p>

<p><strong>Stored Credentials:</strong></p>

<p><a href=""https://i.stack.imgur.com/cbN3o.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cbN3o.png"" alt=""enter image description here""></a></p>

<p>credentials: </p>

<pre><code>d5fHxI7kYQYtyqo6kwvZFDATIIsZThvFQeDVidpDDEQ
</code></pre>

<p>storedBytes before decoding:</p>

<pre><code>100 53 102 72 120 73 55 107 89 81 89 116 121 113 111 54 107 119 118 90 70 68 65 84 73 73 115 90 84 104 118 70 81 101 68 86 105 100 112 68 68 69 81 61
</code></pre>

<p>storedBytes after decoding:</p>

<pre><code>119 -105 -57 -60 -114 -28 97 6 45 -54 -86 58 -109 11 -39 20 48 19 32 -117 25 78 27 -59 65 -32 -43 -119 -38 67 12 68
</code></pre>

<p>hash:</p>

<pre><code>7797c7c48ee461062dcaaa3a930bd9143013208b194e1bc541e0d589da430c44
</code></pre>

<p><strong>Submitted Credentials:</strong></p>

<p><a href=""https://i.stack.imgur.com/Wi6mD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Wi6mD.png"" alt=""enter image description here""></a></p>

<p>char[] credentials:</p>

<pre><code>[0] = 1
[1] = 2
[2] = 3
</code></pre>

<p>byte[] bytes:</p>

<pre><code>50 69 81 77 57 55 80 53 53 112 89 52 122 69 78 54 57 98 53 56 82 65 61 61
</code></pre>

<p>which is <code>2EQM97P55pY4zEN69b58RA==</code> and this is whats inside the database</p>

<p>cachedBase64:</p>

<pre><code>MkVRTTk3UDU1cFk0ekVONjliNThSQT09
</code></pre>

<p>return value is this hash:</p>

<pre><code>af9a7ef0ea9fa4d93eae1ca5d16c03c516f4822ec3e9017f14f694175848a6ab
</code></pre>

<p>As the 2 Hash values are not the same I get why my Application is telling me wrong password BUT I created this user with the password 123 using the code above (first code block)</p>

<p><strong>Edit End</strong></p>

<p>So does anyone know why the hash calculation is not giving the same hash value for the same password??? Or what else I might have done wrong (i doubt that the shiro code is wrong so it may be something wrong in my code with generation the password hash/salt or shiro.ini configuration?)</p>
","<java><shiro>","2","34547752"
"6917127","Specifing package for ShiroUser in Grails","<p>Very very basic question.
Is there a way to specify the package (when doing shiro-quick-start) where to place ShiroUser and ShiroRole classes at?
By default they are placed at grails-app/domain/ and I want them at /grails-app/domain/com/bla/bla.
Netbeans' refactoring tool is useless when trying to move those classes.</p>

<p>Thanks.</p>
","<grails><shiro>","1","6917786"
"5815189","how to restrict action in grails shiro security","<p>.please guide me that i have 2 methods in my Controller one is login and second is logout. and 1 role 'user' defined in my DB and i have a user with that role. now what i want to do is that person can login but could not access the logout button. how can i add permission/restrictions that would allow that user not to Logout.</p>
","<grails><shiro>","1","5828883"
"32709257","Thymeleaf Shiro dialect custom expression","<p>I am iterating through a list and setting a <code>shiro:hasPermission</code> attribute to each <code>div</code> like this</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div th:each=""element : ${elements}"" shiro:hasPermission=""${element.permission}""&gt;
    &lt;span th:text=""${element.name}""&gt;&lt;/span&gt;
&lt;/div&gt;
</code></pre>

<p>where <code>${element.permission}</code> is a permission string.</p>

<p>The div is not rendering even when the user has the permission. I have tried using <code>th:attr</code> like this:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;div th:each=""element : ${elements}"" th:attr=""shiro:hasPermission=${element.permission}""&gt;
    &lt;span th:text=""${element.name}""&gt;&lt;/span&gt;
&lt;/div&gt; 
</code></pre>

<p>Still not working. I think the usage of <code>shiro:hasPermission=""${element.permission}""</code> is not correct. How do I fix this?</p>

<p>I am using Spring MVC + Thymeleaf + <a href=""https://github.com/theborakompanioni/thymeleaf-extras-shiro"" rel=""nofollow"">Thymeleaf Shiro dialect</a>.</p>
","<spring-mvc><thymeleaf><shiro>","0","32971697"
"2879750","How to ad users using A shiro Plugin","<p>I am using Shiro plugin for my grails application security, My application already has a user .Using the shiro plugin, we get a shiro user, now how do i integrate the shiro user with the normal user of my application,show i go ahead and use relationships or is it that the user class ahould be only a shiro user class now ??</p>
","<grails><shiro>","1",""
"14557800","Grails Security without database implementation","<p>I'm developing a web application with Grails 2.2.0 which does all actions through an implemented API which is calling another backend server. This means, that <em>all</em> things, even the authentication and all related things, are done through the API and the corresponding backend server.</p>

<p>Now I wanted to use the SpringSecurity or Apache Shiro Plugin for authentication and role management, etc. but what I've come across all of them are using the <code>domain</code> classes in connection with the datbase which is not what I intend to do... is there a possiblity to use any of these plugins without the database connection without the need to customize them to a high degree? Or is there another plugin, which I'm not aware of, which could bring the functionallity I need 'hassle-free' ?</p>

<p>I hope the question itself is clear enough, otherwise please don't hesitate to ask me for further/better explaination of my question :) </p>
","<security><api><grails><spring-security><shiro>","4","14558487"
"34691141","When does the method doGetAuthorizationInfo get called in Shiro?","<p>I'm really confused about this.</p>

<p>Sometimes it runs, sometimes not. Can someone provide insight into the conditions under which <code>doGetAuthorizationInfo</code> will be called?</p>

<p>Thanks </p>
","<java><shiro>","1","34691396"
"27282163","Is Apache Shiro correct choice for my case?","<p>I'm trying to implement a modular authentication/authorization app. I was wondering if Shiro is the correct choice. What I want to get is to have a system to which I can plug in and maybe in later time exchange some authentication endpoints and also authorization endpoints. I want to be able to use shiro for authentication (for example I would implement facebook plugin for shiro, or ldap plugin for shiro and I can easly plug it into my authentication/authorization app). I also may want to have authorization implemented using different framework than shiro.</p>

<p>I was wondering if shiro with it's custom session and it's subjects and realms is capable of doing such things as I described ? 
Currently I see Shiro as very dynamic framework, which allows to do such things, but I might be wrong because I never use earlier. Custom authentication modules (imo) might be plugged in as new realms, but I'm not sure if this will work with authorization?</p>

<p>I also don't understand how shiro roles and permission system may be used when I want to setup restrictions to web application, for example I want to give restrictions to the given url / group of urls. I think that the only way to implement that is to create a custom mapper which will map given role to permissions. For example in some database I will have all urls, and in separate table I will have list of roles. Then I will add to every role a group of URLs. 
I don't see how could I use shiro permission system to implement URL restrictions.</p>

<p>Please tell me if shiro is a good choice, or maybe I should go into other framework (spring security maybe?)</p>
","<java><authentication><authorization><shiro>","4","27429825"
"27516503","onClick doesn't work when form action is going to jsp page with Apache Shiro","<p>I was originally logging in fine, while needing to submit an onClick method before my form is submitted (as it helps with some of the data sent).</p>

<p>I am now trying to send some of this info to my Java Bean using </p>

<pre><code>    &lt;jsp:useBean id=""url"" class=""plan.URL"" scope=""session""/&gt; 
    &lt;jsp:setProperty name=""url"" property=""*""/&gt;
</code></pre>

<p>The problem I am encountering is that my login is not submitting correctly which seems to mean that when I set </p>

<pre><code>action=""""
</code></pre>

<p>to</p>

<pre><code>action=""viewer.jsp"" it isn't calling my onClick method anymore, or at least that's what it seems to be.
</code></pre>

<p>Login</p>

<pre><code> &lt;form name=""loginform"" action=""viewer.jsp"" method=""POST"" accept-charset=""UTF-8"" role=""form""&gt;
                        &lt;fieldset&gt;

                            &lt;div class=""form-group""&gt;
                                &lt;input class=""form-control"" id=""user"" placeholder=""User Name"" name=""user"" type=""text""&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                                &lt;input class=""form-control"" placeholder=""Password"" name=""password"" type=""password"" value=""""&gt;
                            &lt;/div&gt;

                            &lt;input class=""btn btn-lg btn-primary btn-block"" type=""submit"" value=""Login"" onClick = ""login()"" &gt;
                        &lt;/fieldset&gt;
                    &lt;/form&gt;
</code></pre>

<p>Any advice?</p>

<p>Thanks!</p>

<p>EDIT:  I realized that for some reason I wasn't being logged in at all once I put an action.  I am using Apache Shiro so I am wondering what's going on with the Authentication.</p>
","<java><javascript><jquery><jsp><shiro>","0",""
"19512282","Shiro - How to represent an anonymous/guest user with permissions?","<p>Our company is providing a service where a user can register and upload files. After login, a user can see access his uploaded files, upload more files, analyze them etc.</p>

<p>This works fine but we would also like to provide something like an anonymous/guest login, where users still can upload files but which are not accessible any more as soon as the session expires (after about 8 hours).</p>

<p>How would I implement something like that with Shiro? I know Shiro has the notion of an anonymous user but it seems I am not able to add permissions to him.</p>
","<shiro>","1","19620555"
"38960065","ABAC support for Spring Security or Apache Shiro","<p>I'm trying to find any open-source or commercial implementation of Attribute-Based Access Control(ABAC) paradigm that will work together with Spring Security or Apache Shiro frameworks. Right now I can't find any of them.
I don't think I'm a first one who needs such kind of functionality - so could you please recommend frameworks that will support this ? </p>

<p>Also, can <a href=""http://shiro.apache.org/permissions.html"" rel=""nofollow"">Permissions in Apache Shiro</a> be considered as a particular case of ABAC paradigm implementation ?</p>
","<spring><security><spring-security><shiro><abac>","2","38988237"
"26113736","Grails + Apache Shiro plugin - Setting session timeout","<p>I am working on a grails project that leverages the apache shiro plugin.  I would like to override the default session timeout.  What would be the best way to do this?  I read somewhere that you can set : </p>

<pre><code>securityManager.sessionManager.globalSessionTimeout
</code></pre>

<p>Where do I set this?  In the Config.groovy file?</p>

<p>Thanks in advance for your help.</p>
","<grails><shiro>","1","26114769"
"25406600","Apache Shiro getSubject in REST API's @Singleton EJB bean","<p>I'm developing a web app using Java EE 6 and Shiro for REST backend and this is accessed via an Angular based frontend.</p>

<p>Session creation is disabled in shiro (noSessionCreation in shiro.ini) and I'm authenticating the user on every request based on a token he/she received after he/she provided the credentials for login.</p>

<p>In the custom Authenticating filter I'm calling</p>

<pre><code>SecurityUtils.getSubject().login(bearerToken);
</code></pre>

<p>That calls the custom authentication realm and does the validation of the credentials.</p>

<p>I have a Dao where I want to use the ID of the user which is stored in the Shiro Subject's principal information.</p>

<pre><code>final UserInfo userInfo = (UserInfo) SecurityUtils.getSubject().getPrincipal();
final Long currentUserId = userInfo.getId();
</code></pre>

<p>The Dao itself is a @Singleton EJB</p>

<pre><code>@Singleton
public class TaskDao {
    ...
    public List&lt;Task&gt; filterActiveTasks() {
    }
}
</code></pre>

<p>In this case I want to filter the active tasks that belong to the user that's accessing the service.</p>

<p><strong>My question and concern at the same time:</strong></p>

<p>Is this thread safe? Isn't it possible that upon concurrent usage the subjects might get mixed up?</p>

<p>If so, how could it be avoided?</p>

<p><strong>EDIT:</strong></p>

<p>My concern is not just for the activeTasks but also apply for any @Singleton annotated classes where I want to use the SecurityUtils.getSubject() static method.</p>

<pre><code>public List&lt;SomeData&gt; getSomeDataRelatedToCurrentlyLoggedInUser() {
    // Since the following is a static call in a singleton, how can I be sure
    // that when 10 users are calling this at the same time, each call will get
    // the appropriate UserInfo that was ""logged-in"" at the AuthenticatingFilter level
    final UserInfo userInfo = (UserInfo) SecurityUtils.getSubject().getPrincipal();
    Long currentUserId = userInfo.getId();

    return em.createNamedQuery(""select s from SomeData s where s.userId = :userId"").
        setParameter(""userId"", currentUserId).
        getResultList();

}
</code></pre>

<p>The login part is done in the custom AuthenticatingFilter which is -AFAIK- created for each user.</p>

<p>So the question still remains: Will the calls for SecurityUtils.getSubject() return the proper user or is it possible to mix them up? How can I retrieve the threadcontext in the singletons the user was bound to upon executing the login mechanism?</p>
","<java><rest><thread-safety><ejb><shiro>","1","25406889"
"25845815","differentiate between mobile app and desktop browser request for session management","<p>Context:(Java) Web application uses apache shiro for session management,authentication,authorization. 
Now for mobile users alone, the session attributes needs to be changed during creation(ex: increasing the session time out interval etc). </p>

<p>How to differentiate between mobile client and desktop browser client? 
browser user agent might give the value, but is it dependable?</p>

<p>What are the other things need to be taken care(in terms of session handling at back end) when mobile devices consume web application?</p>
","<jquery><session><architecture><shiro><mobile-application>","1","25848548"
"34751783","Vertx shiro auth from a database","<p><a href=""https://github.com/vert-x3/vertx-examples/tree/master/web-examples/src/main/java/io/vertx/example/web/auth"" rel=""nofollow"">Here</a> I found a simple <code>vertx</code> project that uses <code>apache-shiro</code> for auth. 
Here the user informations are stored inside <code>src/main/resources/vertx-users.properties</code> file like this:</p>

<pre><code>user.tim = sausages,morris_dancer,developer,vtoons
role.developer=do_actual_work
role.vtoons=place_order
</code></pre>

<p>Is this a good approach to store user name and password in a file? Can we store these information in encrypted format or anywhere in a database. Can <code>apache-shiro</code> access these info from a db?
Please provide if you have some sample projects</p>
","<java><shiro><vert.x><vertx3>","3",""
"10913745","In Shiro Guice, how can I change authc to a different subclass?","<p>Example:</p>

<p>In shiro.ini I have:</p>

<pre><code># Change from FormAuthenticationFilter to VerboseFormAuthenticationFilter
authc=webapp.filters.VerboseFormAuthenticationFilter
authc.loginUrl=/login
authc.successUrl=/oncall
</code></pre>

<p>How can I perform the above using Shiro Guice? I'm interested in the following line: </p>

<pre><code>authc=webapp.filters.VerboseFormAuthenticationFilter
</code></pre>
","<guice><shiro>","0",""
"7315759","Do the Shiro tags 'isLoggedIn' and 'authenticated' mean the same thing?","<p>I am just getting started with both Grails and Shiro and I am looking at adding Shiro to an existing project.</p>

<p>I am wondering if the Shiro tags <code>isLoggedIn</code> and <code>authenticated</code> mean the same thing (i.e. always produce the same result)?</p>

<p>The <a href=""http://www.grails.org/plugin/shiro"" rel=""nofollow"">Grails Shiro Plugin page</a> seems to suggest so:</p>

<blockquote>
  <p>The tags <code>&lt;shiro:isLoggedIn&gt;</code> and <code>&lt;shiro:authenticated&gt;</code> check for an authenticated user, the tag <code>&lt;shiro:user&gt;</code> checks for a known user (authenticated or remembered) and the tag <code>&lt;shiro:remembered&gt;</code> checks only for a remembered user.</p>
</blockquote>

<p>But it is hardly an in-depth description and it doesn't explain why they both exist if they are the same.</p>
","<grails><shiro>","0","7320022"
"12585956","Can't Use Shiro's Subject in Spring Decorator Controller","<p>I'm using Spring with Shiro, and in my Spring project I have a decorator controller that displays a decorator page via sitemesh. The decorator page adds onto every page navigation links, like login and logout.</p>

<p>I want login and logout to appear based on whether someone is actually logged in or not, so I figured the way to do that was this:</p>

<pre><code>@Controller
public class DecoratorController extends AbstractController{

 @Override
 @RequestMapping(value = ""/decorator.htm"")
 protected ModelAndView handleRequestInternal(HttpServletRequest request,
    HttpServletResponse response) throws Exception {

    ModelAndView model = new ModelAndView(""DecoratorPage"");

    Subject currentUser = SecurityUtils.getSubject();

    if (currentUser.isAuthenticated())
        model.addObject(""login"", ""display: none;"");
    else
        model.addObject(""logout"", ""display: none;"");

    return model;
 }
}
</code></pre>

<p>sitemesh.xml:</p>

<pre><code>&lt;sitemesh&gt;
  &lt;mapping path=""/*.htm"" decorator=""/decorator.htm""/&gt;
&lt;/sitemesh&gt;
</code></pre>

<p>However, this results in the error: </p>

<p><code>No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration.</code></p>

<p>Why can't I use Shiro here but I can use it in other controllers?</p>
","<spring><shiro><sitemesh>","0","13366280"
"27063013","shiro session store using dao across multiple web applications","<p>Shiro's SessionDAO is used to store session in a db(as a blob).
This session is used across multiple web applications(shiro enabled)
Now the problem is each web application is trying to set attributes(custom classes) in the session.
when tried to deserialize in other web application, it throws back ClassDefNotFoundException as it doesn't exist.
Is there any way I can solve this?
What should be the ideal approach?</p>
","<java><session><serialization><shiro>","2",""
"12439170","how to integrate Java security layer (Apache Shiro|Spring Security) to webapp menu system","<p>As the title says, i have a need to create a dynamic <code>menu stored</code> as a tree in the <code>database</code> and there are plans to put an interface on it.Now i need to decide how to implement the <code>Access Control Layer</code> based on what is on the market suitable for this requirement.  </p>

<p>I heavily use <code>Spring IoC</code>, <code>spring mvc</code> etc....with <code>hibernate</code> for my project. I've used <code>apache shiro</code> before and it's not bad.just that the community is still young so it takes time for a question regarding shiro to have contributions and there is not extensive documentation.  </p>

<p>I was still planing on using <code>shiro</code> anyway because i've an experience which i don't have with <code>spring security</code>.Now the first question should have been <strong>Is is a good idea to tie ACL to menu system|navigation system</strong> .I would be please if anyone could share his experience regarding that.  </p>

<p>So on top of my head i have this model in mind <code>users</code>, <code>roles</code>, <code>rights</code>, <code>users_rights</code> ,<code>roles_users</code>, <code>roles_rights</code></p>

<pre><code>users //contains creds and user detail
roles //contains roles
rights // contains rights (including menu entries matching rights, if i have to tie them)
roles_users //many-to-many roles-users with extra columns mapped as entity
roles_rights // many-to-many roles-rights with extra columns mapped as entity

users_rights //many-to-many users-rights mapped as entity with extra columns. special rights for user and overwrite the overall rights given by roles. can deny rights given by a role or add rights not inside any roles 
</code></pre>

<p>so in the rights table i could have like:</p>

<pre><code>  id
  name // in the form of admin:users:list
  description
  menu_name // unique name what shows on page
  menu_url 
</code></pre>

<p>the only question is that how do i handle submenu? self many-to-many rights-rights?
at the end it all becomes so complex.So i would like have other perspective, insights ,suggestions. thanks</p>
","<java><spring-mvc><menu><spring-security><shiro>","0",""
"29125339","How to get original request URL in shiro","<p>I use <code>org.apache.shiro.web.servlet.ShiroFilter</code> and it redirects to <code>login.jsp</code> as per configuration <code>authc.loginUrl = /login.jsp</code> in my <code>shiro.ini</code> </p>

<p>How to get the original request URL in the <code>login.jsp</code></p>

<p>PS:<br/>
Say my url was <code>localhost:8080/myApp/i.html</code> now it redirects to <code>login.jsp</code> </p>

<p>I have ExtJs app for login and after successful authentication i want to redirect back to <code>i.html</code> the URL user actually requested for.</p>
","<shiro>","0","29126100"
"28497239","Shiro + Stormpath get current user in servlet","<p>I have just started to use Apache Shiro and Stormpath. In the jsp's everything is working fine and as expected. But how can I get the current user data and his custom fields within a servlet?</p>

<pre><code>@WebServlet(""/test"")
public class Foo extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        Subject currentUser = SecurityUtils.getSubject();
        Session session = currentUser.getSession();

        // how to get username and custom fields hereg??
    }
}
</code></pre>
","<java><servlets><shiro><stormpath>","1","28507149"
"14467097","Urls in database","<p>We have a little problem with Apache Shiro.
We are using Shiro with a JDBC realm: users, roles, and permissions are stocked in our SQL server database. 
We have a java application used as a backoffice to insert, update or delete users, roles and permissions. But we need to do the same with Urls filters.</p>

<p>I found a few things about it, but i'm really a beginner with Shiro and i don't understand them, and often, the examples are whith servlets and JSP (we are only using HTML/CSS/JS and data are collected with web services).</p>

<p>Is anybody can explain how to stocked urls and filter in a database, and not in an INI file?</p>
","<java><sql-server><web-services><shiro>","1","14487161"
"22368438","Configure Apache Shiro to load [urls] section fully from JPA Entities","<p>I can't seem to find an example to load the [users] AND [urls] from my JPA objects.
I want to use shiro.ini for [main] section only.</p>

<p>The source code of what I achieved so far is this:
<a href=""https://stackoverflow.com/questions/15605038/unable-to-inject-my-dao-in-a-custom-apache-shiro-authorizingrealm"">Unable to @Inject my DAO in a Custom Apache Shiro AuthorizingRealm</a></p>

<p>Is there any example where [users] (user/pass) AND [urls] (roles, permissions) are FULLY loaded from database? I can't seem to find that anywhere. I'm looking for it for 1 week now.</p>
","<jsf><jsf-2><shiro>","2","23208183"
"9889018","How can I use Shiro SSO","<p>how should I configure SSO shiro in web application In my web app I want to access another weba app . But  I am new to shiro and having difficulties with SSO.. So anyone can help me</p>
","<java><apache><shiro>","3",""
"22347196","shiro configuration [urls] section dynamically","<p>I am new to Shiro, I want to use this for securing my web application. I have tested it's various features. </p>

<p>I have also tested </p>

<pre><code>[urls]
/login.xhtml = authc
/logout = logout
/admin/** = user, roles[admin]
/guest/** = user, roles[admin,guest]
</code></pre>

<p>But In my application I want to configure this section dynamically. I Found some solutions like dynamically create the Ini instance or implementation  but can they didn't solve my problem. Please provide me suggestion or way to out. 
Some code snippet will be better</p>
","<java><security><shiro>","6",""
"3809655","Upgrade Grails Version in Netbeans and Add Shiro Security","<p>I have been working on the project where application is using grails 1.2.2....</p>

<p>Now I want to add the Shiro Security with the current project (using Netbeans), and I am very much new to the grails arena.</p>

<p>So, I wanted to know that how can add shiro plugin to my current project (in netbeans) ? May be I also need to upgrade my current project to version 1.3.3 or 1.3.4 I guess.</p>

<p>Any help would be highly appreciated...</p>

<p>Thanks.</p>
","<grails><netbeans><netbeans6.8><grails-plugin><shiro>","1","3809727"
"36508262","Spring 4 MVC + Apache Shiro","<p>I have a Spring 4 MVC application that uses <code>@RestController</code> annotations for all of the endpoints.  The application does not use a <code>web.xml</code> nor an <code>applicationContext.xml</code> file.  Everything works perfectly fine and now I am trying to get Apache Shiro working in cooperation with everything else.</p>

<p>What I would <strong>like</strong> to do is have Shiro throw an exception when there is an authc/authz problem accessing any of the REST services that I have built.</p>

<p>So far I was able to set up a basic class set up for initializing Shiro:</p>

<pre><code>@Configuration
public class ShiroInitializer {

  @Bean(name = ""realmLocal"")
  @DependsOn (""lifecycleBeanPostProcessor"")
  public Realm realmLocal() {
    return new AuthorizingRealm() {
      @Override
      protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
        return null;
      }

      @Override
      protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        return null;
      }
    };
  }

  @Bean (name = ""lifecycleBeanPostProcessor"")
  public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
    return new LifecycleBeanPostProcessor();
  }

  @Bean
  public org.apache.shiro.mgt.SecurityManager getSecurityManager() {
    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
    securityManager.setRealm(realmLocal());
    return securityManager;
  }

  @DependsOn(""lifecycleBeanPostProcessor"")
  @Bean
  public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
    DefaultAdvisorAutoProxyCreator proxyCreator = new DefaultAdvisorAutoProxyCreator();
    proxyCreator.setProxyTargetClass(true);
    return proxyCreator;
  }

  // enable shiro annotations
  @Bean
  public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
    AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();
    advisor.setSecurityManager(getSecurityManager());
    return advisor;
  }

  @Bean (name = ""shiroFilter"")
  public ShiroFilterFactoryBean getShiroFilter() {
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
    shiroFilter.setSecurityManager(getSecurityManager());

    Map&lt;String, String&gt; filters = new ConcurrentHashMap&lt;&gt;();
    filters.put(""/**"", ""authcBasic"");
    shiroFilter.setFilterChainDefinitionMap(filters);

    return shiroFilter;
  }
}
</code></pre>

<p>When I build an endpoint like this with <code>@RequiresUser</code> and set breakpoints in the <code>AuthorizingRealm</code> in the initializer, nothing seems to picked up and the message displays without kicking off any authc/authz functionality:</p>

<pre><code>@RestController
@RequestMapping (value = ""/"")
@RequiresUser
public class RootEndpoint {

  @RequestMapping (method = RequestMethod.GET)
  public String doGet() throws Exception {
    return ""{ \""hello\"": \""world\"" }"";
  }
}
</code></pre>

<p>So here are my questions</p>

<ol>
<li><strong>Q1</strong> What am I missing in my configuration?  Keep in mind I am trying to avoid the XML configurations if at all possible.</li>
<li><strong>Q2</strong> After getting the basics, what can I use to throw exceptions instead of redirect the user to another page?  Do I need a custom <code>ShiroFilterFactoryBean</code> of my own?</li>
</ol>
","<spring-mvc><shiro><spring-4>","0","36610080"
"3618879","Grails + Securing Application","<p>Im working on a legacy grails application.</p>

<p>I have a couple of tables like this</p>

<pre><code>User ( id, name,enterprise_id)

Enterprise (id, name)

Asset (id,description, enterprise_id)
</code></pre>

<p>I want to validate that when a certain user wants to access an asset, it has the right enterprise_id (i.e That the user belongs to the same enterprise as the asset).</p>

<p>For example, consider</p>

<p>John, a user from Microsoft, and Charles (from Oracle), only Charles should be able to access the Java Virtual Machine. </p>

<pre><code>Enterprise
id,name
--------
1 Oracle
2 Microsoft

Asset
id,description,enterprise_id
----------------------------
1 Java VM     1
2 .NET        2

User
id name    enterprise_id
----------------------
1  John     2
2  Charles  1
</code></pre>

<p>I've been reading on <a href=""http://www.grails.org/plugin/spring-security-core"" rel=""nofollow noreferrer"">spring security</a>, but it doesn't look that it can help me. All I see is user authentication, passwords, roles, etc (Of course, I could be wrong). These things are alredy secured and working ok. For the moment i'm considering filters, <strike> but can't make them work </strike> and rolling my own security(see <a href=""https://stackoverflow.com/questions/3612152/grails-filters-cant-make-it-work"">this</a> question), which doesn't seem right.</p>

<p>Any thoughts? Is Spring Security the way to go? Shiro?</p>

<p>Thanks in advance</p>
","<security><grails><spring-security><shiro>","1","3619677"
"11732147","Shiro 'Any' Permission Instance","<p>I'm confused about Shiro Permission Format. I have a permission called:</p>

<pre><code>'messages:publish:anyThing'
</code></pre>

<p>A person has the permission:</p>

<pre><code>'messages:publish:1(Category ID)'
</code></pre>

<p>I'm trying to give a permission to any people that have any instance of this permission:</p>

<pre><code>'messages:publish'
</code></pre>

<p>I tried the follow line: </p>

<pre><code>if (SecurityUtils.getPrincipal().isPermitted(""messages:publish:?"")) 
</code></pre>

<p>but without success.</p>

<p>I know that all is * , and how is 'Any'?</p>
","<java><apache><security><shiro>","1","13342688"
"26164112","Redirect loop on SSO with Apache Shiro and CAS for a Webapp","<p>I am working on a typical Webapplication but with Authentication and Authorization performed via Shiro and using JASIG CAS SSO. My Application is a JSF 2 webapp running on tomcat 7. I have Shiro-enabled it and in my Shiro configuration I have hooked in the CAS realm. All works fine ... that is, the web app is running fine and shiro is redirecting to the CAS login page. In turn , CAS is redirecting me back to the originally requested URL. <strong>Then nothing happens!!!</strong> I get a redirect loop!</p>

<pre><code>https://myhost:8443/gdsicache/secured/index?ticket=ST-37-L2N7SCVtHxHWENqBfpOY-cas01.example.org
</code></pre>

<p>As can be seen from the link: I am redirected to the requested secure resource <code>https://myhost/gdsicache/secured/index</code>, and I also get a ticket, but then end up in a loop. </p>

<p>Does anyone has any idea why the  flow ends up in a redirect loop? Iam not making any more redirects since I dont have any other filters apart from the shiro filter in my Web.xml file.</p>
","<jsf><cas><shiro>","0","26685850"
"15539485","Specifying Shiro's LifecycleBeanPostProcessor in programmatic Spring @Configuration causes errors","<p>I have a Spring web app I am configuring programatically. I am trying out Apache Shiro as my authentication framework and I have run into issues integrationg Shiro with Spring, specifically using programmatic configuration (as I decided I did not want to write lots of XML). This is the relevant code snippet:</p>

<pre><code>@Configuration //Replaces Spring XML configuration
@EnableTransactionManagement //Enables declarative Transaction annotations
public class SpringAppConfig {
    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }
}
</code></pre>

<p>When I start my web app, I get errors where Spring is unable to process any of my beans using annotations.</p>
","<spring><shiro>","0","15539486"
"26102311","Apache Shiro No FilterChainResolver configured. Returning original FilterChain","<p>I was configuring my application to use apache shiro security, However, I keep getting the following in my log output:</p>

<pre><code>DEBUG o.a.s.w.servlet.AbstractShiroFilter - No FilterChainResolver configured.  Returning original FilterChain.
</code></pre>

<p>My .ini file looks like this at the moment:</p>

<pre><code>    [main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

authc = org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter

authc.loginUrl = /login.xhtml

[users]
admin = password

[urls]
/login.xhtml = authc
/logout = logout
/secured/** = authc
</code></pre>

<p>The relevant snippet from my web.xml is as follows:</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>I am using Apache Shiro 1.2 on a tomcat 7 container
Strange that there are not so many questions addressing this issue, what did I overlook?</p>
","<jsf-2><shiro>","0",""
"39765897","Shiro session timeout isn't work","<p>I want my shiro session expire after 1 minutes when a user login the system,but there're some problems that when I login my application first time, everything is ok,but it isn't forward to my login page when i trying to login at the second time after 1 min.Everything is on position in my <code>applicationContext-shiro.xml</code>,and I also set the session-timeout in my <code>web.xml</code> too.I want some help,thanks anyway.</p>

<blockquote>
  <p>applicationContext-shiro.xml</p>
</blockquote>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd""
       default-lazy-init=""true""&gt;

    &lt;description&gt;Shiro Configuration&lt;/description&gt;

    &lt;bean id=""sessionIdGenerator"" class=""org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator""/&gt;

    &lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""&gt;
        &lt;property name=""activeSessionsCacheName"" value=""shiro-activeSessionCache""/&gt;
        &lt;property name=""sessionIdGenerator"" ref=""sessionIdGenerator""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionValidationScheduler"" class=""org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler""&gt;
        &lt;property name=""sessionValidationInterval"" value=""60000""/&gt;
        &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""sessionManager"" class=""org.apache.shiro.session.mgt.DefaultSessionManager""&gt;
        &lt;property name=""globalSessionTimeout"" value=""60000""/&gt;
        &lt;property name=""deleteInvalidSessions"" value=""true""/&gt;
        &lt;property name=""sessionValidationSchedulerEnabled"" value=""true""/&gt;
        &lt;property name=""sessionValidationScheduler"" ref=""sessionValidationScheduler""/&gt;
        &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realm"" ref=""shiroDbRealm""/&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;/bean&gt;

    &lt;bean id=""shiroDbRealm"" class=""com.aspire.cms.service.impl.ShiroDbRealm""&gt;
    &lt;/bean&gt;

    &lt;!-- Shiro Filter --&gt;
    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;property name=""loginUrl"" value=""/login""/&gt;
        &lt;property name=""successUrl"" value=""/main""/&gt;
        &lt;!--  &lt;property name=""unauthorizedUrl""&gt;&lt;/property&gt;--&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /login = authc
                /ajaxLogin = anon
                /logout = logout
                /static/** = anon
                /** = user
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager""/&gt;

    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

    &lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
          depends-on=""lifecycleBeanPostProcessor""&gt;
        &lt;property name=""proxyTargetClass"" value=""true""/&gt;
    &lt;/bean&gt;

    &lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;/bean&gt;
&lt;/beans&gt;
</code></pre>

<blockquote>
  <p>web.xml</p>
</blockquote>

<pre><code> &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
                xmlns:web=""http://java.sun.com/xml/ns/javaee"" 
                xmlns=""http://java.sun.com/xml/ns/javaee"" 
                xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
                http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" id=""migucms"" version=""2.5""&gt;
  &lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;
            classpath*:/applicationContext-shiro.xml
            classpath*:/applicationContext.xml
           &lt;/param-value&gt;
  &lt;/context-param&gt;
  &lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
  &lt;/listener&gt;
  &lt;context-param&gt;
    &lt;param-name&gt;log4jConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;classpath:log4j.properties&lt;/param-value&gt;
  &lt;/context-param&gt;
  &lt;listener&gt;
    &lt;listener-class&gt;
            org.springframework.web.util.Log4jConfigListener
           &lt;/listener-class&gt;
  &lt;/listener&gt;
  &lt;filter&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
      &lt;param-name&gt;encoding&lt;/param-name&gt;
      &lt;param-value&gt;UTF-8&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
      &lt;param-name&gt;forceEncoding&lt;/param-name&gt;
      &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
  &lt;/filter&gt;
  &lt;filter-mapping&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;
  &lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
      &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
      &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
  &lt;/filter&gt;
  &lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
  &lt;/filter-mapping&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;mvc-dispatcher&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
      &lt;param-value&gt;classpath*:/mvc-dispatcher-servlet.xml&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;mvc-dispatcher&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;
  &lt;session-config&gt;
    &lt;session-timeout&gt;1&lt;/session-timeout&gt;
  &lt;/session-config&gt;
&lt;/web-app&gt;
</code></pre>

<blockquote>
  <p>LoginController</p>
</blockquote>

<pre><code>package com.aspire.cms.controller;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class LoginController {

    //private static final Logger logger = LoggerFactory.getLogger(LoginController.class);
    /** GET  
     * @throws IOException */
    @RequestMapping(value = ""/login"", method = RequestMethod.GET)
    public String login(HttpServletRequest request, HttpServletResponse response) throws IOException {
        if (SecurityUtils.getSubject().isAuthenticated()) {
            response.sendRedirect(request.getContextPath() + ""/main"");
        }

        return ""login"";
    }

    @RequestMapping(value = ""/login"", method = RequestMethod.POST)
    public ModelAndView fail(@RequestParam(FormAuthenticationFilter.DEFAULT_USERNAME_PARAM) String userName, String password) {
        ModelAndView mav = new ModelAndView(""login"");
        mav.addObject(FormAuthenticationFilter.DEFAULT_USERNAME_PARAM, userName);

        return mav;
    }

    @RequestMapping(value = ""/ajaxLogin"", method = RequestMethod.POST)
    public @ResponseBody Object ajaxLogin(HttpServletRequest request, HttpServletResponse response, 
                                                @RequestParam String username, @RequestParam String password,
                                                @RequestParam boolean rememberMe){

        Subject currentUser = SecurityUtils.getSubject();
        String success = ""true"";
        if (!currentUser.isAuthenticated()) {
            UsernamePasswordToken token = new UsernamePasswordToken(username, password);
            token.setRememberMe(rememberMe);
            try{
                currentUser.login(token);
//              SecurityUtils.getSubject().getSession().setTimeout(60000);
                success = ""true"";
            } catch(UnknownAccountException ex) {
                success = ""1100"";
            } catch(IncorrectCredentialsException ex) {
                success = ""1101"";
            } catch(LockedAccountException ex) {
                success = ""1102"";
            } catch(AuthenticationException ex) {
                success = ""1103"";
            }
        }
        //Session session = SecurityUtils.getSubject().getSession(false);
        return success;

    }

    @RequestMapping(value = ""/isAuthenticated"", method = RequestMethod.GET)
    public @ResponseBody boolean isAuthenticated() {
        Subject subject = SecurityUtils.getSubject();
        boolean isAuthenticated = subject.isAuthenticated();

        return isAuthenticated;
    }
}
</code></pre>
","<java><xml><session><shiro>","0",""
"24861473","Authenticate user from JUnit test case in case of Shiro FormAuthenticationFilter","<p>I have a web application which uses shiro FormAuthenticationFilter to authenticate and authorize a user.
This is working very fine in the web application.</p>

<p>Now I have requirement to write test case which will call the resp API in the webapplication
and verify the integration test case(Rest layer(resource) -> Service layer -> Dao layer).</p>

<p>But to call the rest API I need to authenticate the user from junit and user principal 
should be available in the resoure layer.</p>

<p>I am using below line of code in rest layer to get logged in user and perform some task based on that.</p>

<pre><code>SecurityUtils.getSubject().getPrincipal().toString();
</code></pre>

<p>From the test cases I am not able to get the principle in rest layer.</p>

<p>My web application is running on Tomcat 7 server.</p>

<p>I can not mock the Subject in test cases because web application is running in Tomcat sever
and I am trying to access the rest from a jersey client.</p>

<p><strong>Is there any specific URL in shiro which I can call from any http client with user_name and password and it will 
authenticate the user and create session for him.</strong></p>

<p>How to achieve this, any suggestion is appreciated.</p>
","<spring><junit><shiro>","1",""
"24179064","Shiro authentication redirect not working for *.html","<p>My shiro.ini config file</p>

<pre><code>[main]

shiro.loginUrl = /login.jsp
authc.successUrl = /secure/index.html
logout.redirectUrl = /logout.jsp


# redirect to an error page if user does not have access rights
roles.unauthorizedUrl = /accessdenied.html

# configure Shiro's default 'ssl' filter to be disabled while testing:
ssl.enabled = false

[users]
user1 = user1, user

[urls]
/resources/** = anon
/partials/** = anon
/logout = logout
/login.jsp = authc
/secure/** = authc
/account/** = authc
/api/** = anon
/** = anon
</code></pre>

<p>Accessing /account/index.jsp is redirected to /login.jsp
Accessing /secure/favicon.png is redirected to /login.jsp
Accessing /secure/index.html displays the index.html, even though the user isn't logged in.</p>

<p>I presume, that Shiro is somehow configured to secure resources that are *.jsp, *.png and not *.html?</p>

<hr>

<p>On further debugging, this seems to be a Chrome 35.0.1916.153 m and Firefox 30 specific problem. I presume Chrome might be caching the page. Internet Explorer 11 correctly redirects to login.jsp when /secure/index.html is requested.</p>

<p>Clearing Chrome's cache is one way to fix this. Any ideas on a permanent solution? I wouldn't want users to be able to directly access the secure site due to cached files.</p>

<p>Further analysis: Accessing /secure/index.html changes the url to /secure/ with the index.html page shown. However, if you view page source, it is /login.jsp</p>

<p>So the /secure/index.html page is shown even though the underlying html is /login.jsp i.e. correctly redirected by Shiro.</p>
","<java><html><jsp><google-chrome><shiro>","1",""
"29618445","Apache Shiro keeps redirecting to login page","<p>I am having some troubles with Apache Shiro when I put the right user and password in the login page. It keeps redirecting me to the same page every time.</p>

<p>Here I have my project structure.
<p><img src=""https://i.stack.imgur.com/RlSMj.png"" alt=""UNASIS Tree Project Structure"">
<p>
Now my Shiro ini file content</p>

<pre><code>[main]
# specify login page
authc.loginUrl = /admin/login.jsp
authc.successUrl  = /admin/administracion.jsp

[users]
admin  = admin
guest = 12345

[urls]
/admin/login.jsp = authc
/admin/** = authc
</code></pre>

<p>Now, the login html form</p>

<pre><code>&lt;form class=""formulario"" name=""loginform"" action="""" method=""POST""&gt;
                &lt;div id=""descripcionPagina""&gt;
                    &lt;h1&gt;Login&lt;/h1&gt;&lt;br&gt;
                    Para ingresar al sistema &lt;font color=""red""&gt;identifíquese&lt;/font&gt; como usuario del sistema.
                    &lt;br&gt;
                &lt;/div&gt;
                &lt;table id=""tabla3"" width=""65%"" cellpadding=""8""&gt;
                    &lt;tr id=""fila""&gt;
                        &lt;td align=""right""&gt;
                            Identificación:&amp;nbsp;
                        &lt;/td&gt;&lt;td&gt;
                            &lt;input type=""text"" size=""30""
                                   id=""Lusuario"" name=""user""&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;&lt;tr id=""fila""&gt;
                        &lt;td align=""right""&gt;
                            Clave:&amp;nbsp;
                        &lt;/td&gt;&lt;td&gt;
                            &lt;input type=""password"" size=""30""
                                   id=""Lpassword"" name=""password""&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;&lt;tr id=""fila""&gt;
                        &lt;td align=""center"" colspan=""2""&gt;
                            &lt;input type=""submit"" value=""Ingresar""&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;
                &lt;/table&gt;
            &lt;/form&gt;
</code></pre>

<p>The web.xml is fine and doesn't contain any web session parameters. Any help would be very appreciated. Thank you.</p>
","<web><shiro><login-control>","0",""
"26760036","Using Shiro Guice with jdbcRealm","<p>I'm new to Guice and Shiro, and i'm trying to use it with my DB (h2).
I've read this : <a href=""http://shiro.apache.org/guice.html"" rel=""nofollow"">click</a></p>

<p>but as they said it's just working for the users and roles sections, which is useless for me.</p>

<p>My shiro.ini is working, i managed to create user, login and logout without the Guice part.</p>

<p>My MyShiroModule </p>

<pre><code>public class MyShiroModule extends ShiroModule{

protected void configureShiro() {
    try {
        bindRealm().toConstructor(IniRealm.class.getConstructor(Ini.class));
    } catch (NoSuchMethodException e) {
        addError(e);
    }
}

@Provides
Ini loadShiroIni() {
    return Ini.fromResourcePath(""classpath:shiro.ini"");
}
}
</code></pre>

<p>and my Module :</p>

<p>public class Module extends AbstractModule {</p>

<pre><code>@Singleton

protected void configure() {
    Injector injector = Guice.createInjector(new MyShiroModule());
    SecurityManager securityManager = injector.getInstance(SecurityManager.class);
    SecurityUtils.setSecurityManager(securityManager);        
}
}
</code></pre>

<p>they're as they said in the tutorial.
What do i have to add to use the [main] part of my shiro.ini?</p>
","<java><jdbc><guice><shiro>","2","26765814"
"24539675","Shiro + Guice : Why IniRealm is instantiated four times?","<p>I'm trying to implement a simple Guice+Shiro webapp.</p>

<p><strong>web.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app
    version=""3.0""
    xmlns=""http://java.sun.com/xml/ns/javaee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;com.google.inject.servlet.GuiceFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;GuiceServletConfig&lt;/listener-class&gt;
    &lt;/listener&gt;

&lt;/web-app&gt;
</code></pre>

<p><strong>ShiroWebModule</strong>
Extension of ShiroModule that sets up the web environment and also allows for filter chain configuration</p>

<pre><code>class SecurityModule extends ShiroWebModule {


    SecurityModule(ServletContext sc) {
        super(sc);
    }

    protected void configureShiroWeb() {
      try {
            bindRealm().toConstructor(IniRealm.class.getConstructor(Ini.class));
        } catch (NoSuchMethodException e) {
            addError(e);
        }

        addFilterChain(""/login/**"", AUTHC);
        addFilterChain(""/app/**"", AUTHC);
    }

    @Provides
    Ini loadShiroIni() {
        return Ini.fromResourcePath(""classpath:shiro.ini"");
    }
}
</code></pre>

<p><strong>GuiceServletContextListener</strong></p>

<pre><code>public class GuiceServletConfig extends GuiceServletContextListener {

    private ServletContext servletContext;

    @Override
    public void contextInitialized(ServletContextEvent servletContextEvent) {
        this.servletContext = servletContextEvent.getServletContext();
        super.contextInitialized(servletContextEvent);
    }

    @Override
    protected Injector getInjector() {

        Injector injector = Guice.createInjector(
                new SecurityModule(servletContext),
                ShiroWebModule.guiceFilterModule(),
                new GuiceServletModule()
                );
        return injector;
    }

}
</code></pre>

<p><strong>DEBUG</strong></p>

<pre><code>22:56:38,350 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,357 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,365 DEBUG main org.apache.shiro.realm.text.IniRealm:processDefinitions:185 - Discovered the [users] section.  Processing...
22:56:38,372 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,373 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,376  WARN main org.apache.shiro.realm.text.IniRealm:onInit:139 - Users or Roles are already populated.  Configured Ini instance will be ignored.
22:56:38,377 DEBUG main org.apache.shiro.realm.text.IniRealm:onInit:145 - Instance is already populated with users or roles.  No additional user/role population will be performed.
22:56:38,395 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,396 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,397 DEBUG main org.apache.shiro.realm.text.IniRealm:processDefinitions:185 - Discovered the [users] section.  Processing...
22:56:38,400 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,401 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,403  WARN main org.apache.shiro.realm.text.IniRealm:onInit:139 - Users or Roles are already populated.  Configured Ini instance will be ignored.
22:56:38,404 DEBUG main org.apache.shiro.realm.text.IniRealm:onInit:145 - Instance is already populated with users or roles.  No additional user/role population will be performed.
22:56:38,406 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,406 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,407 DEBUG main org.apache.shiro.realm.text.IniRealm:processDefinitions:185 - Discovered the [users] section.  Processing...
22:56:38,411 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,411 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,414  WARN main org.apache.shiro.realm.text.IniRealm:onInit:139 - Users or Roles are already populated.  Configured Ini instance will be ignored.
22:56:38,414 DEBUG main org.apache.shiro.realm.text.IniRealm:onInit:145 - Instance is already populated with users or roles.  No additional user/role population will be performed.
22:56:38,415 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,415 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,416 DEBUG main org.apache.shiro.realm.text.IniRealm:processDefinitions:185 - Discovered the [users] section.  Processing...
22:56:38,420 DEBUG main org.apache.shiro.io.ResourceUtils:loadFromClassPath:159 - Opening resource from class path [shiro.ini]
22:56:38,421 DEBUG main org.apache.shiro.config.Ini:load:342 - Parsing [users]
22:56:38,426  WARN main org.apache.shiro.realm.text.IniRealm:onInit:139 - Users or Roles are already populated.  Configured Ini instance will be ignored.
22:56:38,426 DEBUG main org.apache.shiro.realm.text.IniRealm:onInit:145 - Instance is already populated with users or roles.  No additional user/role population will be performed.
</code></pre>

<p>Why IniRealm is instantiated four times? Is it ok ?</p>

<p>Thanks.</p>
","<java><guice><shiro>","1","24545283"
"31316217","How to support login using sAMAccountName or any other parameter in LDAP with Apache Shiro?","<p>I would like to authenticate and authorize the user with sAMAccountName with this <a href=""https://apache.googlesource.com/isis/+/d87b77f170bdd8a9121e0058b1b67596da0c633e/component/security/shiro/src/main/java/org/apache/isis/security/shiro/IsisLdapRealm.java"" rel=""nofollow"">Realm File</a>. </p>

<pre><code>final NamingEnumeration&lt;SearchResult&gt; searchResultEnum = ldapCtx.search(searchBase, ""objectClass=""+groupObjectClass, SUBTREE_SCOPE);
</code></pre>

<p>I tried the following things but it didn't work. I am trying to make this parameter (sAMAccountName) as configurable. By default its working with UserPrincipalName and name parameters.</p>

<p>case #1:</p>

<pre><code>final NamingEnumeration&lt;SearchResult&gt; searchResultEnum = ldapCtx.search(searchBase, ""(&amp;(objectClass=*)(sAmAccountName={0}))"", SUBTREE_SCOPE);
</code></pre>

<p>case #2:</p>

<pre><code>final NamingEnumeration&lt;SearchResult&gt; searchResultEnum = ldapCtx.search(searchBase, ""(&amp;(objectClass=Person)(sAmAccountName={0}))"", SUBTREE_SCOPE);
</code></pre>

<p>Do I need to configure something else also in order to support the login using sAMAccountName Parameter?</p>
","<java><ldap><shiro>","0",""
"42160219","Apache shiro + kerberos authentication","<p>I am working on a web application which is rest client and uses rest services(APIs) to perform any action. I have integrated apache shiro to perform authentication using jdbc realm which is working fine.</p>

<p>Now I am looking for a solution to perform authentication using apacheDS LDAP. I am planning to use kerberos authentication, but I got no luck to find any useful article or example to implement kerberos authentication using apache shiro.</p>

<p>I found apache shiro's official web site having support of kerberos.</p>

<p><a href=""https://shiro.apache.org/authorization-features.html"" rel=""nofollow noreferrer"">https://shiro.apache.org/authorization-features.html</a></p>

<p>But I found no realm which can directly be used or provide me enough information to implement custom realm for kerberos authentication.</p>

<p>Please provide me a way to implement this or if not possible with kerberos then any other solutions for SSO(Single Sign On) which is capable enough to provide security implementation for my web application.</p>

<p>Thanks in advance.</p>
","<java><authentication><kerberos><shiro>","0","44070062"
"19459651","Can Infinispan be implemented as cache manager for Apache Shiro?","<p>Apache Shiro allows some implementations for CacheManager. EHCache is one of these implemenations.</p>

<p>I'd like to use Infinispan as Distributed Cache Manager. Until now, I'm not sure wheter it's feasible or not.</p>

<p>Does anybody know how to implement Infinispan as CacheManager for Apache Shiro ?
Thanks</p>
","<caching><shiro><infinispan>","4",""
"26363127","Setting up custom distributed cache manager with Apache Shiro?","<p>Can anyone outline, maybe with some brief examples or pseudo-code, how a custom distributed cache manager implementation would look using Apache Shiro for a web application with multiple servers. For example, if I wanted to use a remote SQL database for storing the session, authN and authZ data (it doesn't have to be an SQL database though, anything is fine so I can get an idea of how a custom implementation would look).</p>

<p>What's there in the Apache Shiro docs is good, but the caching docs are incomplete, and the info on distributed caching focuses on the necessary configuration in <code>shiro.ini</code> (unless I've missed some of the documentation).  </p>

<p>Any links to good articles or blogs would also be great.</p>
","<java><shiro><distributed-caching>","2",""
"28999177","Authentication and Session Management in distributed spring application","<p>I'm working on migrating a single module spring web application into a JMS based modular architecture. This <a href=""https://stackoverflow.com/questions/28604899/distributed-transaction-between-multiple-apps-in-spring"">link</a> has the structure of the application right now and my goal.</p>

<p>I'll be employing a CAS based SSO server which does the authentication. The technologies stack would be spring-boot, Apache Camel, ActiveMQ and spring-security/apache-shiro.</p>

<p>For e.g. I'll have an Inventory Application, Financial Application and CAS Application(SSO Server). In some place, I have to manage a centralized session store which will hold current userid and their preferences. </p>

<p>Use case:</p>

<ol>
<li>User logs into CAS SSO and goes to inventory module. Inventory module will get the current userid and it's preferences (from a central session store ?) and a sale transaction will be initiated. </li>
<li>After inventory done it's job, it sends a JMS message via Apache Camel to the financial for posting accounting entries.</li>
<li>Financial application get the current user id and preferences from
session and completes account posting.</li>
</ol>

<p>How do I create a common session store (pretty much attached to the SSO server) for above scenario (Spring-Session will help?) and what is the approach to enable each application know who is actual user doing this transaction.</p>
","<spring><spring-security><jms><cas><shiro>","0",""
"29157086","Integrate Apache Shiro with RestEasy","<p>I have a REST provider implemented using RestEasy. Currently the API uses method level security but we prefer URL-based security of Shiro. Our application uses CDI for dependency injection and it would be really great if currently logged in users can be injected into the beans since that would allow us to alter our responses based on user roles.</p>

<p>Are there any tutorials or examples that show how this can be done?</p>
","<resteasy><shiro>","0",""
"30978384","Remember Me auto fill value in forms","<p>I am working with Grails Framework. I am using Apache Shiro Security for authenticate and authorization. In My application following is my login page.</p>

<p><img src=""https://i.stack.imgur.com/Yr9Hr.png"" alt=""enter image description here""></p>

<p>Now when I checked with Remember Me my ""<strong>username</strong>"" and ""<strong>password</strong>"" manage by Shiro security but after successfully login I have one more form which contains following information:</p>

<p><img src=""https://i.stack.imgur.com/hNiHN.png"" alt=""enter image description here""></p>

<p>Now my new form automatically filled by remember me values so how to prevent remember me values to another form in my application?</p>
","<html5><cookies><grails-2.0><shiro><j-security-check>","0",""
"34496252","Apache Shiro + Authentication issues","<p>I'm using Apache Shiro for my Web Application and I have troubles getting it to work as intended.</p>

<p>What I need is the Authorization part of the Shiro Framework but I can not follow any of those guide as they are all different and I just cant get it to work in my application.</p>

<p>Here is what I want to use the Shiro Framework for:</p>

<ul>
<li>define the existing login.jsp as my login-page</li>
<li>define a *.jsp page that is displayed when the login attempt was successfull</li>
<li>when the login was not successfull, the user stays at login.jsp but is shown an Error-Message about his failed login attempt</li>
<li>all other *.jsp pages exect login.jsp should not be accessible when the user is not logged in</li>
</ul>

<p>Right now my application does it this way:</p>

<ul>
<li>login form <code>action</code> parameter calles login.java (servlet)</li>
<li>on successfull login -> the page portal.jsp is displayed</li>
<li>the page .../portal.jsp can be called without logging in -> This should not be possible in the final version of my application</li>
</ul>

<p>the following things I figured out so far:</p>

<p>shiro.ini:</p>

<pre><code>[main]
# define login page
authc.loginUrl = /SSP/login.jsp

# name of request parameter with username;
authc.usernameParam = username

# name of request parameter with password;
authc.passwordParam = password

# redirect after successful login
authc.successUrl  = /SSP/portal.jsp

[urls]
# enable authc filter for all application pages
/SSP/**=authc
</code></pre>

<p>shiro part of my web.xml looks like this:</p>

<pre><code>&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>shiro part of my pom.xml:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>The error I get:</p>

<pre><code>java.lang.IllegalArgumentException: Configuration error. 
Specified object [authc] with property [loginUrl] without first defining that object's class.
Please first specify the class property first, e.g. myObject = fully_qualified_class_name and then define additional properties.
</code></pre>

<p><strong>EDIT :</strong></p>

<p>It seems this line in shiro.ini did the trick:</p>

<pre><code>authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
</code></pre>

<p>But now I have the problem, that the application doesn't use my own login class</p>

<p>login.java:</p>

<pre><code>@Override
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String url = ""/login.jsp"";

    // Get Login credentials from Login form
    username = request.getParameter(""username"");
    password = request.getParameter(""password"");

    //SecurityManager securityManager = Startup.getSecurityManager();

    //2. Get the current Subject:
    Subject currentUser = SecurityUtils.getSubject();

    //3. Login:
    if (!currentUser.isAuthenticated()) {
        // create UsernamePasswordToken
        UsernamePasswordToken token = new UsernamePasswordToken(""cn="" + username + "",ou=People,dc=maxcrc,dc=com"", password);
        try {
            currentUser.login(token);

            token.clear();
            url = ""/portal.jsp"";

            System.out.println(""User ["" + currentUser.getPrincipal() +""] logged succesfully"");

            //4. Create User Session
            Session session = currentUser.getSession();

            // get user_id
            user_id = get_users_id(username);

            // create new object of User class 
            User new_user = new User(user_id, username);

            // Set HTTP Session Parameters
            session.setAttribute(""user"", username);
            session.setAttribute(""user_id"", user_id);
            session.setAttribute(""obj_user"", new_user);
            session.setAttribute(""currentUser"", currentUser);

        } catch (UnknownAccountException uae) {
            System.out.println(""There is no user with username of "" + token.getPrincipal());
        } catch (IncorrectCredentialsException ice) {
            System.out.println(""Password for account "" + token.getPrincipal() + "" was incorrect!"");
        } catch (LockedAccountException lae) {
            System.out.println(""The account for username "" + token.getPrincipal() + "" is locked.  "" + ""Please contact your administrator to unlock it."");
        }
        // ... catch more exceptions here (maybe custom ones specific to your application?
        catch (AuthenticationException ae) {
            System.out.println(""ERROR: "" + ae);
        }
        // Done, redirect User to applications main page
        request.getRequestDispatcher(url).forward(request, response);
    } 
}
</code></pre>

<p><strong>How can I use my own class (see login.java snippet above) for authentication?</strong></p>

<p><strong>EDIT END</strong></p>

<p>Can anyone provide an example on how to:</p>

<ul>
<li>enable authorization</li>
<li>enable page redirection after successful login attempt</li>
<li>enable staying at login page but showing error message after failed login attempt</li>
<li>make all other pages of the application only accessible if a user is logged in</li>
</ul>
","<java><jsp><servlets><shiro>","1","34516264"
"31772674","Apache Shiro salt hashed password","<p>I need to salt a hashed(SHA-256) password using Apache Shiro. I used the following method, but it uses plainText password as a parameter. But I need to get an alredy hashed password from the frontend and salt it and store in the server side. Otherwise if I use the following method I will have to pass the plain password all the way through frontend, which is not secure. So please suggest me a way to overcome this problem.</p>

<pre><code>String hashedPassword = new Sha256Hash(plainTextPassword, salt);
</code></pre>
","<hash><shiro><sha256>","1","31775144"
"38418983","Apache Shiro in Spring Boot Desktop Standalone Application","<p>I once successfully implemented Apache Shiro in a desktop standalone application (without Spring framework or any framework for that matter).</p>

<p>I used INI file to get <code>SecurityManager</code> like so:</p>

<pre><code>Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = new IniSecurityManagerFactory(
                            ""classpath:resources/shiro.ini"");
org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
SecurityUtils.setSecurityManager(securityManager);
Subject currentUser = SecurityUtils.getSubject();
</code></pre>

<p>I read in one of stackoverflow post that it is not advisable to use shiro INI when using spring.</p>

<p>In my case now I use Spring Boot with Spring Data JPA with Hibernate in this application. What is the best way to configure Apache Shiro so that I can maximise the use of this security framework.</p>

<h2>Edit</h2>

<p>All examples i have come across, shows examples for web. I need specifically for standalone application. Examples will highly be appreciated.</p>

<p><strong>Solution</strong></p>

<p>After alot of learning and answers from this post, i managed to come up with <a href=""https://github.com/yunus89/spring-boot-javafx-jpa-shiro-demo.git"" rel=""nofollow"">this solution</a> and created github repo. If anyone wishes to make it better, be my guest.</p>
","<java><spring><hibernate><javafx-8><shiro>","0","38490170"
"18699903","zk session serialization and Shiro/EhCache","<p>I have Shiro managing security, and AspectJ handling authentication checks and login page redirects for all zk viewmodel classes. I have EhCache handling session persistence.</p>

<p>How the main issue here is that <code>org.zkoss.bind.AnnotateBinder</code> has a non-transient, non-serializable member (<code>org.zkoss.util.logging.Log</code>) resulting in Shiro throwing a <code>java.io.NotSerializableException</code> which Jetty 8 swallows but totally stops Tomcat 7 dead in its tracks.</p>

<p>I have setup ZK using the org.zkoss.zk.ui.http.SerializableUiFactory, which should create <code>Serializable</code> sessions (although this claim is patently false).</p>

<p>Now I've tried several things, short of modifying the ZK sourcecode. But before I do this, I'd like to know if anyone has any ideas for different stop-gap solutions. (Like a setting in Shiro and/or EhCache, that lets it just ignore non-serializable fields silently, without throwing an exception? Or perhaps some setting in Tomcat 7 that I'm missing which makes it swallow or ignore exceptions like Jetty does?</p>
","<java><session><ehcache><zk><shiro>","1",""
"11218568","How do I create a password based cipher with Shiro?","<p>I have created a method that lets me encrypt and decrypt an object with a password.  However, I am using Java's native encryption libraries but these are not very secure.  (For small changes in the object I am trying to serialize, I get 208 identical bytes out of a total of 243 encrypted bytes.)  I think <a href=""http://shiro.apache.org/cryptography-features.html"" rel=""nofollow"">Shiro</a> has alternatives, but I can't seem to find them (at least in 1.1.0 for password-based-encryption).  Here is my code for encrypting.  I inject the password value to the class and I'm leaving out any exception handling to keep things simpler:</p>

<pre><code>public String encryptToString(Serializable object) {
    SecretKeyFactory keyFactory =
            SecretKeyFactory.getInstance(ALGORITHM);
    KeySpec keySpec = new PBEKeySpec(password.toCharArray());
    SecretKey secretKey = keyFactory.generateSecret(keySpec);
    PBEParameterSpec paramSpec = new PBEParameterSpec(SALT, ITERATIONS);

    Cipher cipher = Cipher.getInstance(ALGORITHM);
    cipher.init(Cipher.ENCRYPT_MODE, secretKey, paramSpec);
    // Serialize map
    final ByteArrayOutputStream byteArrayOutputStream =
            new ByteArrayOutputStream();
    CipherOutputStream cout =
            new CipherOutputStream(byteArrayOutputStream, cipher);
    ObjectOutputStream out = new ObjectOutputStream(cout);
    out.writeObject(object);
    out.close();
    cout.close();
    byteArrayOutputStream.close();
    return new String(
            Base64.encode(byteArrayOutputStream.toByteArray()));
}
</code></pre>

<p>And my code for decrypting:</p>

<pre><code>public Object decryptToObject(String encodedString) {
    SecretKeyFactory keyFactory =
            SecretKeyFactory.getInstance(ALGORITHM);
    KeySpec keySpec = new PBEKeySpec(password.toCharArray());
    SecretKey secretKey = keyFactory.generateSecret(keySpec);
    PBEParameterSpec paramSpec = new PBEParameterSpec(SALT, ITERATIONS);
    Cipher decipher = Cipher.getInstance(ALGORITHM);
    decipher.init(Cipher.DECRYPT_MODE, secretKey, paramSpec);
    final ByteArrayInputStream byteArrayInputStream =
            new ByteArrayInputStream(Base64.decode(encodedString
                    .getBytes()));
    CipherInputStream cin =
            new CipherInputStream(byteArrayInputStream, decipher);
    ObjectInputStream in = new ObjectInputStream(cin);
    Object result = in.readObject();
    in.close();
    cin.close();
    byteArrayInputStream.close();
    return result;
}
</code></pre>
","<java><security><shiro>","1",""
"34681560","Shiro custom JDBC realm","<p>I'm messing around with the Shiro Security Framework and implementing a custom JDBC realm.</p>

<p>The following value is currently set in my shiro.ini file</p>

<pre><code>jdbcRealm.authenticationQuery = SELECT password FROM user WHERE username = ?
</code></pre>

<p>My question is if I extend <em>JdbcRealm</em> and override its <em>doGetAuthenticationInfo(AuthenticationToken token)</em> method will the <em>jdbcRealm.authenticationQuery</em> set in my <em>shiro.ini</em> file still be called? Or does the method override take preference over the settings in the shiro.ini file?</p>

<pre><code>public class CustomJdbcRealm extends JdbcRealm 
{
    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException 
    {
        // Connect to DB to get password and salt values
    }
}
</code></pre>
","<java><apache><shiro>","0","34762123"
"31834725","Destroy SessionScoped CDI beans during Shiro logout","<p>The problem is that the session scoped beans are not destroyed before the session-timeout is reached.</p>

<p>Therefore I have two questions regarding the following logout procedure:</p>

<ol>
<li>Is this the right way to use shiro logout (see logout() below)</li>
<li>What would be the proper way to destroy the CDI session-scoped beans during logout.</li>
</ol>

<p><strong>page.xhtml:</strong></p>

<pre><code>&lt;p:commandLink ajax=""false"" actionListener=""#{myOtherBean.logout}"" /&gt;
</code></pre>

<p></p>

<p><strong>beans:</strong></p>

<pre>
@Named
@SessionScoped
public class mySessionBean implements Serializable {
}

@Named
@SessionScoped
public class myOtherBean extends Observable implements Serializable {
    @Inject
    private Subject subject;

    public void logout(){

      subject.logout();

// this line throws the exception
FacesContext.getCurrentInstance().getExternalContext().invalidateSession();

      FacesContext.getCurrentInstance().getExternalContext()
            .redirect(servlet.getContextPath() + ""/logout"");
    }
}
</pre>

<p><strong>shiro.ini:</strong></p>

<pre>
[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO
....
logout=org.apache.shiro.web.filter.authc.LogoutFilter
logout.redirectUrl = /login.xhtml

....
[urls]
/logout = logout
</pre>

<p><strong>Exception:</strong></p>

<p>The following exception is thrown when I call <code>FacesContext.getCurrentInstance().getExternalContext().invalidateSession();</code></p>

<pre>
 java.lang.IllegalStateException:
 org.apache.shiro.session.UnknownSessionException:
 There is no session with id [e5939658-c033-4e67-984f-23cadfbc06fb]
</pre>

<p>Additional information: I am running Wildfly 8.2.0.Final.</p>

<p>Thanks.</p>
","<java><session><wildfly><wildfly-8><shiro>","0",""
"17867223","Storing hashed password","<p>I need to revamp a secure login code:</p>

<pre><code>@Override
public User login(String username, String password, Boolean rememberMe) {   
    log.info(""Logging in username=""+username);
    UsernamePasswordToken token;
    String hashed = BCrypt.hashpw(password, BCrypt.gensalt());
    log.info(""Hashed password="" + hashed);
    token = new UsernamePasswordToken(username, hashed);
    // ”Remember Me” built-in, just do this:
    token.setRememberMe(rememberMe);
    try {
        // With most of Shiro, you'll always want to make sure you're working with the currently executing user,
        // referred to as the subject
        Subject currentUser = SecurityUtils.getSubject();

        // Authenticate
        //currentUser.login(token);     
        User user = userDAO.fetchUserByName(username, hashed);
        return user;
    } catch (org.apache.shiro.authc.AuthenticationException e) {
        throw new AuthenticationException(""Failure in authentication"");
    } catch (IllegalStateException e){
        throw new AuthenticationException(""Application is in a illegal state"");
    } catch (Exception e){
        throw new AuthenticationException(""Some other error during login was caught."");
    }
}
</code></pre>

<p>At the DAO level:</p>

<ul>
<li>User object are fetched with username and the hashed password</li>
</ul>

<p>However, right now, the password stored in the DB is plain, I am just going to replace it with a hashed password. The problem here is this:</p>

<ul>
<li>BCrypt.hashpw() method generates different hash as I can see when I logged this code. </li>
</ul>

<p>So the question would be how to store a hashed password when it <strong>changes every time.</strong> </p>

<p>The idea that I was thinking is that </p>

<ul>
<li>User inputs the plain password in the UI, and in this login method, the password will be hashed then User will be fetched through the fetchUserByName(username, hashed) method; but it doesn't seem to be the solution for this particular Shiro and BCrypt mix. </li>
</ul>

<p>What is the right way of dealing with this?</p>
","<java><shiro><bcrypt>","2","17871126"
"25990597","Shiro AOP with GUICE not working","<p>I am writing a service in which i use Shiro for security. I have also incorporated Guice with it. I create the GUICE injector in a <code>GuiceServletContextListener</code> :</p>

<pre><code>//Custom Shiro Web module with defined REALM
new MyShiroWebModule(this.servletContext, ""/v1/*""),

//Shiro annotations
new MyAOPModule(),
</code></pre>

<p>I also bind the Guice Container and GuiceShiroFilter in the <code>JerseyServletModule</code>:</p>

<pre><code>serve(""/v1/*"").with(GuiceContainer.class, params);                  
//Adds Shiro filtering  
MyShiroWebModule.bindGuiceFilter(binder());
</code></pre>

<p>But the Annotations from Shiro just don't seem to work!</p>

<p>I configure the chains in <code>MyShiroWebModule</code>:</p>

<pre><code>addFilterChain(""/v1/res/test"", ANON);
addFilterChain(""/v1/**"", ROLES, AUTHC_BASIC);
</code></pre>

<p>So if I use the ""ROLES"" filter then it scans for roles in the AOP manner of:</p>

<p><code>@RolesAllowed(""SomeFancyRole"")</code> (SEE EDIT)</p>

<p>But i would like to leverage the GUICE Shiro AOP functionality. I have tried the base ShiroAOPModule instead of my own -> my is for debug to see if the configuration is called.</p>

<p><code>@User, @Authenticated etc.</code> </p>

<p>How can I incorporate this functionality as the documentation states that only ""adding"" the ShiroAOPModule should work out of the box?
Thank you in advance</p>

<p>EDIT: </p>

<p>Turns out that the <code>@RolesAllowed</code> is working thanks to adding:</p>

<p><code>params.put(PackagesResourceConfig.PROPERTY_RESOURCE_FILTER_FACTORIES,                          ""com.sun.jersey.api.container.filter.RolesAllowedResourceFilterFactory"");</code></p>

<p>in the JerseyServletModule </p>

<p><code>serve(""/v1/*"").with(GuiceContainer.class, params);</code></p>

<p>So the AOP from Shiro is still not filtered.</p>
","<aop><guice><shiro><guice-servlet>","2",""
"36107486","Shiro not redirecting to loginUrl after failed attempts to log in","<p>Using Spring Boot I am configuring the following filter</p>

<pre><code>@Bean(name = ""shiroFilter"")
public ShiroFilterFactoryBean shiroFilter() {
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
    Map&lt;String, String&gt; filterChainDefinitionMapping = new HashMap&lt;&gt;();

    /*
    * URL path expressions are evaluated against an incoming request in the order they are defined and the FIRST MATCH WINS. For example, let's asume that there are the following chain definitions:
         /account/** = ssl, authc
         /account/signup = anon
      If an incoming request is intended to reach /account/signup/index.html (accessible by all 'anon'ymous users), it will never be handled!. The reason is that the /account/** pattern matched the incoming request first and 'short-circuited' all remaining definitions.
      Always remember to define your filter chains based on a FIRST MATCH WINS policy!
    * */

    filterChainDefinitionMapping.put(""/login.html"", ""authc"");
    filterChainDefinitionMapping.put(""/logout"", ""logout"");
    filterChainDefinitionMapping.put(""/css/**"", ""anon"");
    filterChainDefinitionMapping.put(""/register/**"", ""anon"");
    filterChainDefinitionMapping.put(""/**"", ""authc"");
    shiroFilter.setFilterChainDefinitionMap(filterChainDefinitionMapping);
    shiroFilter.setSecurityManager(securityManager());

    shiroFilter.setLoginUrl(""/login.html"");
    shiroFilter.setSuccessUrl(""/"");
    shiroFilter.setUnauthorizedUrl(""/unauthorized.html"");

    Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();

    filters.put(""anon"", new AnonymousFilter());

    filters.put(""authc"", new FormAuthenticationFilter());

    LogoutFilter logoutFilter = new LogoutFilter();
    logoutFilter.setRedirectUrl(""/login.html?logout"");
    filters.put(""logout"", logoutFilter);

    filters.put(""roles"", new RolesAuthorizationFilter());
    filters.put(""user"", new UserFilter());

    shiroFilter.setFilters(filters);

    return shiroFilter;
}
</code></pre>

<p>However, whenever I try to login with wrong credentials the redirection never happens. I do get the ""shiroLoginFailure"" attribute holding the UnknownUserException.</p>

<p>(Logging in with the correct credentials works fine)</p>

<p>Any ideas?</p>
","<java><spring><spring-mvc><shiro><spring-boot-actuator>","0",""
"30719027","Authenticating plain text passwords against md5 hash in DB using Apache Shiro","<p>Here is the my shiro.ini.</p>

<pre><code>[main]

ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource  
ds.resourceName = java:/comp/env/jdbc/at

credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=MD5

credentialsMatcher.hashIterations=1024

credentialsMatcher.storedCredentialsHexEncoded=true

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

jdbcRealm.permissionsLookupEnabled = true 

jdbcRealm.dataSource = $ds

jdbcRealm.authenticationQuery = SELECT password FROM accounts.users WHERE username = ?

jdbcRealm.userRolesQuery = SELECT role_id FROM accounts.org_user_roles WHERE user_id = (SELECT id FROM accounts.users WHERE username = ?)

jdbcRealm.permissionsQuery = SELECT feature_id FROM accounts.role_features WHERE role_id = ?

jdbcRealm.credentialsMatcher = $credentialsMatcher


shiro.loginUrl = /at/login.htm

authc = org.apache.shiro.web.filter.authc.FormAuthenticationFilter

authc.loginUrl = /at/login.htm

logout.redirectUrl = /at/login.htm

[urls]

/at/login.htm = authc

/at/forgotpw.htm  = anon

/at/resources/** = authc

/at/tss/** = authc

/at/tde/** = authc

/at/lcs/** = authc

/at/cdt/** = authc

/at/tp/** = authc

/at/ip/** = authc

/at/dashboard/** = authc

/at/logout.htm = logout
</code></pre>

<p>When I go to login page and type in my username and password I get an exception:</p>

<p>org.apache.shiro.authc.IncorrectCredentialsException: Submitted credentials for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false] did not match the expected credentials.</p>

<p>My DB contains MD5 hash of the password. It seems the validation isn't working. I can't understand why.</p>
","<java><security><shiro>","0",""
"19512096","Shiro - How to efficiently select all resources a user has permission for?","<p>I have implemented a service where user can upload files (here referred to as services) to analyze them. Each registered user has only access to his uploaded files.</p>

<p>So, after uploading a file I grant the user a wildcard permission for that file:</p>

<pre><code>def currentUser = SecurityUtils.subject

if (currentUser.isAuthenticated()) {
    def user = User.findByUsername(currentUser.principal)
    user.addToPermissions(""service:*:$serviceId"")
    user.save()
}
</code></pre>

<p>When accessing a file, I check if the currently logged in user has the permission to open that file:</p>

<pre><code>SecurityUtils.subject.checkPermission(""service:*:$id"")
</code></pre>

<p>This seems to work all fine but now I want to give the logged in user a way to list all his uploaded files. For that, I get the user, take all his permissions, extract the IDs and then search for the files:</p>

<pre><code>    def user = User.findByUsername(SecurityUtils.subject.principal)
    def serviceIds = user.permissions.collect { it.split(':').last().toLong() }

    [services: Service.findAllByIdInList(serviceIds)]
</code></pre>

<p>While this works, it seems horribly inefficient. What would be a better way to implement this? Maybe create a relation between the user and the files?</p>
","<grails><shiro>","3","19514888"
"15331081","Apache Shiro per object permission?","<p>Is it possible to implement a per database row permission system with Shiro? Suppose I have 10000 records in a table and some user can only see 1000 records... what is the best way to only return those records to the user? Is this a Shiro ""use case"" or I'm totally in the wrong path here? Thanks</p>
","<security><java-ee><permissions><acl><shiro>","1","17156407"
"19779382","Simple custom CAS server built with apache shiro","<p>I have been looking for a way to create a very simple authentication related CAS server with apache shiro. Why I have a very specific requirement on the server especially for signup where I actually try to map all the accounts with a master password . Reason being I still want existing users to still authenticate with the their old system where password in each system is hashed with different algorithm.</p>

<p>I thought I could do so with the shared session features of shiro using <code>ehcache</code> even <code>terracotta</code> clustering to keep the sessions.I got stuck in my thought on where to do the redirection from upon successful password challenge. All this are just assumptions because I can't really see the bigger picture.  </p>

<p>I have seen a lot of people leveraging on <code>jasig-cas</code> but it doesn't seem to me after reading some of their documentation that I can have the freedom and the control I would have when implementing this very very simple CAS server on shiro. Besides I wanted to run mongodb as backend for the CAS server and I have't seen that in the list of <code>datasource</code> one can use.  </p>

<p>If anybody has tried this before kindly share your discovery and point us to the right direction.<br>
Thanks </p>
","<single-sign-on><java-ee-6><cas><shiro>","2",""
"37895166","When a session expires in Apache Shiro, how can users stay logged in?","<p>What it happens in my project is after expiring session or reset Apache Tomcat, all of my user logged out automatically and need to login again. How to fix problem to users stay logged in?</p>

<p>This is my Apache Shiro INI Configuration:</p>

<pre><code>[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

securityManager.sessionMode = native

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO

cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = bzauth
cookie.path = /
securityManager.sessionManager.sessionIdCookie = $cookie

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager
</code></pre>
","<java><tomcat><cookies><shiro>","0",""
"40644145","Apache Zeppelin AD/LDAP Realm","<p>We have successfully got our shiro.ini ""activeDirectoryRealm"" authentication working with our companies Active Directory, but for some reason we cannot get our principal's roles to populate properly once the authentication mechanism is completed.</p>

<p>Here is an example of our shiro.ini file:</p>

<pre><code>[main]
activeDirectoryRealm = org.apache.zeppelin.server.ActiveDirectoryGroupRealm
activeDirectoryRealm.systemUsername = CN=user,OU=FOO,DC=FOOINC,DC=COM
activeDirectoryRealm.systemPassword = FOOPASS
activeDirectoryRealm.searchBase = DC=FOOINC,DC=COM
activeDirectoryRealm.url = ldap://ldaps.fooinc.com
activeDirectoryRealm.groupRolesMap = ""CN=Foo Users"":""foo""
activeDirectoryRealm.authorizationCachingEnabled = true

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.globalSessionTimeout = 600000 
shiro.loginUrl = /api/login 
securityManager.realms = $activeDirectoryRealm 

[roles]
foo = *

[urls]
/api/version = authc
/** = authc
</code></pre>

<p>Now the dilemma is once we successfully log into Zeppelin I get the following log entry:</p>

<pre><code>LoginRestApi.java[postLogin]:111) - {""status"":""OK"",""message"":"""",""body"":{""principal"":""fooinc\\user"",""ticket"":""24e28a47-d852-460e-9690-6196e094469f"",""roles"":""[]""}}
</code></pre>

<p>Also what I am confused on is why is the ""DefaultLdapContextFactory.java"" under the 'realm/ldap' being called to initialize LDAP instead of ""ActiveDirectoryRealm.java"" under the 'realm/activedirectory'?</p>

<p>Please let me know if you need any further information to help with this issue.</p>
","<java><shiro><apache-zeppelin>","1",""
"29395473","Can't invoke EJB/CDI bean","<p>I don't know my application with websocket (Tyrus 1.1) can't invoke any CDI or EJB bean. I'm running on Glassfish 4.1 with Server-Sent Event, Websocket 1.1, etc</p>

<p>When I called to JSF managed bean (CDI) from my websocket app, it showed ""Error: WELD-001303: No active contexts for scope type org.omnifaces.cdi.ViewScoped"".</p>

<p>If I called to EJB stateless bean from my websocket app, it showed messages as follows:</p>

<pre><code>Warning:   A system exception occurred during an invocation on EJB ChatSessionBean, method: public com.mnik.chat.entity.ChatInfo com.mnik.chat.ejb.ChatSessionBean.findRoomId(java.lang.String)
Warning:   javax.ejb.EJBException
    at com.sun.ejb.containers.EJBContainerTransactionManager.processSystemException(EJBContainerTransactionManager.java:750)
    at com.sun.ejb.containers.EJBContainerTransactionManager.checkExceptionNoTx(EJBContainerTransactionManager.java:640)
    at com.sun.ejb.containers.EJBContainerTransactionManager.postInvokeTx(EJBContainerTransactionManager.java:482)
    at com.sun.ejb.containers.BaseContainer.postInvokeTx(BaseContainer.java:4566)
    at com.sun.ejb.containers.BaseContainer.postInvoke(BaseContainer.java:2074)
    at com.sun.ejb.containers.BaseContainer.postInvoke(BaseContainer.java:2044)
    at com.sun.ejb.containers.EJBLocalObjectInvocationHandler.invoke(EJBLocalObjectInvocationHandler.java:220)
    at com.sun.ejb.containers.EJBLocalObjectInvocationHandlerDelegate.invoke(EJBLocalObjectInvocationHandlerDelegate.java:88)
    at com.sun.proxy.$Proxy427.findRoomId(Unknown Source)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.jboss.weld.util.reflection.Reflections.invokeAndUnwrap(Reflections.java:414)
    at org.jboss.weld.bean.proxy.EnterpriseBeanProxyMethodHandler.invoke(EnterpriseBeanProxyMethodHandler.java:127)
    at org.jboss.weld.bean.proxy.EnterpriseTargetBeanInstance.invoke(EnterpriseTargetBeanInstance.java:56)
    at org.jboss.weld.bean.proxy.InjectionPointPropagatingEnterpriseTargetBeanInstance.invoke(InjectionPointPropagatingEnterpriseTargetBeanInstance.java:65)
    at org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:100)
    at com.mnik.chat.ejb.LocalChatSessionBean$59891376$Proxy$_$$_Weld$EnterpriseProxy$.findRoomId(Unknown Source)
    at com.mnik.chat.server.ChatServer.startChatChannel(ChatServer.java:103) ...

Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
    at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
    at org.apache.shiro.subject.Subject$Builder.&lt;init&gt;(Subject.java:627)
    at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
    at com.mnik.intercept.ShiroSecurityInterceptor.interceptShiroSecurity(ShiroSecurityInterceptor.java:37)
    at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at com.sun.ejb.containers.interceptors.AroundInvokeInterceptor.intercept(InterceptorManager.java:883)
    at com.sun.ejb.containers.interceptors.AroundInvokeChainImpl.invokeNext(InterceptorManager.java:822)
    at com.sun.ejb.EjbInvocation.proceed(EjbInvocation.java:608)
    at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:46)
    at org.jboss.weld.ejb.SessionBeanInterceptor.aroundInvoke(SessionBeanInterceptor.java:52)
    at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at com.sun.ejb.containers.interceptors.AroundInvokeInterceptor.intercept(InterceptorManager.java:883)
    at com.sun.ejb.containers.interceptors.AroundInvokeChainImpl.invokeNext(InterceptorManager.java:822)
    at com.sun.ejb.EjbInvocation.proceed(EjbInvocation.java:608)
    at com.sun.ejb.containers.interceptors.SystemInterceptorProxy.doCall(SystemInterceptorProxy.java:163)
    at com.sun.ejb.containers.interceptors.SystemInterceptorProxy.aroundInvoke(SystemInterceptorProxy.java:140)
    at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at com.sun.ejb.containers.interceptors.AroundInvokeInterceptor.intercept(InterceptorManager.java:883)
    at com.sun.ejb.containers.interceptors.AroundInvokeChainImpl.invokeNext(InterceptorManager.java:822)
    at com.sun.ejb.containers.interceptors.InterceptorManager.intercept(InterceptorManager.java:369)
    at com.sun.ejb.containers.BaseContainer.__intercept(BaseContainer.java:4758)
    at com.sun.ejb.containers.BaseContainer.intercept(BaseContainer.java:4746)
    at com.sun.ejb.containers.EJBLocalObjectInvocationHandler.invoke(EJBLocalObjectInvocationHandler.java:212)
    ... 49 more
</code></pre>

<p>If you have any suggestion, please share us. Thank you.</p>

<p>Noted: these are my ChatServer (websocket) class:</p>

<p>...</p>

<pre><code>import javax.websocket.OnError;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.PathParam;
import javax.websocket.server.ServerEndpoint;   
import javax.websocket.server.ServerEndpointConfig;
@ServerEndpoint(value = ""/chat-server/{roomNumbers}"",
    subprotocols = {""chat""},
    decoders = {ChatDecoder.class},
    encoders = {ChatEncoder.class},
    configurator = ChatServerHttpSSConfig.class)

public class ChatServer {

public ChatServer() {
    this.dateFormat = new SimpleDateFormat(""HH:mm:ss"");

}

private final static String USERNAME_KEY = ""USERNAME"";
private final static String USERNAMES = ""USERNAMES"";
private final static String INCREASED = ""INCREASED"";
private final SimpleDateFormat dateFormat;
private final static String ASSOCIATED_HTTPSESSION = ""WEBSOCKET_HTTP_SESSION"";
private final static String ROOMNUMBERS = ""ROOMNUMBERS"";
private final static String USERTYPE = ""USERTYPE"";
private final static String AGENT = ""AGENT"";
private final static String CLIENT = ""CLIENT"";
private HttpSession httpSession;
private Session session;

@Inject
private LocalChatSessionBean localChatSS;

@Inject
private SSEAnnounce sseAnnounce;
@Inject
private ProductMsgStates productMsgStates;

@OnOpen
public void startChatChannel(@PathParam(""roomNumbers"") final String roomNumbers, final Session session, EndpointConfig epc) {
    //for forward-backward html page. 
    ServerEndpointConfig endpointConfig = (ServerEndpointConfig) epc;
    ChatServerHttpSSConfig cshSSC = (ChatServerHttpSSConfig) endpointConfig.getConfigurator();

    //to associate with httpSession
    this.httpSession = (HttpSession) epc.getUserProperties().get(ChatServerHttpSSConfig.CHAT_HTTP_SESSION);
    this.session = session;
    this.session.getUserProperties().put(ASSOCIATED_HTTPSESSION, this.httpSession);

    //normal operation
    this.session.getUserProperties().put(ROOMNUMBERS, roomNumbers);
    System.out.println(""Roomnumber at "" + this.getClass() + "", ID: "" + roomNumbers);

    //when calling to EJB or JSF managed bean, it showed error. In this example code, it calls EJB.
    ChatInfo chatInfo = localChatSS.findRoomId(roomNumbers);
    String productname = chatInfo.getProductname();

    SessionInfo ssInfo = new SessionInfo();
    ssInfo.setSessionId(this.session.getId());
    ssInfo.setChatInfo(chatInfo);
    chatInfo.getSessionsIds().add(ssInfo);
</code></pre>

<p>...</p>
","<java-ee><cdi><jsf-2.2><shiro><omnifaces>","0",""
"29394821","Whitelist user IPs in Shiro","<p>I would like to enable Facebook to crawl my website, however it needs user authentication. Facebook says one way to get around this is to whitelist their ips. I am using Apache Shiro and I know that you can get client's ip by calling getHost from BasicHttpAuthenticationFilter, however I do not know how to let certain ip addresses past the authentication.</p>
","<apache><facebook-graph-api><authentication><shiro>","0",""
"31702084","How to update principal of an authenticated subject in Shiro","<p>I use Shiro 1.2.3 in a JSF2 project. I couldn't find a way to update the principal of an authenticated subject without a logout. I need this when a logged-in user wants to update his/her profile info. I store a <code>userBean</code> as principal and it should be updated along with the profile info. Doing a programmatically login can be a solution but this time password of the user is needed to create a token.</p>
","<security><authentication><jsf-2><shiro>","1",""
"16944857","How to get the HTTP status from the response returned by shiro authentication","<p>Now I am using Shiro integrated with Spring to protect my project. Mainly filter the request according to the roles. Now I meet a problem. For example, after I logged in some time, the session is out and at this time when I click some buttons which send request to the backend, the request is definitely intercepted by shiro due to my session out. That's where the problem 
exists. Even though Shiro gives a choice you can config some thing like</p>

<pre><code>    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp""/&gt;
</code></pre>

<p>to assign the url if the request is unauthorized. I think reponse shiro returned should include the status.Unauthorized or 401 error. What I want to do is dealing with this error in each ajax request. But I don't know check the status in the callback method of ajax. Does anyone can give some advice? Thanks</p>
","<jquery><authentication><httpresponse><shiro>","0",""
"15259555","Dynamic configuration in a java/camel/spring/jpa application","<p>I have written an application using java, camel, spring, shiro, c3p0 and jpa.
This application needs to connect to some web services and some db and it has now a static configuration using classic spring propertyplaceholders and .prop property files.
I inject properties in java classes using @Value annotations and I define datasources using spring with ${} placeholders.
In the configuration there are url,username,password for web services and database,url,username,password for datasource.</p>

<p>Now I need to do a dynamic/multi tenant configuration. I mean that each ""customer"" can have his set of passwords and that these login/passwords can change over time.
Using shiro I can add to the Subject some data, so I can add current properties to it and get them where I need.
But how can I continue to use @value annotations?
And, most important question, how can I change datasources parameters at runtime?
I see in c3p0 documentation that using getConnection(username,password) with a new pair of username and password creates a new pool and close the old. But I do not use getConnection because only the EntityManager uses datasource.</p>

<p>Please help me!
Thanks,
Mario</p>

<p>After a lot of searching I think I can do in this way:</p>

<ul>
<li>for properties use DynamicCombinedConfiguration from commons configuration, but I do not know how to tell it to read the tenant id from Shiro Subject</li>
<li>for JPA use AbstractDataSource from spring, but again I do not know if I can read the tenant id from Shiro Subject</li>
</ul>

<p>Can you tell me if I am pointing in the right direction?</p>

<p>Thanks again,
Mario</p>
","<java><spring><jpa><apache-camel><shiro>","2",""
"20653146","How to load Class in an OSGI E4 Environment while using Shiro?","<p>I'm trying to build a Desktop Application using E4 with his OSGi(Equinox) Environment. For my User Security im using Shiro. But i can load class from my OSGi but shiro cant!</p>

<p>In my Bundle i try this :</p>

<p><strong>InitActivator.java :</strong></p>

<pre><code>public class InitActivator implements BundleActivator {
private static BundleContext context;

static BundleContext getContext() {
    return context;
}

@Override
public void start(BundleContext context) throws Exception {

    //1. OSGi loadClass function
    System.err.println(context.getBundle().loadClass(""com.firm.demo.MyCustomClass"")
                    .getName());
    //2. Using Apache Shiro ClassUtils
    System.err.println(""Shiro : "" + ClassUtils.forName(""com.firm.demo.MyCustomClass""));

    }

 }
</code></pre>

<p>The 1. <strong>system.err</strong> return the right class with his qualified name.
The 2. <strong>system.err</strong> return a <em>org.apache.shiro.util.UnknownClassException: Unable to load class named</em></p>

<p>How can i use Shiro into OSGi to find Class with Name?</p>
","<java><osgi><shiro><e4>","1","20654110"
"36965895","custom Shiro realm - who does the actual authentication","<p>when sub classing shiro's <code>AuthorizingRealm</code> (or only <code>AuthenticationRealm</code>) by overriding   </p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
}
</code></pre>

<p>Is it my job to check that the credentials provided in the AuthenticationToken actually match?</p>

<p>Or am I supposed to return the <code>AuthenticationInfo</code> with the <code>principals</code> resolved from the <code>AuthenticationToken</code> and the correct password for the given credentials and shiro will compare them on its own somewhere within the flow of the Subject.login(AuthenticationToken) call?</p>
","<shiro>","0",""
"18333388","shiro authentication against remote server given the logintoken","<p>I have a nexus oss instance running on my laptop. What I want to do is , I will send a userlogintoken in a request sent to this nexus oss and get the userlogintoken from the nexus oss plugin and then authenticate it against teamforge(my application name) which runs in a different box.</p>

<p>In nexus oss they use shiro . So I too will use shiro in my nexus plugin that will do authentication against teamforge . I don't know where to start . Can I have some examples that can run standalone , which can do the task as mentioned above , so that I can start moving from there. </p>

<p>so requirement is basically that I need to give the server url and the userlogintoken to shiro  and  have to authenticate against the server url provided using that logintoken provided.</p>

<p>I refered a number of places searching for this kind of shiro example as I am extremely new to shiro , but I did not find examples that can do authentication given a remote server url (in my case the teamforge url).there are examples for authentication from usernames , passwords stored in ini files , or in database , but did not find examples for my use case .</p>

<p>Can somebody please guide me ? </p>
","<nexus><shiro>","0",""
"12689412","Grails - Invoking Shiro login action in service","<p>I have rather unusual problem - I need to make mobile device login to the database system on Grails. The mobile device is sending XML files and they are used as data transfer between device and database application. First thing I must do is authotication on database based on sended XML file. As I coosed the Shiro as security framework, now I must make signing in from XML reading service. Couls some one help me on this?</p>

<p>Here is my try on making it work. 
    import shiro.ShiroRole
import shiro.ShiroUser</p>

<pre><code>class LoginService {

 def shiroSecurityService

 def AuthController

 def params

 def confirmation() {

    def path = System.properties['base.dir']    

 def file = new File (path+""/web-app/xml/ConfirmationRequest.xml"") 

 def records = new XmlSlurper().parse(file)

   if(records.user.username=='klemens'&amp;&amp;records.user.password=='kot12345')
    {
        params.username='klemens'
        params.password='kot12345'
        AuthController.signIn(params)
    }

  }
}
</code></pre>

<p>Ofcourse, it doesn't make, it hangs on this error:</p>

<pre><code>ERROR context.GrailsContextLoader  - Error executing bootstraps: Cannot get property 'params' on null object
Message: Cannot get property 'params' on null object
</code></pre>
","<xml><grails><service><action><shiro>","0",""
"19444891","which is better assign multiple permissions or multiple roles to user in shiro?","<p>I am have web app there are 4 roles and there respective default-page</p>

<pre><code>1.admin // have access to all page
2.developer // have access to personal page
3.editor // have access to personal page
4.deo // have access to personal page
</code></pre>

<p>when user login as admin he can add new users as well as update existing user details.
when adding new users i want to give multiple roles to users and select there default page (so that when user login he is redirected to default page which is given by admin)</p>

<p>here my database tables </p>

<pre><code>table users
username | password | defaultpage

table user_roles
username | role_name

table role_permissions
role_name | role_perm
</code></pre>

<p>how to do it by giving multiple roles or multiple permissions to user?</p>
","<java><shiro>","1","19445608"
"16668023","JSF Servlet Pattern / weird requests","<p>Currently i want to refactor my project and remove the <code>/faces/</code> from the urls. Reason is simple, that i want to avoid, that users can ""remove"" the faces part and see the source of the underlaying xhtml file.</p>

<p>I'm using Shiro for authentication. I'll first describe the prior situation (that worked) and now the new one, that's causing troubles.</p>

<p><strong>Prior Situation:</strong></p>

<p>web.xml:</p>

<pre><code>&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>shiro.ini</p>

<pre><code>[urls]
/faces/index.xhtml = authc
/faces/pages/** = authc
/faces/templates/** = authc
/faces/resources/** = authc
</code></pre>

<p><strong>Current Situation:</strong></p>

<p>web.xml:</p>

<pre><code>&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>shiro.ini</p>

<pre><code>[urls]
/index.xhtml = authc
/pages/** = authc
/templates/** = authc
/resources/** = authc
</code></pre>

<p>For people that might have still ""faces"" bookmarks, i added a filter, and doing this:</p>

<pre><code>HttpServletRequest srequest = (HttpServletRequest) request;
HttpServletResponse sresponse = (HttpServletResponse) response;

String url = srequest.getRequestURI().trim();
System.out.println(""Filtering url: "" + url);

if (url.contains(""/faces/"")){
        url = url.replace(""/faces/"", ""/"");

        System.out.println(""Redirecting to: "" + url);
        sresponse.setStatus(HttpResponseCodes.SC_MOVED_PERMANENTLY);
        sresponse.sendRedirect(url);
    }else{
        //no filtering required, proceed with chain.
        chain.doFilter(request, response);
    }
</code></pre>

<p>Now, when i cleared the cache of the browser, and call <code>http://localhost/project/login.xhtml</code> i receive a huge amount of attempts to find xhtml files inside the various resource folders:</p>

<p>12:27:46,735 INFO  [stdout] (http--0.0.0.0-8090-6) Filtering url: /project/resources/css/login.xhtml</p>

<p>12:27:46,737 INFO  [stdout] (http--0.0.0.0-8090-6) Filtering url: /project/resources/css/login.xhtml</p>

<p>12:27:46,836 INFO  [stdout] (http--0.0.0.0-8090-6) Filtering url: /project/resources/js/login.xhtml</p>

<p>12:27:46,837 INFO  [stdout] (http--0.0.0.0-8090-1) Filtering url: /project/resources/js/login.xhtml</p>

<p>...</p>

<p>which is obviously wrong. Switching back to the <em>prior</em> layout, but keeping the redirect filter does <strong>not</strong> cause any invalid requests. </p>
","<jsf><servlet-filters><shiro>","1","16668257"
"27541681","shiro intercept all js,picture ,css and can't access to the method","<p>Shiro intercept all js,picture ,css and can't access to the method</p>

<p>This is the web.xml</p>

<pre><code>&lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;listener&gt;
    &lt;listener-class&gt;
        org.springframework.web.context.ContextLoaderListener
    &lt;/listener-class&gt;
&lt;/listener&gt;


&lt;!-- 前端控制器的配置 --&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;spring&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;

    &lt;!--指定spring配置文件的位置 --&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;!-- 所有以.html和.json的请求都由dispatcherServlet来处理的配置 --&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;spring&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;


&lt;!--?Shiro?filter 需放在所有filter之前 --&gt;
&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;
        org.springframework.web.filter.DelegatingFilterProxy
    &lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;encoding&lt;/param-name&gt;
        &lt;param-value&gt;utf-8&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ftlFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.cms.filter.FtlFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ftlFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;*.ftl&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;manage&lt;/filter-name&gt;
    &lt;filter-class&gt;com.cms.filter.ManageFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;manage&lt;/filter-name&gt;
    &lt;url-pattern&gt;/manage/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;




&lt;!-- 让web应用程序启动那个时自动添加属性文件 --&gt;
&lt;context-param&gt;
    &lt;param-name&gt;log4jConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;classpath:log4j.properties&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;!-- 以Listener方式启动LOG4j --&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.util.Log4jConfigListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;!-- 以Listener方式启动spring --&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.util.IntrospectorCleanupListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.util.WebAppRootListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;session-config&gt;
    &lt;session-timeout&gt;20&lt;/session-timeout&gt;
&lt;/session-config&gt;

&lt;error-page&gt;
    &lt;error-code&gt;404&lt;/error-code&gt;
    &lt;location&gt;/404.htm&lt;/location&gt;
&lt;/error-page&gt;

&lt;error-page&gt;
    &lt;error-code&gt;500&lt;/error-code&gt;
    &lt;location&gt;/500.htm&lt;/location&gt;
&lt;/error-page&gt;
</code></pre>

<p>this is the applicationContext.xml</p>

<pre><code>&lt;!-- 自动扫描的包名 --&gt;
&lt;context:component-scan base-package=""com.cms""&gt;&lt;/context:component-scan&gt;

&lt;mvc:annotation-driven /&gt;

&lt;cache:annotation-driven key-generator=""keyGeneratorService""/&gt;

&lt;mvc:resources mapping=""/static/**"" location=""/WEB-INF/static/""
    cache-period=""31556926"" /&gt;
&lt;mvc:resources mapping=""/upload/**"" location=""/upload/""
    cache-period=""31556926"" /&gt;


&lt;mvc:interceptors&gt;
    &lt;mvc:interceptor&gt;
        &lt;mvc:mapping path=""/**"" /&gt;
        &lt;bean class=""com.cms.filter.GlobalInterceptor""&gt;&lt;/bean&gt;
    &lt;/mvc:interceptor&gt;
&lt;/mvc:interceptors&gt;

&lt;!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value --&gt;
&lt;bean id=""cacheManager"" class=""org.springframework.cache.support.SimpleCacheManager""&gt;
    &lt;property name=""caches""&gt;
        &lt;set&gt;
            &lt;bean
                class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean""
                p:name=""default"" /&gt;
            &lt;bean
                class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean""
                p:name=""config"" /&gt;
            &lt;bean
                class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean""
                p:name=""folder"" /&gt;
            &lt;bean
                class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean""
                p:name=""article"" /&gt;
            &lt;bean
                class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean""
                p:name=""media"" /&gt;
        &lt;/set&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- 在XML配置文件中加入外部属性文件，当然也可以指定外部文件的编码 --&gt;
&lt;bean id=""propertyConfigurer"" class=""com.cms.util.PropertyUtils""&gt;
    &lt;property name=""locations""&gt;
        &lt;list&gt;
            &lt;value&gt;classpath:shishuocms.properties&lt;/value&gt; &lt;!-- 指定外部文件的编码 --&gt;
        &lt;/list&gt;
    &lt;/property&gt;
&lt;/bean&gt;


&lt;!-- FreeMarker的配置 --&gt;
&lt;bean id=""freeMarkerConfigurer""
    class=""org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer""&gt;
    &lt;property name=""templateLoaderPaths"" value=""/WEB-INF/static/"" /&gt;
    &lt;property name=""defaultEncoding"" value=""UTF-8"" /&gt;
    &lt;property name=""freemarkerSettings""&gt;
        &lt;props&gt;
            &lt;prop key=""template_update_delay""&gt;10&lt;/prop&gt;
            &lt;prop key=""defaultEncoding""&gt;UTF-8&lt;/prop&gt;
            &lt;prop key=""url_escaping_charset""&gt;UTF-8&lt;/prop&gt;
            &lt;prop key=""locale""&gt;zh_CN&lt;/prop&gt;
            &lt;prop key=""boolean_format""&gt;true,false&lt;/prop&gt;
            &lt;prop key=""time_format""&gt;HH:mm:ss&lt;/prop&gt;
            &lt;prop key=""datetime_format""&gt;yyyy-MM-dd HH:mm:ss&lt;/prop&gt;
            &lt;prop key=""date_format""&gt;yyyy-MM-dd&lt;/prop&gt;
            &lt;prop key=""number_format""&gt;#.##&lt;/prop&gt;
            &lt;prop key=""whitespace_stripping""&gt;true&lt;/prop&gt;
        &lt;/props&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- 配置 FreeMarker视图解析器 --&gt;
&lt;bean id=""viewResolver""
    class=""org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver""&gt;
    &lt;property name=""viewClass""
        value=""org.springframework.web.servlet.view.freemarker.FreeMarkerView""&gt;&lt;/property&gt;
    &lt;property name=""cache"" value=""false"" /&gt;
    &lt;!-- &lt;property name=""prefix"" value="""" /&gt; --&gt;
    &lt;property name=""suffix"" value="".ftl"" /&gt;&lt;!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 --&gt;
    &lt;property name=""contentType"" value=""text/html;charset=utf-8"" /&gt;
    &lt;property name=""exposeRequestAttributes"" value=""true"" /&gt;
    &lt;property name=""exposeSessionAttributes"" value=""true"" /&gt;
    &lt;property name=""exposeSpringMacroHelpers"" value=""true"" /&gt;
&lt;/bean&gt;


&lt;bean id=""dataSource"" class=""org.apache.commons.dbcp.BasicDataSource""&gt;
    &lt;property name=""driverClassName"" value=""${jdbc.driverClass}"" /&gt;
    &lt;property name=""url"" value=""${jdbc.url}"" /&gt;
    &lt;property name=""username"" value=""${jdbc.username}"" /&gt;
    &lt;property name=""password"" value=""${jdbc.password}"" /&gt;
&lt;/bean&gt;

&lt;!-- 创建SqlSessionFactory，同时指定数据源 --&gt;
&lt;bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean""&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
&lt;/bean&gt;

&lt;!-- 配置事务管理器 --&gt;
&lt;bean id=""transactionManager""
    class=""org.springframework.jdbc.datasource.DataSourceTransactionManager""&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
&lt;/bean&gt;

&lt;!--创建数据映射器，数据映射器必须为接口 --&gt;
&lt;bean class=""org.mybatis.spring.mapper.MapperScannerConfigurer""&gt;
    &lt;property name=""annotationClass"" value=""org.springframework.stereotype.Repository"" /&gt;
    &lt;property name=""basePackage"" value=""com.cms.dao"" /&gt;
&lt;/bean&gt;

&lt;!-- shiro --&gt;
&lt;bean id=""securityManager""
    class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""shiroDbRealm"" /&gt;
&lt;/bean&gt;

&lt;!-- 項目自定义的Realm --&gt;
&lt;bean id=""shiroDbRealm"" class=""com.cms.realm.ShiroDbRealm"" &gt;&lt;/bean&gt;

&lt;!-- Shiro Filter --&gt;
&lt;bean id=""shiroFilter""
    class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""/"" /&gt;
    &lt;property name=""successUrl"" value=""index.htm"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/static/manage/500"" /&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
        /login = anon
        /validateCode = anon
        /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

    &lt;!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 --&gt;
&lt;bean
    class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
    depends-on=""lifecycleBeanPostProcessor"" /&gt;
&lt;bean
    class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
&lt;/bean&gt;

    &lt;!-- Shiro生命周期处理器--&gt;  
&lt;bean id=""lifecycleBeanPostProcessor""   
class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;  




&lt;!-- shiro为集成spring --&gt;
&lt;bean class=""org.springframework.web.servlet.handler.SimpleMappingExceptionResolver""&gt;
    &lt;property name=""exceptionMappings""&gt;
        &lt;props&gt;
            &lt;prop key=""org.apache.shiro.authz.UnauthorizedException""&gt;/static/manage/500&lt;/prop&gt;
        &lt;/props&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>My login.ftl submit url is </p>

<pre><code>action=""${BASE_PATH}/admin/login.json""
</code></pre>

<p>The java is</p>

<pre><code>@ResponseBody
@RequestMapping(value = ""/login.json"", method = RequestMethod.POST)
public JsonVo&lt;String&gt; adminLogin{}
</code></pre>
","<spring-mvc><shiro>","0","27542960"
"32796070","Apache Shiro Authorization and Authentication configuration for webapp","<p>having some configuration problem.</p>

<p>I'm trying to integrate Apache Shiro with mongo DB realm.</p>

<p>ini file:</p>

<pre><code>[main]
mongoDBRealm = realm.MongoRealm
securityManager.realms = $mongoDBRealm

# specify login page
shiro.loginUrl = /&lt;ProjFolderNameInEclipse&gt;/SuppliersLogin.html

# name of request parameter with username; if not present filter assumes 'username'
#authc.usernameParam = user

# name of request parameter with password; if not present filter assumes 'password'
#authc.passwordParam = pass

# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
#authc.rememberMeParam = remember


# redirect after successful login
authc.successUrl  = /&lt;ProjFolderNameInEclipse&gt;/pass.html

[urls]
# enable authc filter for all application pages
/&lt;ProjFolderNameInEclipse&gt;/SuppliersLogin.html = authc
</code></pre>

<p>this ini is working with:</p>

<pre><code>public static void main(String[] args) {
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""shiro.ini"");
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
    Subject currentUser = SecurityUtils.getSubject();
    ..
    some logic
    ..
}
</code></pre>

<p>the above code was just to make sure that the realm is working correctly.</p>

<pre><code>web.xml



 &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"" id=""WebApp_ID"" version=""3.1""&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;

    &lt;/listener&gt;    
    &lt;context-param&gt;
        &lt;param-name&gt;shiroConfigLocations&lt;/param-name&gt;
        &lt;param-value&gt;classpath:shiro.ini&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;


    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;   

&lt;/web-app&gt;
</code></pre>

<p>now i have simple login page that located inside the <code>WebContent</code> folder:
with the following form:</p>

<pre><code>&lt;form method=""POST"" action="""" name=""loginform""&gt;
                                &lt;header&gt;
                                    Sign In
                                &lt;/header&gt;

                                &lt;fieldset&gt;

                                    &lt;section&gt;
                                        &lt;label class=""label""&gt;User name&lt;/label&gt;
                                        &lt;label class=""input""&gt; &lt;i class=""icon-append fa fa-user""&gt;&lt;/i&gt;
                                            &lt;input type=""text"" name=""username""&gt;
                                            &lt;b class=""tooltip tooltip-top-right""&gt;&lt;i class=""fa fa-user txt-color-teal""&gt;&lt;/i&gt; Please enter email address/username&lt;/b&gt;&lt;/label&gt;
                                    &lt;/section&gt;

                                    &lt;section&gt;
                                        &lt;label class=""label""&gt;Password&lt;/label&gt;
                                        &lt;label class=""input""&gt; &lt;i class=""icon-append fa fa-lock""&gt;&lt;/i&gt;
                                            &lt;input type=""password"" name=""password""&gt;
                                            &lt;b class=""tooltip tooltip-top-right""&gt;&lt;i class=""fa fa-lock txt-color-teal""&gt;&lt;/i&gt; Enter your password&lt;/b&gt; &lt;/label&gt;
                                        &lt;div class=""note""&gt;
                                            &lt;a href=""forgotpassword.html""&gt;Forgot password?&lt;/a&gt;
                                        &lt;/div&gt;
                                    &lt;/section&gt;

                                    &lt;section&gt;
                                        &lt;label class=""checkbox""&gt;
                                            &lt;input type=""checkbox"" name=""remember"" checked=""""&gt;
                                            &lt;i&gt;&lt;/i&gt;Stay signed in&lt;/label&gt;
                                    &lt;/section&gt;
                                &lt;/fieldset&gt;
                                &lt;footer&gt;
                                    &lt;!-- &lt;button type=""submit"" class=""btn btn-primary"" value=""Sign In""&gt; --&gt;
                                    &lt;button type=""submit"" class=""btn btn-primary"" value=""Login"" name=""submit""&gt;
                                        Sign in
                                    &lt;/button&gt;
                                &lt;/footer&gt;
                            &lt;/form&gt;
</code></pre>

<p>while hitting the submit btn, nothing works beside the page is reloaded again..</p>

<p>anything i did wrong?</p>
","<apache><java-ee><web-applications><login><shiro>","0","32965869"
"7799305","Do JSF apps really need Shiro's Session management support, when there is already such facility provided by JSF?","<p>I am trying to use Shiro for securing my JSF app. After having a brief look at Shiro I am confused whether JSF applications really need the sessions management facility provided by Shiro. Since JSF already creates sessions when responding to sets of requests received, will using Shiro create (<strong>extra!?</strong>) session instances for the authenticated users ?? </p>

<p>I am worried that if I am configuring Shiro for a jsf app then does it create the extra session instances(i am worried since jsf already gives me that &amp; I dont want session instances through shiro)</p>
","<jsf><shiro>","0",""
"26821993","Apache Shiro - password format issue","<p>I try to use PasswordMatcher with DefaultPasswordService with DefaultHashService.</p>

<pre><code>DefaultHashService hashService = new DefaultHashService();
hashService.setHashIterations(10000); 
hashService.setHashAlgorithmName(Sha512Hash.ALGORITHM_NAME);
hashService.setGeneratePublicSalt(true);

DefaultPasswordService passwordService = new DefaultPasswordService();
passwordService.setHashService(hashService);
String encryptedPassword = passwordService.encryptPassword(""password"");
System.out.println(""Result:""+encryptedPassword);
</code></pre>

<p>And here is the result which I must save to database in the column PASSWORD.</p>

<blockquote>
  <p>$shiro1$SHA-512$10000$T5nkQEA3qjMLPuB/x+WN4Q==$qWViYjBljsMwH7FSvhecKlxQqXY11lv8eS4guxD9t8D4HTeKclN/muyTnhzYZ+YvI1YkEg6L7T2kM3qykUG0XQ==</p>
</blockquote>

<p>Everything is working. However my question is why are iterations number and algorithm name saved together with salt and password? This case we do inform the potential attacker, who dumps our database about such important properties.</p>
","<java><java-ee><hash><shiro>","0","26826497"
"25879927","IllegalMonitorStateException when using Vaadin Shiro and Hazelcast","<p>I am trying to mix two web example applications that use Apache Shiro:</p>

<p><a href=""https://github.com/vaadin-kim/shiro-example"" rel=""nofollow"">https://github.com/vaadin-kim/shiro-example</a></p>

<p><a href=""https://github.com/stormpath/shiro-hazelcast-web-sample"" rel=""nofollow"">https://github.com/stormpath/shiro-hazelcast-web-sample</a></p>

<p>I forked the shiro-example for vaadin and made my changes under the module shiro-login-outside-vaadin-app:</p>

<p><a href=""https://github.com/poseidonjm/shiro-example"" rel=""nofollow"">https://github.com/poseidonjm/shiro-example</a></p>

<pre><code>git clone https://github.com/poseidonjm/shiro-example.git
cd shiro-example
cd shiro-login-outside-vaadin-app
mvn package
</code></pre>

<p>I deploy the .war file to Apache Tomcat 7 and after login I get the next exception:</p>

<pre><code>    javax.servlet.ServletException: com.vaadin.server.ServiceException: java.lang.IllegalMonitorStateException
    com.vaadin.server.VaadinServlet.service(VaadinServlet.java:240)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
    org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
causa raíz
com.vaadin.server.ServiceException: java.lang.IllegalMonitorStateException
    com.vaadin.server.VaadinService.handleExceptionDuringRequest(VaadinService.java:1429)
    com.vaadin.server.VaadinService.handleRequest(VaadinService.java:1383)
    com.vaadin.server.VaadinServlet.service(VaadinServlet.java:238)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
    org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
causa raíz
java.lang.IllegalMonitorStateException
    java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:155)
    java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1260)
    java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:460)
    com.vaadin.server.VaadinService.unlockSession(VaadinService.java:615)
    com.vaadin.server.VaadinService.findOrCreateVaadinSession(VaadinService.java:633)
    com.vaadin.server.VaadinService.findVaadinSession(VaadinService.java:495)
    com.vaadin.server.VaadinService.handleRequest(VaadinService.java:1365)
    com.vaadin.server.VaadinServlet.service(VaadinServlet.java:238)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
    org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
</code></pre>

<p>shiro.ini</p>

<pre><code>[main]
# use native session management so we can configure our own session clustering:
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.sessionDAO = $sessionDAO
# we have configured Hazelcast to enforce a TTL for the activeSessions Map.  No need for Shiro to invalidate!
sessionManager.sessionValidationSchedulerEnabled = false
securityManager.sessionManager = $sessionManager

# configure Hazelcast as our Shiro CacheManager.  Adding session capacity is as easy as adding hazelcast nodes!
cacheManager = com.stormpath.samples.shiro.hazelcast.cache.HazelcastCacheManager
securityManager.cacheManager = $cacheManager

shiro.loginUrl = /login.jsp

[users]
# format: username = password, role1, role2, ..., roleN
demo = demo

[urls]
/login.jsp = authc
/logout = logout
/VAADIN/** = authc
/** = authc
</code></pre>

<p>web.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app id=""vaadin-uitest"" version=""3.0""
    xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""&gt;
    &lt;display-name&gt;assembly&lt;/display-name&gt;
    &lt;context-param&gt;
        &lt;description&gt;
        Vaadin production mode&lt;/description&gt;
        &lt;param-name&gt;productionMode&lt;/param-name&gt;
        &lt;param-value&gt;false&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.IniShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;!-- Make sure any request you want accessible to Shiro is filtered. /* 
        catches all --&gt;
    &lt;!-- requests. Usually this filter mapping is defined first (before all 
        others) to --&gt;
    &lt;!-- ensure that Shiro works in subsequent filters in the filter chain: --&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>Any help is welcome.
Thanks.</p>
","<authentication><vaadin><shiro><vaadin7><hazelcast>","1",""
"12881932","Shiro permissions in Grails Bootstrap","<p>I create some permissions for some controllers and actions in grails bootstrap file for registered users, but every time when i create a new controller or a new action I must delete the table to take changes. but what i can do when I deploy an app in prod and after some time I add some actions and permissions for that action in the app? how I can give permissions to the new actions for registered users without deleting any table or db? manualy add them or what? in mysql a can't manually edit permissions table. </p>
","<grails><shiro><bootstrapping>","2",""
"27704363","Combine Shiro filters with Java Annotations in Spring","<p>I am configuring Shiro in Java. I want to secure REST API with it. I use token based authentication. I configure ShiroFilterFactoryBean as below:</p>

<pre><code>@Bean
public ShiroFilterFactoryBean shiroFilterBean() {
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();

    HashMap&lt;String, String&gt; definitionMap = Maps.newHashMap();
    definitionMap.put(""/api/auth"", ""anon"");
    definitionMap.put(""/api/**"", ""noSessionCreation, authc"");
    shiroFilter.setFilterChainDefinitionMap(definitionMap);

    HashMap&lt;String, Filter&gt; filters = Maps.newHashMap();
    filters.put(""authc"", new RestTokenAuthenticatingFilter());
    shiroFilter.setFilters(filters);

    shiroFilter.setSecurityManager(securityManager());
    return shiroFilter;
}
</code></pre>

<p>Then I have RestController as follow:</p>

<pre><code>@RestController
@RequestMapping(""/api/auth"")
public class AuthController {

    @Inject
    RestService restService;

    @RequestMapping(method = RequestMethod.POST)
    public ResponseEntity login(@RequestBody LoginDto loginDto) {
        String restToken = // ... create token
        return new ResponseEntity&lt;&gt;(restToken, HttpStatus.OK);
    }    

    @RequestMapping(""/secure"")
    @RequiresAuthentication
    public String secure() {
        Subject subject = SecurityUtils.getSubject();
        return ""Should be 'true' == "" + subject.isAuthenticated() + "" ** "" + subject.getPrincipal();
    }

    @RequestMapping(""/insecure"")
    public String insecure() {
        return ""You dont have to be authenticated"";
    }
}
</code></pre>

<p>How can I force this line</p>

<pre><code>filters.put(""authc"", new RestTokenAuthenticatingFilter());
</code></pre>

<p>to be applied only to methods annotated with @RequiresAuthentication (and others) from Shiro?</p>

<p>Why I want to do that? For example I want to have something like that</p>

<ul>
<li><code>GET /api/cars</code> to be allowed for all users</li>
<li><code>POST /api/cars</code> to be allowed only for authenticated users</li>
</ul>

<p>I am not able to achieve that when I define filters in ShiroFilterFactoryBean.</p>
","<java><spring><spring-mvc><shiro>","1",""
"43302457","Authenticate Rest API with Apache Shiro","<p>I have a Rest API backend (Rest based) which I want to secure now. I have looked into both Spring Security (for which I know implementation) and Apache Shiro. After learning that how shiro has a easy to use API, I want to implement it. However, there are no clear authorization tutorials to do this as I wanted to implement not just Basic Auth but Digest Authentication to have a more secured api. I have read that shiro has support for it. Also, I want to store my username and passwords in a databse and not in the ini file of shiro as shown in examples. Can anyone help me with this implementation? I have used Spring Rest for my apis.</p>

<p>Any suitable tutorial will help.</p>
","<spring><rest><basic-authentication><shiro><digest-authentication>","0",""
"20812873","Shiro and SessionContext CDI => ""anonymous""","<p>I want to get my current loggin User in my EJB Container.
I built an CDI - EJB Webapplication with Shiro for Security.</p>

<p>My problem is now, in my EJB Class the sessionContext is everytime ""anonymous""</p>

<pre><code>@Resource
private SessionContext sessionContext;

String userEmail = sessionContext.getCallerPrincipal().getName();
</code></pre>

<p>I don´t know, set Shiro this automaticly or should I set sessionContext?
Can anybody help me?</p>

<p>The problem is the connection from CDI ---> EJB or why is it ""anonymous""</p>
","<resources><shiro><sessioncontext>","0",""
"11743601","Full shiro configuration in tapestry 5.3","<p>I have an application in Tapestry 5.3.4 that's using the tapestry-security 0.4.6 plugin along with shiro 1.2.0 for authentication, and it works well. However, I would like to use EHCache to cache session data, and eventually to cluster a couple of instances on top of the cache. This is all possible with shiro, however it requires configuring via the shiro.ini, which is no supported in Tapestry. Is there a way to configure shiro in this manner from within the app, or to force loading the ini file?</p>
","<tapestry><shiro><tynamo>","1","11800691"
"17295713","Apache shiro how to filter a api according to its method?","<p>I am using Apache shiro in my project. It provides some default filters to filter url. Now I come across a problem about filtering url. If has API like '/rest/user/info', if its method is 
GET, this api can be visited by anyone, but if it is POST it just can be visited by admin. I found the dafault filter 'rest' but it helps nothing. Does anyone can give some advice? Thanks.  </p>
","<apache><filter><shiro>","0",""
"18917360","How to stay logged in permanently using apache shiro","<p>A need to know how to stay logged in permanently in my Java EE application when the user logged in at first time using apache shiro</p>

<p>Any Idea?</p>
","<java><jsf><login><shiro>","1","18918486"
"11579365","PHP Cryptography code explanation","<pre><code>  public static function getEncryptedData($value){
       if(!$value){return false;}
       $text = $value;
       $iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_ECB);
       $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
       $crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, _PR_ACCOUNT_ACTIVATION_SECURE_KEY_, $text, MCRYPT_MODE_ECB, $iv);
       return trim(base64_encode($crypttext)); //encode for cookie
    }
</code></pre>

<p>I came across the above code in PHP.<br>
I need to understand :<br>
1. What is it doing?<br>
2. How to do the same using Apache Shiro in Java?</p>
","<java><php><apache><cryptography><shiro>","-1",""
"41070550","Shiro matching credentialsMatcher and user password creation not matching","<p>I am using shiro as authentication for my java 1.8 application. My user creation will sha256 and salt.</p>

<p>Shiro will only match passwords when they are exact in the database an entered. For example if the database password was in plaintext and was 'password' and i entered 'password' it would work.</p>

<p>If i entered 'password' when the password is encrypted in the database it does not match and will fail.</p>

<p>How do i get shiro to create a sha256 and salted password from what was entered so the passwords will match?</p>

<p>My user creation code</p>

<pre><code>EntityManagerFactory factory = 
                    Persistence.createEntityManagerFactory(""e"");

            EntityManager em = factory.createEntityManager();
            em.getTransaction().begin();

            com.e.dto.User user = new com.e.dto.User();

            DefaultPasswordService a = new DefaultPasswordService();
            password = a.encryptPassword(password);

            user.setUsername(username);
            user.setPassword(password);

            em.persist(user);

        em.getTransaction().commit();
</code></pre>

<p>shiro.ini</p>

<pre><code>jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password from user where username = ?
jdbcRealm.userRolesQuery = select role from userroles where userID = (select id FROM user WHERE username = ?)

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = password
ds.databaseName = myDatabase
jdbcRealm.dataSource= $ds

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = true
credentialsMatcher.hashIterations = 10000
credentialsMatcher.hashSalted = true
</code></pre>

<p>New Users password</p>

<pre><code>$shiro1$SHA-256$500000$xRvz5dByhvAtFG7VHlCjHA==$xxakvEZdBF6cI+UmyR1OY098tAlscOKhpwQuT7THijw=
</code></pre>
","<java><security><shiro><sha256>","0",""
"39507787","How to pass multipart file along with file name to post method using Apache httpclient 3.x?","<p>service code:</p>

<pre><code>    @RequestMapping(value=""/uploadFile"", method=RequestMethod.POST, consumes = ""multipart/form-data"")
public String uploadFile(@RequestParam(""file"") MultipartFile file,@RequestParam(""filePath"") String filePath){
//logic here
}
</code></pre>

<p>Part of the client code:</p>

<pre><code>public static synchronized String responseOfPost(String restUrl, FileSystemResource file,String filePath) {
    PostMethod post = new PostMethod(restUrl);
    HttpClient client = new HttpClient();
    post.setParameter(""filePath"", filePath);
    try {
        Part[] parts = {new FilePart(""file"",file.getFile())};
        post.addRequestHeader(""Content-Type"", ""multipart/form-data; boundary=Endedlogging"");
        if (file != null) {
            post.setRequestEntity(new MultipartRequestEntity(parts, post.getParams()));
        }
        client.executeMethod(post);
        String response = post.getResponseBodyAsString();
    } catch (final IOException e) {
        e.printStackTrace();
    } 
    return null;
}
</code></pre>

<p>this is the error I am getting:</p>

<pre><code>org.springframework.web.bind.MissingServletRequestParameterException: Required MultipartFile parameter 'file' is not present
    at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:251)
    at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:96)
    at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:78)
    at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:162)
</code></pre>

<p>How can I pass multipart file(""file"") and filePath(""filePath"") to POST method in client code? <strong>NOT FROM UI</strong></p>
","<java><spring><shiro><apache-commons-httpclient>","-1",""
"33705640","Can not locate resource in root of executable jar","<p>I have a program that is configured to use an Apache Shiro ini file for storing its users and permissions.</p>

<p>The following code works in the IDE</p>

<p><strong>Code</strong></p>

<pre><code>public static String loginModule(String heelName, String heelPass) {

        Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
        SecurityManager securityManager = factory.getInstance();

        SecurityUtils.setSecurityManager(securityManager);

        Subject usr = SecurityUtils.getSubject();
        UsernamePasswordToken token = new UsernamePasswordToken(heelName, heelPass);


        try {
            usr.login(token);
        } catch (AuthenticationException ae) {
            return ae.toString();
        }
</code></pre>

<p>but when compiled with maven javafx plugin, the program is unable to find the shiro.ini file in its classpath.  The following error is produced:</p>

<p><strong>Error</strong></p>

<pre><code>SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further detail
s.
Exception in thread ""JavaFX Application Thread"" org.apache.shiro.config.Configur
ationException: java.io.IOException: Resource [classpath:shiro.ini] could not be
 found.
        at org.apache.shiro.config.Ini.loadFromPath(Ini.java:242)
        at org.apache.shiro.config.Ini.fromResourcePath(Ini.java:225)
        at org.apache.shiro.config.IniSecurityManagerFactory.&lt;init&gt;(IniSecurityM
anagerFactory.java:69)
        at Login.loginModule(Login.java:23)
        at LoginController.attemptToLoginbutton(LoginController.java:178)
        at LoginController$1.handle(LoginController.java:98)
        at LoginController$1.handle(LoginController.java:96)
        at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Comp
ositeEventHandler.java:86)
        at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventH
andlerManager.java:238)
        at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventH
andlerManager.java:191)
        at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(C
ompositeEventDispatcher.java:59)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:58)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
        at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
        at javafx.event.Event.fireEvent(Event.java:198)
        at javafx.scene.Node.fireEvent(Node.java:8411)
        at javafx.scene.control.Button.fire(Button.java:185)
        at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(Bu
ttonBehavior.java:182)
        at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorS
kinBase.java:96)
        at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorS
kinBase.java:89)
        at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.h
andleBubblingEvent(CompositeEventHandler.java:218)
        at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Comp
ositeEventHandler.java:80)
        at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventH
andlerManager.java:238)
        at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventH
andlerManager.java:191)
        at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(C
ompositeEventDispatcher.java:59)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:58)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDis
patcher.java:56)
        at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispat
chChainImpl.java:114)
        at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
        at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
        at javafx.event.Event.fireEvent(Event.java:198)
        at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
        at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
        at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
        at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
        at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotificatio
n.run(GlassViewEventHandler.java:352)
        at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotificatio
n.run(GlassViewEventHandler.java:275)
        at java.security.AccessController.doPrivileged(Native Method)
        at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEve
nt$355(GlassViewEventHandler.java:388)
        at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(Quantum
Toolkit.java:389)
        at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(Glas
sViewEventHandler.java:387)
        at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
        at com.sun.glass.ui.View.notifyMouse(View.java:937)
        at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
        at com.sun.glass.ui.win.WinApplication.lambda$null$149(WinApplication.ja
va:191)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: Resource [classpath:shiro.ini] could not be foun
d.
        at org.apache.shiro.io.ResourceUtils.getInputStreamForPath(ResourceUtils
.java:139)
        at org.apache.shiro.config.Ini.loadFromPath(Ini.java:240)
        ... 61 more
</code></pre>

<p>Since this is a maven project, the ini is located in the /src/main/resources folder when looking at the project source code.</p>

<p>I have verified that the shiro.ini file is in fact present in the root directory of the executable jar. Any suggestions on how to overcome this error??</p>

<p><strong>Potential resources</strong> </p>

<p><a href=""https://shiro.apache.org/static/1.2.1/apidocs/org/apache/shiro/config/IniSecurityManagerFactory.html"" rel=""nofollow"">https://shiro.apache.org/static/1.2.1/apidocs/org/apache/shiro/config/IniSecurityManagerFactory.html</a></p>

<p><a href=""http://shiro.apache.org/configuration.html"" rel=""nofollow"">http://shiro.apache.org/configuration.html</a></p>
","<java><maven><classpath><embedded-resource><shiro>","0",""
"39660413","Apache Shiro LDAP Configuration (2 Step Authentication)","<p>I'm working on a webapplication using the following:</p>

<ul>
<li>Apache Shiro 1.2.4</li>
<li>Tomcat 8</li>
<li>Java 8</li>
</ul>

<p>I'm trying to authenticate users via an LDAP realm.</p>

<p>I tested the login with JXplorer using the following values:</p>

<ul>
<li>BaseND: ou=students,ou=users,o=data</li>
<li>UserDN/BindDN: cn={my distinguished name},ou=students,ou=users,o=data</li>
<li>JXplorer also has a certificate that I imported</li>
</ul>

<p>Now to my problem:</p>

<p>I have to authenticate the users not based on <code>cn</code> but rather on <code>uid</code>.
This wont work however.</p>

<p><strong>Workflow suggested by LDAP-Admin at my company:</strong></p>

<p>I have a system user which (as far as I understood) should connect to the LDAP-Server, searches the user based on the given <code>uid</code> and returns the <code>cn</code> for that user.</p>

<p>In a second step it should then be possible to authenticate the user with his <code>cn</code> just like its done (successfully) in JXplorer.</p>

<hr>

<p>My shiro.ini configuration looks like this for my test LDAP (not the one I'm trying to authenticate against now)</p>

<pre><code>ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = cn={0},ou=People,dc=maxcrc,dc=com
ldapRealm.contextFactory.url = ldap://localhost:389
</code></pre>

<p>The problem I'm facing right now is that I cannot find information about how to configure my shiro.ini file in a way to math the suggested workflow from above.</p>

<p><strong>Question #1</strong></p>

<p>Can I use the standard <code>org.apache.shiro.realm.ldap.JndiLdapRealm</code> (how do I configure it)? Especially for the integration of the certificate I could not find anything appropriate.</p>

<p><strong>Question #2</strong></p>

<p>Do I need to create a custom JndiLdapRealm for this ""2 step authentication"" and how could such a Realm look like?</p>
","<java><ldap><shiro>","1","39702825"
"31365132","Apache Shiro AES encryption differs from expected output","<p>I am using <code>AesCipherService</code> from Apache Shiro.</p>

<p>For some reason, I can't get it to work like <a href=""http://aesencryption.net/"" rel=""nofollow"">http://aesencryption.net/</a>.</p>

<p>My code is basically this:</p>

<pre><code>String encrypt(String input) throws Exception {
    StringBuilder builder = new StringBuilder();

    AesCipherService aesCipher = new AesCipherService();
    byte[] bytes = aesCipher.encrypt(input.getBytes(), ""0123456789abcdef"".getBytes()).getBytes();
    String aesProduct = new String(bytes);
    builder.append(aesProduct);

    byte[]   bytesEncoded = Base64.encodeBase64(builder.toString().getBytes()); 

    return new String(bytesEncoded);
}
</code></pre>

<p>If you encrypt ""Hello"" you will get</p>

<pre><code>Shvvv71GB++/vULvv73vv71/Zu+/vRIc77+977+9Y33bkmrvv70SOWffqXTvv71777+977+9
</code></pre>

<p>When that site outputs</p>

<pre><code>IM/5UIbDXWhuPz2ZFKyScQ==
</code></pre>

<p>What did I do wrong with the code?</p>
","<java><encryption><shiro>","1","31365332"
"25708706","redirect the user to a default ‘after logout’ page on shiro","<p>Iam trying to do the task of redirecting the user to the login page automatically when he leaves the website for 30 min + (shiro consider him loged out ).</p>

<p>according to this page 
<a href=""https://stormpath.com/blog/whats-new-apache-shiro-12/"" rel=""nofollow"">https://stormpath.com/blog/whats-new-apache-shiro-12/</a></p>

<p>i need to use  <strong>logout.redirectUrl</strong> in the ini</p>

<p>i tried but i was not successful on achieving this functionality<br>
here is my ini</p>

<pre><code>[main]

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password from users where user_name = ?
jdbcRealm.userRolesQuery = select role_name from users_roles where user_name = (select user_name FROM users WHERE user_name = ?)

ds = org.postgresql.ds.PGSimpleDataSource
ds.serverName =localhost
ds.user = postgres
ds.password = 123456
ds.databaseName = example
jdbcRealm.dataSource= $ds


authc.loginUrl = /faces/login.xhtml
user.loginUrl = /faces/login.xhtml

logout.redirectUrl = /faces/login.xhtml

multipleroles = com.example.util.MultipleRolesAuthorizationFilter

[urls]
/faces/login.xhtml = authc
/faces/logout = logout
/faces/authorized/** = user, multipleroles[""admin,guest""]
/faces/guest/** = user, multipleroles[""admin,guest""]
/faces/admin/** = user, roles[admin]
</code></pre>
","<java><security><java-ee><shiro>","0","25843821"
"18619062","How to mock Shiro accessControl() method in grails unit test case","<p>I am using shiro security in my grail application.
Grails version : 2.2.1
shiro : 1.2.0</p>

<p>I have a problem in writing grails unit test case for the controller with filter enabled. When the test case run without filters then it is working fine, if it runs withFilters then it is failing for accessControl() method not found in the controller. I dont know how to make Shiro's api to be visible while running the test case.I referred shiro unit test case link <a href=""http://shiro.apache.org/testing.html"" rel=""nofollow"">http://shiro.apache.org/testing.html</a> but I couldn't get any info regarding accessControl().I have given sample code how my classes and test case looks like </p>

<p>MyController.groovy </p>

<pre><code>def create() { 
            // getting request parameters and validation 
            String emailId = params.emailId 
            def ret = myService.createUser(emailId) 

            return ret 
 }
</code></pre>

<p>MyControllerFilters.groovy </p>

<pre><code>def filters = { 
                loginCheck(controller: 'user') { 
                    before = { 
                            //do some business checks 

                            // Access control by convention. 
                            accessControl() // This is a dynamic method injected by ShiroGrailsPlugin to FilterConfig, but this is not visible during the test case. 
                        } 
                } 
</code></pre>

<p>MyControllerTests.groovy </p>

<pre><code>@TestFor(MyController) 
@Mock(MyControllerFilters) 
class MyControllerTests { 

        @Before 
        void setup() { 
            // initializing some variables 
        } 

        void testCreateUserWithFilter() { 

            request.accessAllowed = true 

            withFilters(action:""create"") { 
                    controller.create() 
            } 

            assert response.message == ""success"" 
        } 
    }
</code></pre>
","<unit-testing><grails><shiro>","1",""
"37430932","User roles vs. user permissions using apache shiro","<p>I am trying to model some complex permission management system using apache shiro.</p>

<p>English not being my native tongue I am afraid I might be missing some of the subtleties of terms such as ""Roles"", ""Permissions"", ""Rights"" &amp; ""privileges"".</p>

<p>For example lets say I want to create a system that manages resources such as printers located inside buildings.
A DB holds the information of which printer is located in what building.
Users of that system should be able to reset a printer or print to it.</p>

<p>Its clear to me that some users will be ""Super Admins"" and be able to reset and print to any printer ('printer:*:*')- I guess that we could say that those people have a ""Super Admin Role"".</p>

<p>But what if someone should be allowed to reset the printers in a specific building ('building:A:*') ? Is ""Building Admin"" a (prarametric) role?  or is this just a permission on a specific building? How would you model this using apache Shiro? </p>

<p>n.b.<br>
When tagging this Q I added the user-roles tag and it says:""A user role is a group of users that share the same privileges or permissions on a system. Use this tag for questions about how user roles work in a particular security framework, or questions about the implementation of user roles in your program.""</p>

<p>Would I be correct to assume that based on this definition there is not such role as a ""Building Admin"" because being an Admin of Building A does not give you the same permissions as does being an Admin of building B?
and if so, what would be the correct terminology to describe a ""Building admin""?</p>
","<permissions><shiro><user-roles>","0",""
"25129929","rest, glassfish4 shiro enabled working sample","<p>I am new to javaee development. I am trying to build a javaee application in which rest services residing on Glassfish4 will be invoked by mobile clients. I came across apache shiro framework on the web for authentication and authorization. I would like to secure the services using shiro. 
For the time being I am trying to configure basic authentication with some hard coded users to gain confidence. My final goal is to move the user store to a database.</p>

<p>Following the apache shiro tutorial I configured my web.xml and shiro.ini. </p>

<p>1) But somehow the rest services are still open and I can invoke them without any password. is shiro.ini not getting loaded properly in my application ?</p>

<p>2) In future I will have multiple rest services from multiple applications, so I will need to configure shiro for all of them too ? Is there no way to handle authentication, authorization of multiple webapp using single shiro config ?</p>

<p>3) If you have a similar working sample please point me to that. </p>

<h2>Project location</h2>

<p>URL : <a href=""https://github.com/debashisgho/MyApp/"" rel=""nofollow"">https://github.com/debashisgho/MyApp/</a></p>

<p>I can get the resource data without using any user/pwd   </p>

<pre><code> http://localhost:8080/MyApp/rest/MyResource
</code></pre>

<p>I am sure that I have not configured it properly. Need help to find out what is missing.</p>
","<rest><java-ee><glassfish><shiro>","1",""
"7574390","eclipse shiro ini problem","<p>Honestly, before posting question did googling and 2 days tried to solve problem on my own...</p>

<p>I want to get Apache Shiro working with GAE. Before that, I had success with Spring Security, but here I can't do a simple thing: to get the filter find my shiro.ini !</p>

<p>After introducing ShiroFilter in web.xml, in init-param tag I give a value of classpath:shiro.ini for the param-name called configPath, as standard way.</p>

<p>Next, I put shiro.ini in my src root, won't work, then under /web-inf/shiro.ini, again didn't work...</p>

<p>any help please?</p>
","<eclipse><security><google-app-engine><shiro>","0",""
"34134295","Apache Shiro - custom jdbc Realm - reading roles/permissons","<p>I'm implementing Apache Shiro into my web application and have problems getting started.</p>

<p>I want to load roles and permission from a postgreSQL database and perfoms checks if a user has a role/permisson.</p>

<p>My Role-Right-System consists of the following:</p>

<p>User -> has Roles (multiple possible)</p>

<p>Role -> has Rights (multiple possible)</p>

<p>Roles can be assigned to multiple Users  &amp; Rights can be assigned to multiple roles</p>

<p>a User-Role Assignment is always related to two other conditions:</p>

<ul>
<li>A Organisational Unit (called OE in my case)</li>
<li>A Faculty</li>
</ul>

<p>So basically the User ""Faculty-Admin"" may have the following:</p>

<ul>
<li>Role OE-Admin with all Rights for OE: 3 and Faculty: staff</li>
</ul>

<p>so he can lets say 'manage_Users' of Faculty 'staff' of OE '3' </p>

<p>I know how to implement roles in shiro.ini file but since I have my roles/rights(permissions) inside a database I need them to load from there.</p>

<p>In the quickstart example of Shiro there is the following example:</p>

<pre><code># The 'goodguy' role is allowed to 'drive' (action) the winnebago (type) with
# license plate 'eagle5' (instance specific id)
goodguy = winnebago:drive:eagle5
</code></pre>

<p>If I take this example and apply it to my situation i get the following:</p>

<pre><code># The 'OE-Admin' role is allowed to 'manage_users' of OE '3' (type) with
# faculty 'staff'
OE-Admin = 3:manage_users:staff
</code></pre>

<p>so I have my role definition like this:</p>

<p>Role = OE:Right:Faculty (or change them in order, doenst matter really)</p>

<p>Now the big question is: How can I ""load"" my roles/rights from my database to get even this stated format of a role with its permissions??</p>

<p>So far I have the following inside shiro.ini:</p>

<pre><code>ds = org.postgresql.Driver
ds.serverName = localhost
ds.user = admin
ds.password = admin
ds.databaseName = db_name
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
</code></pre>

<p>I know there has to be an entry like ""jdbcRealm.userRolesQuery = SELECT ....""
but I dont know how load roles the way I stated above.</p>

<p>Is it just an entry to the .ini file that will be equivalent to a static role set like this: goodguy = winnebago:drive:eagle5</p>

<p>or what steps are nessecary to accomplish that?</p>

<p>Any1 got more experiance with Apache Shiro that could possibly help me out?
There are some tutorials out there but I find it very hard to follow them for creating a custom jdbc realm with owm roles &amp; permissions.</p>

<p><strong>EDIT:</strong>
Database Structure:</p>

<p>Users:</p>

<pre><code>id serial NOT NULL,
""user"" character varying(50) NOT NULL,
CONSTRAINT umgmt_users_pkey PRIMARY KEY (id)
</code></pre>

<p>Roles:</p>

<pre><code>id serial NOT NULL,
role character varying(50) NOT NULL,
priv_level integer NOT NULL,
CONSTRAINT umgmt_roles_pkey PRIMARY KEY (id)
</code></pre>

<p>Rights(Permissions):</p>

<pre><code>id serial NOT NULL,
""right"" character varying(50) NOT NULL,
CONSTRAINT umgmt_rights_pkey PRIMARY KEY (id)
</code></pre>

<p>and just in case, this is my table where I store User-Role-OE-Fac Relations</p>

<pre><code>id serial NOT NULL,
user_id integer NOT NULL,
oe_id integer NOT NULL,
fac_id integer NOT NULL,
role_id integer NOT NULL,
assigned_by_priv_level integer NOT NULL,
CONSTRAINT umgmt_user_oe_fac_role_pkey PRIMARY KEY (id),
CONSTRAINT fac_fkey FOREIGN KEY (fac_id)
  REFERENCES umgmt_facultys (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT oe_fkey FOREIGN KEY (oe_id)
  REFERENCES umgmt_oes (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT role_fkey FOREIGN KEY (role_id)
  REFERENCES umgmt_roles (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT user_fkey FOREIGN KEY (user_id)
  REFERENCES umgmt_users (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION
</code></pre>
","<java><postgresql><java-ee><shiro>","0","34141395"
"22619278","Looping through Shiro LDAP Realm on Authenitcation Failure","<p>I'm getting an odd error. If I pass in a valid user/password to my Shiro LDAP all is ok but if the combination is not valid it throws an exception and keeps on looping through the Shiro realm code. In the debugger it just stays in Shiro code except for my one override method:</p>

<pre><code>  public class MyJndiLdapRealm extends JndiLdapRealm {


public MyJndiLdapRealm () {
    super();
}

@Override
protected AuthenticationInfo queryForAuthenticationInfo(AuthenticationToken token,
        LdapContextFactory ldapContextFactory)
throws NamingException {

Object principal = token.getPrincipal();
Object credentials = token.getCredentials();

principal = getLdapPrincipal(token);

LdapContext ctx = null;
try {
     ctx = ldapContextFactory.getLdapContext(principal, credentials);

     //context was opened successfully, which means their credentials were valid.  Return the AuthenticationInfo:
     return createAuthenticationInfo(token, principal, credentials, ctx);
} finally {
    LdapUtils.closeContext(ctx);
}

 }



          &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/ldapLogin""/&gt;
    &lt;property name=""successUrl"" value=""/ldapLogin""/&gt;      
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            [urls]
            /** = ssl[8443],authc, customAuthFilter
            [main]
            /logout = logout
        &lt;/value&gt;
    &lt;/property&gt;   
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
     &lt;property name=""realms""&gt;
        &lt;list&gt;
             &lt;ref bean=""authenticateLdapRealm""/&gt;
             &lt;ref bean=""authenticateDbRolesRealm""/&gt;
             &lt;ref bean=""DbAuthorizingRealm""/&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name=""authenticator.authenticationStrategy""&gt;
        &lt;bean class=""org.apache.shiro.authc.pam.AllSuccessfulStrategy""/&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;bean id=""authenticateLdapRealm"" class=""security.MyJndiLdapRealm""&gt;
    &lt;property name=""contextFactory"" ref=""contextFactory"" /&gt;
    &lt;property name=""userDnTemplate"" value=""cn={0},ou=REMOTE,o=OFF"" /&gt; 
&lt;/bean&gt;

&lt;bean id=""contextFactory"" class=""org.apache.shiro.realm.ldap.JndiLdapContextFactory""&gt;
  &lt;property name=""url"" value=""ldap://172.25.3.91:389""/&gt;
&lt;/bean&gt;

&lt;bean id=""authenticateDbRolesRealm"" class=""security.DbRolesRealm""&gt;
&lt;/bean&gt;

&lt;bean id=""SwiDbAuthorizingRealm"" class=""security.DbAuthorizingRealm""&gt;
&lt;/bean&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>
","<ldap><jndi><shiro>","0",""
"26555475","Bypass apache shiro authentication","<p>How can I bypass Apache Shiro authentication and just use the authorization scheme. The reason I would like to achieve this is because I am using an in house SSO Authentication written for our cloud application and I would not like to save user information on our application server apart from basic user id and roles.</p>
","<shiro>","0","26565310"
"23390793","Use Apache Shiro to restrict operation based on owner or admin role","<p>I'm refactoring an webapp's security module with Shiro and having trouble in logical operation on multi auth filters. </p>

<p>For example an Article entity. Everyone can post new Article, but only the Article owner/creator OR system admin role can modify existing Article.</p>

<p>To achieve this, I create a <code>OwnerAuthzFilter</code> (extends <code>org.apache.shiro.web.filter.authz.AuthorizationFilter</code>) to check if current user is the creator of an entity. </p>

<p>I'd like to configure the restrictions on <code>[urls]</code> section of <code>shiro.ini</code> like </p>

<pre><code>[main]
ownerOf = my.OwnerAuthzFilter
[urls]
#ownerOf checks if a user is owner of entity ""article"" with request parameter ""id""
/article/update*=authc, ownerOf[""article"",""id""] OR roles[""admin""] 
</code></pre>

<p>It seems Shiro does not provide logical expression for url filter. Its <a href=""http://shiro.apache.org/static/1.2.1/apidocs/org/apache/shiro/authz/annotation/Logical.html"" rel=""nofollow"">Logical</a> only works for annotation, and only works on annotation and for same type filters (like RequiresRoles, RequiresPermissions). </p>

<p>In my case, I need authorize the operation by checking the logical OR result of custom <code>OwnerAuthzFilter</code> and built-in <code>RolesAuthorizationFilter</code>. </p>

<p>Any body has hints how to implement this?</p>
","<java><shiro>","2","23403136"
"14385973","Is it possible create a single dynamic proxy that can add functionality to any concrete class?","<p>I'll give a brief overview of my goals below just in case there are any better, alternative ways of accomplishing what I want.  <a href=""https://stackoverflow.com/questions/3291637/alternatives-to-java-lang-reflect-proxy-for-creating-proxies-of-abstract-classes"">This question</a> is very similar to what I need, but not quite exactly what I need.  My question...</p>

<p>I have an interface:</p>

<pre class=""lang-java prettyprint-override""><code>public interface Command&lt;T&gt; extends Serializable {}
</code></pre>

<p>..plus an implementation:</p>

<pre class=""lang-java prettyprint-override""><code>public class EchoCommand implements Command&lt;String&gt; {
    private final String stringToEcho;

    public EchoCommand(String stringToEcho) {
        this.stringToEcho = stringToEcho;
    }

    public String getStringToEcho() {
        return stringToEcho;
    }
}
</code></pre>

<p>If I create another interface:</p>

<pre class=""lang-java prettyprint-override""><code>public interface AuthorizedCommand {
    String getAuthorizedUser();
}
</code></pre>

<p>..is there a way I can implement the AuthorizedCommand interface on EchoCommand at runtime without knowing the subclass type?</p>

<pre class=""lang-java prettyprint-override""><code>public &lt;C extends Command&lt;T&gt;,T&gt; C authorize(C command) {
    // can this be done so the returned Command is also an
    // instance of AuthorizedCommand?
    return (C) theDecoratedCommand;
}
</code></pre>

<p>The why... I've used Netty to build myself a very simple proof-of-concept client / server framework based on commands.  There's a one-to-one relationship between a command, shared between the client and server, and a command handler.  The handler is only on the server and they're extremely simple to implement.  Here's the interface.</p>

<pre class=""lang-java prettyprint-override""><code>public interface CommandHandler&lt;C extends Command&lt;T&gt;,T&gt; {
    public T execute(C command);
}
</code></pre>

<p>On the client side, things are also extremely simple.  Keeping things simple in the client is the main reason I decided to try a command based API.  A client dispatches a command and gets back a Future.  It's clear the call is asynchronous plus the client doesn't have deal with things like wrapping the call in a <code>SwingWorker</code>.  Why build a synchronous API against asynchronous calls (anything over the network) just to wrap the synchronous calls in an asynchronous helper methods?  I'm using Guava for this.</p>

<pre class=""lang-java prettyprint-override""><code>public &lt;T&gt; ListenableFuture&lt;T&gt; dispatch(Command&lt;T&gt; command)
</code></pre>

<p>Now I want to add authentication and authorization.  I don't want to force my command handlers to know about authorization, but, in some cases, I want them to be able to interrogate <em>something</em> with regards to which user the command is being executed for.  Mainly I want to be able to have a <code>lastModifiedBy</code> attribute on some data.</p>

<p>I'm looking at using Apache Shiro, so the obvious answer seems to be to use their <code>SubjectAwareExecutor</code> to get authorization information into <code>ThreadLocal</code>, but then my handlers need to be aware of Shiro or I need to abstract it away by finding some way of mapping commands to the authentication / authorization info in Shiro.</p>

<p>Since each Command is already carrying state and getting passed through my entire pipeline, things are much simpler if I can just decorate commands that have been authorized so they implement the AuthorizedCommand interface.  Then my command handlers can use the info that's been decorated in, but it's completely optional.</p>

<pre class=""lang-java prettyprint-override""><code>if(command instanceof AuthorizedCommand) {
    // We can interrogate the command for the extra meta data
    // we're interested in.
}
</code></pre>

<p>That way I can also develop everything related to authentication / authorization independent of the core business logic of my application.  It would also (I think) let me associate session information with a Netty <code>Channel</code> or <code>ChannelGroup</code> which I think makes more sense for an NIO framework, right?  I think Netty 4 might even allow typed attributes to be set on a <code>Channel</code> which sounds well suited to keeping track of things like session information (I haven't looked into it though).</p>

<p>The main thing I want to accomplish is to be able to build a prototype of an application very quickly.  I'd like to start with a client side dispatcher that's a simple map of command types to command handlers and completely ignore the networking and security side of things.  Once I'm satisfied with my prototype, I'll swap in my Netty based dispatcher (using Guice) and then, very late in the development cycle, I'll add Shiro.</p>

<p>I'd really appreciate any comments or constructive criticism.  If what I explained makes sense to do and isn't possible in plain old Java, I'd consider building that specific functionality in another JVM language.  Maybe Scala?</p>
","<java><netty><shiro><javassist><dynamic-proxy>","2",""
"16629074","JAX-RS: Authenticate with multiple principals (more than just username)","<p>Using a Jersey service, what would be the most elegant method to authenticate a user with more than just username and password? say, a Business Id, and username as the Principals, and password as the only Credential.</p>

<p>I have a postgres DB with a users table, the same username string can exist for multiple Business entities. (A unique constraint belongs to two columns, Business id and username together).</p>

<p>I Use Basic authentication, having the client send an additional HTTP Header for the Business id. how do I go on from here?</p>

<p>Now, Regarding Authorization, how would I set up Roles and Permissions, if roles are created specifically for each business entity (each business can define it's own roles and connect it to permissions.)? Permissions are static.</p>

<p>does apache shiro (or any other pluggable security extension) offer a solution in this case?</p>

<p>Thanks.</p>
","<java><java-ee><jersey><ws-security><shiro>","0","16638830"
"27237174","Accessing User session from backend","<p>I am developing a web application with two major division, one is the Wicket side of the application and the Restlet side of the application which are quite decoupled. Although the code resides in the same project, I want to decouple it, so the Wicket part calls on the REST services exposed by the Restlet backend. </p>

<p>Now the issue is with the Session, in the Restlet part, there is a Shiro component which does the authentication et. al. when <code>/login</code> is accessed and the correct username &amp; password pair is supplied.</p>

<p>The question is, what is the approach such that Wicket part of the app would know about the session user currently logged-in in the Restlet part with Shiro?</p>
","<java><wicket><restlet><shiro>","2","27266913"
"32225810","Deployment stuck at ""Cleaning up Shiro Environment""","<p>Sometimes when I try to deploy an application using Apache Shiro, the deployment freezes after these messages:</p>

<pre><code>2015-08-26 08:34:39,567 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-3) JBAS017535: Unregistered web context: /shelfboard

2015-08-26 08:34:39,585 INFO  [io.undertow.servlet] (MSC service thread 1-3) Cleaning up Shiro Environment
</code></pre>

<p>Then, I must kill the server, start it again and redeploy.</p>

<p>Loaded <code>shiro-core-1.2.3</code>, <code>shiro-web-1.2.3</code> and <code>shiro-ehcache-1.2.3</code>.</p>

<p>What must be done?</p>

<p>When completely deploying, these messages appear:</p>

<pre><code>2015-08-26 09:19:14,653 INFO  [io.undertow.servlet] (MSC service thread 1-2) Initializing Shiro environment

2015-08-26 09:19:14,653 INFO  [org.apache.shiro.web.env.EnvironmentLoader] (MSC service thread 1-2) Starting Shiro environment initialization.

2015-08-26 09:19:14,758 INFO  [org.apache.shiro.config.ReflectionBuilder] (MSC service thread 1-2) An instance with name 'authc' already exists.  Redefining this object as a new instance of type org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

2015-08-26 09:19:14,859 INFO  [org.apache.shiro.realm.AuthorizingRealm] (MSC service thread 1-2) No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.

2015-08-26 09:19:14,869 INFO  [org.apache.shiro.web.env.EnvironmentLoader] (MSC service thread 1-2) Shiro environment initialized in 216 ms.

2015-08-26 09:19:14,963 INFO  [javax.enterprise.resource.webcontainer.jsf.config] (MSC service thread 1-2) Inicializando Mojarra 2.2.8-jbossorg-1 20140822-1131 para o contexto '/shelfboard'
</code></pre>

<p>shiro.ini:</p>

<pre><code>[main]

# realms to be used
customSecurityRealm = auth.CustomSecurityRealm
customSecurityRealm.jndiDataSourceName = java:jboss/datasources/ShelfBoard
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

# specify login page
authc.loginUrl = /login.xhtml
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
securityManager.rememberMeManager.cookie.name = demoRememberMe

# redirect after successful login
authc.successUrl  = /home.xhtml

# redirect to an error page if user does not have access rights
roles.unauthorizedUrl = /acesso-negado.xhtml

[urls]
/acesso-negado.xhtml = anon
/esqueci-senha.xhtml = anon
/resources/** = anon
/ajuda.xhtml = authc
/index.xhtml = authc

(etc)
</code></pre>
","<java><shiro>","0",""
"25635728","Shiro: Is there a method to get permission list,which is difined by @RequiresPermissions annotation,in my project","<p>So I can assign permissions to Roles from this list，or should I must store these permissions in database? Sometimes, I am not sure wether they are  the same.</p>

<p>For example,if there are @RequiresPermissions like</p>

<pre><code>@RequiresPermissions(""resourceA:create"")
@RequiresPermissions(""resourceA:update,delete"")
@RequiresPermissions(""resourceA:read"")
@RequiresPermissions(""resourceB:create,read,update,delete"")
</code></pre>

<p>I can get permissions list like:</p>

<pre><code>[""resourceA:create"",""resourceA:update"",""resourceA:delete"",""resourceA:read"",
""resourceB:create"",""resourceB:update"",""resourceB:delete"",""resourceB:read""]
</code></pre>

<p>or like</p>

<pre><code>{""resourceA"":{""create"",""update"",""delete"",""read""},
""resourceB"":{""create"",""update"",""delete"",""read""}}
</code></pre>
","<security><permissions><shiro>","1",""
"19140140","Shiro subject on HttpSession","<p>I'm using Shiro on my application layer which is served trough web requests. I think <strong><em>SecurityUtils.getSubject</em></strong> won't work as expected as I want to save the current subject through different requests, and I don't want to use Shiro Web utils, because I would like to dettach my Application Layer from the way it is served( I will later build a GUI to access it ).</p>

<p>So, can I, for example, return from my application layer the Subject instance, to be saved by the client in an <strong><em>HttpSession</em></strong> or whenever it wants, and retrieve it at a later time to avoid having to re-authenticate it?</p>
","<shiro><httpsession><subject>","0",""
"36464768","Can I integrate Apache Shiro and CAS and WS02 Identity Server","<p>I am using Apache Shiro as a security framework for my application which also need SAML for SSO integrations. And with possible Oauth in the future.</p>

<ol>
<li><p>Do I only need buji-pac4j to cover both SAML and Oauth? </p></li>
<li><p>With buji-pac4j, do I need to write any SAML code at all or all are taken care of by buji-pac4j framework?</p></li>
<li><p>If I have the buji-pac4j and use CasServer for authentication would it be possible to integrate other Identity management server such as WS02 Identity Server (which act as a federation hub) to the CasServer?</p></li>
</ol>
","<apache><cas><wso2is><shiro>","0","36497775"
"32214624","How to create a new Account using programmatic configuration in Apache Shiro?","<p>I'm newer in Apache Shiro, and I want to make a simple example using programmatic configuration. When using the file.INI it is simple to create users and grant them roles and  permissons, now,  I want to make the same thing but with using simple java objects. So how can I do that please? </p>

<p>Here is my code: </p>

<pre><code>import org.apache.shiro.SecurityUtils; 
import org.apache.shiro.authc.*; 
import org.apache.shiro.config.Ini; 
import org.apache.shiro.config.Ini.Section; 
import org.apache.shiro.config.IniSecurityManagerFactory; 
import org.apache.shiro.mgt.SecurityManager; 
import org.apache.shiro.session.Session; 
import org.apache.shiro.subject.Subject; 
import org.apache.shiro.util.Factory; 
import org.slf4j.Logger; 
import org.slf4j.LoggerFactory; 

public class TestShiro { 

    //private static final transient Logger log = LoggerFactory.getLogger(TestShiro.class); 

    public static void main(String[] args) { 
        //Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini""); 
    Ini ini = new Ini(); 
    //HERE I SHOULD ADD ACCOUNTS TO MY OBJECT ini
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(ini); 
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(ini); 
        SecurityManager securityManager = factory.getInstance(); 
        SecurityUtils.setSecurityManager(securityManager); 
        Subject currentUser = SecurityUtils.getSubject(); 

        if ( !currentUser.isAuthenticated() ) { 
            UsernamePasswordToken token = new UsernamePasswordToken(""lonestarrn"", ""vespaa""); 

            //this is all you have to do to support 'remember me' (no config - built in!): 
            token.setRememberMe(true); 
            try { 
                currentUser.login( token ); 
            } catch ( UnknownAccountException uae ) { 
            } catch ( IncorrectCredentialsException ice ) { 
            } catch ( LockedAccountException lae ) { 
            } 
             catch ( AuthenticationException ae ) { 
            } 

        } 

        if ( currentUser.hasRole( ""schwartz"" ) ) { 
            System.out.println(""May the Schwartz be with you!"" ); 
        } else { 
            System.out.println( ""Hello, mere mortal."" ); 
        } 

    } 
} 
</code></pre>

<p>I need your help and thank you in advance.</p>
","<java><apache><java-ee><ini><shiro>","1",""
"26465209","Apache Shiro session invalid when accessing application through nginx proxy_pass","<p>I have application secured with Apache Shiro. When I'm accessing my application through localhost:8080/MyApp I'm being successfully redirected to localhost:8080/MyApp/login.
I authenticate with credentials and all is good - I'm being redirected to home page which requires authentication.</p>

<p>I've configured nginx proxy to access the application with 'nicely' looking url so:</p>

<pre><code>server { 
    server_name www.example.com example.com;
    listen 80;
location / {
     proxy_pass http://localhost:8080/MyApp/;
}
</code></pre>

<p>}</p>

<p>When I access my application through www.example.com, i'm being again successfully redirected to www.example.com/login, I fill in the credentials but then instead of going to my home page I'm again being redirected to login page as if I wasn't authenticated.</p>

<p>I've tried few things, first - I've checked whether my request reaches the url responsible for authentication and whether i'm actually authenticated, I have two mappings in my controllers:</p>

<ul>
<li>/login - which redirects to shiro login page</li>
<li>/login.do - which actually does the authentication</li>
</ul>

<p>When either is invoked i'm displaying in the console if i'm authenticated through:</p>

<pre><code>System.out.println(""is auth:"" + SecurityUtils.getSubject().isAuthenticated());
</code></pre>

<p>When I go to www.example.com this is what happens:</p>

<ol>
<li>I'm not authenticated hence shiro redirects to login url, /login is invoked and i see in the console that indeed i'm not authenticated</li>
<li>I fill in my username and passwd and I'm posting data to /login.do, in the console I see that I'm successfully authenticated, the login.do tries to redirect to home page but instead I end up on the login scree, hence /login is invoked and in the console I see that i'm not authenticated anymore</li>
</ol>

<p>I wasn't sure whether it was Shiro's fault or maybe wrong nginx configuration so I've changed the nginx config to the following:</p>

<pre><code>  server { 
        server_name www.example.com example.com;
        listen 80;
    location /MyApp {
         proxy_pass http://localhost:8080;
    }
}
</code></pre>

<p>With the above nginx config and accessing the application through www.example.com/MyApp, everything works like a charm, I'm being redirected to login page, I authenticate successfully and I'm being redirected to the home page.</p>

<p>Can anyone explain that behavior? Is that nginx or shiro's issue, or am I missing something else?</p>

<p><strong>//EDIT:</strong> I think I know what's the problem, however I don't know how to solve it yet:</p>

<p>I think Shiro uses application name to save cookies, www.example.com and www.example.com/MyApp saved the cookies under the same path - /MyApp, hence www.example.com can't find the correct cookie - again this is just a suspicion at this point</p>

<p><strong>//EDIT:</strong> I start to think that this is due to Sprinv MVC redirect (I think it's not accouning for the servlet context)</p>
","<java><session><nginx><proxy><shiro>","0","26480269"
"32241461","Debugging LDAP with shiro in Tomcat","<p>I have a web service, and for that I want to authenticate users.</p>

<p>I'm trying to have a form based authentication with org.apache.shiro.realm.ldap.JndiLdapRealm as my realm.</p>

<p>But when I enter the credentials nothing happens but redirecting to login page again. And there's nothing get printed on the log.</p>

<p>My Question is how can I debug the shiro to figure out what is happening?</p>

<p>Edit: 
Here is my shiro ini file</p>

<pre><code>[main]
authc.loginUrl = /login.jsp
authc.successUrl = /index.jsp

ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = sAMAccountName={0},DC=aaa,DC=bbb
ldapRealm.contextFactory.url = ldap://aaa.bbb.ccc:3268
ldapRealm.contextFactory.systemUsername = admin
ldapRealm.contextFactory.systemPassword= password 
securityManager.realms = $ldapRealm


[urls]
/login.jsp = authc
/logout = logout
/** = authc
</code></pre>

<p>Edit 2: my login jsp</p>

<pre><code>&lt;form name=""loginform"" method=""post""&gt;
    plain
    &lt;label for=""username""&gt;Username:&lt;/label&gt;
        &lt;input type=""text"" id=""username"" name=""username"" /&gt;
        &lt;br/&gt;
        &lt;label for=""password""&gt;Password:&lt;/label&gt;
        &lt;input type=""password"" id=""password"" name=""password"" /&gt;
        &lt;br/&gt;
        &lt;label for=""rememberMe""&gt;Remember me:&lt;/label&gt;
        &lt;input type=""checkbox"" id=""rememberMe"" name=""rememberMe"" value=""true"" /&gt;
        &lt;br/&gt;
        &lt;input type=""submit"" value=""Login"" /&gt;
&lt;/form&gt;
</code></pre>

<p>my web.xml</p>

<pre><code>&lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;
</code></pre>
","<debugging><tomcat><authentication><shiro>","0",""
"27521841","shiro token based security for exposing api","<p>I have implemented Shiro for log in in my webapp. But now i want to expose some of api for the outside usage. for this purpose each client will have a key or token which they will pass with each call. </p>

<p>I want  to understand how this mechanism should work and is this facility available with shiro because i am . not been able to find anything. </p>

<p>can somebody please help me to find some of the tutorials which i could go through.</p>

<p>My xml - </p>

<pre><code>&lt;listener&gt;
&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;context-param&gt;
  &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
  &lt;param-value&gt;classpath*:applicationContext/securityShiro.xml&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml --&gt;
&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;!-- Make sure any request you want accessible to Shiro is filtered. /* catches all --&gt;
&lt;!-- requests.  Usually this filter mapping is defined first (before all others) to --&gt;
&lt;!-- ensure that Shiro works in subsequent filters in the filter chain:             --&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>
","<java><spring-mvc><shiro>","1",""
"26206466","HTTP 415 - Unsupported media type","<p>I'm using jax-rs and trying to integrate with Apache Shiro, so I'm doing a basic method like this:</p>

<pre><code>    @GET
    @Path(""test"")
    public Response get(@Auth Subject subject) {
        subject.checkPermission(""protected:read"");
        JSONObject rta = new JSONObject();
        rta.put(""user"", ""mauricio"");
    return Response.status(200).header(""Access-Control-Allow-Origin"", ""*"").entity(rta.toJSONString()).build();
}
</code></pre>

<p>After making a request I get the following error in the console:</p>

<pre><code>SEVERE: A message body reader for Java class org.apache.shiro.subject.Subject, and Java type interface org.apache.shiro.subject.Subject, and MIME media type application/octet-stream was not found.
The registered message body readers compatible with the MIME media type are:
application/octet-stream -&gt;
  com.sun.jersey.core.impl.provider.entity.ByteArrayProvider
  com.sun.jersey.core.impl.provider.entity.FileProvider
  com.sun.jersey.core.impl.provider.entity.InputStreamProvider
  com.sun.jersey.core.impl.provider.entity.DataSourceProvider
  com.sun.jersey.core.impl.provider.entity.RenderedImageProvider
*/* -&gt;
  com.sun.jersey.core.impl.provider.entity.FormProvider
  com.sun.jersey.core.impl.provider.entity.StringProvider
  com.sun.jersey.core.impl.provider.entity.ByteArrayProvider
  com.sun.jersey.core.impl.provider.entity.FileProvider
  com.sun.jersey.core.impl.provider.entity.InputStreamProvider
  com.sun.jersey.core.impl.provider.entity.DataSourceProvider
  com.sun.jersey.core.impl.provider.entity.XMLJAXBElementProvider$General
  com.sun.jersey.core.impl.provider.entity.ReaderProvider
  com.sun.jersey.core.impl.provider.entity.DocumentProvider
  com.sun.jersey.core.impl.provider.entity.SourceProvider$StreamSourceReader
  com.sun.jersey.core.impl.provider.entity.SourceProvider$SAXSourceReader
  com.sun.jersey.core.impl.provider.entity.SourceProvider$DOMSourceReader
  com.sun.jersey.json.impl.provider.entity.JSONJAXBElementProvider$General
  com.sun.jersey.json.impl.provider.entity.JSONArrayProvider$General
  com.sun.jersey.json.impl.provider.entity.JSONObjectProvider$General
  com.sun.jersey.core.impl.provider.entity.XMLRootElementProvider$General
  com.sun.jersey.core.impl.provider.entity.XMLListElementProvider$General
  com.sun.jersey.core.impl.provider.entity.XMLRootObjectProvider$General
  com.sun.jersey.core.impl.provider.entity.EntityHolderReader
  com.sun.jersey.json.impl.provider.entity.JSONRootElementProvider$General
  com.sun.jersey.json.impl.provider.entity.JSONListElementProvider$General
  com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy
</code></pre>

<p>Does anybody know how to solve this problem?</p>

<p>Thank you very much</p>
","<java><apache><http><jax-rs><shiro>","1",""
"15985858","How do you cache data only for the duration of the http request using apache shiro in a servlet container?","<p>More specifically, I find that I'm implementing a custom <code>AuthorizingRealm</code>, which declares template methods <code>doGetAuthenticationInfo()</code> and <code>doGetAuthorizationInfo()</code> for returning <code>AuthenticationInfo</code> and <code>AuthorizationInfo</code> objects, respectively.</p>

<p>However, when I retrieve the data for the AuthenticationInfo (a JPA entity) in doGetAuthenticationInfo(), I find that I already have the necessary AuthorizationInfo. Alas, there's no apparantly good way to hang onto this data, so I have to throw it out only to perform another JPA lookup when the authorization filter ultimately gets its turn in the filter chain.</p>

<p>Behold:</p>

<pre><code>public class CustomRealm extends AuthorizingRealm {

  @Override
  protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) {
    UsernamePasswordToken userPassToken = (UsernamePasswordToken) token;
    String username = userPassToken.getUsername()

    User user; // Contains username, password, and roles
    // Perform JPA lookup by username...
    return constructSimpleAuthenticationInfoFromUser(user);
  }

  @Override
  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    // Look up user again? :(
    ...
  }
}
</code></pre>

<p>I've considered a number of possibilities:</p>

<ol>
<li><strong>Use realm caching</strong>. The application will run in a distributed environment so there could be any arbitrary number of JVMs running. The default realm cache manager implementations don't solve all of the inherent problems and setting up an enterprise implementations seems out of scope for this project.</li>
<li><strong>Use the subject's session</strong>. There is no server-side state and I'd like to keep it that way if possible. Perhaps you can force the session to behave like request scope, but I wouldn't know how to do so and that risks being obfuscated.</li>
<li><strong>Implement my own Subject</strong>. There appears to typically be one Subject instance per request, but it's unclear how to bootstrap this and I would risk losing a lot of potential functionality.</li>
<li><strong>Use the Shiro ThreadContext object</strong>. I could attach the data to the ThreadContext as a threadlocal property. Servlet containers generally follow a thread-per-request model, and the Subject instance itself seems to chill out here, awaiting its inevitable garbage collection. Shiro also appears to build up and tear down the context automatically. However, there's not much documentation on this and the source code is hard for me to follow.</li>
</ol>

<p>Finally, the default WebSecurityManager keeps singleton instances of the CustomRealm around, one per JVM it seems. Simply setting some local instance property is not thread-safe.</p>

<p>This seems like a common data retrieval option and a typical deployment scenario. So, what am I missing?</p>

<p>Thanks!</p>
","<java><java-ee><servlets><shiro>","0","15985885"
"9785183","Is it safe to cache security information?","<p>I've been doing some research on popular Java security frameworks (Spring Security and Apache Shiro) recently. I noticed that both frameworks support caching. 
Apache Shiro even described its module:</p>

<blockquote>
  <p>Caching is a first-tier citizen in Apache Shiro's API to ensure that
  security operations remain fast and efficient.</p>
</blockquote>

<p>My questions are: </p>

<ul>
<li>Is it safe to cache security information in for instance Ehcache?</li>
<li>Is it a popular approach?</li>
<li>Should we think about efficiency when it comes to security?</li>
<li>Why risk?</li>
</ul>
","<java><security><caching><spring-security><shiro>","2","9806923"
"32408369","Apache Shiro (Authorization) + SiteMinder (Authentication)","<p>I have an already done j2ee(jsf, cdi, jpa) application that uses Apache Shiro perfectly, it work pretty well and I'm enjoying shiro annotations (hasRole, hasPermission, etc).</p>

<p>Now, this project have to be capable of authenticate with SiteMinder also, and here comes my question:</p>

<ul>
<li>How can I setup a Realm to handle SiteMinder Authentication without losing Shiro Authorization (seems that SiteMinder will give me username and rolename in HTTP Header)</li>
<li>If I create a custom Realm, do the ""doGetAuthenticationInfo"" and log user in a Session, what will happen with SiteMinder Session? </li>
<li>If I set ""subject.getSession().setTimeout(1000);"" in Shiro, what will happen with SiteMinder Session that already had a defined timeout?</li>
</ul>

<p>My purpose is to user SiteMinder for Authentication (and control my session) and let Shiro just for Authorization. Shiro cannot intrude in SiteMinder Session.</p>
","<authentication><authorization><shiro><siteminder><jdbcrealm>","0",""
"25654945","Shiro Subject Authenticated but missing Principal","<p>I've got a strange Shiro problem I'm trying to track down where sometimes (race condition, likely) a session ends up containing the Authentication setting as true, but doesn't have a principal.</p>

<p>Here is what seems to be happening:</p>

<ol>
<li>User accesses our system with a URL.</li>
<li>The URL contains a magic path that authenticates them and logs them in.  The Subject now is Authenticated and has a Principal.</li>
<li>The requested web page is sent to them.</li>
<li>The web page includes other pages (JavaScript, CSS, etc.).  The second request sometimes fails (accessing JavaScript) because the Subject is now Authenticated, but doesn't have a Principal, so we can't Authorize them.</li>
</ol>

<p>Here is the code that performs the login (step 2):</p>

<pre><code>if(!subject.isAuthenticated()) {
    // Log the user in
    LegacyAuthenticationToken token = new LegacyAuthenticationToken(site, facility, authUrl);
    subject.login(token);
}
</code></pre>

<p>The LegacyJDBCRealm extends AuthenticatingRealm and overrides doGetAutheticationInfo to return a SimpleAuthenticationInfo object which has the principal in it:</p>

<pre><code>return new SimpleAuthenticationInfo(userKey.toString(), authUrl, getName());
</code></pre>

<p>userKey.toString() is the principal.  AuthUrl is the URL provide that authenticates the user and getName() is the name of the Realm.  I do have two different Realms in play - legacy and non-legacy.  Could that be causing a problem?</p>

<p>With various break points, I can tell that the first subject is generated correctly and seems to be saved to the session correctly.  The second subject is generated incorrectly because the session (same session ID, I checked) does not have a Principal (even though it does have an Authenticated value of true).</p>

<p>I've not had any luck figuring out what code is removing the Principal from the session, so I'm hoping for some pointers or debugging ideas.  Setting a break point SessionDAO.upgdate(Session) has not proven helpful.</p>
","<java><shiro>","0","26041794"
"25506508","Adding Shiro to the Eclipse java project - no error message at all for diagnosis","<p>I have just added Shiro to the project, adding two jars to the WEB-INF/lib (shiro-core and shiro-web), customizing the web.xml, and adding shiro.ini in the WEB-INF folder. I have also written an ad hoc menu.jsp with the login form using shiro:guest tags. The problem is that , when I launch the application, and insert the username and password into the form, in order to login, nothing happen and really no message is displayed in the console. So it is difficult for me to do a diagnosis of the problem. What should I do in order to proceed ? </p>

<pre><code>web.xml is the following:

&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns=""http://java.sun.com/xml/ns/javaee""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
    id=""WebApp_ID"" version=""2.5""&gt;
    &lt;display-name&gt;photoalbum&lt;/display-name&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;action&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.apache.struts.action.ActionServlet&lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;config&lt;/param-name&gt;
            &lt;param-value&gt;/WEB-INF/struts/struts-config.xml&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;chainConfig&lt;/param-name&gt;
            &lt;param-value&gt;org/apache/struts/tiles/chain-config.xml&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;action&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.do&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;it.univaq.mwt.bcd.photoalbum.common.startup.PhotoAlbumServletContextListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;*.do&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;

    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;index.do&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;
&lt;/web-app&gt;
</code></pre>

<p>the shiro.ini is the following</p>

<pre><code>[main]
authc.loginUrl = /index.do
authc.successUrl  = /common/welcome.do
myroles= it.univaq.mwt.bcd.photoalbum.common.shiro.MyRolesAuthorizationFilter 
myRealm = it.univaq.mwt.bcd.photoalbum.common.shiro.MyAuthorizingRealm
securityManager.realms = $myRealm


[users]
#borrower = borrower, borrower
#librarian = librarian, librarian
#masterlibrarian = masterlibrarian, masterlibrarian
#RegisteredUser = RegisteredUser


[roles]
#borrower = *
#librarian = *
#masterlibrarian = *
#RegisteredUser = *

[urls]
/index.do = authc
/logout.do = logout
/common/** = authc, myroles[librarian, masterlibrarian, borrower, RegisteredUser]
/titles/** = authc, myroles[librarian,masterlibrarian, RegisteredUser]
/borrowers/** = authc, myroles[librarian, masterlibrarian, RegisteredUser]
/items/** = authc, myroles[librarian, masterlibrarian, RegisteredUser]
/librarians/** = authc, myroles[masterlibrarian, RegisteredUser]
/items/checkoutitem.do = authc, myroles[borrower]
/items/returntitem.do = authc, myroles[borrower]
</code></pre>

<p>the menu.jsp is the following:</p>

<pre><code>&lt;%@taglib uri=""http://shiro.apache.org/tags"" prefix=""shiro""%&gt;
&lt;%@taglib uri=""http://struts.apache.org/tags-bean"" prefix=""bean""%&gt;
&lt;div class=""navbar navbar-inverse navbar-fixed-top"" &gt;
    &lt;div class=""container""&gt;
        &lt;div class=""navbar-header""&gt;
            &lt;button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target="".navbar-collapse""&gt;
                &lt;span class=""sr-only""&gt;Toggle navigation&lt;/span&gt; &lt;span class=""icon-bar""&gt;&lt;/span&gt; &lt;span class=""icon-bar""&gt;&lt;/span&gt; &lt;span class=""icon-bar""&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class=""navbar-brand"" href=""${pageContext.request.contextPath}/common/welcome.do""&gt;&lt;bean:message key=""common.title"" /&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=""navbar-collapse collapse""&gt;
            &lt;shiro:authenticated&gt;
                &lt;ul class=""nav navbar-nav""&gt;
                    &lt;li class=""dropdown""&gt;&lt;a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown""&gt;&lt;bean:message key=""menu.home"" /&gt;&lt;b class=""caret""&gt;&lt;/b&gt;&lt;/a&gt;
                        &lt;ul class=""dropdown-menu""&gt;
                        &lt;li&gt;                                &lt;a
                                    href=""${pageContext.request.contextPath}/registered/profile.do""&gt;
                                    &lt;bean:message key=""menu.profile"" /&gt;
                                &lt;/a&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                                &lt;a
                                    href=""${pageContext.request.contextPath}/registered/uploadform.do""&gt;
                                    &lt;bean:message key=""menu.upload"" /&gt;
                                &lt;/a&gt;
                            &lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/li&gt;

                    &lt;shiro:hasRole name=""RegisteredUser""&gt;
                        &lt;li&gt;&lt;a href=""${pageContext.request.contextPath}/registered/listresource.do""&gt;&lt;bean:message key=""menu.list"" /&gt;&lt;/a&gt;&lt;/li&gt;   
                        &lt;li&gt;&lt;a href=""${pageContext.request.contextPath}/registered/commentresource.do""&gt;&lt;bean:message key=""menu.comment"" /&gt;&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=""${pageContext.request.contextPath}/registered/gallery.do""&gt;&lt;bean:message key=""menu.gallery"" /&gt;&lt;/a&gt;&lt;/li&gt;     
                    &lt;/shiro:hasRole&gt;
                    &lt;shiro:hasRole name=""Admin""&gt;
                &lt;/shiro:hasRole&gt;
            &lt;li&gt;&lt;a href=""${pageContext.request.contextPath}/logout.do""&gt;&lt;bean:message key=""menu.logout"" /&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/shiro:authenticated&gt;

            &lt;shiro:guest&gt;

                &lt;form name=""loginform"" action=""${pageContext.request.contextPath}/index.do"" method=""post"" class=""navbar-form navbar-right"" &gt;
                    &lt;div class=""form-group""&gt;
                        &lt;input type=""text"" placeholder=""Username"" class=""form-control"" name=""j_username""&gt;
                    &lt;/div&gt;
                    &lt;div class=""form-group""&gt;
                        &lt;input type=""password"" placeholder=""Password"" class=""form-control"" name=""j_password""&gt;
                    &lt;/div&gt;
                    &lt;button type=""submit"" class=""btn btn-success""&gt;
                        &lt;bean:message key=""common.signin"" /&gt;
                    &lt;/button&gt;
                &lt;/form&gt;
            &lt;/shiro:guest&gt;


        &lt;/div&gt;
        &lt;!--/.navbar-collapse --&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>I also have this two java programs (not by me) that make to work the shiro.ini</p>

<pre><code>package it.univaq.mwt.bcd.photoalbum.common.shiro;

import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import it.univaq.mwt.bcd.photoalbum.business.BusinessException;
import it.univaq.mwt.bcd.photoalbum.business.LibraryBusinessFactory;
import it.univaq.mwt.bcd.photoalbum.business.PhotoAlbumBusinessFactory;
import it.univaq.mwt.bcd.photoalbum.business.SecurityService;
import it.univaq.mwt.bcd.photoalbum.business.model.Role;
import it.univaq.mwt.bcd.photoalbum.business.model.User;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.authz.AuthorizationException;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.Permission;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;

public class MyAuthorizingRealm extends AuthorizingRealm {

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        SecurityService service = PhotoAlbumBusinessFactory.getInstance().getSecurityService();

        User user = null;
        try {
            user = service.authenticate(upToken.getUsername());
        } catch (BusinessException idEx) {
            throw new AuthenticationException(idEx);
        } 

        if (user == null) {
            throw new AuthenticationException(""Login name ["" + upToken.getUsername() + ""] not found!"");
        }

        return new SimpleAuthenticationInfo(user, user.getPassword(), getName());
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        Set&lt;String&gt;         roles           = new HashSet&lt;String&gt;();
        Set&lt;Permission&gt;     permissions     = new HashSet&lt;Permission&gt;();
        Collection&lt;User&gt;    principalsList  = principals.byType(User.class);

        if (principalsList.isEmpty()) {
            throw new AuthorizationException(""Empty principals list!"");
        }
        SecurityService service = PhotoAlbumBusinessFactory.getInstance().getSecurityService();
        //LOADING STUFF FOR PRINCIPAL 
        for (User userPrincipal : principalsList) {
            try {

                User user = service.authenticate(userPrincipal.getUsername());

                Set&lt;Role&gt; userRoles = user.getRoles();
                for (Role r : userRoles) {
                    roles.add(r.getName());
                }
            } catch (BusinessException idEx) { //userManger exceptions
                throw new AuthorizationException(idEx);
            } 
        }
        //THIS IS THE MAIN CODE YOU NEED TO DO !!!!
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo(roles);
        info.setRoles(roles); //fill in roles 
        info.setObjectPermissions(permissions); //add permissions (MUST IMPLEMENT SHIRO PERMISSION INTERFACE)

        return info;
    }

}
</code></pre>

<p>and the following :</p>

<pre><code>package it.univaq.mwt.bcd.photoalbum.common.shiro;

import java.io.IOException;
import java.util.Set;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.CollectionUtils;
import org.apache.shiro.web.filter.authz.AuthorizationFilter;

public class MyRolesAuthorizationFilter extends AuthorizationFilter {

    @SuppressWarnings({""unchecked""})
    public boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) throws IOException {

        Subject subject = getSubject(request, response);
        String[] rolesArray = (String[]) mappedValue;

        if (rolesArray == null || rolesArray.length == 0) {
            //no roles specified, so nothing to check - allow access.
            return true;
        }

        Set&lt;String&gt; roles = CollectionUtils.asSet(rolesArray);

        for (String role : roles) {
            if (subject.hasRole(role)) {
                return true;
            }
        }
        return false;
    }

}
</code></pre>

<p>My only doubt is if these two java programs fits for my application (I used these two java programs in another java project and they worked)! Please help me ! Thanks.</p>
","<console><shiro>","1",""
"37826410","Max user sessions per user - apache shiro","<p>I have configured <strong>Apache shiro</strong> and it works fine with my application.</p>

<p>Now i need to configure max sessions per user, meaning one user cannot login into another machine or if he tries to login, it should invalidate its previous session or maybe he cannot login with new session.</p>

<p>At single point of time, there should only be one user session.</p>

<p><strong>LoginServlet</strong></p>

<pre><code>UsernamePasswordToken token = new UsernamePasswordToken(username , password);
org.apache.shiro.subject.Subject subject = SecurityUtils.getSubject();
subject.login(token);
loginSuccessful = true;
token.clear();
</code></pre>

<p><strong>Configuration xml</strong></p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""cacheManager"" ref=""shiroCacheManager"" /&gt;
        &lt;property name=""realm"" ref=""myRealm"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;

    &lt;bean id=""shiroCacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
    &lt;/bean&gt;

    &lt;bean id=""myRealm"" class=""com.mypackage.service.shiro.RoleSecurityJdbcRealm""&gt;
        &lt;property name=""dataSource"" ref=""shiroDatasource"" /&gt;
        &lt;property name=""permissionsLookupEnabled"" value=""true""&gt;&lt;/property&gt;
    &lt;/bean&gt;
</code></pre>
","<java><login><shiro>","0",""
"12234115","how can i authorizing with jdbcRealm-Shiro in java SE","<p>I need to know how can I doing <strong>authorization</strong> with MySQL in Shiro.</p>

<p>All examples that I could find through web were about authorization in WebApps.
I need it in <strong>SE application</strong> but there isn't too much information about jdbcRealm.</p>

<p>please help me.</p>

<p><strong>thanks</strong></p>
","<java><shiro><jdbcrealm>","2",""
"21454160","Shiro Configuration for testing a JSP web app","<p>I have a web app which I need to be able to run without login for testing purposes.  The trouble I am having is when I run it without Shiro set up, my JSPs containing the Shiro <code>hasPermission</code> tags are throwing an exception saying: </p>

<pre><code>UnavailableSecurityManagerException: No SecurityManager accessible to the calling code
</code></pre>

<p>Can anyone tell me how I can set up a Mock/Stub SecurityManager to be able to test this page?  </p>

<p>I think I need to add something in the application context, but my efforts so far have been unsuccessful, and I am having difficulty finding documentation on the issue.  </p>
","<java><jsp><shiro>","1","21455211"
"37821354","Shiro Session management for Spring web app","<p>I have a web application that I would to deploy on multiple servers. I would like to take advantage of shiros session management to persist session into an external datastore. I have done everything in the documentation but somehow, my spring beans are not persisted across requests so I end up getting a Null pointer on an object I had initialized in the previous request. Below is my config. I am using shiro 1.2.4 and spring 3.1.4.RELEASE.</p>

<p>Spring context xml file:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""cacheManager"" ref=""sessionCacheManager""/&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
&lt;/bean&gt;

 &lt;bean id=""sessionCacheManager"" class=""com.my.package.SessionCacheManager""/&gt;

&lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""/&gt;

&lt;bean id=""sessionManager""  class=""org.apache.shiro.web.session.mgt.DefaultWebSessionManager""&gt;
    &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt;
&lt;/bean&gt;
</code></pre>

<p>Below is my web.xml config:</p>

<pre><code>&lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;/WEB-INF/my-spring-context.xml&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;servlet&gt;
    &lt;description&gt;My custom Servlet&lt;/description&gt;
    &lt;servlet-name&gt;myservletname&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.my.package.CustomDispatcherServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;/WEB-INF/my-spring-context.xml&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
</code></pre>

<p>I have the flowing in my code:</p>

<pre><code>@Component
@Scope(""session"")
public class MyClass implements Serializable {}
</code></pre>

<p>Now in my controller I do have something like following:</p>

<pre><code>@Controller
public class MyController {
   @Autowired
   private MyClass myClass;
}
</code></pre>

<p>Now when request 1 comes in and i do myClass.setName(""this is a test"") I expect it to save it in the bean in the session so that when request 2 comes in and I do myClass.getName() i will get ""this is a test"". But that is not what is happening, when the second request comes in and I do myClass.getName() it returns null. It looks like nothing is being persisted to session. I thought it may be that spring isnt proxying the session correctly but when I do SecurityUtils.getSubject().getSession and print the shiro session attributes, I see scopedTarget.myClass as part of the keys stored in session but it seems like shiro isnt persisting it correctly or some config is wrong.</p>
","<java><spring><spring-mvc><shiro><session-management>","1",""
"27492590","Share shiro environment between multiple modules","<p>I have a J2EE application consisting of two modules:</p>

<ul>
<li>An EJB module, with classes that implement the business logic of the application. It uses JPA for data persistence.</li>
<li>A WAR module build with JAX-RS (RestEasy) that implements a RESTFul service for interact with my ejbs.</li>
</ul>

<p>The application is deployed inside an EAR in wildfly 8.2.0.Final
I need to secure the REST api with Basic Authentication using users information stored in the database.</p>

<p>I'm trying to use Apache Shiro 1.2 for this purpose: I've modified web.xml like these:</p>

<pre><code>&lt;!-- Resteasy configuration --&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>and added a shiro.ini file in WEB-INF:</p>

<pre><code>[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

userRealm=myapp.realm.UserRealm
securityManager.realms=$userRealm

[urls]
/* = authcBasic
</code></pre>

<p>then defined UserRealm class:</p>

<pre><code>public class UserRealm extends AuthorizingRealm {

    @EJB
    AppUserController appUserController;

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
        // ....
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
        String username = (String) token.getPrincipal();
        AppUser user = appUserController.findByUsername(username);
        SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(
                user.getUsername(),
                user.getPassword(),
                null,
                getName()
        );
        return authenticationInfo;
    }

}
</code></pre>

<p>where AppUserController is a <code>@Stateless</code> ejb that manage users account.
Now I have the first (little) problem: at runtime the appUserController ejb is always null. 
I know that this is because the UserRealm instance is not a managed object, and I bypassed this by getting an instance via JNDI</p>

<pre><code> InitialContext context = new InitialContext();
 appUserController = (AppUserController) context.lookup(""java:global/...../AppUserController"");
</code></pre>

<p>but I would like to know if there is a way to use managed @EJB.
I tried to make <code>UserRealm</code> a <code>@Stateless</code> but it doesn't work.</p>

<p>Moreover I had another (major) problem. I would like to access the <code>SecurityUtils.getSubject()</code> inside the ejb module. Is there a way for share the shiro environment between multiple modules inside the same EAR?
I read so many examples but I could not find complete information</p>

<p>thanks, in advance...</p>
","<java><java-ee><authentication><wildfly><shiro>","1",""
"25523618","Grails + Shiro + LDAP","<p>I am searching for a good tutorial to configure Grails + Shiro + LDAP.
I have already spent almost a week but no luck yet.</p>

<p>I have used the command grails <code>shiro-quick-start</code> to create all the files.
But I have no idea how to configure LDAP with shiro.</p>

<p>Could you please give me some clue.</p>

<p>Thanks in advance</p>
","<grails><groovy><ldap><shiro>","2",""
"39981587","CAS authentication with Shiro for Zeppelin","<p>I am unsuccessfully trying to get the shiro.ini in Zeppelin to use cas.
I followed these instructions
<a href=""http://shiro.apache.org/cas.html"" rel=""nofollow"">http://shiro.apache.org/cas.html</a></p>

<pre><code>casFilter = org.apache.shiro.cas.CasFilter
casFilter.failureUrl = /error.html

casRealm = org.apache.shiro.cas.CasRealm
casRealm.defaultRoles = USER
casRealm.casServerUrlPrefix = https://ticketserver.com
casRealm.casService = https://tickettranslater.com/j_spring_cas_security_check

casSubjectFactory = org.apache.shiro.cas.CasSubjectFactory
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.subjectFactory = $casSubjectFactory
securityManager.realms = $casRealm

### If caching of user is required then uncomment below lines
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $cacheManager
securityManager.sessionManager = $sessionManager
# 86,400,000 milliseconds = 24 hour
#securityManager.sessionManager.globalSessionTimeout = 86400000
shiro.loginUrl = /api/login


[urls]
# anon means the access is anonymous.
# authcBasic means Basic Auth Security
# authc means Form based Auth Security
# To enfore security, comment the line below and uncomment the next one
/api/interpreter/** = authc, roles[USER]
/api/configurations/** = authc, roles[USER]
/api/credential/** = authc, roles[SOMEOTHER]
/api/login = casFilter
/** = authc
#/** = anon
#/** = authc
</code></pre>

<p>the casService is what should translate the ticket to a user.
the casServerUrlPrefix is where once gets the tickes.
If I put for shiro.loginUrl = <a href=""https://ticketserver.com?service=https://tickettranslater.com/j_spring_cas_security_check"" rel=""nofollow"">https://ticketserver.com?service=https://tickettranslater.com/j_spring_cas_security_check</a>
It works except for the fact that the Origin header gets los along the way and the login fails.</p>

<p>both tickeserver.com and tickertranslater are in the network and they work for plenty of other applications.</p>

<p><strong>How do I set up the shiro.ini so the cas login chain is correctly handled?</strong></p>
","<cas><shiro><apache-zeppelin>","0",""
"39516087","Shiro annotation on OSGI","<p>I run an OSGI application on Karaf 4.0.4.
This application is not a web application.</p>

<p>I configured Apache Shiro in order to login using a custom <code>SecurityRealm</code> that use the credentials stored in an SQL database.  The <code>SecurityManager</code>and the realm are configured using Blueprint
This part works fine.</p>

<p>I want to use annotations like:</p>

<pre><code>@RequiresPermissions(""doSomething"")
@RequiresRoles(""admin"")
public void myMethodToDoSomething() {
    ...
}
</code></pre>

<p>Those annoations are never evaluated. (my security realm <code>protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)</code> method is never called.</p>

<p>After reading some Shiro documentation, I understand it doesn't work because I don't have the required interceptor as it's defined in the Shiro Spring turorial: </p>

<pre><code>&lt;!-- Enable Shiro Annotations for Spring-configured beans.  Only run after --&gt;
&lt;!-- the lifecycleBeanProcessor has run: --&gt;
&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"" depends-on=""lifecycleBeanPostProcessor""/&gt;
&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
&lt;property name=""securityManager"" ref=""securityManager""/&gt;
</code></pre>

<p></p>

<p>But as I'm not using spring in my application, those lines won't work.</p>
","<java><osgi><shiro><apache-karaf>","0","39516178"
"39071269","Karaf 4.1 - How to add DynamicImport-Package tag within a third party osgi jar bundle?","<p>I have a problem in the execution of a own bundle within Karaf 4.1, I am using Shiro for to persist users sessions, but when I recover the saved session, I have got an exception as:</p>

<blockquote>
<pre><code>Caused by: java.lang.ClassNotFoundException: io.twim.models.User
</code></pre>
  
  <blockquote>
<pre><code>at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[?:?]
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:?]
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.doImplicitBootDelegation(BundleWiringImpl.java:1782) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.searchDynamicImports(BundleWiringImpl.java:1717) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1552) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79) ~[?:?]
</code></pre>
  </blockquote>
</blockquote>

<p>I understand the problem in my case Shiro is executing a (cast) deserializing the persisted session object but within Shiro's ClassLoader there is no my class io.twim.models.User. My karaf instance have installed this bundles:</p>

<blockquote>
<pre><code>karaf@twim()&gt; list
START LEVEL 100 , List Threshold: 50
ID │ State  │ Lvl │ Version             │ Name
───┼────────┼─────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
51 │ Active │  80 │ 3.1.0               │ DataStax Java Driver for Apache Cassandra - Core
52 │ Active │  80 │ 19.0.0              │ Guava: Google Core Libraries for Java
73 │ Active │  50 │ 2.16.1              │ camel-blueprint
83 │ Active │  80 │ 1.3.0               │ Apache Shiro :: Core
86 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-cache :: Distributed cache for TWIM
87 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-cassandra :: Implementation Cassandra to TWIM
88 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-common :: Bundle utility for all models, utilities, constants
89 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-core-model :: Bundle utility for all models used in TWIM
90 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-db :: Utilitaries to persitence into TWIM
91 │ Active │  80 │ 1.0.0.SNAPSHOT      │ twim-jaas :: JAAS authentication module for TWIM
</code></pre>
</blockquote>

<p>I need to add the tag DynamicImport-Package at the bundle 83:</p>

<blockquote>
<pre><code>83 │ Active │  80 │ 1.3.0               │ Apache Shiro :: Core
</code></pre>
</blockquote>

<p>Executing <em>dynamic-import</em> command within karaf, I have fixed this problem:</p>

<blockquote>
<pre><code>karaf@twim()&gt; dynamic-import 83
</code></pre>
</blockquote>

<p>But I would like to do this automatically in my feature installer, adding this tag <em>DynamicImport-Package: io.twim.models</em>, now I have my features.xml like this:</p>

<pre><code>&lt;feature name=""twim-auth"" version=""${project.version}""&gt;
    &lt;feature&gt;twim-cassandra&lt;/feature&gt;
    &lt;bundle&gt;mvn:org.apache.shiro/shiro-core/1.3.0&lt;/bundle&gt;

    &lt;bundle&gt;mvn:io.twim/twim-core-model/${project.version}&lt;/bundle&gt;
    &lt;bundle&gt;mvn:io.twim/twim-jaas/${project.version}&lt;/bundle&gt;
&lt;/feature&gt;
</code></pre>

<p>How can I do this within my features.xml?</p>
","<osgi><classloader><shiro><apache-karaf><karaf>","1",""
"27633404","IllegalStateException when logging out with Shiro","<p>I am working on a ZK 7.0.2 project on glassfish 4.0 using Shiro for authentication. The user is logged in using the following code: </p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
UsernamePasswordToken token = new UsernamePasswordToken(username, password);
token.setRememberMe(false);
currentUser.login(token);
Executions.sendRedirect(HOME_URL);
</code></pre>

<p>Logout is accomplished using:</p>

<pre><code>Subject subject = SecurityUtils.getSubject();
subject.logout();
Executions.getCurrent().sendRedirect(""/login.zul"");
</code></pre>

<p>When logging in, I hit a couple of nullpointer exceptions, but after a few tries it logs in. The stacktrace is shown below:</p>

<pre><code>java.lang.NullPointerException
at org.glassfish.grizzly.http.server.Request.getRemoteAddr(Request.java:1169)
at org.apache.catalina.connector.Request.getRemoteAddr(Request.java:1696)
at org.apache.catalina.connector.Request.getRemoteHost(Request.java:1709)
at org.apache.catalina.connector.RequestFacade.getRemoteHost(RequestFacade.java:575)
at javax.servlet.ServletRequestWrapper.getRemoteHost(ServletRequestWrapper.java:284)
at org.apache.shiro.web.subject.support.DefaultWebSubjectContext.resolveHost(DefaultWebSubjectContext.java:55)
at org.apache.shiro.web.mgt.DefaultWebSubjectFactory.createSubject(DefaultWebSubjectFactory.java:58)
at org.apache.shiro.mgt.DefaultSecurityManager.doCreateSubject(DefaultSecurityManager.java:369)
at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:344)
at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
at com.csmp.zk.auth.Login.onClick$submit(Login.java:52)
</code></pre>

<p>When logging out, I get similar behavior. The stacktrace encountered when logging out is shown below.</p>

<pre><code>Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [admin].

java.lang.IllegalStateException: Internal org.glassfish.grizzly.http.server.Response has not been set
at org.glassfish.grizzly.http.server.Response.checkResponse(Response.java:1840) ~[nucleus-grizzly-all.jar:na]
at org.glassfish.grizzly.http.server.Response.isCommitted(Response.java:708) ~[nucleus-grizzly-all.jar:na]
at org.apache.catalina.connector.Response.isCommitted(Response.java:807) ~[web-core.jar:na]
at org.apache.catalina.connector.Response.isAppCommitted(Response.java:448) ~[web-core.jar:na]
at org.apache.catalina.connector.ResponseFacade.isCommitted(ResponseFacade.java:363) ~[web-core.jar:na]
at org.apache.catalina.connector.ResponseFacade.addHeader(ResponseFacade.java:576) ~[web-core.jar:na]
at org.apache.shiro.web.servlet.SimpleCookie.addCookieHeader(SimpleCookie.java:223) ~[shiro-web-1.2.3.jar:1.2.3]
at org.apache.shiro.web.servlet.SimpleCookie.removeFrom(SimpleCookie.java:355) ~[shiro-web-1.2.3.jar:1.2.3]
at org.apache.shiro.web.mgt.CookieRememberMeManager.forgetIdentity(CookieRememberMeManager.java:288) ~[shiro-web-1.2.3.jar:1.2.3]
at org.apache.shiro.web.mgt.CookieRememberMeManager.forgetIdentity(CookieRememberMeManager.java:260) ~[shiro-web-1.2.3.jar:1.2.3]
at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:293) ~[shiro-core-1.2.3.jar:1.2.3]
at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:206) [shiro-core-1.2.3.jar:1.2.3]
at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:291) [shiro-core-1.2.3.jar:1.2.3]
at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:285) [shiro-core-1.2.3.jar:1.2.3]
at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) [shiro-core-1.2.3.jar:1.2.3]
at com.csmp.zk.auth.Login.onClick$submit(Login.java:52) [Login.class:na]
</code></pre>

<p>I've tried various hacks but with no success. Any help will be much appreciated. Thanks.</p>
","<java-ee><zk><shiro><glassfish-4>","1",""
"27131224","Permission check for JSF outcome using apache shiro","<p>I have a JSF2 based web-application secured with <a href=""http://shiro.apache.org"" rel=""nofollow"">Apache Shiro</a>. In my application I have some links like </p>

<pre><code>&lt;h:link outcome=""someOutcome"" value=""my Link""/&gt;
</code></pre>

<p>or action-links like</p>

<pre><code>&lt;h:commandLink action=""#{myBean.someAction}"" value=""my Action"" /&gt;
</code></pre>

<p>The JSF outcome ""someOutcome"" might be configured in a JSF navigation-rule to redirect to <code>/some/url.xhtml</code>.</p>

<p>My shiro configuration (<code>shiro.ini</code>) contains an entry for the corresponding URL:</p>

<pre><code>/some/url.xhtml = perms[someRight]
</code></pre>

<p>And my backing-bean <code>myBean</code> is annotated like this:</p>

<pre><code>@Named
@ConversationScoped
public class MyBean {
    @RequiresPermissions('someRight')
    public String someAction()
    {
        // do something
        return null;
    }
}
</code></pre>

<p>My requirement now is to disabled the links, if the permissions of current user are not sufficient. </p>

<p>Of course, I could add something like <code>disabled=""#{subject.isPermitted('someRight')}""</code> to the <code>&lt;h:link&gt;</code>/<code>&lt;h:commandLink&gt;</code> components, but this way I would duplicate configuration which is already available via <code>shiro.ini</code> respectively annotations.</p>

<p>I'm thinking of something like</p>

<pre><code>&lt;h:link outcome=""someOutcome""
        disabled=""#{security.isOutcomeAllowed('someOutcome')}""
        value=""my Link"" /&gt;
</code></pre>

<p>which I could wrap in a composite-component to only specify <code>someOutcome</code> once. But how could the <code>security</code>-bean look like? Or is this the wrong approach?</p>

<p>Does anybody know a smart way for obtaining my goals?</p>
","<security><jsf-2><jsf-2.2><shiro>","1",""
"21569690","Apache shiro web application index page as default page","<p>I am new to Apache Shiro web application development. I have a index.html in my web directory which inturn as a link to login.htm
I want the index.html to be my default page, i.e, when url is like : <br />
<code>
    localhost:8080/myapp/
</code>
or
<code>
    localhost:8080/myapp/index.html
</code>
<br />
It should show index.html<br/><br />
How can I prevent shiro filter with url pattern /*. I mean shiro must not filter or process the index.html.<br />
Now it keeps on redirecting to login.htm because of obivious reason as it is configured usually in web.xml and shiro.ini</p>
","<java><web-applications><web.xml><servlet-filters><shiro>","0","22713033"
"31167378","apache shiro and Spring mvc","<p>I am running into a problem with apache shiro and spring mvc with angularjs. </p>

<p>I am getting a 404 error when I access the angularjs page, <a href=""http://localhost:8080/app"" rel=""nofollow"">http://localhost:8080/app</a>. Inside the app folder there is an index.html, which should be the start of the angularjs app. </p>

<p>below is the shiro.ini</p>

<pre><code># INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]

authc.loginUrl = /login.html
authc.usernameParam = username
authc.passwordParam = password
authc.rememberMeParam = rememberMe
authc.successUrl = /app


logout.redirectUrl = /logout.html

# use in-memory caching to reduce the number of runtime lookups against the data source.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

# configure hashed password authentication
credentialsMatcher = org.apache.shiro.authc.credential.Sha512CredentialsMatcher
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1

# configure a realm to connect to the data source
daRealm = com.example.security.myRealm
daRealm.credentialsMatcher = $credentialsMatcher
securityManager.realms = $myRealm

[urls]

/app/** = anon

/favicon.ico = anon
/css/home.css = anon
/images/** = anon
/ = anon
/index.html = anon

/rest/** = anon

/logout = logout

/login.html = authc

/** = authc
</code></pre>
","<angularjs><spring><spring-mvc><shiro>","0",""
"35260377","How do I store a salt in mysql database for secure password encryption?","<p>I'm using Shiro with Spring MVC to login users. I configure Shiro in applicationContext.xml (no INI file).</p>

<p>This is the realm configuration:</p>

<pre><code>  &lt;bean id=""myRealm"" class=""org.apache.shiro.realm.jdbc.JdbcRealm""&gt;
    &lt;property name=""dataSource"" ref=""dataSource""/&gt;
    &lt;property name=""authenticationQuery"" value=""select password from usuarios where email = ?""/&gt;
    &lt;property name=""credentialsMatcher""&gt;
        &lt;bean class=""org.apache.shiro.authc.credential.HashedCredentialsMatcher""&gt;
              &lt;property name=""storedCredentialsHexEncoded"" value=""false""/&gt;
              &lt;property name=""hashIterations"" value=""1024"" /&gt;
        &lt;/bean&gt;
    &lt;/property&gt;
  &lt;/bean&gt;
</code></pre>

<p>This is my code generating salt and hash when the user registers:</p>

<pre><code>RandomNumberGenerator rng = new SecureRandomNumberGenerator();
Object salt = rng.nextBytes();

String hashedPasswordBase64 = new Sha256Hash(password, salt, 1024).toBase64();

u.setPassword(hashedPasswordBase64);
u.setSalt(salt.toString());

usuarioDao.saveUsuario(u);
</code></pre>

<p>Here saveUsuario(u) calls the DAO to persist the user in MySQL. I guess that the salt.toString() is wrong.</p>

<p>The user table is:</p>

<pre><code>CREATE TABLE usuarios (
  id INTEGER AUTO_INCREMENT,
  nombre VARCHAR(50),
...
  password VARCHAR(50),
  salt VARCHAR(50),
...
  PRIMARY KEY (id)
);
</code></pre>

<p>Questions are:
- Which type should be the hash field in the DB? The hash is created by rng.nextBytes and is of type Object.
- How do I declare the field or the query to HashedCredentialsMatcher so it can authenticate properly?</p>
","<spring-mvc><hash><shiro><salt><password-encryption>","0",""
"35197561","How to validate session ID if I know the session ID in Apache Shiro without the use of any hash maps?","<p>I know that the session ID can be validated using hashmap and attaching it to a listener. Also there was a deprecated method to validate using only the session ID string.</p>

<p>I want to know is there an alternative way to validate the known session ID in Apache Shiro without the use of any hashmaps?</p>
","<apache><validation><session><shiro>","1","35955015"
"33014770","Shiro Guice and Jersey JAX-RS Filters order","<p>I am having a trouble with the Shiro Guice Filter ordering. The modules are registered like this:</p>

<pre><code>@Override
protected Injector getInjector() {
    Module[] modules = { new RestServiceModule(), // my services module
            new MySecurityModule(context), // my wrapper around ShiroWebModule
            new MyJerseyServletModule() }; // my wrapper around JerseyServletModule
    logger.debug(""Creating injector"");
    Injector injector = Guice.createInjector(modules);

    return injector;
}

....

// MyJerseyServletModule
@Override
protected void configureServlets() {
    // Binding rest entry points
    bind(Hello.class);
    bind(Anon.class);
    // Setup GuiceContainer
    serve(""/*"").with(GuiceContainer.class);
    filter(""/*"").through(GuiceShiroFilter.class);
}        
</code></pre>

<p>The problem is with the order filters are executed. GuiceShiroFilter is run before the Jersey JAX-RS filters (like @GET and @POST). In this case the request firstly trying to authenticate the user and after that validates the method (and send back ""405 Method not allowed"" for example).
I assume the transport protocol validation filters (Jersey filters in other words) should come in a first place. Am I missing something? </p>
","<java><jersey><guice><shiro><jersey-1.0>","0",""
"10966504","use shiro with mvn jetty plugin","<p>I downloaded ""<a href=""http://bubba-h57.github.com/H57_Shiro/"" rel=""nofollow"">Spring MVC + Shiro + myBatis + JSR-303 Validation</a>"" example from apache shiro doc page, and I want to run it with maven jetty plugin, So I open the pom.xml and put things like this </p>

<pre><code>&lt;plugin&gt;
            &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;
            &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;
            &lt;version&gt;6.1.10&lt;/version&gt;
                    &lt;configuration&gt;
                            &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;
                            &lt;stopKey&gt;foo&lt;/stopKey&gt;
                            &lt;stopPort&gt;9999&lt;/stopPort&gt;
                            &lt;webAppConfig&gt;
                            &lt;contextPath&gt;/&lt;/contextPath&gt;
                            &lt;/webAppConfig&gt;
                            &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;
                            &lt;!-- &lt;webAppSourceDirectory&gt;&lt;/webAppSourceDirectory&gt; --&gt;
                    &lt;/configuration&gt;
                    &lt;executions&gt;
                            &lt;execution&gt;
                                    &lt;id&gt;start-jetty&lt;/id&gt;
                                    &lt;phase&gt;pre-integration-test&lt;/phase&gt;
                                    &lt;goals&gt;
                                            &lt;goal&gt;run&lt;/goal&gt;
                                    &lt;/goals&gt;
                                    &lt;configuration&gt;
                                            &lt;scanIntervalSeconds&gt;0&lt;/scanIntervalSeconds&gt;
                                            &lt;daemon&gt;true&lt;/daemon&gt;
                                    &lt;/configuration&gt;
                            &lt;/execution&gt;
                            &lt;execution&gt;
                                    &lt;id&gt;stop-jetty&lt;/id&gt;
                                    &lt;phase&gt;post-integration-test&lt;/phase&gt;
                                    &lt;goals&gt;
                                            &lt;goal&gt;stop&lt;/goal&gt;
                                    &lt;/goals&gt;
                            &lt;/execution&gt;
                    &lt;/executions&gt;
            &lt;/plugin&gt;
</code></pre>

<p>After that I start the app use mvn jetty:run, I try to register a user in the example and I get an exception likes: 
""<strong>java.lang.ClassCastException: org.apache.shiro.web.servlet.ShiroHttpSession cannot be cast to org.mortbay.jetty.servlet.AbstractSessionManager$SessionIf</strong>"", could anyone tell me why, and thx a lot.</p>
","<session><jetty><shiro><maven-jetty-plugin>","0","10983483"
"7670220","Grails and Apache Shiro - How to implement doUpdatePassword and doResetPassword closures","<p>I'm developing a Grails app and I'm using Shiro to handle the access security. I think my app is now secured but there are some missing features. The generated password is too hard to remember so it's necessary a view to change the generated (current) password to a personalized one, an update password operation must be implemented, however there's a reference in the updatePassword.gsp file to the doUpdatePassword closure but it's not implemented. So how can I do this? </p>

<p>Thanks in advance.</p>
","<grails><shiro>","2",""
"23119903","Retrieving user information from session/authenticationtoken/cache using Apache Shiro","<p>I am trying to build a dynamic Allowance/Permission with Apache Shiro using JPA datasource.</p>

<p>In the very end, everithing goes back to this class:</p>

<pre><code>public class CustomAuthorizationFilter extends HttpMethodPermissionFilter {

 @Override
 public boolean isAccessAllowed(ServletRequest r, ServletResponse r, Object m) throws IOException {
  //Somehow get the user stored somewhere in the servlet memory
  SysUser loggedUser = %some_code_here%
  for (String allowance : loggedUser.getAllowances()) {
   // Do many validations
   if (pathsMatch(allowance, request)) {
    return true;
   }
  }

  return super.isAccessAllowed(request, response, mappedValue);
 }

}
</code></pre>

<p>The isAccessAllowed() method is fired on every request, so I don't want to get the information from the database. Shiro builds many objects regarding the user, one of them is an AuthorizationInfo. I build a CustomAuthorizationInfo where the Permissions and Allowances list are inside... but how to retrieve those without re-accessing the database?</p>

<p>Is it possible to store/retrieve information from the autheticated user using shiro without accessing the database?</p>

<p>(PS.: methods like isPermitted does not solve the problem, because I need the permission itself to use the pathsMatch() method).</p>
","<jsf><jsf-2><shiro>","1","23126254"
"30301277","Implementing reCaptcha with Apache Shiro","<p>I have a webapp that is secured with Apache Shiro and is all working fine. Now I want to add Goolge's reCaptcha to my login page and can't figure out how to do that.</p>

<p>The captcha itself is added and working fine, the part I need help with is how to integrate it with Shiro now to do the verification before continuing on to authenticate the user.</p>

<p>From what I've gathered from the <a href=""http://shiro.apache.org/web.html#Web-FilterChainDefinitions"" rel=""nofollow"">docs</a> this would be done with a filter chain.</p>

<p>So I put this into my <code>shiro.ini</code>:</p>

<pre><code>[main]
authc.failureKeyAttribute = shiroLoginFailure
authc.loginUrl = /login.jsp
authc.successUrl = /LogIn
logout.redirectUrl = /login.jsp
captcha = path.to.my.class.VerifyUserFilter

...

[urls]
/login.jsp = captcha,authc
/* = authc
</code></pre>

<p>I know how to implement the logic to verify the captcha. What I don't know is what that VerifyUserFilter class needs to look like aside from the actual verify logic to make this work. Essentially all it needs to do is post to the Google API, get the response, parse it and based on the result pass the request to the next filter or stop if the verif failed.</p>

<p>Before I posted this I decided to give it one last try and spent a couple more hours trying different things and eventually got it to work! I still decided to post this question anyway, along with my own answer below as I wasn't able to find much help when researching this question and also to see if what I did is correct. If there is a better or more proper way to do this I'd like to know.</p>
","<java><web-applications><recaptcha><shiro>","0",""
"34762868","'this webpage has a redirect loop' when I tried login","<p>I tried migrate project JSF from netbeans(ANT) to IntellijIDEA(maven) and Ihave problems.
In Web.xml I have filter:</p>

<pre><code>&lt;filter&gt;
        &lt;filter-name&gt;auth&lt;/filter-name&gt;
        &lt;filter-class&gt;myPackeg.SessionTimeoutFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
</code></pre>

<p>And Filter class:</p>

<pre><code>public class SessionTimeoutFilter implements Filter {

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
    }

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
        HttpServletRequest req = (HttpServletRequest) request;
        HttpServletResponse resp = (HttpServletResponse) response;
        if (null == req.getSession(false) &amp;&amp; !req.getRequestURL().toString().contains(""/login.xhtml"")) {
            if (isAjax(req)) {
                resp.getWriter().print(xmlPartialRedirectToPage(req, ""/login.xhtml""));
                resp.flushBuffer();
            } else {
                resp.sendRedirect(req.getContextPath() + ""/login.xhtml"");
            }
        } else {
            chain.doFilter(request, response);
        }
    }

    @Override
    public void destroy() {

    }

    private boolean isAjax(HttpServletRequest request) {
        return ""XMLHttpRequest"".equals(request.getHeader(""X-Requested-With""));
    }
</code></pre>

<p>When app start I have error in browser:</p>

<pre><code>this webpage has a redirect loop ERR_TOO_MANY_REDIRECTS
</code></pre>

<p>And in console I have this error:</p>

<pre><code>13-Jan-2016 15:15:27.215 SEVERE [http-nio-8089-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [Faces Servlet] in context with path [/NurCRM] threw exception [/login.xhtml @9,113 listener=""#{loginBean.authorizedUserControl}"": Target Unreachable, identifier 'loginBean' resolved to null] with root cause
 javax.el.PropertyNotFoundException: /login.xhtml @9,113 listener=""#{loginBean.authorizedUserControl}"": Target Unreachable, identifier 'loginBean' resolved to null
    at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:107)
    at com.sun.faces.facelets.tag.jsf.core.DeclarativeSystemEventListener.processEvent(EventHandler.java:128)
    at javax.faces.component.UIComponent$ComponentSystemEventListenerAdapter.processEvent(UIComponent.java:2563)
    at javax.faces.event.SystemEvent.processListener(SystemEvent.java:108)
    at javax.faces.event.ComponentSystemEvent.processListener(ComponentSystemEvent.java:118)
    at com.sun.faces.application.ApplicationImpl.processListeners(ApplicationImpl.java:2169)
    at com.sun.faces.application.ApplicationImpl.invokeComponentListenersFor(ApplicationImpl.java:2114)
    at com.sun.faces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:287)
    at com.sun.faces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:245)
    at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:107)
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)
    at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:219)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:647)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at kg.nurtelecom.crm.filter.SessionTimeoutFilter.doFilter(SessionTimeoutFilter.java:42)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1526)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1482)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)
</code></pre>

<p>This my Login.xhtml fragment:</p>

<pre><code>&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://xmlns.jcp.org/jsf/html""
      xmlns:p=""http://primefaces.org/ui""
      xmlns:f=""http://xmlns.jcp.org/jsf/core""&gt;
    &lt;h:head&gt;
        &lt;f:metadata&gt;
            &lt;f:event type=""javax.faces.event.PreRenderViewEvent"" listener=""#{loginBean.authorizedUserControl}""/&gt;
        &lt;/f:metadata&gt;
        ...
</code></pre>

<p>also  I use Shiro auth:</p>

<pre><code>authc.loginUrl = /login.xhtml
...
[urls]
/javax.faces.resource/** = anon
/images/** = anon
/error/ = anon
/login.xhtml = authc
/logout = logout
/** = authc
</code></pre>
","<jsf><shiro>","0",""
"24278022","Get list of users which have a specific or set of permissions","<p>Using Shiro with JDBCRealm</p>

<p>My use case requires a user to submit a form to next user. The next user can only be someone with specific permission. This is to be known in order to show only valid Next user list for selection.</p>

<p>How can I get list of all the users that have a specific permission?
If not, Is there a workaround of getting the User permission strings from database and then at least reuse Shiro's logic to check if the user has specific permission?</p>
","<shiro><jdbcrealm>","0",""
"19699937","after included the shiro-core and shiro-web in maven getting error","<p>My maven web project is working fine before i included the <code>shiro-core-1.2.2</code> and <code>shiro-web-1.2.2</code>
but after i include this dependency in pom.xml then i getting error at the time of 
mvn tomee:deploy. and this same project code after arranging project structure if i execute in eclipse then is working fine but in maven and in netbeans is not working .its display error </p>

<pre><code>SEVERE: Can't find of appInfo for C:\my_work\Snefocaremaven\target\Snefocaremaven.war, availables: [C:\App\apache-tomee-jaxrs-1.5.2\webapps\Demo, C:\App\apache-tomee-jaxrs-1.5.2\webapps\host-manager, C:\App\apache-tomee-jaxrs-1.5.2\webapps\tomee, C:\App\apache-tomee-jaxrs-1.5.2\webapps\ROOT, C:\App\apache-tomee-jaxrs-1.5.2\webapps\docs, C:\App\apache-tomee-jaxrs-1.5.2\webapps\manager]
</code></pre>

<p>in catalina log file. and the full trace of message is here:
    <a href=""http://www.docdroid.net/5prk/shiro-error.txt.html"" rel=""nofollow"">http://www.docdroid.net/5prk/shiro-error.txt.html</a></p>
","<java><eclipse><maven><netbeans><shiro>","0","19782352"
"11644007","Glassfish session cookie creation(Shiro)","<p>I´m not sure if my problem is related to glassfish directly. Here is the description:</p>

<p>We run GF3.1.2 server with several web applications. As security framework we use Shiro. Our Applications uses a lot of CDI Session beans. We use shiro native session mode. That means that shiro itself creates an cookie and manage the sessions. The problem is that somewhere within our apps an external framework must call getSession(true). So we end up with one shiro session cookie and the other. I´ve filed a bug in shiro issue tracker</p>

<p><a href=""https://issues.apache.org/jira/browse/SHIRO-374"" rel=""nofollow"">https://issues.apache.org/jira/browse/SHIRO-374</a> .</p>

<p>They´ve said that there perhaps runs a filter before shiro session filter starts. I´ve added the shiro filter on top of my web.xml but the problem stays. How can I find out which application creates the session cookie?</p>
","<session><glassfish-3><session-cookies><shiro>","1",""
"29835347","Is Shiro's DefaultPasswordService thread safe?","<p>Can I have a single instance of <code>DefaultPasswordService</code> and call its <code>encryptPassword()</code> method without worrying about thread safety issues?</p>

<p>The documentation doesn't make this clear.</p>
","<java><multithreading><thread-safety><shiro>","4","29926322"
"36654652","JSF application with Apache Shiro","<p>I want to use JSF with Apache Shiro.</p>

<p>My login page is located under <code>/authentication/login.xhtml</code></p>

<p><strong>shiro.ini</strong></p>

<pre><code>[main]
user.loginUrl = /authentication/login.xhtml

[users]
admin = password

[urls]
/authentication/login.xhtml = authc
/** = authc
</code></pre>

<p>But when I build the code and I run it I'm redirected to <code>/login.jsp</code></p>

<p>Do you know what is the reason for this?</p>
","<jsf><jsf-2.2><shiro>","1",""
"40879607","How to share shiro session in distributed system?","<p>I have two distributed web apps A and B(A is the same as B), i am using shiro to share the http sessions between two apps. But I don't know how to implement it,I want some help.
Any help will be appreciated :) </p>
","<java><shiro>","0",""
"32800149","Shiro still looking for login.jsp, when all application pages renamed to .html","<p>I am modifying my application to rename all .jsp pages to .html.</p>

<p>Modified shiro.ini looks as follows:</p>

<pre><code>[main]
shiro.loginUrl = /login.html

dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = java:/comp/env/jdbc/myappDB

credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.credentialsMatcher = $credentialsMatcher

[filters]

[urls]
/login.html = authc
/logout = logout
/secure/** = authc

/api/** = authcBasic, rest
</code></pre>

<p><strong>web.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns=""http://java.sun.com/xml/ns/javaee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
    version=""3.0""&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;
        &lt;url-pattern&gt;*.html&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;

    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;appmain.html&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;

&lt;/web-app&gt;
</code></pre>

<p>A few points:</p>

<ul>
<li>The application was working fine before I started modifying the web.xml and application pages to .html extension instead of .jsp extension.</li>
<li>The login link that I have on my home page displays ""<a href=""http://localhost:8080/myapp/login.html"" rel=""nofollow"">http://localhost:8080/myapp/login.html</a>"" when I hover over it. But when I click it, I get a 404 page not found error.</li>
<li>I have tried both Firefox and IE11, same problem encountered on both. Cleared cache several times.</li>
</ul>

<p>Any pointers on what could be wrong?</p>
","<jsp><tomcat><shiro>","2","32825165"
"14325902","Apache Shiro Guice Servlet Configure redirectUrl for AUTHC Filter","<p>How can I configure the redirect URL for the AUTHC Filter given by Shiro? I know how to configure it in an INI file, but I need to know how to configure it in my extension of the ShiroWebModule.
Thanks!</p>
","<servlets><guice><servlet-filters><shiro><guice-servlet>","0",""
"26317659","Authentication trouble with Apache Shiro","<p>I'm a beginner with Apache Shiro. I've been following the docs and lots of other tutorials, blogs etc. but I just can't get the authentication to work. When I attempt to login with a valid username and password, I always get an <code>InvalidCredentialsException</code> thrown. I'm using DynamoDB as a custom realm for storing user credentials, but I really don't think that matters. It's obviously the way that I'm storing and/or doing the credential matching that's not correct. Here's my setup:</p>

<p><strong>Shiro.ini:</strong></p>

<pre><code>[main]
myRealm = com.enki.closing.users.DynamoDBRealm

credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024

myRealm.credentialsMatcher = $credentialsMatcher
</code></pre>

<p><strong>Create user account:</strong></p>

<pre><code>String password = ...
ByteSource passwordSalt = new SecureRandomNumberGenerator().nextBytes();
String hashedPasswordBase64 = new Sha256Hash(password, passwordSalt, 1024).toBase64();

// store the hashedPassword and salt in DynamoDB...
// I've tried storing the salt with and without base64 encoding.
</code></pre>

<p>The password and salt are stored fine in DynamoDB, the values look alright. Here's the <strong>custom realm for authentication</strong>:</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    UsernamePasswordToken userPass = (UsernamePasswordToken) token;
    String username = userPass.getUsername();
    ...
    // pull the matching password and salt out of DynamoDB, no problems...
    ByteSource passwordSalt = ByteSource.Util.bytes( storedPasswordSalt );
    return new SimpleAuthenticationInfo(username, passwordHash, passwordSalt, getName());
}
</code></pre>

<p>This is all pretty much what the docs are telling me to do, but there's something not right. When I try the login, it get <code>InvalidCredentialsException</code>.</p>
","<java><apache><authentication><shiro>","1","26317933"
"31877750","Shiro: Cannot invalidate HttpSession","<p>I have a Shiro session (id=11111) and a http session (id=22222).</p>

<p>When I try to invalidate the HttpSession, the wrong id is used.</p>

<p><strong>Code:</strong></p>

<pre>
public void logout() {
      SecurityUtils.getSubject().logout();

// exception is thrown in this line
FacesContext.getCurrentInstance().getExternalContext().invalidateSession();
    }
</pre>

<p><strong>Exception:</strong></p>

<pre>
java.lang.IllegalStateException:
 org.apache.shiro.session.UnknownSessionException:
 There is no session with id [22222]
</pre>

<p>How can I invalidate the HttpSession or rather set the correct id?</p>
","<session><java-ee><shiro><httpsession>","7","31936936"
"19571690","Java: How to Use Apache Shiro with Couchbase","<p>I am interested in evaluating Apache Shiro for the authentication and authorization solution for a web application.  The underlying data store for the application is Couchbase 2.1.1.  However, I have yet to see seen how to configure Shiro to use a NoSQL document store such as Couchbase in any of the Shiro docs or getting started guides.  </p>

<p>Is this possible?  If so, how?</p>
","<java><couchbase><shiro>","2",""
"19514750","how to configure shiro roles for web project","<p>I have this config currently </p>

<pre><code>[main]
authc.loginUrl = /login.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember
authc.successUrl = /index.jsp

[urls]
/** = authc
/index.jsp = roles[user]
/cards.jsp = roles[user]
/jobs.jsp = roles[admin]

[users]
lol = ba, user
admin = ba, admin
</code></pre>

<p>And the login works, but when I login with <code>lol</code> username i can still access the /jobs.jsp page, so how to prevent user from accessing the /jobs.jsp page?</p>

<p>Also why when i remove <code>/** = authc</code> the login dos not work, it just does post request to the login page without processing the login?</p>

<p>Where can I find the definitive guide on how to configure roles for web based project using shiro?</p>
","<jsp><config><shiro>","0",""
"20510606","how to read password from java class for the data source in apache shiro.ini file","<p>i want to set the data source password from the java class. so i configure apache shiro.ini file for reading the password field from the java class but its not work.</p>

<p>This is my shiro.ini file for data source</p>

<pre><code>     ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
     ds.serverName = localhost
     ds.user = root

     dbpassword=com.test.password.PasswordFactory   //this is class name
     ds.password=$dbpassword.password
     ds.databaseName = test
     jdbcRealm.dataSource = $ds
</code></pre>

<p>and the PasswordFactory java class is</p>

<pre><code>package com.test.password;

public class PasswordFactory {

public String password; 
public PasswordFactory(){
    password=""root"";
}   
public String getPassword() {
    return password;
}
public void setPassword(String password) {
    this.password = password;
}
  }
</code></pre>

<p>this will throwing exception
The object with id [dbpassword.password] has not yet been defined and therefore cannot be referenced.  Please ensure objects are defined in the order in which they should be created and made available for future reference.</p>
","<java><shiro>","0",""
"31324285","Authenticating users via LDAP with Shiro","<p>Total newbie to java/groovy/grails/shiro/you-name-it, so bear with me. I have exhausted tutorials and all the ""Shiro LDAP"" searches available and still cannot get my project working.</p>

<p>I am running all of this on GGTS with jdk1.7.0_80, Grails 2.3.0, and Shiro 1.2.1.</p>

<p>I have a working project and have successfully ran quick-start-shiro,which built the domains ShiroRole and ShiroUser, the controller authController, the view login.gsp, and the relam ShiroDbRealm. I created a faux user in BootStrap with</p>

<pre><code>def user = new ShiroUser(username: ""user123"", passwordHash: new Sha256Hash(""password"").toHex())
user.addToPermissions(""*:*"")
user.save()
</code></pre>

<p>and can successfully log into my homepage, and for all intents and purposes, that is as far as I have gotten. I cannot find a top-down tutorial of how to now log in with my username and password (authenticated through a LDAP server that I have available). From what I understand, I need to create a shiro.ini file and include something along the lines of</p>

<pre><code>[main]
ldapRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
ldapRealm.url = ldap://MYURLHERE/
</code></pre>

<p>However I don't even know where to put this shiro.ini file. I've seen /src/main/resources, but there is no such directory. Do I manually create this or is it some script creation?</p>

<p>The next step seems to be creating the SecurityManager which reads the shiro.ini somehow with code along the lines of</p>

<pre><code>Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = new IniSecurityManagerFactory(""actived.ini"");

// Setting up the SecurityManager...
org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>However this always appears in some Java file in tutorials, but my project is a Groovy project inside of GGTS. Do I need to create a Java file and put it in src/java or something like that?</p>

<p>I've recently found that I may need a ShiroLdapRealm file (similar to ShiroDbRealm) with information like</p>

<pre><code>def appConfig = grailsApplication.config
def ldapUrls = appConfig.ldap.server.url ?: [ ""ldap://MYURLHERE/"" ]
def searchBase = appConfig.ldap.search.base ?: """"
def searchUser = appConfig.ldap.search.user ?: """"
def searchPass = appConfig.ldap.search.pass ?: """"
def usernameAttribute = appConfig.ldap.username.attribute ?: ""uid""
def skipAuthc = appConfig.ldap.skip.authentication ?: false
def skipCredChk = appConfig.ldap.skip.credentialsCheck ?: false
def allowEmptyPass = appConfig.ldap.allowEmptyPasswords != [:] ? appConfig.ldap.allowEmptyPasswords : true
</code></pre>

<p>and the corresponding info in Config along the lines of</p>

<pre><code>ldap.server.url = [""ldap://MYRULHERE/""]
ldap.search.base = 'dc=COMPANYNAME,dc=com'
ldap.search.user = ''       // if empty or null --&gt; anonymous user lookup
ldap.search.pass = 'password'                // only used with     non-anonymous lookup
ldap.username.attribute = 'AccountName'
ldap.referral = ""follow""
ldap.skip.credentialsCheck = false
ldap.allowEmptyPasswords = false
ldap.skip.authentication = false
</code></pre>

<p>But putting all these pieces together hasn't gotten me anywhere! Am I at least on the right track? Any help would be greatly appreciated! </p>
","<java><grails><groovy><ldap><shiro>","1",""
"18598514","Apache Shiro, permission control from database","<p>I need to implement a security framework in a desktop application that I'm developing to control authentication and user permission control. I've heard that Shiro is an easy and flexible framework to work with. Unfortunately I've only encountered web based application examples.</p>

<p>What I'm looking for is how to retrieve permissions levels and users from a database and then use them with Shiro. Has anyone developed something like this before, or know any tutorial that I could check? I need an idea of how to structure my database tables, and how to read permissions with Shiro.</p>
","<java><security><shiro>","0","18598642"
"35085418","Apache Shiro IncorrectCredentialsException","<p>This is my first time using apache shiro, so bear with me.</p>

<p>my shiro.ini</p>

<pre><code>#   =============================================================================
# Quickstart INI Realm configuration
#
# =============================================================================
[main]
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
ds = shiro.ShiroBoneCPDataSource
jdbcRealm.dataSource=$ds 
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role_id FROM user_role WHERE user_id = (SELECT id FROM users WHERE username = ?)
jdbcRealm.permissionsQuery = SELECT permission FROM role_permission WHERE role_id = ?



hashService = org.apache.shiro.crypto.hash.DefaultHashService
# NONE of the hashService settings is required.  The defaults will work fine.

hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true
# If you wanted to use some private salt bytes, provide in Base64 (NOT A BAD IDEA!)
hashService.privateSalt = aGltYWxheWFu

# We use this one to create a new test user with a hashed password.
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService

# We use this for our authentication tests.
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher

securityManager.realms = $jdbcRealm
# -----------------------------------------------------------------------------
# Users and their assigned roles
#
# Each line conforms to the format defined in the
# org.apache.shiro.realm.text.TextConfigurationRealm#setUserDefinitions JavaDoc
#   -----------------------------------------------------------------------------
[users]


# -----------------------------------------------------------------------------
# Roles with assigned permissions
# 
# Each line conforms to the format defined in the
# org.apache.shiro.realm.text.TextConfigurationRealm#setRoleDefinitions JavaDoc
# -----------------------------------------------------------------------------
[roles]
</code></pre>

<p>I use this shiro.ini file here</p>

<pre><code>public Subject authenticateWithShiro(String username, char[] pass) {

    Subject currentUser = null;
    try {
            log.info(""Authentication with shiro is started..."");

            Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = new IniSecurityManagerFactory(
                            ""classpath:resources/shiro.ini"");
            org.apache.shiro.mgt.SecurityManager securityManager = factory
                            .getInstance();
            SecurityUtils.setSecurityManager(securityManager);

            currentUser = SecurityUtils.getSubject();

            Session session = currentUser.getSession();
            session.setAttribute(""someKey"", ""aValue"");
            String value = (String) session.getAttribute(""someKey"");
            if (value.equals(""aValue"")) {
                    log.info(""Retrieved the correct value! ["" + value + ""]"");
            }

            // let's login the current user so we can check against roles and
            // permissions:
            if (!currentUser.isAuthenticated()) {
                System.out.println(""Current user has been authenticated."");
                    UsernamePasswordToken token = new UsernamePasswordToken(
                                    username, pass);
                    token.setRememberMe(true);
                    currentUser.login(token);

            }
    } catch (Exception e) {
            log.error(""Authentication failed"", e);
            log.error(e.getMessage());
    }

    return currentUser;
   }
</code></pre>

<p>So, when executing below code, org.apache.shiro.authc.IncorrectCredentialsException: Submitted credentials for token [org.apache.shiro.authc.UsernamePasswordToken - yunusa, rememberMe=true] did not match the expected credentials </p>

<pre><code>Subject subject = new UserHandler().authenticateWithShiro(username, textPassword.getPassword());
        if (subject != null &amp;&amp; subject.isAuthenticated()) {
                System.out.println(""successfull login"");
        } else {
                System.out.println(""Failed log in"");
        }
</code></pre>
","<java><apache><security><authentication><shiro>","1","35118165"
"40005116","Shiro ini not found or empty/unconfigured","<p>I'm using NetBean 8.2 to learn how to use Apache Shiro but running into a deployment issue. When I try to debug the web app on Glassfish 4.0, I'm getting this error:</p>

<pre><code>Severe:   Exception while loading the app : java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: org.apache.shiro.config.ConfigurationException: Shiro INI configuration was either not found or discovered to be empty/unconfigured.
</code></pre>

<p>The error message is exactly like that found in this post: <a href=""https://stackoverflow.com/questions/31804499/netbeans-8-0-1-cant-find-shiro-ini"">netbeans 8.0.1 cant find shiro.ini</a>. However, my Shiro.ini is already in WEB-INF folder (confirm by peeking into WAR file).</p>

<h1>Shiro ini</h1>

<pre><code>[main]
user.loginUrl = /login.xhtml
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = select password from users where username = ?
jdbcRealm.userRolesQuery = select name from roles where userid = (select id from users where username = ?)

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.jdbcUrl=jdbc:mysql://&lt;serverip&gt;/&lt;databasename&gt;
ds.user = &lt;username&gt;
ds.password = &lt;password&gt;
jdbcRealm.dataSource = $ds
securityManager.realms = $jdbcRealm

[urls]
/login.xhtml = user
</code></pre>

<h1>Web.xml</h1>

<pre><code>&lt;listener&gt;
&lt;listener-class&gt;
        org.apache.shiro.web.env.EnvironmentLoaderListener
&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;configPath&lt;/param-name&gt;
        &lt;param-value&gt;classpath:shiro.INI&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>With or without the init-param node, the same error is shown in the console log.</p>
","<shiro>","0",""
"24564517","Shiro in distributed environment - auto authenticating/white listing internal calls","<p>I am developing a distributed system with shiro for RBAC. I am not using shiro-web , but have custom filtering in my SecurityFilter attached to the Servlet. </p>

<p>My question is, 
Is there a way to white-list(auto-authenticate) requests coming from certain nodes ( in my case, peers in the distributed system) without having to go through the entire authentication process.</p>
","<shiro>","1","24652101"
"24808207","Redirect User to a Specific URL using APACHE Shiro","<p>I have a requirement where i have 3 applications
App A
App B
App C</p>

<p>App A being the Gateway to App B and C</p>

<p>Now i want the user to land in App A's login page even if the user enters URL for App B 
How do i specify this in my shiro.ini</p>

<p>I have following setting as of now </p>

<p>
        
        
            
                [main]
                authc.loginUrl = /login.jsp
                authc.successUrl = /dashboard
                authc.failureKeyAttribute = shiroLoginFailure</p>

<pre><code>            [roles]
            ROLE_ADMIN = *

            [urls]
            /static/** = anon
            /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>Now suppose i want the login URL to be say www.facebook.com how do i do it?
I have tried to change it and it doesnt work if i change /login.jsp to www.facebook.com
Please help !!!</p>
","<java><apache><authentication><shiro>","0","24951528"
"43368383","Digest Auth with Apache Shiro for REST API","<p>I have been given the task of implementing an authentication module for a rest based api backend which can later be used to authenticate other modules as well, but for now what I really want is my http calls to get authenticated everytime based on a header. I do not want to go for basic Auth as it is unsecure if SSL is not used. Now, I saw a way out with Apache Shiro Message Digest Auth which uses 'salt' to encrypt user credentials over the network. The following is the ini file I found on the tutorial. I want to know if it really is doing what I want. </p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here, 
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

authc = org.apache.shiro.web.filter.authc.FormAuthenticationFilter

roles = org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
roles.unauthorizedUrl = /

sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = root
ds.databaseName = userdb

jdbcRealm = com.shiro.app.util.JdbcSaltRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password, salt FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role FROM users WHERE username = ?
jdbcRealm.credentialsMatcher = $sha256Matcher
jdbcRealm.dataSource=$ds

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO

securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionDAO = $sessionDAO

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation

/api/** = authcBasic
/** = anon
</code></pre>

<p>What do the following lines do?</p>

<pre><code>sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
</code></pre>

<p>If they are creating a session for user then it violates the rest standard which is something I don't want. Also, how will I send this digest token from postman? I want to keep my username and password in the DB, which this file does using JdbcSaltRealm.</p>

<p>Please suggest any other alternative. Is this really message digest auth? If not how do I achieve it with Shiro?</p>

<p>Also since this is going to be a module separate from the module having rest based urls. How can I delegate http calls from this module to the actual services once they are authenticated? Is there a way to create <em>""standalone""</em> shiro project which authenticates and returns a true/false.</p>

<p>Thanks in Advance!</p>
","<rest><authentication><shiro><digest-authentication>","0",""
"44435231","CSRF token with Apache Shiro","<p>I have an existing web application based on Apache Shiro for the authentication/authorization parts. I want to implement a mechanism for generating/checking an CSRF token, but there is no support for that in Shiro. I was thinking to use Spring Security for token generation and somehow pass the Shiro session to Spring. There is any clever way to do that ? or any other method to implement CSRF protection for a Shiro based app ?       </p>
","<java><spring><csrf><shiro>","1","44460070"
"20095294","Use of Apache Shiro Session only as a Request-scoped bucket of security data","<p>I use Shiro in backend RESTful Services. I effectively disabled Session Management because i want our Services to be stateless and authenticate and authorise in every request. 
But now i have the following requirement: during the authentication process that happens in my Realm, i go to an SSO server and retrieve some security context data, that i need them to be available in every Resource endpoint method of the RESTful contract. These data may be used by the end-developer to create proper permission strings to check. The problem is that i don't seem to find a proper place to put these data except from the Session object. My questions are: </p>

<p>1). Is Session object the only viable solution to put these data? I know that i can use some custom structure for this reason, but i would really prefer to be something offered by Shiro and logically close to the Subject so that the end-developer knows that this is ""security context data"" that we are talking about. On the other hand, i'm happy with not completely enabling and using the complexities of the Session. 
2). In my solution, i execute a SecurityUtils.getSubject().getSession() in my doGetAuthenticationInfo method of my Realm implementation. I put the data in this Session. At the end of the Request, in the afterCompletion() implementation of my Filter, i execute these: </p>

<pre><code>Subject subject = ThreadContext.unbindSubject(); 
Session session = subject.getSession(false); 
if(session != null) session.stop(); 
</code></pre>

<p>So essentially, i am trying to use Session in a Request-scoped approach. </p>

<p>Is this a good workaround? Can i be sure that my data are specific to the subject (which is created and deleted per request)? Do you know of anything else i should consider?</p>
","<session><shiro>","1",""
"39801116","Reverse Proxy login with credentials from node.js","<p>I currently have a server running Spring in a Tomcat servlet with Shiro Token system for checking if a user is logged in already. It allows cross-domain requests.</p>

<p>In any other domain I can on the client (generally using angular) call...</p>

<p><code>http.get('https://&lt;my_check_login_service&gt;', {withCredentials: true})</code></p>

<p>...and as long as I am already logged in (token doesn't expire) return the user info (name, avatar, etc.).</p>

<p>I have another system now that is a node server (also serving up angular for the client side) for which I would like to call the node server and have it proxy over to the above <strong>my_check_login_service</strong> to get the user, set info on the session object (using express), and then return the user to the client. But also, through the session object, allow me to trust their connection and allow them to perform further api calls depending on the security level of the user returned from the login service.</p>

<p>On the node.js router I can proxy doing this ...</p>

<pre><code>app.get('/checklogin', function(req, res) {
    req.pipe(request.get(""https://&lt;my_check_login_service&gt;"").pipe(res);
}
</code></pre>

<p>...but I don't know how to pass the proper credentials to the service. If I do ...</p>

<p><code>http.get('checkLogin', {withCredentials: true})</code></p>

<p>...it, of course, doesn't work because the credentials for my login_service are not sent to the local server. How can I pass the correct credentials to make this work?</p>

<p>Cheers.</p>
","<node.js><express><proxy><shiro>","6",""
"27477727","Apache Shiro plugin integration with multitenancy plugin in grails","<p>I have a special case that I have to use <strong>compile  'multi-tenant-single-db-0.8.3'</strong> and <strong>compile "":shiro:1.2.1""</strong> together for the case below:-</p>

<p>Having Group domain as Tenant so that, A User(Shiro user used for Authentication) must be unique in it's group / tenant. i.e. User may be duplicate outside it's tenant.So, a user say test@gmail.com  in Group A may also be there in another Group B and so may be in C and so on.</p>

<p>Below are the User and group domains that I have:-</p>

<pre><code>@MultiTenant
class User {
     String username
     String password
     Group group
 }
</code></pre>

<hr>

<pre><code>class Group implements Tenant {
    String name

    static belongsTo = [parent: Group]
    static hasMany = [users: User]
}
</code></pre>

<hr>

<pre><code>class RestRealm {

    def restService

    static authTokenClass = ru.grails.security.RestToken

    def authenticate(authToken) {
        log.info ""Attempting to authenticate ${authToken.token} in REST realm...""
        def token = authToken.token

        // If we don't have user for specified token then user is not authenticated
        def username = restService.getUsernameForToken(token)
        **def user = User.findByEmail(username)**


        if (!user) {
            throw new UnknownAccountException(""No account found for token [${token}]"")
        }
        if (user?.status == PartyStatus.INACTIVE) {
            throw new InactiveUserException();
        }
        log.info ""Found user '${user.email}' in DB""
        return new SimpleAccount(user.email, user.password, ""RestRealm"")
    }

}
</code></pre>

<p>Multitenancy plugin don't work inside the realms (see code among **s.This user must be fetch only from current tenant that has already been set using DomainTenantResolver which implements TenantResolver) and the restservice that I have created to handle Shiro login. One obvious solution that I found is to override functionality of Shiro plugin to handle multitenancy.</p>

<p>Did a lot of search for if there has been some other plugin or Jar over maven to solve this case, but in vain.
But I am puzzled whether there is some solution to this problem that has been implemented by anyone else or not.</p>

<p>Any help would be greatly appreciated.</p>
","<java><maven><grails><shiro><multi-tenant>","0",""
"41989923","Apache shiro - session timeout after login","<p>I'm using apache shiro along with JSF 2 and Primefaces. And what happens is when the user logs in, the Session automatically expires. This way, a ViewExpiredException is thrown. </p>

<p>When i changed javax.faces.STATE_SAVING_METHOD from server to client, it worked and the user logs in successfully and is redirected to the initial page. However, after this point, if i type in the browser URL, for e.g <a href=""http://localhost:8080/myApp/initial.xhtml"" rel=""nofollow noreferrer"">http://localhost:8080/myApp/initial.xhtml</a>, the session will not be restored and another exception is thrown from my application. Looks like only the first redirect works, if i try to go to any other page, the Session cannot be restored (subject.getSession(false) returns null).</p>

<p>Here are my configuration files.</p>

<p>shiro.ini</p>

<pre><code>[main]

authc.loginUrl = /login.xhtml

customRealm = xx.xxx.xxxx.xxxx.xxxx.CustomRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

authenticator = xx.xxx.xxxx.xxxxx.xxxx.CustomAuthenticator

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO

securityManager = org.apache.shiro.web.mgt.DefaultWebSecurityManager
securityManager.realms = $customRealm
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.globalSessionTimeout = 1800000
securityManager.authenticator = $authenticator
sessionManager.sessionDAO = $sessionDAO

ssl.enabled = false


[users]


[roles]


[urls]
</code></pre>

<p>web.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
    xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""
    version=""3.1""&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;primefaces.THEME&lt;/param-name&gt;
        &lt;param-value&gt;omega&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;primefaces.FONT_AWESOME&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;!-- &lt;context-param&gt; &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt; 
        &lt;param-value&gt;Development&lt;/param-value&gt; &lt;/context-param&gt; --&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.FACELETS_REFRESH_PERIOD&lt;/param-name&gt;
        &lt;param-value&gt;0&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;woff&lt;/extension&gt;
        &lt;mime-type&gt;application/font-woff&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;woff2&lt;/extension&gt;
        &lt;mime-type&gt;application/font-woff2&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;eot&lt;/extension&gt;
        &lt;mime-type&gt;application/vnd.ms-fontobject&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;ttf&lt;/extension&gt;
        &lt;mime-type&gt;application/x-font-ttf&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;
    &lt;mime-mapping&gt;
        &lt;extension&gt;svg&lt;/extension&gt;
        &lt;mime-type&gt;image/svg+xml&lt;/mime-type&gt;
    &lt;/mime-mapping&gt;


    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.STATE_SAVING_METHOD&lt;/param-name&gt;
        &lt;param-value&gt;server&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;!-- Apache Shiro --&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;


&lt;/web-app&gt;
</code></pre>

<p>I'm struggling with this for some time now. Are my configuration files correct? Im i missing something? </p>

<p>Thank you,
Erick</p>

<p>----- edit ------ </p>

<p>Found the exception, looks like shiro is not using the DefaultWebSessionManager i configured on my shiro.ini. </p>

<pre><code>DEBUG [default task-33] (AbstractShiroFilter.java:411) - No FilterChainResolver configured.  Returning original FilterChain.
DEBUG [default task-37] (SimpleCookie.java:389) - Found 'JSESSIONID' cookie value [0c5717a5-545b-4033-880c-6c5e4d65a6f5.sesco11]
DEBUG [default task-37] (DefaultSecurityManager.java:447) - Resolved SubjectContext context session is invalid.  Ignoring and creating an anonymous (session-less) Subject instance.
org.apache.shiro.session.UnknownSessionException: There is no session with id [0c5717a5-545b-4033-880c-6c5e4d65a6f5.sesco11]
    at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
    at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
    at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
    at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
    at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
    at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
    at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
</code></pre>

<p>Shiro is calling DefaultSessionManager which makes a call to AbstractDAO. Looks like it is not managing sessions as HttpSession. (DefaultSessionManager.retrieveSessionFromDataSource)</p>
","<shiro><viewexpiredexception>","0",""
"41213760","Unable to load class named com.mysql.jdbc.jdbc2.optional.MysqlDataSource","<p>I'm trying to set up a simple web application that uses Spark and Apache shiro (for authentication and authorization).</p>

<p>I want authentication to happen from MySQL database, but I get a <code>ClassNotFoundException</code> that it could not be found.</p>

<p>This is my shiro.ini configuration file:</p>

<pre><code>[main]
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = ...
ds.password = ...
ds.databaseName = mydb

jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = ""SELECT password FROM users WHERE user_name = ?""
jdbcRealm.userRolesQuery = ""SELECT role_name FROM user_roles WHERE user_name = ?""
jdbcRealm.permissionsQuery = ""SELECT permission FROM roles_permissions WHERE role_name = ?
</code></pre>

<p>And my build.gradle file</p>

<pre><code>group 'test'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = ""Main""

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.sparkjava:spark-core:2.5.4'
    compile 'ch.qos.logback:logback-classic:1.1.8'
    compile 'org.apache.shiro:shiro-core:1.1.0'
    compile 'mysql:mysql-connector-java:6.0.5'
    compile 'commons-logging:commons-logging:1.2'
    compile 'commons-dbcp:commons-dbcp:1.4'
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
</code></pre>

<p>The exception I'm getting is:</p>

<pre><code>Exception in thread ""main"" org.apache.shiro.config.ConfigurationException: Unable to instantiate class [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] for object named 'ds'.  Please ensure you've specified the fully qualified class name correctly.
    at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:143)
    at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:114)
    at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:170)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:119)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:97)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:83)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:41)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
    at Main.main(Main.java:23)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.apache.shiro.util.UnknownClassException: Unable to load class named [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found.
    at org.apache.shiro.util.ClassUtils.forName(ClassUtils.java:148)
    at org.apache.shiro.util.ClassUtils.newInstance(ClassUtils.java:164)
    at org.apache.shiro.config.ReflectionBuilder.createNewInstance(ReflectionBuilder.java:136)
    ... 14 more
</code></pre>

<p>Although I'm not 100% sure, I believe the issue is that the mysql driver is not on the classpath at runtime...</p>
","<gradle><shiro><spark-java>","0",""
"39518150","How Do I Search For AD Groups In Shiro Without A System User?","<p>I am using Shiro to authenticate against Active Directory using <code>ActiveDirectoryRealm</code>. This part works fine and I can log in.</p>

<p>However, I am unable to search for Roles/Groups.</p>

<p>I suspect it is because I do not have a <code>systemUsername/systemPassword</code> configured. I don't have that option either.</p>

<p>If I use an application like <a href=""http://www.ldapadmin.org/"" rel=""nofollow noreferrer"">LdapAdmin</a> I have to put my email and password in the authentication fields in order to connect and browse.</p>

<p><a href=""https://i.stack.imgur.com/IhpwC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IhpwC.png"" alt=""LdapAdmin Connection Properties""></a></p>

<p>When I use Spring Security I don't have to supply any such ""systemUser"". I'm guessing that it uses the same username/password credentials that I supplied to log in.</p>

<p>How do I configure Shiro to do the same?</p>

<p>See below for a rough version of what my <code>shiro.ini</code> looks like.</p>

<pre><code>adRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
adRealm.url = ldap://my.ad.url:389
adRealm.principalSuffix=@example.com
adRealm.systemUsername= 
adRealm.systemPassword= 
adRealm.searchBase = ""OU=org,DC=example,DC=com""
adRealm.groupRolesMap = ""CN=admins"":""admin""
</code></pre>
","<active-directory><shiro>","0",""
"8322428","Java and Spring back-end with Ruby (RhoMobile) front-end security","<p>I am currently building a mobile application using RhoMobile. The application will simply be calling a bunch of REST web services. The back-end REST services are written in Java + Spring. I was wondering what the security considerations are. Our requirements are very simple, we need a secure way for a user to log in with the application, and only then be able to call the web services.</p>

<p>Does anyone have any experience with marrying these technologies. And what are my options. At the moment I am looking at either using Spring Security or Shiro, but just wondering if anyone has better experience.</p>

<p>Just as a note, we will be using JSON for all communication.</p>
","<java><spring-security><rhomobile><shiro>","2","8324227"
"38334227","CORS Error on Chrome","<p>I don't see myself making a cross domain AJAX request. However, I am still getting a CROSS related error. This happens only on Chrome. Firefox and Safari work fine.  </p>

<p><strong>Error:</strong>
""Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.""</p>

<p><strong>The setup is:</strong></p>

<ol>
<li>AngularJS SPA</li>
<li>Nginx to serve static web content and as reverse proxy to forward https AJAX request as http request to local jettty/spring application</li>
<li>Api exposed as part of spring application is protected using shiro library</li>
</ol>

<p><strong>General</strong></p>

<pre><code>Request URL:https://domainName.com/api/path
Request Method:OPTIONS
Status Code:401 
</code></pre>

<p><strong>Request Headers</strong></p>

<pre><code>:authority:domainName.com
:method:OPTIONS
:path:/api/path
:scheme:https
accept:*/*
accept-encoding:gzip, deflate, sdch, br
accept-language:en-US,en;q=0.8
access-control-request-headers:accept, authorization, content-type
access-control-request-method:POST
origin:https://www.domainName.com
</code></pre>

<p><strong>Response Headers:</strong></p>

<pre><code>content-length:0
date:Tue, 12 Jul 2016
server:nginx
status:401
www-authenticate:BASIC realm=""application""
</code></pre>

<p>Any idea for the CORS error?</p>
","<nginx><cors><jetty><shiro><preflight>","1",""
"41981161","buji-pac4j security filter is not enabling authorizers","<p>I am using buji-pac4j security library support in my POC for saml2 authentication and authorization.</p>

<p>After successful athentication my wso2 service provider is redirecting to callback url with out any authorizations configured above.</p>

<p>I am new to apache shiro and wso2 as well.</p>

<p>Please any one help me how to enable authorization through shiro security filter after successful athentication.</p>

<p>below is my shiro.ini</p>

<pre><code>[main]
############################################################################
# CONFIG:
############################################################################
roleAdminAuthGenerator = org.pac4j.demo.shiro.RoleAdminAuthGenerator

saml2Config = org.pac4j.saml.client.SAML2ClientConfiguration
saml2Config.keystorePath = resource:samlKeystore.jks
saml2Config.keystorePassword = pac4j-demo-passwd
saml2Config.privateKeyPassword = pac4j-demo-passwd
saml2Config.identityProviderMetadataPath = resource:metadata-okta.xml
saml2Config.maximumAuthenticationLifetime = 20
saml2Config.serviceProviderEntityId = xxxxx
saml2Config.serviceProviderMetadataPath = sp-metadata.xml

saml2Client = org.pac4j.saml.client.SAML2Client
saml2Client.configuration = $saml2Config
saml2Client.callbackUrl = http://localhost:8080/callback
saml2Client.includeClientNameInCallbackUrl = false
saml2Client.authorizationGenerators = $roleAdminAuthGenerator

clients = org.pac4j.core.client.Clients
clients.clients = $saml2Client

requireRoleAdmin = org.pac4j.core.authorization.authorizer.RequireAnyRoleAuthorizer
requireRoleAdmin.elements = CWR

customAuthorizer = org.pac4j.demo.shiro.CustomAuthorizer

excludedPathMatcher = org.pac4j.core.matching.ExcludedPathMatcher
excludedPathMatcher.excludePath = ^/facebook/notprotected\.jsp$

config = org.pac4j.core.config.Config
config.clients = $clients
config.matchers = excludedPath:$excludedPathMatcher

############################################################################
# REALM &amp; FILTERS:
############################################################################
pac4jRealm = io.buji.pac4j.realm.Pac4jRealm

pac4jSubjectFactory = io.buji.pac4j.subject.Pac4jSubjectFactory
securityManager.subjectFactory = $pac4jSubjectFactory

#################################################################################################################
saml2SecurityFilter = io.buji.pac4j.filter.SecurityFilter
saml2SecurityFilter.config = $config
saml2SecurityFilter.clients = SAML2Client
saml2SecurityFilter.authorizers = $requireRoleAdmin
#################################################################################################################

callbackFilter = io.buji.pac4j.filter.CallbackFilter
callbackFilter.config = $config
callbackFilter.multiProfile = true

[urls]

/saml2/** = saml2SecurityFilter
/callback/** = callbackFilter
/logout = logout
</code></pre>

<p>I am using wso2 5.0.0 service provider attached is my SP configuration
<a href=""https://i.stack.imgur.com/kB6To.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
","<apache><wso2><saml-2.0><shiro>","0",""
"26795578","shiro redirect by role on authentication webapp","<p>We are Writing JAVA WebApp with JAX-RS(Jersey) using Shiro as Sequrity. </p>

<p>We have: </p>

<ul>
<li>3 different roles each has own home page</li>
<li>Single login page for all users</li>
</ul>

<p>When user logs in, <strong>How to redirect user to his own home page according to his role</strong> after authentication.</p>

<p>Some code from shiro ini: </p>

<pre><code>authc.loginUrl = /login.html

[urls]
/apps/admin/** = authc, roles[""admin""]
/apps/teacher/** = authc, roles[teacher]
/apps/student/** = authc, roles[student]
</code></pre>

<p><strong>Ex:</strong> </p>

<ol>
<li>Someone tried to access our webapp, and he will be redirected to <em>login.html</em></li>
<li>After entering username/password he will redirected to his own homepage accordign to role
<ul>
<li><em>/apps/admin/home.html</em> if he has <em>admin</em> role</li>
<li><em>/apps/teacher/home.html</em> if he has <em>teacher</em> role</li>
<li><em>/apps/student/home.html</em> if he has <em>student</em> role</li>
</ul></li>
</ol>
","<java><security><login><jax-rs><shiro>","1","27022760"
"15151871","Refreshing page results in re-login?","<p>I've configured shiro in the project to work for username/password validation.  'filters' and 'urls' are as below. </p>

<pre><code>[filters]   
authc.loginUrl = /login.jsp 
shiro.loginUrl = /login.jsp 
[urls]   
/login.jsp = anon, authc 
/index.jsp = authc 
</code></pre>

<p>Now anytime when we access index.jsp, it will redirect to login.jsp, even if I just refresh index.jsp. </p>

<p>How can I make it keep stay on index.jsp when I refresh index.jsp if cache still know that this user has already logged on? </p>

<p>By the way, I haven't configured cache manager so when started it would pop out the error like 'org.apache.shiro.realm.AuthorizingRealm - No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.' Shall I configure as below (I only use shiro core &amp; web)? </p>

<pre><code>builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager 
securityManager.cacheManager = $builtInCacheManager 
</code></pre>
","<jsp><shiro>","1",""
"44592526","Apache Shiro roles and permissions not working","<p>I'm using Apache Shiro (v1.2.3) and I have username/password authentication setup correctly and it's working (I'm storing the password hashes and salts in a remote database). I'm now trying to setup permissions using roles. I have a single realm that extends <code>AuthorizingRealm</code> e.g.</p>

<pre><code>public class MyRealm extends AuthorizingRealm {

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(
            AuthenticationToken token) throws AuthenticationException {
        // no problems here...
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principles) {
        Set&lt;String&gt; roles = // get the roles for this user from the DB
        LOG.info(""Found roles =&gt; "" + roles.toString());
        return new SimpleAuthorizationInfo(roles);
    }

}
</code></pre>

<p>My <code>shiro.ini</code> looks like this:</p>

<blockquote>
  <p>[main]<br>
  myRealm = ie.enki.closing.users.MyRealm</p>
  
  <p>credentialsMatcher =
  org.apache.shiro.authc.credential.Sha256CredentialsMatcher<br>
  credentialsMatcher.storedCredentialsHexEncoded = false<br>
  credentialsMatcher.hashIterations = 1024  </p>
  
  <p>myRealm.credentialsMatcher = $credentialsMatcher  </p>
  
  <p>cacheManager = org.ehcache.integrations.shiro.EhcacheShiroManager<br>
  securityManager.cacheManager = $cacheManager  </p>
  
  <p>[roles]<br>
  admin = *<br>
  staff = resource_1:action_1 </p>
</blockquote>

<p>The relevant startup logging reports that ehcache is being setup correctly but before it does, it also mentions this:</p>

<blockquote>
  <p>[main] INFO org.apache.shiro.realm.text.IniRealm - IniRealm defined,
  but there is no [users] section defined.  This realm will not be
  populated with any users and it is assumed that they will be populated
  programatically.  Users must be defined for this Realm instance to be
  useful.<br>
  [main] INFO org.apache.shiro.realm.AuthorizingRealm - No cache
  or cacheManager properties have been set.  Authorization cache cannot
  be obtained.<br>
  ...<br>
  some ehcache setup logging...</p>
</blockquote>

<p>In my testing, <code>currentUser.isPermitted(""resource_1:action_1"")</code> returns <code>false</code> even though my logging says that I do have the <code>admin</code> role (I've tried it with the <code>staff</code> role too).</p>

<p>The shiro docs talk about setting up a [users] section in the <code>shiro.ini</code> and assigning roles to users like:</p>

<blockquote>
  <p>[users]<br>
  some_user = password, role1, role2</p>
</blockquote>

<p>...but I don't want to define users and their passwords in the ini file. That's what my database is for. Have I misunderstood something in the configuration?</p>

<p>After going through the docs again, it seems that the [roles] section is only applicable if you're using the [users] section to define a small number of static users. If that's true, how do you associate roles with permissions for users defined in a database. The <a href=""https://shiro.apache.org/realm.html#realm-authorization"" rel=""nofollow noreferrer"">docs that might reveal this info</a> are incomplete.</p>
","<java><shiro>","0","44634542"
"39104272","How can I search for ldap fields when using ActiveDirectoryRealm in Apache Shiro?","<p>We use Apache Shiro to authenticate and authorize users using our active directory.</p>

<p>Authenticating the user and mapping groups works just fine using the following config:</p>

<pre><code>adRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
adRealm.searchBase = ""OU=MYORGANIZATION,DC=MYDOMAIN,DC=COM""
adRealm.groupRolesMap = ""CN=SOMEREADGROUP"":""read"",""CN=SOMEMODIFYGROUP"":""modify"",""CN=SOMEADMINGROUP"":""admin""
adRealm.url = ldaps://my.ad.url:636
adRealm.systemUsername= systemuser
adRealm.systemPassword= secret
adRealm.principalSuffix= @myorganization.mydomain.com
</code></pre>

<p>I can authenticate in Shiro using the following lines:</p>

<pre><code>String user = ""someuser"";
String password = ""somepassword"";
Subject currentUser = SecurityUtils.getSubject ();
if (!currentUser.isAuthenticated ()){
  UsernamePasswordToken token = new UsernamePasswordToken (user,
              password);
  token.setRememberMe (true);
  currentUser.login (token);
}
</code></pre>

<p>We now want to get more user information from our ActiveDirectory. How can I do that using Apache Shiro? I was not able to find anything about it in the documentation.</p>

<p>In the source code of ActiveDirectoryRealm I found this line:</p>

<pre><code>NamingEnumeration answer = ldapContext.search(searchBase, searchFilter, searchArguments, searchCtls);
</code></pre>

<p>So the first part of the answer is clear: use the ldapContext to search something in it. But how can I retrieve the LdapContext?</p>
","<apache><active-directory><ldap><shiro>","1","39107959"
"28697939","Netty / Shiro Integration","<p>Instead of writing my own authentication handler, I'd like to use an existing authentication framework, e.g. Apache Shiro. After some research I have found that integrating Shiro with netty is not a straight forward task, although passing the Subject along the channel is not a problem, but rather setting up all the required handlers. Is there an existing integration (e.g. a ChannelHandler etc.) or at least a public sample that shows how to authenticate HTTP requests in netty with Shiro with the typical features (remember me, cookie store for subject etc.)?</p>

<p>Best regards and thanks in advance, Remigius.</p>
","<http><netty><shiro>","0","30225039"
"34249561","creating shiroFilter faild","<p>When I added <strong><em>Shiro</em></strong> to my project, it encounters a problem that said <strong>creating shiroFilter failed</strong>.</p>

<p>The following is my error log.</p>

<pre><code>严重: Context initialization failed
 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilter' defined in class path resource [applicationContext.xml]: Cannot resolve reference to bean 'securityManager' while setting bean property 'securityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in class path resource [applicationContext.xml]: Cannot resolve reference to bean 'myShiroRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'myShiroRealm': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'realmService': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private ccu.springDataDao.system.UserInfoRepo ccu.service.RealmServiceImpl.userInfoRepo; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [ccu.springDataDao.system.UserInfoRepo] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
 at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
 at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
 at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
 at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
 at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
 at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
 at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:232)
 at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:618)
 at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:467)
 at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
 at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
 at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
 at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4772)
 at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5196)
 at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
 at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)
 at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1399)
 at java.util.concurrent.FutureTask.run(FutureTask.java:262)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
 at java.lang.Thread.run(Thread.java:745)
 Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityManager' defined in class path resource [applicationContext.xml]: Cannot resolve reference to bean 'myShiroRealm' while setting bean property 'realm'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'myShiroRealm': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'realmService': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private ccu.springDataDao.system.UserInfoRepo ccu.service.RealmServiceImpl.userInfoRepo; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [ccu.springDataDao.system.UserInfoRepo] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
 at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
 at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
 at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
 at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
 at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
 at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
 at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
 ... 24 more 
</code></pre>

<hr>

<p>(Why it say ""It looks like your post is mostly code; please add some more details."" aslo.)</p>

<p>And this is Shiro setup:</p>

<p><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt; 
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;<br>
    &lt;property name=""filters""&gt;
        &lt;map&gt;&lt;entry key=""authc"" value-ref=""formAuthenticationFilter""/&gt;&lt;/map&gt;
    &lt;/property&gt; 
    &lt;property name=""filterChainDefinitions""&gt; 
        &lt;value&gt;<br>
            /LoginCtr/**=anon
            /areaMessagectr/**=authc 
            /checkcepairplanctr/**=authc
            /acceptancectr/**=authc
            /schedulectr/**=authc
            /maintenance/**=authc
            /maintenanceapplicationctr/**=authc
            /postmaintenanceplanctr/**=authc
        &lt;/value&gt; 
    &lt;/property&gt; 
 &lt;/bean&gt;</code></p>
","<spring-mvc><spring-data><shiro>","0",""
"30985435","Securing the domain object with Spring ACL 3","<p>I have a RESTful service which uses the internal business service to save and fetch information from the databases. The webservice uri looks something like, <code>/api/entity/{id}</code>, to which the web UI application requests with the <code>ID</code> of the entity. Here the problem is the <code>{id}</code> can be literally anyone's id, that is, the record of someone else that should not be seeing by the user using the application. In order to solve this, using the Spring Security, I wrote a SPEL, something like, </p>

<pre><code>@Service
interface EntityService {
    @PostAuthorize(""returnObject.userId==principal.id"")
    public ReturnObject get(long i);
}
</code></pre>

<p>Is the above approach the right way to solve this? (In my earlier projects my developers used to write all these security stuffs into their business methods.) As the complexity of the security grows for an entity, say, the administrator of the user (who have created the record) can see the object but not other administrators, or group administrators can see the record etc, this approach too gets complicated. 
Besides, after digging my head into many of the Spring-ACL library classes, I somehow have managed to configure the Spring-ACL, invoke its permission evaluator evaluate the <code>hasPermission</code> method in the SPEL with the authorization of the entity and its unique-identifier loaded from the database. </p>

<pre><code>@Service
interface EntityService {
    @PreAuthorize(""hasPermission(#id, 'com.project.domain.ReturnObject', 'read')"")
    public ReturnObject get(long id);
}
</code></pre>

<p>But the problem I see with this approach is, every time a user creates a record shouldn't the application create an ACL permission too (ACL_<code>ENTRY</code>) for that object? Is this a right way to approach this problem, or is there some other way I didn't see through? I know this is not a new problem, and someone out there should have solved it already in many ways. I want to know how the problem was solved, not in the traditional way, in the service logic or in the queries, but using frameworks such as Spring-ACL or Apache Shiro.</p>
","<java><spring><spring-security><acl><shiro>","0",""
"8581655","EclipseLink JPA username/password Lookup deletes record on running the app","<p>I am using apache shiro to authenticate a user and i want to simply print the username out to my console to check if my finder function is working properly, it seems as when i add a record to the user (using a sql statement and not eclipseLink, the record is deleted when the application is run ?)</p>

<p>Here is how i am trying to retrieve a single user by username:</p>

<pre><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken) throws AuthenticationException {
    UsernamePasswordToken token = (UsernamePasswordToken) authcToken;
    Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
    String tempUsername = token.getUsername();
    String password = """";
    Users user;

    // Null username is invalid
    if (tempUsername == null) {
        throw new AccountException(""Null usernames are not allowed by this realm."");
    }
    AuthenticationInfo info = null;
    // this will query and find the users by the specified username and then return us the single result
    user = getAuthorizedUser(Users.findUsersesByUsernameEquals(tempUsername));
    System.out.print(user.getUsername());
    System.out.println(""yea the username = "");
    password = user.getPassword();
    info = buildAuthenticationInfo(tempUsername, password.toCharArray());
    return info;
}
/*Build the required authentication info; Replace with SaltAuthenticationInfo for salted passwords*/
protected AuthenticationInfo buildAuthenticationInfo(String username, char[] password) {
          return new SimpleAuthenticationInfo(username, password, getName());
}

protected Users getAuthorizedUser(TypedQuery&lt;Users&gt; q){
    System.out.println(""working authentication"");

      return q.getSingleResult(); 
}
</code></pre>

<p>Is this because i am not using JPA to persist and add the user but rather writing a sql statement outside my application?</p>
","<jpa><eclipselink><shiro>","0","8593997"
"5601506","Http Authentication Server Library","<p>Is there any Java library to verify a Basic or Digest Http authentication? Spring Security provides both but Apache Shiro only have Basic.</p>

<p>Is there any library (other than copy-paste classes from Spring) to help implement this?</p>

<p>Thanks.</p>
","<java><http><authentication><spring-security><shiro>","2",""
"25166694","My webservice using apache shiro always return unauthorized","<p>I have this shiro.ini:</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource  
ds.resourceName = java:/comp/env/jdbc/myDS

# JDBC realm config  
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm  
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = ""SELECT password FROM user WHERE username = ?""
jdbcRealm.dataSource = $ds


credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024

jdbcRealm.credentialsMatcher = $credentialsMatcher

[urls]
/logout = logout
/** = authcBasic
</code></pre>

<p>Im debbuging JndiRealm in doGetAuthenticationInfo. I get an exception when shiro try to execute my authenticationQuery in getPasswordForUser method. Those are the lines that execute the select:</p>

<pre><code>ps = conn.prepareStatement(authenticationQuery);
ps.setString(1, username);
</code></pre>

<p>My atuthenticationQuery is ""SELECT password FROM user WHERE username = ?"" so trying to access position 1 is invalid since it starts from position 0. Is that a bug on JndiRealm from apache shiro or i wrote my sql wrong?</p>
","<web-services><security><shiro><unauthorized>","1",""
"18333098","Using an email address as the unique identifier instead of username with Shiro for Grails","<p>I'm looking to move from using a username / password combination for authentication in my Grails app to using email / password. I have attempted to make the changes to the AuthControler.groovy and ShiroDbReal.groovy to allow this but it doesn't allow me to login.</p>

<p>Here is my model class</p>

<pre><code>class User {
String email
String passwordHash
byte[] passwordSalt


static belongsTo = Account
static hasMany = [ roles: Role, permissions: String ]

static constraints = {
    email (nullable: false, blank: false, unique: true)
}
}
</code></pre>

<p>Here is my AuthController signIn function</p>

<pre><code>def signIn = {
    def authToken = new UsernamePasswordToken(params.email, params.password as String)

    if (params.rememberMe) {
        authToken.rememberMe = true
    }

    def targetUri = params.targetUri ?: ""/""

    def savedRequest = WebUtils.getSavedRequest(request)
    if (savedRequest) {
        targetUri = savedRequest.requestURI - request.contextPath
        if (savedRequest.queryString) targetUri = targetUri + '?' + savedRequest.queryString
    }

    try{
        SecurityUtils.subject.login(authToken)
        redirect(uri: targetUri)
    }
    catch (AuthenticationException ex){
        log.info ""Authentication failure for user '${params.username}'.""
        flash.message = message(code: ""login.failed"")
        redirect(action: ""login"", params: m)
    }
}
</code></pre>

<p>Finally my ShiroDbReal.groovy</p>

<pre><code>    def authenticate(authToken) {
    log.info ""Attempting to authenticate ${authToken.username} in DB realm...""
    def email = authToken.username

    if (email == null) {
        throw new AccountException(""Null usernames are not allowed by this realm."")
    }

    def user = User.findByEmail(email)
    if (!user) {
        throw new UnknownAccountException(""No account found for user [${username}]"")
    }

    log.info ""Found user '${user.username}' in DB""
    def account = new SimpleAuthenticationInfo(email, user.passwordHash, new SimpleByteSource(user.passwordSalt), ""ShiroDbRealm"")

    if (!credentialMatcher.doCredentialsMatch(authToken, account)) {
        log.info ""Invalid password (DB realm)""
        throw new IncorrectCredentialsException(""Invalid password for user '${username}'"")
    }

    return account
}
</code></pre>

<p>I'm recieving a 'groovy.lang.MissingPropertyException: No such property: username for class: icango.User' exception in the debugger at the 'SecurityUtils.subject.login(authToken)' method call.</p>

<p>I'm not really sure where else to look because I can't find any documentation about changing the unique identifier. Any help would really be appreciated.</p>
","<authentication><grails><shiro>","1","18335748"
"12866956","Why does ShiroWebModule default to a non-validating SessionManager?","<p><code>ServletContainerSessionManager</code> isn't a <code>ValidatingSessionManager</code>; does it defer to the underlying container to handle orphan cleanup? That doesn't seem right.</p>

<p>I assume that switching to <code>DefaultWebSessionManager</code>, as it's a full-featured implementation, would have no risks or drawbacks? 
Is there any reason that's not the default for this module?</p>
","<java><jersey><guice><shiro>","0","12868156"
"41918916","Apache shiro + HTTP method level permission","<p>I am developing a REST based web application where rest services has Apache shiro integrated to perform basic authentication and role based authorization.</p>

<p>Now I want to enhance the authorization functionality with permissions configuration at method level(Micro service in case of REST). If I am not wrong, Apache shiro provides HttpMethodPermissionFilter class which can be used as filter to restrict incoming requests based on its HTTP method(GET,POST,DELETE,HEAD etc...) which internally checks for the permissions from the roles_permissions table of database we configured or INI configuration file.</p>

<p>So to implement HTTP method based permission functionality, Do I need to make any changes in my shiro.ini file. Or my jdbc realm has something to do.</p>

<p>shiro.ini file</p>

<pre><code>[main]
userRoles = org.apache.shiro.web.filter.authz.RolesAuthorizationFilter

jdbcRealm = my.custom.jdbc.realm.YhJdbcRealm
securityManager.realms = $jdbcRealm

[urls]
# Allowing login page to any user
/rest/login/** = anon

# Page 1
/rest/page1/** = noSessionCreation, authcBasic, userRoles[role1]


# page 2
/rest/page2/** = noSessionCreation, authcBasic, userRoles[role1,role2,role3]


# page 3
/yhrest/page3/** = noSessionCreation, authcBasic, userRoles[role1,role3]

/rest/** = noSessionCreation, authcBasic
</code></pre>

<p>custom jdbc realm</p>

<pre><code>public class YhJdbcRealm extends JdbcRealm
{
    public YhJdbcRealm()
    {
        loadDataSource();
    }

    private void loadDataSource()
    {
        this.dataSource = JdbcConnection.initConnection();
        this.permissionsLookupEnabled = true;
        this.authenticationQuery = ""SELECT password FROM users WHERE username = ?"";
        this.userRolesQuery = ""SELECT role_name FROM user_roles WHERE username = ?"";
        this.permissionsQuery = ""SELECT permission FROM roles_permissions_temp WHERE role_name = ?"";
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException
    {
        AuthenticationInfo info = super.doGetAuthenticationInfo(token);
        return info;
    }
}
</code></pre>

<p>I am new to apache shiro so any reference would be grateful.
Thanks.</p>
","<java><apache><rest><permissions><shiro>","0","41940831"
"27340175","Apache shiro blocks p:imageCropper primefaces","<p>I'm using primefacess-5.1 and apache shiro 1.2.2 with pax-shiro 0.1.0 overlay. Everything stand on Glassfish 4.0 . My problem is that when I comment all fragment below in my web.xml</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt; /*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>ImageCropper works fine but shiro doesn't. When I uncomment code above shiro works fine but when I press button crop in p:imageCropper I get error 500 whitch you can see below. </p>

<pre><code>            [2014-12-06T18:19:27.913+0100] [glassfish 4.0] [WARNING] [] [javax.enterprise.web] [tid: _ThreadID=23 _ThreadName=http-listener-1(1)] [timeMillis: 1417886367913] [levelValue: 900] [[
  StandardWrapperValve[Faces Servlet]: Servlet.service() for servlet Faces Servlet threw exception
java.lang.NullPointerException
    at org.primefaces.component.imagecropper.ImageCropperRenderer.getConvertedValue(ImageCropperRenderer.java:141)
    at javax.faces.component.UIInput.getConvertedValue(UIInput.java:1046)
    at javax.faces.component.UIInput.validate(UIInput.java:976)
    at javax.faces.component.UIInput.executeValidate(UIInput.java:1249)
    at javax.faces.component.UIInput.processValidators(UIInput.java:712)
    at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:1261)
    at javax.faces.component.UIForm.processValidators(UIForm.java:253)
    at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:1261)
    at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:1261)
    at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:1195)
    at com.sun.faces.lifecycle.ProcessValidationsPhase.execute(ProcessValidationsPhase.java:76)
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)
    at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:646)
    at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1682)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:344)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:316)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)
    at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:734)
    at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:673)
    at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:174)
    at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:357)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:260)
    at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:188)
    at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:191)
    at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:168)
    at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:189)
    at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:288)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:206)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:136)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:114)
    at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)
    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:838)
    at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:113)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:115)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:55)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:135)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:564)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:544)
    at java.lang.Thread.run(Thread.java:744)
]]
</code></pre>

<p>My JSF form is below</p>

<pre><code>&lt;h:body&gt;

&lt;h:form enctype=""multipart/form-data""&gt;
    &lt;p:growl id=""msgs"" showDetail=""true""/&gt;

    &lt;h:panelGrid columns=""2""&gt;
        &lt;p:imageCropper id=""ic""  value=""#{cropperView.croppedImage}"" image=""http://rg-rgb-szkola:8080/dpsmvn-web/admin/images/tmp/portret_wup.jpg"" initialCoords=""225,75,300,125""/&gt;
        &lt;p:graphicImage alt=""po wykadrowaniu"" id=""cropped"" rendered=""#{cropperView.photocomlete==1?true:false}"" library=""images""  name=""twarze/pracownicy/#{cropperView.newImageName}.jpg"" /&gt; 
    &lt;/h:panelGrid&gt;

    &lt;p:commandButton value=""Crop"" action=""#{cropperView.crop}""   update=""msgs ic cropped"" icon=""ui-icon-scissors"" ajax=""false""/&gt;
    &lt;p:commandButton value=""Zapisz"" action=""#{cropperView.saveImage()}"" ajax=""false"" /&gt;
&lt;/h:form&gt;

        &lt;/h:body&gt;
</code></pre>

<p>My shiro config is below</p>

<pre><code>[main]  

authc.successUrl = /witamy.xhtml
authc.loginUrl = /login.xhtml
roles.unauthorizedUrl = /accessdenied.xhtml
ssl.enabled = false

[urls]

/javax.faces.resource/** = anon
/ = anon
/images/tla/sloneczniki.jpg = anon
/images/tla/liscie-tlo.jpg = anon
/index.xhtml = anon
/login.xhtml = authc
/logout.xhtml = logout

/witamy.xhtml = authc


/pielegniarka/** = authc, roles[adminpielegniarka]
/admin/** = authc, roles[root]

/** = authc
</code></pre>

<p>Code reponsible for variable ImageCropper imagecropper is below and is inside CDI bean with @SessionScoped. I can say also that reason of error is NULL value of this variable. I suppose that shiro doesn't recognized mime-type of this variable. I can say that because on start my work with this component i got warning WARNING: JSF1091 </p>

<pre><code>private CroppedImage croppedImage;

public CroppedImage getCroppedImage() {
    return croppedImage;
}

public void setCroppedImage(CroppedImage croppedImage) {
    this.croppedImage = croppedImage;
}
</code></pre>

<p>My question is how to synchronize apache shiro with p:imageCropper primefaces component ?</p>
","<java-ee><primefaces><jsf-2.2><shiro><glassfish-4>","0",""
"35106324","Apache HttpClient cooke rejected","<p>We are developing a distributed system with six different deployed artifacts where each of them has their own REST API. These systems communicate via a Java client with each other over a secure SSL connection (with X509 client authentication with the help of Apache shiro).</p>

<p>Now at each client call to a REST resource we get the following warning (I blacked out parts of the warning with stars): </p>

<pre><code>WARN  org.apache.http.client.protocol.ResponseProcessCookies.processCookies(ResponseProcessCookies.java:127): Cookie rejected: ""[version: 0][name: rememberMe][value: deleteMe][domain: local.****.net][path: /abc][expiry: Fri Jan 29 11:25:07 UTC 2016]"". Illegal path attribute ""/abc"". Path of origin: ""/***/backend/abc/v1/some/other/parts/of/resource""
</code></pre>

<p>Now the problem is that we don't set any cookies in the clients and I can't figure out where and how the cookie is set (or if I can ignore the warning). I think that it correlates with the Apache Shiro configuration. The relevant cookie path of the shiro.ini looks like the following: </p>

<pre><code>cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = ***cookie
cookie.path = /
</code></pre>

<p>I hope you can help me eliminating the warning. If you need some more code examples, please let me know. </p>
","<java><authentication><cookies><apache-httpclient-4.x><shiro>","0",""
"32034741","ERR_TOO_MANY_REDIRECTS with Shiro on Glassfish","<p>I am using Apache Shiro 1.2.3 on Glassfish 4.1 now. Before I ran my app on IBM Websphere 8.5.</p>

<p>If I try to access the protected directories on Glassfish, I get the following error:</p>

<pre><code>ERR_TOO_MANY_REDIRECTS
</code></pre>

<p>Sure - if I am not logged in, I should be forwarded to the login page. But there seems to be a problem. Here is my shiro.ini (a bit disguised):</p>

<pre><code>    [main]

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password FROM Users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role FROM Users WHERE username = ?

ds = org.postgresql.ds.PGPoolingDataSource
ds.serverName = 159.XX.XX.XX:54XX
ds.user = coXXXX
ds.password = q3XXXX
ds.databaseName = coXXXX
jdbcRealm.dataSource= $ds

authc.loginUrl = /backend
authc.successUrl = /backend/dashboard
user.loginUrl = /backend


passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = true
credentialsMatcher.hashIterations = XXXX

multipleroles = com.travelagent.filters.MultipleRolesAuthorizationFilter

[urls]
/backend = authc
/backend/logout = logout
/member/** = user, multipleroles[""admin"", ""guest""]
/backend/** = user, roles[admin]
</code></pre>

<p><strong>For handsome URLs I am using PrettyFaces.</strong></p>
","<java><jsf><glassfish><shiro>","0",""
"31927012","Disable only unauthenticated adding of datasets to Fuseki","<p>I'm trying to set up a SPARQL endpoint for an Organisation as part of a <a href=""http://%20http://blog.52north.org/2015/05/28/sparql-endpoint-and-interoperability-of-envirocar-data/"" rel=""nofollow"">Open source project</a> with Apache Jena Fuseki  and will be hosting it on a server publicly soon and i've uploaded the open data into it. </p>

<p>While i want users to be able to directly query the dataset without any authentication i'd like to disable only adding of new datasets through any sort of auth(Even Basic auth would do as of now , ie : major concern is only that other people should not corrupt the endpoint) </p>

<p>Right now i've identified three ways users can do this </p>

<p>1) Through the admin UI from a browser ( internally calls the POST request to {fusekihostedURL}/dataset/update?=xxxx )</p>

<p>2) through a POST request through command line to the publicly hosted dataset</p>

<p>3) through the Sparql Graph protocol ( sends POST request to {fusekiURl}/dataset/data )</p>

<p>i can use a shiro.ini with a basic auth of username and password , but that blocks the fuseki landing page itself  with a pop-up of username and password which i don't want to enable querying for the public .</p>

<p>Apart from sitting behind a reverse proxy ( using fuseki as a war file on tomcat so blocking that port would mean blocking all other applications ) is there anything that could be done ?</p>

<p>Any help would be greatly appreciated </p>
","<sparql><jena><shiro><endpoint><fuseki>","0",""
"37063937","Difference between Apache Shiro and Central Authentication Service (CAS)","<p><a href=""https://www.apereo.org/projects/cas"" rel=""nofollow"">CAS</a></p>

<p><a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a></p>

<p>I need to know the difference between CAS &amp; Apache Shiro.
Are they both used for Single Sign On or does Apache Shiro depend on CAS for authentication</p>
","<cas><shiro>","0",""
"18734946","Can you use Shiro for Grails without Roles and Permissions?","<p>I wonder if you can use Shiro-Plugin for Grails without having permissions and roles enabled?</p>

<p>In our current Project, we have an external database with just username and password and I am not able to create the permissions and roles table.
Is there a way to implement one Shiro user with automatic permission to all Domains without role-management?</p>
","<grails><shiro><role>","0",""
"42571307","Shiro authentication for ldap with zeppelin","<p>What should be the properties of ldap realm for shiro authentication to ldap group in company for zeppelin.I tried setting up some of the propertiesbut it didnt work.</p>

<ul>
<li>ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm </li>
<li>ldapRealm.userDnTemplate = uid={0},ou=Groups,o=company.com </li>
<li>ldapRealm.contextFactory.url = ldap://ldap.company.com:389 </li>
<li>ldapRealm.contextFactory.authenticationMechanism = simple</li>
</ul>
","<authentication><ldap><shiro><apache-zeppelin>","0",""
"35828357","shiro integrate spring with servlet3.1, tomcat can not start","<p><strong>shiro config</strong></p>

<pre><code>@Configuration
@ComponentScan({ ""com.butler.service"" })
public class SpringShiroConfig {
@Bean
public EhCacheManager ehCacheManager() {
    EhCacheManager ehCacheManager = new EhCacheManager();
    ehCacheManager.setCacheManagerConfigFile(""classpath:ehcache.xml"");
    return ehCacheManager;
}

@Bean(name = ""jdbcUserRealm"")
public JdbcUserRealm jdbcUserRealm() {
    return new JdbcUserRealm();
}

@Bean(name = ""securityManager"")
public DefaultWebSecurityManager securityManager(@Qualifier(""jdbcUserRealm"") Realm jdbcUserRealm) {
    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
    securityManager.setRealm(jdbcUserRealm);
    return securityManager;
}

@Bean(name = ""formAuthenticationFilter"")
public FormAuthenticationFilter formAuthenticationFilter() {
    FormAuthenticationFilter filter = new FormAuthenticationFilter();
    filter.setLoginUrl(""/admin/login"");
    return filter;
}

@Bean(name = ""shiroFilter"")
public ShiroFilterFactoryBean shiroFilterFactoryBean(
        @Qualifier(""securityManager"")SecurityManager securityManager,
        @Qualifier(""formAuthenticationFilter"")FormAuthenticationFilter filter) {
    ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();
    shiroFilterFactoryBean.setLoginUrl(""/admin/login"");
    shiroFilterFactoryBean.setSuccessUrl(""/admin/main"");
    shiroFilterFactoryBean.setUnauthorizedUrl(""admin/unauthorized"");
    shiroFilterFactoryBean.setSecurityManager(securityManager);
    shiroFilterFactoryBean.setFilterChainDefinitions(
        ""/admin/login = anon\n"" +
        ""/admin/logout = logout\n"" +
        ""/admin* = authc"" +
        ""/resources* = anon\n""
    );

    //filters
    Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
    filters.put(""authc"", filter);

    shiroFilterFactoryBean.setFilters(filters);

    return shiroFilterFactoryBean;
}
</code></pre>

<p><strong>servlet container initial</strong></p>

<pre><code>public class WebAppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {
@Override
protected Class&lt;?&gt;[] getRootConfigClasses() {
    return new Class&lt;?&gt;[] {
        SpringShiroConfig.class
    };
}

@Override
protected Class&lt;?&gt;[] getServletConfigClasses() {
    return new Class&lt;?&gt;[] {
        SpringWebConfig.class
    };
}

@Override
protected String[] getServletMappings() {
    return new String[] {""/""};
}

@Override
public void onStartup(ServletContext servletContext) throws ServletException {
    super.onStartup(servletContext);

    FilterRegistration.Dynamic shiroFilter = servletContext.addFilter(""shiroFilter"", DelegatingFilterProxy.class);
    shiroFilter.addMappingForUrlPatterns(EnumSet.allOf(DispatcherType.class), true, ""/*"");
    shiroFilter.setInitParameter(""targetFilterLifecycle"", ""true"");
}
</code></pre>

<p><strong>spring mvc config</strong></p>

<pre><code>@EnableWebMvc
@Configuration
@ComponentScan({ ""com.web"" })
public class SpringWebConfig extends WebMvcConfigurerAdapter {
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler(""/resources/**"")
            .addResourceLocations(""/WEB-INF/resources/"");
    }

    @Bean
    public InternalResourceViewResolver viewResolver() {
        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
        viewResolver.setViewClass(JstlView.class);
        viewResolver.setPrefix(""/WEB-INF/views/"");
        viewResolver.setSuffix("".jsp"");
        return viewResolver;
    }
}
</code></pre>

<p>when start tomcat spring container initial error. </p>

<pre><code>2016-03-06 22:16:09
[INFO]-[Thread: RMI TCP Connection(2)-127.0.0.1]-[org.springframework.web.context.ContextLoader.initWebApplicationContext()]: Root WebApplicationContext: initialization completed in 18283 ms
06-Mar-2016 22:16:09.541 SEVERE [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.StandardContext.startInternal One or more Filters failed to start. Full details will be found in the appropriate container log file
 06-Mar-2016 22:16:09.541 SEVERE [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.StandardContext.startInternal Context [] startup failed due to previous errors

2016-03-06 22:16:09
[INFO]-[Thread: RMI TCP Connection(2)-127.0.0.1]-[org.springframework.context.support.AbstractApplicationContext.doClose()]: Closing Root WebApplicationContext: startup date [Sun Mar 06 22:15:52 CST 2016]; root of context hierarchy
[2016-03-06 10:16:09,665] Artifact admin:war exploded: Error during artifact deployment. See server log for details.
    06-Mar-2016 23:36:03.673 INFO [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.ApplicationContext.log Spring WebApplicationInitializers detected on classpath: [com.butler.web.WebAppI
nitializer@4ec2d825]
06-Mar-2016 23:36:07.418 INFO [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.ApplicationContext.log Initializing Spring root WebApplicationContext
06-Mar-2016 23:36:26.201 SEVERE [RMI TCP Connection(2)-127.0.0.1] org.apache.catalina.core.StandardContext.filterStart Exception starting filter shiroFilter
 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilter': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgu
mentException: There is no filter with name 'authc/resources* = anon' to apply to chain [/admin*] in the pool of available Filters.  Ensure a filter with that name/path has first been register
ed with the addFilter method(s).
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
    at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1590)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1060)
    at org.springframework.web.filter.DelegatingFilterProxy.initDelegate(DelegatingFilterProxy.java:326)
    at org.springframework.web.filter.DelegatingFilterProxy.initFilterBean(DelegatingFilterProxy.java:235)
    at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:199)
    at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:279)
    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:260)
    at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:105)
    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4583)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5207)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
    at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1678)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:483)
    at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
    at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
    at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:463)
    at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:413)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:483)
    at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
    at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
    at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
</code></pre>

<p>if the <code>WebAppInitializer</code> is not overwrited <code>onStartup</code> to add <code>shiroFilter</code>  tomcat server can start normal, I don't know what problem in my code. </p>

<p>the filter using web.xml has the same problem.(spring and shiro use java config)</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>
","<shiro><spring-4><servlet-3.1>","0",""
"32076822","Apache shiro, return status 401 instead of redirect to url","<p>We're using Apache Shiro in a Spring MVC REST-ish app; for our API, it makes more sense to return HTTP status 401 (or 419) rather than redirect to another URL; I've been looking at the documentation, but can't see how to do so.</p>

<p>Does anybody know how to do so ? Is there a property to configure within the ShiroFilterFactoryBean ?</p>
","<spring-mvc><shiro>","3",""
"23308560","How to prevent login window from displaying in ng-view","<p>I have a nav bar and ng-view in the index.html,when session time out, the login window will display in the ng-view, so there will be a nav bar and log in form in the same page. I want to just display the log in window, anyone could help me out? Thanks.</p>
","<angularjs><shiro>","1",""
"21657855","Shiro: where credential should be stored?","<p><strong>Little prehistory:</strong></p>

<p>I develop RESTful services. That services receives requests from the web frontend and resends it to another server with the actual business logic. I use Shiro to protect my services. Problem is that some business logic functions require a user password. Of course, I can store password in my principal, but I think it is not correct to store credentials there.</p>

<p><strong>Question</strong></p>

<p>So, what is the conceptual right place where I should store credentials to have access inside my REST services?</p>

<p><strong>Update</strong></p>

<p>Ok, I can also store passwords in Shiro sessions, but i don't think that it is the correct place.</p>
","<security><rest><credentials><shiro>","0",""
"28919707","Apache Shiro, can not pass values from login form to backing bean","<p>I can not pass values from my login form to backing bean to authenticate user by apache shiro in my web app. Does anybody know why?</p>

<p>shiro.ini</p>

<pre><code> [main]
authc.loginUrl = /login.jsf
authc.successUrl = /pages/welcome.jsf

[users]
admin = 1234

[urls]
/login.jsf = authc
/pages/** = authc
</code></pre>

<p>login.xhtml</p>

<pre><code>&lt;ui:define name=""content""&gt;
&lt;div id=""login_form""&gt;
    &lt;h:form prependId=""false""&gt;
        &lt;center&gt;
        &lt;h1&gt;Sign in &lt;p:link value=""or create an account"" outcome=""registration"" style=""color: #0A9CE5; text-decoration: none;"" /&gt;&lt;/h1&gt;
            &lt;table&gt; 
                &lt;tr&gt;
                    &lt;td&gt;&lt;p:inputText id=""username"" value=""#{shiroLoginBean.username}"" placeholder=""Login"" required=""true"" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;&lt;p:password id=""password"" value=""#{shiroLoginBean.password}"" placeholder=""Password"" required=""true"" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
            &lt;/table&gt;
        &lt;/center&gt;
        &lt;p:commandButton value=""Sign in"" action=""#{shiroLoginBean.doLogin}"" /&gt;
    &lt;/h:form&gt;
&lt;/div&gt;
</code></pre>

<p></p>

<p>BEAN:</p>

<pre><code>    package utils.security;

import java.io.IOException;
import java.io.Serializable;

import javax.ejb.Stateless;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;
import javax.inject.Named;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Named(""shiroLoginBean"")
@Stateless
@ViewScoped
public class ShiroLoginBean implements Serializable {
    private static final long serialVersionUID = 1L;

    private static final Logger log = LoggerFactory.getLogger(ShiroLoginBean.class);

    private String username;
    private String password;

    public ShiroLoginBean() {

    }

    /**
     * Try and authenticate user. 
     */
    public void doLogin() {
        Subject subject = SecurityUtils.getSubject();   
        UsernamePasswordToken token = new UsernamePasswordToken(getUsername(), getPassword());

        try {
            subject.login(token);
            FacesContext.getCurrentInstance().getExternalContext().redirect(""pages/welcome.jsf"");
        } catch (UnknownAccountException ex) {
            log.error(ex.getMessage(), ex);
        } catch (IncorrectCredentialsException ex) {
            log.error(ex.getMessage(), ex);
        } catch (LockedAccountException ex) {
            log.error(ex.getMessage(), ex);
        } catch (AuthenticationException | IOException ex) {
            log.error(ex.getMessage(), ex);
        } finally {
            token.clear();
        }
    }

    //~ Setters and Getters
    public String getPassword() {
        return password;
    }
    public void setPassword(String password) {
        this.password = password;
    }

    public String getUsername() {
        return username;
    }
    public void setUsername(String username) {
        this.username = username;
    }

}
</code></pre>

<p>Problem is on this row...
UsernamePasswordToken token = new UsernamePasswordToken(getUsername(), getPassword());
... getUsername and getPassword is always null. Thank you so much for answer!!</p>
","<jsf><java-ee><primefaces><javabeans><shiro>","0","28920099"
"33506374","java.lang.IllegalArgumentException: Reason Phrase cannot exceed 123 UTF-8 encoded bytes: No SecurityManager accessible to the calling code","<p>Does anybody test Shiro and Primefaces Push (atmosphere):
org.atmosphere.container.JSR356Endpoint</p>

<p>I got following issue with WildFly 8.2:</p>

<pre><code>19:18:02,848 ERROR [org.atmosphere.container.JSR356Endpoint] (default task-46) : org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
        at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123) [shiro-core-1.2.4.jar:1.2.4]
        at org.apache.shiro.subject.Subject$Builder.&lt;init&gt;(Subject.java:627) [shiro-core-1.2.4.jar:1.2.4]
        at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56) [shiro-core-1.2.4.jar:1.2.4]
        at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSubject(ShiroHttpServletRequest.java:88) [shiro-web-1.2.4.jar:1.2.4]
        at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSession(ShiroHttpServletRequest.java:155) [shiro-web-1.2.4.jar:1.2.4]
        at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:270) [jboss-servlet-api_3.1_spec-1.0.0.Final.jar:1.0.0.Final]
        at io.undertow.servlet.websockets.ServletWebSocketHttpExchange.getSession(ServletWebSocketHttpExchange.java:205) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.websockets.jsr.handshake.ExchangeHandshakeRequest.getHttpSession(ExchangeHandshakeRequest.java:70) [undertow-websockets-jsr-1.1.0.Final.jar:1.1.0.Final]
        at org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:187) [atmosphere-runtime-2.4.0-RC5.jar:2.4.0-RC5]
        at io.undertow.websockets.jsr.EndpointSessionHandler.onConnect(EndpointSessionHandler.java:120) [undertow-websockets-jsr-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.websockets.jsr.JsrWebSocketFilter$1.handleUpgrade(JsrWebSocketFilter.java:121) [undertow-websockets-jsr-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.HttpReadListener.exchangeComplete(HttpReadListener.java:307) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.HttpServerConnection.exchangeComplete(HttpServerConnection.java:212) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange.invokeExchangeCompleteListeners(HttpServerExchange.java:1163) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange.terminateResponse(HttpServerExchange.java:1383) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.Connectors.terminateResponse(Connectors.java:98) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.ServerFixedLengthStreamSinkConduit.channelFinished(ServerFixedLengthStreamSinkConduit.java:51) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.conduits.AbstractFixedLengthStreamSinkConduit.exitFlush(AbstractFixedLengthStreamSinkConduit.java:300) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.conduits.AbstractFixedLengthStreamSinkConduit.flush(AbstractFixedLengthStreamSinkConduit.java:234) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at org.xnio.conduits.ConduitStreamSinkChannel.flush(ConduitStreamSinkChannel.java:162)
        at io.undertow.channels.DetachableStreamSinkChannel.flush(DetachableStreamSinkChannel.java:118) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at org.xnio.channels.Channels.flushBlocking(Channels.java:63)
        at io.undertow.servlet.spec.ServletOutputStreamImpl.close(ServletOutputStreamImpl.java:609) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.spec.HttpServletResponseImpl.closeStreamAndWriter(HttpServletResponseImpl.java:497) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.spec.HttpServletResponseImpl.responseDone(HttpServletResponseImpl.java:581) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:308) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:247) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:76) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:166) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.Connectors.executeRootHandler(Connectors.java:197) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:759) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_65]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_65]
        at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_65]

19:18:02,854 ERROR [org.atmosphere.container.JSR356Endpoint] (default task-46) : java.lang.IllegalArgumentException: Reason Phrase cannot exceed 123 UTF-8 encoded bytes: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
        at javax.websocket.CloseReason.&lt;init&gt;(CloseReason.java:70) [jboss-websocket-api_1.1_spec-1.1.0.Final.jar:1.1.0.Final]
        at org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:256) [atmosphere-runtime-2.4.0-RC5.jar:2.4.0-RC5]
        at io.undertow.websockets.jsr.EndpointSessionHandler.onConnect(EndpointSessionHandler.java:120) [undertow-websockets-jsr-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.websockets.jsr.JsrWebSocketFilter$1.handleUpgrade(JsrWebSocketFilter.java:121) [undertow-websockets-jsr-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.HttpReadListener.exchangeComplete(HttpReadListener.java:307) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.HttpServerConnection.exchangeComplete(HttpServerConnection.java:212) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange.invokeExchangeCompleteListeners(HttpServerExchange.java:1163) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange.terminateResponse(HttpServerExchange.java:1383) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.Connectors.terminateResponse(Connectors.java:98) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.protocol.http.ServerFixedLengthStreamSinkConduit.channelFinished(ServerFixedLengthStreamSinkConduit.java:51) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.conduits.AbstractFixedLengthStreamSinkConduit.exitFlush(AbstractFixedLengthStreamSinkConduit.java:300) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.conduits.AbstractFixedLengthStreamSinkConduit.flush(AbstractFixedLengthStreamSinkConduit.java:234) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at org.xnio.conduits.ConduitStreamSinkChannel.flush(ConduitStreamSinkChannel.java:162)
        at io.undertow.channels.DetachableStreamSinkChannel.flush(DetachableStreamSinkChannel.java:118) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at org.xnio.channels.Channels.flushBlocking(Channels.java:63)
        at io.undertow.servlet.spec.ServletOutputStreamImpl.close(ServletOutputStreamImpl.java:609) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.spec.HttpServletResponseImpl.closeStreamAndWriter(HttpServletResponseImpl.java:497) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.spec.HttpServletResponseImpl.responseDone(HttpServletResponseImpl.java:581) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:308) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:247) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:76) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:166) [undertow-servlet-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.Connectors.executeRootHandler(Connectors.java:197) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:759) [undertow-core-1.1.0.Final.jar:1.1.0.Final]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_65]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_65]
        at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_65] 
</code></pre>
","<jsf><primefaces><shiro><atmosphere>","1",""
"19596680","Override ShiroWebModule filter and realm","<p>I am using Apache Shiro to secure my jesey-guice application.  I have defined a SecurityModule by extending ShiroWebModule as described in the <a href=""http://shiro.apache.org/guice.html"" rel=""nofollow"">example</a>. </p>

<p>For non-production environment, I have different security requirements, so I have defined DevSecurityModle  with a different (and less restrictive) set of filters.  I was hoping to do something in the line of:</p>

<pre><code>Modules.override (new SecurityModule()).with (new DevSecurityModule());
</code></pre>

<p>However, I realized that Modules.override only override bindings, and since both bindRealm() or addFilterChain() are not bindings, I am simply adding new security realm and filters.</p>

<p>How how can this be done?</p>
","<guice><shiro>","1","19674477"
"8048238","Grails / Shiro internal URL request","<p>We have a grails app and are using the Shiro security plugin. </p>

<p>We are currently using the groovy URL feature to grab the output of a page and render the contents within a DIV but when such a request is made to any of the protected Shiro pages, it presents to us the login page as Shiro does not recognise the internal request as a valid logged in user. </p>

<p>Does anybody have any idea how to overcome this issue?</p>
","<grails><shiro>","1",""
"34285222","Camel Shiro Security","<p>I'm using camel blueprint.xml and I want to secure routes with Shiro. I created the following class :</p>

<pre><code>public class ShiroSecurity {
// Shiro configuration file path
   private static final String iniResourcePath = ""shiro.ini"";
   // Object used to encrypt/decrypt the token in the message.
   private static final byte[] passPhrase = {
         (byte) 0x08, (byte) 0x09, (byte) 0x0A, (byte) 0x0B, (byte) 0x0C, (byte) 0x0D, (byte) 0x0E, (byte) 0x0F,
         (byte) 0x10, (byte) 0x11, (byte) 0x12, (byte) 0x13, (byte) 0x14, (byte) 0x15, (byte) 0x16, (byte) 0x17};

   // list of token injectors used in this example
   private static ShiroSecurityTokenInjector shiroSecurityTokenInjector;

   /**
    * @param args
    * @throws Exception
    */
   public void test()
   {

      // Creation of the permission list supported by the policy.
      List&lt;Permission&gt; permissionsList = new ArrayList&lt;Permission&gt;();
      Permission permission = new WildcardPermission(""zone1:readwrite:*"");
      permissionsList.add(permission);

      ShiroSecurityPolicy policy = new ShiroSecurityPolicy(iniResourcePath, passPhrase, true, permissionsList);

 SimpleRegistry reg = new SimpleRegistry();
          reg.put(""securityPolicy"", policy);

          // Instanciating the Shiro tokens
      // The ShiroSecurityToken constructor receives the userName and the password as
      // parameters.
      ShiroSecurityToken shiroSecurityToken = new ShiroSecurityToken(""paul"", ""mccartney"");

      // Instanciating the Shiro TokenInjectors objects
      shiroSecurityTokenInjector = new ShiroSecurityTokenInjector(shiroSecurityToken, passPhrase);

   } }
</code></pre>

<p>with Java DSL we add policy like this:</p>

<pre><code>   final CamelContext context = new DefaultCamelContext(reg);
          context.addRoutes(new RouteBuilder()
         {
            public void configure() throws Exception
            {
               onException(UnknownAccountException.class).handled(true).to(""log:UnknownAccountException"").to(
                     ""file:Error/UnknownAccountException"");
               onException(IncorrectCredentialsException.class).handled(true).to(""log:IncorrectCredentialsException"")
                     .to(""file:Error/IncorrectCredentialsException"");
               onException(LockedAccountException.class).handled(true).to(""log:LockedAccountException"").to(
                     ""file:Error/LockedAccountException"");
               onException(AuthenticationException.class).handled(true).to(""log:AuthenticationException"").to(
                     ""file:Error/AuthenticationException"");
               onException(CamelAuthorizationException.class).handled(true).to(
                     ""log:CamelAuthorizationException ${in.header}"").to(""file:Error/CamelAuthorizationException"");
               onException(NullPointerException.class).handled(true).to(""log:Message not secure"").to(
                     ""file:Error/NotSecureMessage"");

               from(""direct:client"").process(shiroSecurityTokenInjector).policy(
                         (Policy) context.getRegistry().lookup(""securityPolicy"")).to(""log:success"");;

            }
         });

         context.start();

         ProducerTemplate template = context.createProducerTemplate();

         Endpoint endpoint = context.getEndpoint(""direct:client"");
         Exchange exchange = endpoint.createExchange();
         exchange.getIn().setBody(""Data"");
         template.send(endpoint, exchange);
</code></pre>

<p>But How i can do this in blueprint.xml ?</p>

<p>I read that it should be something like that:</p>

<pre><code>    &lt;route id=""timerToLog""&gt;
          &lt;from uri=""timer:foo?period=5000""/&gt;
          &lt;log message=""Start""/&gt;
          &lt;to uri=""bean:com.ngt.shiro.ShiroSecurity?method=tokeninject()""/&gt;
          &lt;policy&gt;..&lt;/policy&gt;
    &lt;/route&gt; 
</code></pre>
","<java><apache-camel><shiro><blueprint>","0",""
"36984056","Shiro / CDI inject security principal works on Glassfish but not on Wildfly","<p>I'm porting some code from Glassfish 4.1 to Wildfly 10 and am having problems somewhere between Shiro / CDI and java.security.Principal.</p>

<pre><code>import java.security.Principal;
import javax.enterprise.context.SessionScoped;
import javax.inject.Inject;
import javax.inject.Named;

// simple user interface
public interface User {
  public String getId();
}

// user bean
@Named(""user"")
@SessionScoped
public class UserBean implements User, Serializable {

  private Principal principal;

  @Inject
  private void initialise(Principal principal) {
    this.principal = principal;
  }

  @Override
  public String getId() {
    return principal.getName();
  }

}

// auth filter runs after shiro filters
public class AuthFilter implements javax.servlet.Filter {

  @Inject
  private User user;

  @Override
  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    log.debug(""doFilter: user={}"", user.getId());
    ...
  }

}
</code></pre>

<p>What happens is:</p>

<ul>
<li>The user requests a secure page.</li>
<li>Shiro intercepts and redirects to the login page.</li>
<li>User enters credentials (username = admin) and submits page.</li>
<li>Shiro authenticates and redirects to original page.</li>
<li>Auth filter is invoked, and logs user principal name.</li>
</ul>

<p>The problem is that in Glassfish, the principal name logged is the (correct) name submitted from the login page. Wildfly however still appears to have the anonymous user. Looking at the logs, they are identical for both systems, including the 4th line where Shiro validates the user id: <code>Authentication successful for token ... admin</code>. Only the last line is different:</p>

<pre><code>-- both
[org.apache.shiro.realm.AuthenticatingRealm] AuthenticationInfo caching is disabled for info [admin].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false (127.0.0.1)].
[org.apache.shiro.authc.credential.SimpleCredentialsMatcher] Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[org.apache.shiro.authc.credential.SimpleCredentialsMatcher] Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[org.apache.shiro.authc.AbstractAuthenticator] Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false (127.0.0.1)].  Returned account [admin]
[org.apache.shiro.subject.support.DefaultSubjectContext] No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[org.apache.shiro.mgt.DefaultSecurityManager] Context already contains a session.  Returning.
[org.apache.shiro.subject.support.DefaultSubjectContext] No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[org.apache.shiro.web.servlet.SimpleCookie] Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/tools; Max-Age=0; Expires=Sun, 01-May-2016 10:24:02 GMT]
[org.apache.shiro.mgt.AbstractRememberMeManager] AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.

-- glassfish
[com.example.servlet.AuthFilter] doFilter: user=admin

-- wildfly
[com.example.servlet.AuthFilter] doFilter: user=anonymous
</code></pre>

<p>The <a href=""https://docs.oracle.com/javaee/7/tutorial/cdi-adv004.htm"" rel=""nofollow"">Java EE 7 Tutorial</a> seems to say what I'm trying to do is valid:</p>

<blockquote>
  <p>Whenever the injected principal is accessed, it always represents the
  identity of the current caller.</p>
</blockquote>

<p>So I'm a bit lost as to what is failing here.</p>

<p>Thanks,</p>
","<java-ee><wildfly><shiro><wildfly-10>","2",""
"31479753","Grails Shiro LDAP User/Role Authentication: How/What to capture and store for reuse","<p>So I need some help with the layout/structure of my project. I am making a website and so far I have a working login page which authenticates the user with Apache Shiro against an LDAP server and redirects the user to a splash page. Depending on the permissions the user has, they should/should not be able to view certain things on the splash page. </p>

<p>What I would like to do is create a new ShiroUser from the session information (i.e. the user who just logged in) and assign them some roles. So for example,</p>

<pre><code>def shiroUser = new ShiroUser()
shiroUser.username = session.username
shiroUser.addToRoles(ShiroRole.findByName('ROLE_USER'))
shiroUser.save()
</code></pre>

<p>and <code>ROLE_USER</code> would be defined by</p>

<pre><code>def shiroRole = new ShiroRole()
shiroRole.name='ROLE_USER'
shiroRole.save()
</code></pre>

<p>Right now I'm just interested in hard coding it and later adapting it to look up in a table and assign roles based off of values in that table. </p>

<p>What I'm wondering is</p>

<ul>
<li>Where do I put this stuff?</li>
<li>Do I create a new controller for this? </li>
<li>Where do I define the shiroRoles? </li>
<li>Is this even smart to do? (Creating a new ShiroUser every time someone logs in)</li>
</ul>

<p>I've never built a website before, so I'm not sure how I should structure the code or where to put stuff. (I'm using GGTS by the way.) Some direction/advice would be greatly appreciated! I'm using lots of books like Grails in Action, Making Java Groovy, and The Definitive Guide to Grails 2 to help, but most of their examples don't match up with what I would like to do. If there are any tutorials out there that I haven't found, I am interested in seeing them. (I've looked through a lot, but they just have snippets of code like I listed, but don't specify where they actually go!) </p>
","<grails><user><shiro><role><ggts>","0",""
"40783197","Two factor authentication using SHIRO","<p>I am implementing two factor authentication in my web project. we are using SHIRO for authentication and authorization.
Once a user is logged in (SecurityUtils.getSubject().login(subjectToken);)
user is able to open any page.
I want to ask user a PIN sent on his mobile to complete authentication. On the next page after login, if user does not enter PIN and directly open home page by writing URL, he/she can bypass PIN validation.
I have checked roleRedirect and authenticationRedirect but request does not come in these filters.
Can Anyone tell me what is the proper way to implement two factor using SHIRO.</p>
","<authentication><shiro><multi-factor>","1",""
"36393123","java - Shiro + Spring MVC, in memory users xml","<p>I want to test Apache Shiro integrated with Spring MVC. Before adding a Realm, I want to test this with users in memory in the way that shiro.ini define it. I cannot find enough information about Spring+Shiro.</p>

<p>I would like to add users in applicationConfig.xml as shiro.ini does it:</p>

<pre><code>[users]
root = secret, admin
myname = 0000, admin
guest = guest, guest
presidentskroob = 12345, president
darkhelmet = ludicrousspeed, darklord, schwartz
lonestarr = vespa, goodguy, schwartz
</code></pre>

<p>But in Apache Shiro support <a href=""http://shiro.apache.org/spring.html"" rel=""nofollow"">page</a> I cannot find how to do this:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;!-- override these for application-specific URLs if you like:--&gt;
    &lt;property name=""loginUrl"" value=""/login""/&gt;
    &lt;property name=""successUrl"" value=""/home.jsp""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp""/&gt;
    &lt;!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  --&gt;
    &lt;!-- defined will be automatically acquired and available via its beanName in chain        --&gt;
    &lt;!-- definitions, but you can perform instance overrides or name aliases here if you like: --&gt;
    &lt;!-- &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""anAlias"" value-ref=""someFilter""/&gt;
        &lt;/util:map&gt;
    &lt;/property&gt; --&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            # some example chain definitions:
            /admin/** = authc, roles[admin]
            /docs/** = authc, perms[document:read]
            /** = authc
            # more URL-to-FilterChain definitions here
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""/&gt;
</code></pre>
","<java><xml><spring><shiro>","0",""
"35593751","How to use Apache Shiro for authorization only?","<p>Before I explain the issue I should say that we only need Apache Shiro for authorization and athentication is already enabled with OAuth2. </p>

<p>So my code to enable Shiro is exactly as the code in this <a href=""https://stackoverflow.com/questions/27823549/spring-boot-with-apache-shiro"">link here</a>.
I have also checked this <a href=""https://stackoverflow.com/questions/31388445/apache-shiro-jdbcrealm-with-javaconfig-and-spring-boot"">issue</a>. But for me if I enable LifecycleBeanPostProcessor almost most beans will be null. I made that create method in config class static as it suggests in the second link but no luck. </p>

<p>So my question is, is there any way to only enable authorization without registering shiro filter? If not, how to get around this issue? Because it seems ShiroFilterFactoryBean requires LifecycleBeanPostProcessor and that breaks the whole application.</p>

<p>We are using latest version of Spring Boot and Shiro 1.2.4</p>
","<spring-boot><authorization><shiro>","0",""
"41015482","Can't access Interpreter settings in Zeppelin","<p>I'm using Zeppelin in my Hortonworks Data Platform 2.5 cluster.</p>

<p>Since I set <code>zeppelin.anonymous.allowed=false</code> I'm not able to enter my interpreter settings anymore - The interpreter screen is empty, see this screenshot:
<a href=""https://i.stack.imgur.com/rvq6Q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rvq6Q.png"" alt=""enter image description here""></a></p>

<p>My <code>shiro_ini_content</code> contains the following <code>[users]</code>, <code>[roles]</code> and <code>[urls]</code> settings:</p>

<pre><code>[users]
admin = passw0rd, administrator

[main]
shiro.loginUrl = /api/login

[roles]
administrator = *

[urls]
/api/version = anon
#/** = anon
/** = authc
/api/interpreter/** = authc, roles[administrator]
/api/configurations/** = authc, roles[administrator]
/api/credential/** = authc, roles[administrator]
</code></pre>

<p>I made the settings based on the following manual: <a href=""https://shiro.apache.org/configuration.html#Configuration-%5Croles%5C"" rel=""nofollow noreferrer"">https://shiro.apache.org/configuration.html#Configuration-%5Croles%5C</a></p>

<p>Why am I still unable to access the Interpreter settings?</p>
","<shiro><hortonworks-data-platform><apache-zeppelin>","0","41031678"
"19494409","User management in Apache Shiro","<p>I am starting with Apache Shiro. A database is used for persistence via Shiro's JdbcRealm.</p>

<p>My question is whether Shiro provides some support for user management, such as user creation, assigning them roles, etc. Something like UserDetailsManager/JdbcUserDetailsManager in Spring. Or do I need to modify the underlying DB directly without any Shiro API?</p>

<p>Thanks</p>
","<java><security><shiro><user-management>","2",""
"6053284","Shiro + Keys stored as strings = failure point or unnecessary concern?","<p>Not getting into too many specifics, this is a high level question.</p>

<p>I've always gone by the idea that it is never a good idea to store primary keys in places that does not have a constraint. For example, storing a primary key in a EAV style architecture <code>(""USER_ID"",144)</code>. If that user is ever deleted it will not be reflected in the EAV mapping and cause issues farther down the road.</p>

<p>So I'm creating a new application using shiro as a <code>security/permission</code> framework and I need users to be able to edit themselves but not other users, I also need other users to be able to edit anyone. Simple enough:</p>

<p><code>user1 = ""user:441:edit""</code></p>

<p><code>user2 = ""user:edit""</code></p>

<p>In addition, I could have someone that can only edit a subset of users, something like this</p>

<p><code>user3 = ""user:459:edit"",""user:460:edit"",""user:461:edit""</code></p>

<p>Or, someone that can edit users that are in a department but only that department</p>

<p><code>user4 = ""department:5898:user:edit""</code></p>

<p>If someone from user3's list is deleted there's no way to update that user's permissions without magic (going through all the permissions and finding the ones to remove).</p>

<p>Now I don't plan to reset the keys but if it was to ever happen and I DON'T clean up the old keys I could have users suddenly being able to edit users who were recently created after reusing the old keys.</p>

<p>I could mitigate some of this by using a generated code <code>(""user:ciS84nFSHK:edit"")</code> that is unique across ALL TABLES to manage deletion of permissions. However, adding in a few hundred million records makes me think this can grow unwieldy quickly.</p>

<p>Am I using Shiro improperly? Am I simply overfocused on keys getting mangled? Have you solved these issues? Any help would be appreciated.</p>
","<mysql><shiro>","1","6102365"
"36900977","The page isn't redirecting properly in login filter","<p>I want to implement this example <a href=""https://github.com/hakdogan/ApacheShiro"" rel=""nofollow"">https://github.com/hakdogan/ApacheShiro</a> in my JSF 2.2 page.</p>

<p>I added into my login page <code>f:event</code></p>

<pre><code>&lt;html lang=""en""
      xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:a=""http://xmlns.jcp.org/jsf/passthrough""
      xmlns:f=""http://xmlns.jcp.org/jsf/core""&gt;
    &lt;f:metadata&gt;
        &lt;f:event type=""javax.faces.event.PreRenderViewEvent"" listener=""#{loginController.authorizedUserControl}""/&gt;
    &lt;/f:metadata&gt;
    &lt;h:head&gt;
        ........
    &lt;/h:head&gt;
</code></pre>

<p><strong>redirect method:</strong></p>

<pre><code>public void authorizedUserControl(){

        if(null != SecurityUtils.getSubject().getPrincipal()){

            NavigationHandler nh =  FacesContext.getCurrentInstance().getApplication().getNavigationHandler();
            nh.handleNavigation(FacesContext.getCurrentInstance(), null, ""/member/index.xhtml?faces-redirect=true"");

        }
    }
</code></pre>

<p>When I open the page I get:</p>

<pre><code>The page isn't redirecting properly

Firefox has detected that the server is redirecting the request for this address in a way that will never complete.

    This problem can sometimes be caused by disabling or refusing to accept cookies.
</code></pre>

<p>How I can fix this?</p>

<p><strong>shiro.ini file</strong></p>

<pre><code>[main]
authc.loginUrl = /authentication/login.xhtml
user.loginUrl = /authentication/login.xhtml

dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/DefaultDB
dataSource.resourceRef = true
jdbcRealm = com.crm.web.authentication.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true
securityManager.realm = $jdbcRealm
passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = true
credentialsMatcher.hashIterations = 5000
multipleroles = com.crm.web.authentication.MultipleRolesAuthorizationFilter
[users]
;admin = password

[urls]
/authentication/login.xhtml = authc
/authentication/passwordreset.xhtml = anon
/javax.faces.resource/** = anon
/** = authc
</code></pre>
","<jsf><shiro>","0",""
"29838681","Apache shiro - How to support multiple user types with individual database tables","<p>I am working on a web project using <code>Java</code> / <code>Spring</code> / <code>Apache Shiro</code>,
there are 3 different user types in 3 individual db tables, 2 user types login from web page, 1 user type login from mobile.</p>

<p>I have implemented a <code>Realm</code> which extends <code>AuthorizingRealm</code>, but it seems difficult for me to provide a single Restful API to let the 3 user types to login.</p>

<p><strong>My current thought is:</strong></p>

<p>Define a new token class which extends <code>UsernamePasswordToken</code>, and add a new field <code>accountType</code>, when user login first check account type param, then decide which table to query, and use combination of <code>accountType</code> and <code>username</code> as <code>Principal</code>.</p>

<p><strong>My question is:</strong></p>

<ol>
<li>Would the above thought work? Or how I should improve that?</li>
<li>How should I define the <code>loginUrl</code> for 3 different user, especial for mobile client, it should be a <code>json result</code> other than a url, right?</li>
</ol>
","<java><spring><authentication><shiro>","0","29864013"
"24118813","Shiro 404 not found issue after login","<p>I am using Shiro with Jersey in a REST API. I am using the form based authentication since I need to send from my angular app a post message in order to authenticate (username, password). There is no jsp nor other page, just the filter and corresponding realm. </p>

<p>I am having following configuration: I have my custom FormAuthenticationFilter, let's say MyFormAuthenticationFilter. Then, in configureShiroWeb I have 
<code>addFilterChain(""/login"", Key.get(MyFormAuthenticationFilter.class));</code></p>

<p>When I access the /login path with correct credentials sent with post request for the first time, I get logged in. So far so good. The problem is that when I log in successfully and try to access the /login path again, then I get 404. I understand that there's no resource under this path, but is it possible to somehow make it return no content in case I am already logged in?</p>

<p>Thanks
BR</p>
","<jersey><http-status-code-404><shiro>","0",""
"36540429","Grails findBy is not working with combination of Or/And Condition","<p>I am working with Grails application. I am using Apache Shiro security plugin for my grails application. I am trying to use <code>findBy</code> query on my <code>User</code> domain class with <strong>Or</strong> and <strong>And</strong> condition but it gives me an error. </p>

<p><strong>My Domain Class</strong></p>

<pre><code>class ShiroUser {
      String firstName
      String lastName
      String username
      String email
      String passwordHash
      String userStatus

      static hasMany = [ roles: ShiroRole, permissions: String ]

      static constraints = {
          username(nullable: false, blank: false, unique: true)
          email(nullable: false, blank: false, email: true,unique: true)
     }}
</code></pre>

<p>I have executed following query:</p>

<pre><code>ShiroUser.findByUsernameOrEmailAndUserStatus(params?.username,params?.username,'Active')
</code></pre>

<p>I get following error:</p>

<pre><code>Message: No property found for name [usernameOrEmail] for class [class com.chatportal.ShiroUser]
</code></pre>

<p>But If I execute query with only <strong>Or</strong> condition then it works fine.</p>

<pre><code>ShiroUser.findByUsernameOrEmail(params?.username,params?.username)
</code></pre>

<p>Anyone please help me that what is wrong with my condition when I used <strong>Or</strong> and <strong>And</strong> condition with findBy ?</p>
","<grails><gorm><grails-2.0><shiro><grails-domain-class>","0",""
"32888743","How do I specify number of Hash iterations to be used in Apache Shiro?","<p>I'm working with a <code>JSF2</code> application where I'd like to use <code>Apache Shiro</code>. I have it up-and-running though I don't know how to specify the number of <code>Hash</code> iterations to be used.</p>

<p><strong>shiro.ini</strong></p>

<pre><code>[main]

user = com.nivis.filter.FacesAjaxAwareUserFilter    
shiro.loginUrl = /faces/login.xhtml    
user.loginUrl = /faces/login.xhtml

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true    
jdbcRealm.authenticationQuery = SELECT password FROM app_user WHERE username = ?  

dataSource = org.apache.shiro.jndi.JndiObjectFactory       
dataSource.requiredType = javax.sql.DataSource      
dataSource.resourceName = JNDImysql  

jdbcRealm.dataSource = $dataSource      
securityManager.realms = $jdbcRealm

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService    
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher    
passwordMatcher.passwordService = $passwordService

jdbcRealm.credentialsMatcher = $passwordMatcher

[urls]  

/faces/login.xhtml = user      
/faces/index.xhtml = user      
/faces/app/** = user  
</code></pre>

<p>It does work to get the password hashed even though I do not explicitly specify a <code>hash service</code>. I saw an example using:</p>

<pre><code>hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 10000
hashService.hashAlgorithmName = SHA-256
passwordService.hashService = $hashService
</code></pre>

<p>Which I tried to use, although it didn't make any difference. As it seems to be enough to use only the <code>PasswordService</code> to get the password hashed, I'd like to know if there's a way of specifying how many hash iterations to use?</p>
","<hash><shiro>","0","32957818"
"39190412","Apache Shiro - ClassNotFoundException","<p>I have hard time trying to use Apache Shiro in my web application (I'm using WildFly 10 and Eclipse IDE):</p>

<ul>
<li>I have downloaded binary distribution of Shiro (<code>shiro-all</code> from <a href=""http://shiro.apache.org/download.html#latestBinary"" rel=""nofollow"">here</a>)</li>
<li>I have downloaded slf4j API from <a href=""http://www.slf4j.org/download.html"" rel=""nofollow"">here</a> </li>
<li>I have added both jars to classpath</li>
</ul>

<p>However, when I try to use sample code, I get <code>ClassNotFoundException</code> with <code>AuthenticationToken</code> class. Does anyone know what could cause this?</p>
","<java><eclipse><apache><classnotfoundexception><shiro>","0",""
"30618163","OR condition in Grails Shiro tag","<p>I am doing a two level menu and I want to show some entries if the user has certain permissions. </p>

<p>I dont want to show the first level of the menu if the user doesn't have permissions to any other submenu because it would display an empty list of results. </p>

<p>I'll put some code to explain it better. This could be an example of the menu:</p>

<pre><code>&lt;ul&gt;
    &lt;shiro:hasPermission permission=""foo""&gt;
        &lt;li&gt; foo&lt;/li&gt;
    &lt;/shiro:hasPermission&gt;
    &lt;shiro:hasPermission permission=""bar""&gt;
        &lt;li&gt; bar&lt;/li&gt;
    &lt;/shiro:hasPermission&gt;
&lt;/ul&gt;
</code></pre>

<p>Is it there a way to wrap the <code>&lt;ul&gt;</code> somehow to ask if the user has <code>foo</code> or <code>bar</code> permission?</p>

<p>I'm using Grails 2.4.4 and Shiro plugin 1.2.1</p>

<p>UPDATE WITH SOLUTION:</p>

<p>Finally I've created a new tagLib that extends the ShiroTagLib and has the desired function:</p>

<pre><code>class ShiroTagLib extends org.apache.shiro.grails.ShiroTagLib {
    /**
     * This tag only writes its body to the output if the current user
     * have any of the given permissions provided in a separated comma String.
     */
    def hasAnyPermission = { attrs, body -&gt;
        def permissions = attrs[""permissions""]
        if (!permissions){
            throwTagError(""Tag [hasAnyPermission] must have [permissions] attribute"")
            }
        def permissionsList = permissions.split(',')
        for (permission in permissionsList) {
            if (checkPermission([permission: permission], ""hasPermission"")) {
                // Output the body text.
                        out &lt;&lt; body()
                return out
                }
            }
        }
}
</code></pre>

<p>with this you can do <code>&lt;shiro:hasAnyPermission permissions=""foo,bar""&gt;</code></p>
","<grails><tags><shiro>","0","30622328"
"20091720","Apache Shiro. What is the difference between WebUtils.isWeb(...) and WebUtils.isHttp(...)?","<p>I'm just curious what is the conceptual difference between two almost identical methods <code>isWeb</code> and <code>isHttp</code> in <code>org.apache.shiro.web.utils.WebUtils</code> class and how their behavior differs from each other?</p>

<pre class=""lang-java prettyprint-override""><code>public static boolean isWeb(Object requestPairSource) {
    return requestPairSource instanceof RequestPairSource
            &amp;&amp; isWeb((RequestPairSource) requestPairSource);
}

public static boolean isHttp(Object requestPairSource) {
    return requestPairSource instanceof RequestPairSource
            &amp;&amp; isHttp((RequestPairSource) requestPairSource);
}

private static boolean isWeb(RequestPairSource source) {
    ServletRequest request = source.getServletRequest();
    ServletResponse response = source.getServletResponse();
    return request != null &amp;&amp; response != null;
}

private static boolean isHttp(RequestPairSource source) {
    ServletRequest request = source.getServletRequest();
    ServletResponse response = source.getServletResponse();
    return request instanceof HttpServletRequest
            &amp;&amp; response instanceof HttpServletResponse;
}
</code></pre>

<p>P.S. This is Shiro and Java related question as I'm newbie to both.</p>
","<java><shiro>","0","20093974"
"12883807","Grails Shiro plugin create read only tables","<p>Why grails shiro plugin create read only tables in mysql for roles and permissions? i create controllers and actions and add them into permissions for registered role in BootStrap file. but every time when i want to add new action into permissions, I must delete the tables and recreate them via rerun the app. how I can edit permissions table manually or maybe I must not create roles and permissions in BootStrap for prod.</p>
","<mysql><grails><shiro>","1",""
"41623457","Java hibernate with Apache Shiro login authentication returning false after ""successfully"" logging in","<p>I'm using Java Hibernate with Apache Shiro for user login and authentication.  I use this code to authenticate the user and it works as intended (as far as I can tell).</p>

<pre><code> try {
        AuthenticationToken token = new UsernamePasswordToken(user.getUsername().toUpperCase(), user.getPassword());


        Subject currentUser = SecurityUtils.getSubject();

        Session session = currentUser.getSession();
        session.setAttribute( ""username"", user.getUsername());
        System.out.println(""USER: "" + session.getAttribute(""username""));

        currentUser.login(token);

        System.out.println( ""User ["" + currentUser.getPrincipal() + ""] logged in successfully."" );
        System.out.println( ""Is user authenticated? "" + currentUser.isAuthenticated());
    }
    catch (ExcessiveAttemptsException eae ) { 
         eae.getStackTrace();
         eae.printStackTrace();
    } 
    catch (AuthenticationException e) {
        throw new ForbiddenException();
    }
</code></pre>

<p>This works if the correct credentials are provided or return forbidden exception if they're incorrect.</p>

<p>After I use another method to check if the user is authorised,  But it ALWAYS returns false (when it should be true).  I'm not sure what's causing this.  </p>

<pre><code>   try {
        Subject currentUser = SecurityUtils.getSubject();

        return SecurityUtils.getSubject().isAuthenticated();

    } catch (AuthenticationException e) {
        throw new ForbiddenException();
    }
</code></pre>

<p>The <em>currentUser</em> is null when checking in debug mode.  </p>

<p>I can also use another approach but it returns a nullPointerException in the second line.</p>

<pre><code>try {

        sessionFactory.getCurrentSession().getTransaction().begin();

        User user = userDAO.find(securityContext.getUserPrincipal().getName());

        if (user == null) {
            sessionFactory.getCurrentSession().getTransaction().rollback();
            throw new NotFoundException();
        }

        UserModel result = new UserModel(user);

        sessionFactory.getCurrentSession().getTransaction().commit();

        return result;
}
    } catch (HibernateException e) {
        e.printStackTrace();
        sessionFactory.getCurrentSession().getTransaction().rollback();
    }
    return null;
</code></pre>

<p>I use shiro.ini to connect to a local database.<br>
[Update] I've added a debug login filter that can log in automatically when it's enabled (using a Servlet) and it works as intended.  <br><br>
I've added a URL section and it works when I use authcBasic but not when I use authc in Shiro.  I can check by calling the method <code>isAuthenticated()</code> or <code>getCurrentUser()</code>.  Using authcBasic returns all the correct information but authc returns false/null.  I also cannot logout when using authcBasic unless I clean the web browser.  The method <code>SecurityUtils.getSubject().logout();</code> sets the isAuthenticated boolean to false (when I debug) but doesn't seem to have any actual effect on the session. </p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]
# Debug filter to automatically login
debugLogin = util.DebugLoginFilter
debugLogin.enabled = false
debugLogin.username = ADMIN
debugLogin.password = ADMIN

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = select password from user where username = ?
jdbcRealm.userRolesQuery = select role from user_role INNER JOIN user ON     user_role.id = user.user_role_id where user.username = ?

# Datasource for the jdbc realm
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.databaseName = database
jdbcRealm.dataSource = $ds

authc.usernameParam = username
authc.passwordParam = password
authc.failureKeyAttribute = shiroLoginFailure

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
jdbcRealm.credentialsMatcher = $sha256Matcher

[roles]
admin = *

[urls]
/ = debugLogin, authcBasic
/index.html = debugLogin, authcBasic
/api/login = anon
/api/login/me = authcBasic
/api/login/logout = authcBasic
/api/** = debugLogin, authcBasic
</code></pre>

<p>My pom.xml </p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;1.3.2&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;1.3.2&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>My web.xml</p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Apologies if I made any mistakes, I'm new here!  Any help would be greatly appreciated. </p>

<p>Edit: This message displays in the console when running the Apache server:</p>

<pre><code>[localhost-startStop-1] INFO org.apache.shiro.config.IniSecurityManagerFactory - Realms have been explicitly set on the SecurityManager instance - auto-setting of realms will not occur.
</code></pre>
","<java><hibernate><angular><login><shiro>","0","41650016"
"14391120","Grails Web App - Show current logged in users","<p>ive created a grails app and used Apache Shire plugin <a href=""http://shiro.apache.org/"" rel=""nofollow"">http://shiro.apache.org/</a> for security and logging in purposes.</p>

<p>I wanted to find out if anyone knows how I can get a list of the users who are currently logged in to the web application? </p>

<p>Where would this information be stored / on the servers side in a cookie or a session?</p>

<p>Basically i want a widget showing all the current users whom are logged in to my web application currently.</p>
","<java><apache><grails><shiro>","0",""
"21007307","Jboss EJB and Shiro","<p>I have a CDI -> EJB App.
I do the security in the past with JBoss j_security.
My security with Shiro works. </p>

<p>But my only problem is how can I get <b>SessionContext</b> in my EJB?
With Jboss Security I got the username, who login in the location with:</p>

<p><b>SessionContext sessionContext;</b>
<b>String email = sessionContext.getCallerPrincipal().getName();</b></p>

<p>Now I want to get the the username in my EJB.
How ca I set the username with SessionContext?</p>

<p>Thank you for help</p>
","<jboss><ejb><shiro><sessioncontext>","0",""
"38882611","Apache Shiro versus Spring Security","<p>We have an existing Jetty Application using Shiro that we are moving to Spring Boot, and were wondering which is more straightforward to integrate with our Spring Application, Apache Shiro or Spring Security? We're looking into implementing OAuth2 soon, and we were recommended Spring Security since we were moving this to Spring Boot. Does anyone have any input they could give us?</p>
","<spring-security><spring-boot><jetty><shiro>","1",""
"41709987","How to make Shiro return 403 Forbidden with Spring Boot rather than redirect to login.jsp","<p>I have a server that is just an API endpoint, no client front-end, no jsp, no html. It uses Spring Boot and I'm trying to secure it with Shiro. The relevent parts of my SpringBootServletInitializer look like this. I'm trying to get Shiro to return a 403 response if it fails the roles lookup as defined in BasicRealm. Yet it seems to default to redirecting to a non-existent login.jsp and no matter what solution I seem to use. I can't override that. Any help would be greatly appreciated.</p>

<pre><code>@SpringBootApplication
public class RestApplication extends SpringBootServletInitializer {

    ...

    @Bean(name = ""shiroFilter"")
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();


        Map&lt;String, String&gt; filterChain = new HashMap&lt;&gt;();
        filterChain.put(""/admin/**"", ""roles[admin]"");

        shiroFilter.setFilterChainDefinitionMap(filterChain);
        shiroFilter.setSecurityManager(securityManager());

        return shiroFilter;
    }

    @Bean
    public org.apache.shiro.mgt.SecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(userRealm());

        CookieRememberMeManager rmm = new CookieRememberMeManager();
        rmm.setCipherKey(Base64.decode(""XXXXXXXXXXXXXXXXXXXXXX""));
        securityManager.setRememberMeManager(rmm);

        return securityManager;
    }

    @Bean(name = ""userRealm"")
    @DependsOn(""lifecycleBeanPostProcessor"")
    public BasicRealm userRealm() {
        return new BasicRealm();
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }
}

public class BasicRealm extends AuthorizingRealm {
    private static Logger logger = UserService.logger;
    private static final String REALM_NAME = ""BASIC"";

    public BasicRealm() {
        super();
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(final AuthenticationToken token)
            throws AuthenticationException {
        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        String userid = upToken.getUsername();

        User user = Global.INST.getUserService().getUserById(userid);

        if (user == null) {
            throw new UnknownAccountException(""No account found for user ["" + userid + ""]"");
        }

        return new SimpleAuthenticationInfo(userid, user.getHashedPass().toCharArray(), REALM_NAME);
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(final PrincipalCollection principals) {

        String userid = (String) principals.getPrimaryPrincipal();

        if (userid == null) {
            return new SimpleAuthorizationInfo();
        }

        return new SimpleAuthorizationInfo(Global.INST.getUserService().getRoles(userid));
    }
}
</code></pre>
","<java><spring-boot><shiro>","0",""
"32304186","Servlet authentication using Shiro, Is it possible to filter URLs having some keyword?","<p>I have a servlet application running in tomcat with shiro authentication. 
My servlet URL looks like this</p>

<pre><code> http://builds/Query/User?which_option=ui_data&amp;which_out=json
</code></pre>

<p>The  <strong><em>""which_option""</em></strong> in the above URL can take various values.
I want to authenticate only those URLs having <strong><em>""which_option=ui_data""</em></strong> in shiro.
I tried the following using regex in URL filtering in my shiro.ini.</p>

<pre><code>[urls]
/Query/User*ui_data* = authcBuilds
</code></pre>

<p>But that does not work. The <a href=""http://shiro.apache.org/web.html#Web-%7B%7B%5Curls%5C%7D%7D"" rel=""nofollow noreferrer"">Shiro URL configuration</a> page mentions that the URL expression must of <em>URL_Ant_Path_Expression</em>. The <a href=""https://stackoverflow.com/questions/2952196/learning-ant-path-style"">ANT path expression</a> seems to apply for matching only file names, and not part of URL string.</p>

<p>Is there any other way to do this (URL regex matching)? or else I have to shift my code to another servlet like</p>

<pre><code>http://builds/Query/UI_Data
</code></pre>

<p>and use the following authentication in shiro.ini</p>

<pre><code>[urls]
/Query/UI_Data* = authcBuilds
</code></pre>
","<java><tomcat><servlets><ant><shiro>","0",""
"29397183","Error when trying to use custom realm for Shiro","<p>Using for BalusC tutorial for implementing shiro to a JSF app
<a href=""http://balusc.blogspot.fi/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">http://balusc.blogspot.fi/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a></p>

<p>Currently I am trying to add my own custom realm on top of the example, but I am obviously missing something.</p>

<p>I have the shiro.ini as follows (mainly copied from the given tutorial and probably all is not necessary):</p>

<pre><code>[main]
user = com.example.filter.AjaxSessionFilter
mockRealm = com.example.realm.MockRealm
authc.loginUrl = /Login.xhtml
user.loginUrl = /Login.xhtml

[users]
admin = password

[urls]
/Login.xhtml = user
/* = user
securityManager.realms = $mockRealm
</code></pre>

<p>My MockRealm in short:</p>

<pre><code>import org.apache.shiro.realm.AuthorizingRealm;

public class MockRealm extends AuthorizingRealm { /* Implement stuff */ }
</code></pre>

<p>I am running this on GlassFish v4.1. Everything worked so far correctly until I tried to add this custom realm. This results in the following error:</p>

<pre><code>Exception while loading the app : java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: java.lang.IllegalArgumentException: There is no filter with name '$mockRealm' to apply to chain [securityManager.realms] in the pool of available Filters.  Ensure a filter with that name/path has first been registered with the addFilter method(s). 
</code></pre>

<p>I fail to find any information about this error, neither can I find any example how to implement the custom realm correctly.</p>

<p>Could any one point me to right direction? Thanks.</p>
","<jsf-2><shiro>","0","29405255"
"37981107","How to point to tomee.xml connection pool from shiro.ini","<p>I configured a connection pool in <code>tomme.xml</code>. So I presume I   should not to configure another connection pool in <code>shiro.ini</code>. Instead I can simply point to the connection pool in <code>tomme.xml</code> from <code>shiro.ini</code>. How should I do this?  </p>

<p>Here is tomee.xml </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;tomee&gt;
  &lt;!-- see http://tomee.apache.org/containers-and-resources.html --&gt;

  &lt;!-- activate next line to be able to deploy applications in apps --&gt;
  &lt;!-- &lt;Deployments dir=""apps"" /&gt; --&gt;  


  &lt;Resource id=""testDatabase""  type=""DataSource""&gt; 
    accessToUnderlyingConnectionAllowed = false
    alternateUsernameAllowed = false
    connectionProperties = 
    defaultAutoCommit = true
    defaultReadOnly = 
    definition = 
    ignoreDefaultValues = false
    initialSize = 0
    jdbcDriver = com.teradata.jdbc.TeraDriver
    jdbcUrl = jdbc:teradata://XXXXXX,tmode=TERA,charset=UTF8,RECONNECT_COUNT=11
    jtaManaged = true
    maxActive = 20
    maxIdle = 20
    maxOpenPreparedStatements = 0
    maxWaitTime = -1 millisecond
    minEvictableIdleTime = 30 minutes
    minIdle = 0
    numTestsPerEvictionRun = 3
    password = XXXXXXXXXX
    passwordCipher = PlainText
    poolPreparedStatements = false
    serviceId = 
    testOnBorrow = true
    testOnReturn = false
    testWhileIdle = false
    timeBetweenEvictionRuns = -1 millisecond
    userName = XXXXX
    validationQuery = 
  &lt;/Resource&gt;


&lt;/tomee&gt;
</code></pre>

<p>Here is <code>shiro.ini</code> . I need to configure <code>jdbcRealm</code> in shiro.ini </p>

<pre><code>[main]
# This does not work  
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceRef = true
dataSource.resourceName = ""testDatabase""
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true  

# Configure JDBC realm SQL queries. 
jdbcRealm.authenticationQuery = SELECT XXX
jdbcRealm.userRolesQuery = SELECT XXX)

[urls]
/login.xhtml = user
/app/** = user  
</code></pre>

<p>I could configure a <code>jdbcRealm</code> within <code>shiro.ini</code> but I want to implement an already existing connection pool in tomee.xml . How can I do this ?  </p>
","<java><connection-pooling><shiro><tomee>","3","37997111"
"31821277","Multiple login in Shiro","<p>shiro multiple login </p>

<p>I have a web app which have 2 parts: front part and backend part. Both part need a login page for users. 
Members need to use /signin to login front part. 
Admins need to use /admin/signin to login backend part. </p>

<pre><code>public ShiroFilterFactoryBean shiroFilter(WebSecurityManager securityManager){
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
    shiroFilter.setSecurityManager(securityManager);

    Map&lt;String, Filter&gt; filterMap = Maps.newLinkedHashMap();
    FormAuthenticationFilter adminAuthc = new FormAuthenticationFilter();
    adminAuthc.setLoginUrl(""/admin/signin"");
    adminAuthc.setSuccessUrl(""/admin/course"");
    filterMap.put(""adminAuthc"", adminAuthc);
    FormAuthenticationFilter authc = new FormAuthenticationFilter();
    adminAuthc.setLoginUrl(""/signin"");
    adminAuthc.setSuccessUrl(""/"");
    filterMap.put(""authc"", authc);
    shiroFilter.setFilters(filterMap);

    Map&lt;String, String&gt; filterChainDefinitionMap = Maps.newLinkedHashMap();
    filterChainDefinitionMap.put(""/signout"", ""logout"");
    filterChainDefinitionMap.put(""/style/**"", ""anon"");
    filterChainDefinitionMap.put(""/javascript/**"", ""anon"");
    filterChainDefinitionMap.put(""/image/**"", ""anon"");
    filterChainDefinitionMap.put(""/flash/**"", ""anon"");
    filterChainDefinitionMap.put(""/favicon.ico"", ""anon"");
    filterChainDefinitionMap.put(""/captcha/**"", ""anon"");
    filterChainDefinitionMap.put(""/course"", ""anon"");
    filterChainDefinitionMap.put(""/course/**"", ""anon"");
    filterChainDefinitionMap.put(""/course/*/collect"", ""authc"");
    filterChainDefinitionMap.put(""/course/*/uncollect"", ""authc"");
    filterChainDefinitionMap.put(""/course/study/record"", ""authc"");
    filterChainDefinitionMap.put(""/**"", ""authc"");
    filterChainDefinitionMap.put(""/admin/**"", ""adminAuthc"");
    shiroFilter.setFilterChainDefinitionMap(filterChainDefinitionMap);

    return shiroFilter;
}
</code></pre>
","<login><shiro><multiple-login>","0",""
"42412748","Apache Zeppelin (Shiro Security) cannot save note permissions","<p>I am new to Zeppelin.</p>

<p>I followed this tutorial on how to set authentication in Zeppelin and created two accounts. This is my shiro.ini conf file:</p>

<pre><code>[users]
# List of users with their password allowed to access Zeppelin.
# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuratio$
admin = admin
joao = joao
#user2 = password3, role3
#user3 = password4, role2

# Sample LDAP configuration, for user Authentication, currently tested for single Realm
[main]
#activeDirectoryRealm = org.apache.zeppelin.server.ActiveDirectoryGroupRealm
#activeDirectoryRealm.systemUsername = CN=Administrator,CN=Users,DC=HW,DC=EXAMPLE,DC=COM
#activeDirectoryRealm.systemPassword = Password1!
#activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://user/zeppelin/zeppelin.jceks
#activeDirectoryRealm.searchBase = CN=Users,DC=HW,DC=TEST,DC=COM
#activeDirectoryRealm.url = ldap://ad-nano.test.example.com:389
#activeDirectoryRealm.groupRolesMap = """"
#activeDirectoryRealm.authorizationCachingEnabled = true

#ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
#ldapRealm.userDnTemplate = uid={0},cn=users,cn=accounts,dc=example,dc=com
#ldapRealm.contextFactory.url = ldap://ldaphost:389
#ldapRealm.contextFactory.authenticationMechanism = SIMPLE
#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager = $sessionManager
# 86,400,000 milliseconds = 24 hour
#securityManager.sessionManager.globalSessionTimeout = 86400000
shiro.loginUrl = /api/login

[urls]
# anon means the access is anonymous.
# authcBasic means Basic Auth Security
# To enfore security, comment the line below and uncomment the next one
/api/version = authc
#/** = anon
/** = authc
</code></pre>

<p>I would like to set owner permissions in a notebook for admin user, however when I click save button nothing happens! Am I doing something wrong?</p>

<p><a href=""https://i.stack.imgur.com/EOrUt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EOrUt.png"" alt=""Trying to save notebook permissions!""></a></p>

<p>Cheers!</p>
","<hadoop><shiro><apache-zeppelin>","0","42414990"
"45265622","Apache Shiro 1.4.0 initialization","<p>I installed Apache Shiro 1.4.0 and was following <a href=""https://shiro.apache.org/tutorial.html"" rel=""nofollow noreferrer"">this official tutorial</a> in order to set it up. </p>

<p>When I tried to initialize <code>SecurityUtils</code> with <code>SecurityManager</code> using this code from tutorial:</p>

<pre><code>Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
SecurityManager securityManager = factory.getInstance();
SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>I got a message that <code>IniSecurityManagerFactory</code> is deprecated now in favor of Shiro's <code>Environment</code>. </p>

<p>I can't find any tutorial that shows how to initialize Shiro using <code>Environment</code>, and its documentation doesn't help much:</p>

<blockquote>
  <p>An Environment instance encapsulates all of the objects that Shiro
  requires to function. It is essentially a 'meta' object from which all
  Shiro components can be obtained for an application.</p>
  
  <p>An Environment instance is usually created as a result of parsing a
  Shiro configuration file. The environment instance can be stored in
  any place the application deems necessary, and from it, can retrieve
  any of Shiro's components that might be necessary in implementing
  security behavior.</p>
  
  <p>For example, the most obvious component accessible via an Environment
  instance is the application's securityManager.</p>
</blockquote>

<p>So, how do I use this new initialization mechanism?</p>
","<java><apache><security><shiro>","2",""
"24433298","How to store/load username in Grails app?","<p>I have a Grails (2.3.6) app that requires users to login before they can access the app. As soon as they login successfully, they are redirected to a landing page that displays their username in the top-right corner. I had this working nicely (or so I thought) with the following 3 pieces of code:</p>

<pre><code>// myapp/grails-app/realms/myapp/MyAppRealm.groovy:
class MyAppRealm {
    def onSuccessfulLogin(Principal principal) {
        // Lots of code

        // If I logged in successfully with a username of ""user1"", then principal.name will be ""user1"" here.
        UserHolder.name = principal.name

        // Lots more code
    }
}
</code></pre>

<p>In the above code the <code>onSuccessfulLogin()</code> method is executed if the authentication layer determines they logged in successfully. The <code>principal.name</code> value is the authenticated username they logged in with. As you can see I store this value in a <code>UserHolder</code> POGO which looks like:</p>

<pre><code>class UserHolder {
    static String name = null

    static String getName() {
        name
    }

    static void setName(String n) {
        name = n
    }
}
</code></pre>

<p>Then, in my GSP file:</p>

<pre><code>// myapp/grails-app/views/page.gsp
You are logged in as ${UserHolder?.name}.
</code></pre>

<p>It was just reported to me that a tester logged in successfully, and a few minutes later, hit F5 and refreshed their screen, only to find that their username belonged to another tester! After looking at the code, the reason for this is obvious: <code>UserHolder.name</code> is a static variable; only 1 instance of it will live on the server at any given point in time. So if <code>user1</code> logs in, they'll see <code>user1</code> as their username in the UI. But if <code>user2</code> then logs in, <code>User.name</code> now equals <code>user2</code>, and if <code>user1</code> refreshes their screen, they'll see <code>user2</code> as their username.</p>

<p>So my next thought was to try and store <code>principal.name</code> in a session variable like <code>session.name = principal.name</code>:</p>

<pre><code>// myapp/grails-app/realms/myapp/MyAppRealm.groovy:
class MyAppRealm {
    def onSuccessfulLogin(Principal principal) {
        // Lots of code

        // If I logged in successfully with a username of ""user1"", then principal.name will be ""user1"" here.
        session.name = principal.name

        // Lots more code
    }
}
</code></pre>

<p>...and then refer to it in the GSP like <code>You are logged in as ${session.name}.</code>. The problem there is that I don't have access to <code>session</code> from inside <code>MyAppRealm.groovy</code>, and it's not easily injectable (unless anyone can think of how). So I ask: how can I ""record"" <code>principal.name</code> over in <code>MyAppRealm</code>, and then specify the correct username from inside the GSP?</p>
","<session><grails><shiro>","0","24437125"
"23022645","Allow access to a type of resource but deny access to specific instance of the resource in Apache Shiro","<p>I have a question regarding allowing access to a resource but deny access to some instances of this resource in Apache Shiro.</p>

<p>Say I have a resource Reports that can be viewed or edited and two users Tom and Katie.</p>

<p>If i'm not mistaken in Shiro i can give Tom access to edit all Reports by giving him the following permission:</p>

<p>""report:edit""</p>

<p>Katie should also be able to edit all reports except Report x which she should only be able to view. </p>

<p>So i want to express something like this:</p>

<p>""report:edit""
""report:view:x""</p>

<p>As far as I've understood from Shiro it's all about permissive permissions and this could be expressed as ""report:edit:y,z,..."" and ""report:view:x"" but if you have a lot of reports it's not very practical or readable.</p>

<p>Any suggestions how this can be achieved in Shiro or using other methods?</p>

<p>Thank you,
Joel</p>
","<authorization><shiro>","1","23040536"
"29927241","Multiple realms on Apache Shiro","<p>I have ‘n’ modules in my system, and each module has a specific group of users, differents roles, and a simple database.</p>

<p>I have a custom realm that queries  a main database. This database has a table with all users of my system. So, the query tells me if the user is registered, and which module the user should use.</p>

<p>So, when I get the user ‘s module name from database, I will access another realm, querying another database to set the permissions of my user.</p>

<p>The link (image) below show what I am trying to tell.</p>

<p><a href=""http://i.stack.imgur.com/fP0WX.png"" rel=""nofollow"">http://i.stack.imgur.com/fP0WX.png</a></p>

<p>I don’t know how can I make the relation between all realms. I’m trying to use ManagerRealm (extends of  ModularRealmAuthenticator),  but when I call assertRealmsConfigured() I get an exception saying that I don’t have realms configured.  I don’t know if the structure that I suggested is the best solution or which is the best way to do it. Can anyone help me?</p>

<p>Thanks  in Advance</p>
","<java><hibernate><security><shiro>","1",""
"18175731","Mapping Shiro exceptions at the service layer","<p>I'm using Spring 3.2.3 and Shiro 1.2.0 to secure access to a service. This works, but results in throwing a Shiro-specific exception. I'd like to throw an application-specific exception instead. Is this possible, either with Shiro or mapping at the Spring level? I know I can map controller exceptions to views with Spring, but I'm not sure how to handle it at the service layer. My setup:</p>

<p>Service interface:</p>

<pre><code>public interface CaseService {
  Case getCase(Integer id);
}
</code></pre>

<p>Service implementation:</p>

<pre><code>@Service
public class CaseServiceImpl implements CaseService {
  @RequiresAuthentication
  public Case getCase(Integer id) {
    // ...
  }
}
</code></pre>

<p>When testing the above without an authenticated Subject, I do receive an exception as expected, but it is a org.apache.shiro.* one. I tried using Spring's @ExceptionHandler to handle the Shiro exception. It had no effect, but I think it needs to work at the controller layer.</p>
","<spring><spring-mvc><shiro>","1","18214029"
"19730168","apache shiro - session is lost when the server restarts?","<p>I'm using Apache Shiro Security. 
My settings ehcache.xml</p>

<pre><code>    &lt;defaultCache
        maxElementsInMemory=""10000""
        eternal=""false""
        timeToIdleSeconds=""120""
        timeToLiveSeconds=""120""
        overflowToDisk=""false""
        diskPersistent=""false""
        diskExpiryThreadIntervalSeconds=""120""
        /&gt;

&lt;cache name=""shiro-activeSessionCache""
       maxElementsInMemory=""10000""
       overflowToDisk=""true""
       eternal=""true""
       timeToLiveSeconds=""0""
       timeToIdleSeconds=""0""
       diskPersistent=""true""
       diskExpiryThreadIntervalSeconds=""600""/&gt;
</code></pre>

<p><a href=""http://shiro.apache.org/session-management.html#SessionManagement-EHCacheSessionDAO"" rel=""nofollow"">EHCache Session Cache Configuration</a></p>

<p>I use these settings on two different Tomcats. I do restart the server, the first sessions are saved, the second is not. What could it be?</p>
","<spring><shiro>","1",""
"16218688","Using CDI except a Java Web Application","<p>From Doc i m trying to learn Context and Dependency injection .
<a href=""http://docs.oracle.com/javaee/6/tutorial/doc/gjbju.html"" rel=""nofollow"">In tutorials </a> CDI seems can be only use  in a Web application.Can i use CDI in a Java Console project ? And How? I added libraries like javax.enterprice.deploy and cdi-api.I m trying to test Apache Shiro i referenced this <a href=""http://balusc.blogspot.com/2013/01/#DeclarativeRestrictionInBeanMethods"" rel=""nofollow""> part of</a> Balusc detailed tutorial  but i need to manage this without JSF and web Appli</p>
","<security><dependency-injection><aspectj><cdi><shiro>","0","16240506"
"28334686","Do I have to logout the user if username or password changes?","<p>I am using Apache Shiro for my JSF 2.2 web application and have a form based authentication form (email address as the username and password). I also allow user to edit their profile including their username and password. I noticed that when I update the username (although the user is still authenticated), I don't have access to principal (username) of the user. Right now, I programmatically logout the user after such profile changes and ask them to login again. Is there any other alternative?</p>

<p>Thank you,
Hooman</p>
","<shiro>","1",""
"28999398","Integrating Apache Shiro with Play 1.2","<p>I've developed an application using Play Framework 1.2. I've read on several sites that it is possible to integrate Apache Shiro with Play 2.x. </p>

<p>However, is there any example available to integrate Apache Shiro with the version 1.x of the Play Framework?</p>
","<java><security><shiro><playframework-1.x>","2",""
"27542916","Shiro Annotations are not scanned","<p>I am new to shiro, in eclipse, I created a dynamic web project, in which I used to test login, logout, authorization, .... features of shiro using tomcat server, now I want to experiment using the annotation @RequiredRoles for authorization, for this I installed the plugin AJDT to enable AspectJ, and converted my project, so that it has the AOP feature, I added the aspect aspect org.apache.shiro.aspectj.ShiroAnnotationAuthorizingAspectfollowing to aop.xml under META-INF
but nothing is working, from a web form I try to call a servlet which tries to access a method in a certain class, this method is annotated with the @RequiredRoles annotation, although the logged in person is not authorized , he still can call the method!!! 
I feel like if I miss something especially that I am new to both,shiro and aspectj, highly appreciate any enlightenment</p>
","<tomcat><aspectj><shiro>","0",""
"43299354","How to solve UnknownSessionException thrown in logout method in Apache Shiro?","<p>Good afternoon guys! I have a project in JSF that uses Apache Shiro Authentication. The login method works fine, but the logout method throw UnknownSessionException.</p>

<p>Here is my dependencies on pom.xml(Maven):</p>

<pre><code>&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
            &lt;version&gt;1.3.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
            &lt;version&gt;1.3.2&lt;/version&gt;
        &lt;/dependency&gt; 
</code></pre>

<p>StackTrace:</p>

<pre><code>abr 07, 2017 9:20:26 PM com.sun.faces.context.AjaxExceptionHandlerImpl handlePartialResponseError
GRAVE: java.lang.IllegalStateException: org.apache.shiro.session.UnknownSessionException: There is no session with id [e3b18152-09c3-4644-8815-f3bf7dd77513]
    at org.apache.shiro.web.servlet.ShiroHttpSession.getAttribute(ShiroHttpSession.java:133)
    at com.sun.faces.context.SessionMap.put(SessionMap.java:127)
    at com.sun.faces.context.SessionMap.put(SessionMap.java:61)
    at com.sun.faces.application.view.FaceletViewHandlingStrategy.getResponseEncoding(FaceletViewHandlingStrategy.java:1310)
    at com.sun.faces.application.view.FaceletViewHandlingStrategy.createResponseWriter(FaceletViewHandlingStrategy.java:1198)
    at com.sun.faces.application.view.FaceletViewHandlingStrategy.renderView(FaceletViewHandlingStrategy.java:405)
    at com.sun.faces.application.view.MultiViewHandler.renderView(MultiViewHandler.java:134)
    at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:120)
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)
    at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:219)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:659)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:528)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1100)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:687)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.session.UnknownSessionException: There is no session with id [e3b18152-09c3-4644-8815-f3bf7dd77513]
    at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
    at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
    at org.apache.shiro.web.servlet.ShiroHttpSession.getAttribute(ShiroHttpSession.java:131)
    ... 49 more
</code></pre>

<p>Shiro.ini:</p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]

# =============================== 
# =============================== 
# Session Manager SHIRO NATIVE (WEB) 
# =============================== 
# =============================== 

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager 
securityManager.sessionManager = $sessionManager 
securityManager.sessionManager.globalSessionTimeout = 3600000

shiro.loginUrl = /faces/paginalogin.xhtml
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher

# ===============================
# ===============================
# DATABASE SQL
# ===============================
# ===============================
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.authenticationCachingEnabled = false
jdbcRealm.authenticationQuery = SELECT senha FROM usuario WHERE email = ?
jdbcRealm.userRolesQuery = SELECT if(nivel='A','admin','normal') FROM usuario WHERE email = ?


# ===============================
# MySQL
# ===============================
dbs=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#dbs.driverClass = com.mysql.jdbc.Driver
dbs.user=root
dbs.databaseName=shiroexemplo
dbs.serverName=localhost
dbs.portNumber=3306


# ===============================
# ===============================
# DATABASE INSTANCE
# ===============================
# ===============================
jdbcRealm.dataSource=$dbs

[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

[roles]
admin=*
normal=*

[urls]
/faces/admin/*= authc, roles[admin]
/faces/normal/*=authc, roles[normal]
/faces/paginalogin.xhtml = anon
</code></pre>

<p>Java class:</p>

<pre><code>package com.mycompany.shiroexemplo.bean;

import java.io.Serializable;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;
import javax.servlet.http.HttpSession;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.crypto.hash.SimpleHash;
import org.apache.shiro.session.Session;
import org.apache.shiro.subject.Subject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mycompany.shiroexemplo.dao.UsuarioDAO;
import com.mycompany.shiroexemplo.model.Usuario;

@ManagedBean
@SessionScoped
public class LoginController implements Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    private String username;
    private String senha;

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getSenha() {
        return senha;
    }

    public void setSenha(String senha) {
        this.senha = senha;
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    public Usuario usuario;
    private static final Logger log = LoggerFactory.getLogger(LoginController.class);

    public String autenticate() {

        SimpleHash hash = new SimpleHash(""md5"", senha);
        UsernamePasswordToken token = new UsernamePasswordToken(username, hash.toHex());

        token.setRememberMe(true);
        Subject currentUser = SecurityUtils.getSubject();
        log.info(""logando usando o email ["" + username + ""] e senha ["" + hash.toHex() + ""]"");

        try {
            if (!currentUser.isAuthenticated()) {
                currentUser.login(token);

                UsuarioDAO ud = new UsuarioDAO();
                usuario = ud.getUsuario(username);
            }

            if (currentUser.hasRole(""admin"")) {
                return ""Admin"";
            } else {
                return ""Normal"";
            }
        } catch (AuthenticationException e) {
            e.printStackTrace();
            FacesContext.getCurrentInstance().addMessage(null,
                    new FacesMessage(FacesMessage.SEVERITY_ERROR, ""Erro: "", ""Usuário ou senha incorretos""));
            return ""paginalogin"";
        }

    }

    public String logout(ActionEvent ev) {
        Subject currentUser = SecurityUtils.getSubject();
        try {
            if(currentUser.isAuthenticated()){
                currentUser.logout();
            }
        } catch (Exception e) {
            e.printStackTrace();
            FacesContext.getCurrentInstance().addMessage(null,
                    new FacesMessage(FacesMessage.SEVERITY_ERROR, ""Erro: "", e.getMessage()));
            return null;
        }
        return ""paginalogin"";

    }

}
</code></pre>
","<java><apache><maven><logout><shiro>","0",""
"26750824","How to kill a session using Apache Shiro on click of back or refresh button on browser?","<p>I have been trying to kill a <code>session</code> on refresh or back button on browser using apache shiro for a web application but it seems i am not able to do it. Below is the code that i have tried. Any help much appreciated. Does shiro has those capabilities. How can it be achieved?  </p>

<pre><code>[main]    
    authc.loginUrl = /login.xhtml
    authc.usernameParam = USERNAME
    authc.passwordParam = USERPASSWORD
    authc.rememberMeParam = rememberMe
    user.loginUrl = /login.xhtml

    [users]
    admin=admin
    [urls]
    /login.xhtml = anon
</code></pre>
","<apache><browser><shiro>","2",""
"31799848","Apache Shiro behaves weird in Play Framework environment?","<p>We are moving our previous project to Play Framework 2.4.
In previous project (Vaadin 7), we used Apache Shiro without any issues.
Now, in Play Framework, we're having issues with Apache shiro.
A user is able to log in. But then refresh the page constantly then the user is out, which means the Subject is null with the following invocation:</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
</code></pre>

<p>But if after logging in, the user waits for a few seconds, then refresh the page, then the Subject is not null and work as it should be.
And again, if the user refresh the page constantly, then the Subject returns null again.</p>

<p>Does anyone have any experience on this?</p>

<p>Here is the shiro.ini:</p>

<pre><code>jdbcRealm = security.MyCustomRealm

# Sha256
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024

jdbcRealm.credentialsMatcher = $sha256Matcher

jdbcRealm.authenticationQuery = SELECT password, salt FROM b_user WHERE email = ?

# permissions
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select role_name from b_user_role where email = ?
jdbcRealm.permissionsQuery = select permission from b_role_permission where role_name = ?

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = 123456
ds.databaseName = mydb
jdbcRealm.dataSource=$ds

# Use Built-in Chache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

# 1,800,000 milliseconds = 30 mins
securityManager.sessionManager.globalSessionTimeout = 1800000

securityManager.realms = $jdbcRealm
</code></pre>
","<playframework><shiro>","2",""
"15684643","Apache-Shiro and Chrome","<p>We have a web application. We are using tomcat 7 ans shiro. The site working well on IE and Firefox, but not in Chrome:</p>

<p>Say we have 2 users: one is admin and can access the whole site. The other is guest and can access to only one part of the site. In Chrome, when I log in with admin account, everything works well. But if I log out, and then, logging in with guest account, I can access to the whole site... If I hard-refresh, then the accesses to restricted parts works again.</p>

<p>I don't understand why it happen on Chrome. Any advise?</p>
","<google-chrome><tomcat><shiro>","-2","15685910"
"26573779","UnknownSessionException when using SessionScoped CDI managed beans with Shiro managed sessions","<p>I am developing a JSF web based application that makes use of CDI managed beans and Shiro managed sessions. The problem I've got is when a JSF page that references an object annotated with <code>@javax.enterprise.context.SessionScoped</code> an UnknownSessionException is thrown. I have set the logging level to finest and looking through the application server log file I can see that when the user accesses the login page a new session is created along with a cookie that sets JSESSIONID to b2b69494-2236-467f-9e0b-3c262c74b7c4. When the user accesses the page that references the SessionScoped bean the cookie is updated to have a JSESSIONID set to 49253beaee601d4107cba4b61c77, at this point an UnknownSessionException is thrown. When accessing pages that reference a managed bean annotated with either <code>@javax.enterprise.context.ApplicationScoped</code> or <code>@javax.faces.view.ViewScoped</code> everything works fine. </p>

<p>It appears that when accessing a page that references a session scoped bean, the servlet container is creating a new session rather than allowing the Shiro managed session to be used. If I configure Shiro to use something other than JSESSIONID then the error isn't thrown but instead two sessions appear to be created, one managed by Shiro and the other managed by the servlet container. </p>

<p>The contents of my shiro.ini file is </p>

<pre><code>[main] 
authc.loginUrl = /login.xhtml 
authc.usernameParam = login:username 
authc.passwordParam = login:password 
authc.rememberMeParam = login:rememberMe 
user.loginUrl = /login.xhtml 
authc.successUrl = /app/index.xhtml 

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager 
securityManager.sessionManager = $sessionManager 

[users] 
admin = password 

[urls] 
/login.xhtml = authc 
/app/** = user 
</code></pre>

<p>My environment is using Glassfish 4.1, Java EE version 7, Mojarra version 2.2.7 for JSF, Weld version 2.2.2 for CDI, and Shiro version 1.2.3. I have also reproduced the same issue on Glassfish version 4.0 albeit with earlier versions of Mojarra and Weld. </p>

<p>I have uploaded the relevant portion of the application server log to PasteBin which can be accessed with the URL <a href=""http://pastebin.com/2sPHfdTQ"" rel=""nofollow"">http://pastebin.com/2sPHfdTQ</a>
I've also created an example Maven project to demonstrate the problem. The example project can be downloaded from <a href=""https://www.dropbox.com/s/1x9pe2o9ja0q9jw/TestJavaEE-web.zip?dl=0"" rel=""nofollow"">https://www.dropbox.com/s/1x9pe2o9ja0q9jw/TestJavaEE-web.zip?dl=0</a> which contains the source code and the complied war file. </p>

<p>Is anyone else currently using CDI managed session scoped beans with Shiro managed sessions, and if so have you had any problems? </p>

<p>Is there a configuration setting I've missed either in Shiro or GlassFish or is this a bug?</p>

<p>Note: I have previously posted this question on the Shiro mailing list but I'm yet to find a solution and I'm hoping that there will be a wider audience on StackOverflow.</p>
","<session><jsf-2><glassfish><cdi><shiro>","2",""
"20563096","Can't run GAE Shiro demo source code out of the box","<p>Downloaded and unzipped the GAE Shiro demo from <a href=""https://github.com/cilogi/gaeshiro"" rel=""nofollow"">https://github.com/cilogi/gaeshiro</a> but couldn't get it to work.</p>

<p>Running <code>mvn appengine:devserver</code> causes errors because of :</p>

<pre><code>[WARNING] Error injecting: com.google.appengine.devappserver.DevAppServerRunner
java.lang.NoClassDefFoundError: Lorg/sonatype/aether/RepositorySystem;
        at java.lang.Class.getDeclaredFields0(Native Method)
        at java.lang.Class.privateGetDeclaredFields(Class.java:2397)
        at java.lang.Class.getDeclaredFields(Class.java:1806)
        at com.google.inject.spi.InjectionPoint.getInjectionPoints(InjectionPoint.java:661)
        at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:366)
</code></pre>

<p>This is right out of the box, with no modifications. Ideas?</p>

<p>Details:</p>

<ul>
<li>Mac OS X 10.9</li>
<li>Java 1.7.0_45</li>
<li>Maven 3.1.1</li>
</ul>
","<java><google-app-engine><maven><shiro>","0",""
"31420281","odd things of apache-shiro integrated into spring-mvc via spring-boot","<p>i want to use apache-shiro to protect my URLs.
so, i did this config</p>

<pre><code>@Configuration
public class ApplicationConfigShiro {

    @Bean
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean factoryBean = new ShiroFilterFactoryBean();
        factoryBean.setSecurityManager(securityManager());
        return factoryBean;
    }

    // blah blah ...

    @Bean(name = ""realm"")
    @DependsOn(""lifecycleBeanPostProcessor"")
    public PropertiesRealm realm() {
        // blah blah
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    @DependsOn(""lifecycleBeanPostProcessor"")
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        return new DefaultAdvisorAutoProxyCreator();
    }

    @Bean
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();
        advisor.setSecurityManager(securityManager());
        return advisor;
    }
}
</code></pre>

<p>and here is my mvc-request-method </p>

<pre><code>@Controller
@RequestMapping(""/html"")
public class HtmlController {

    @Resource
    private UserService userService;

    @RequestMapping(value = ""/users"", method = RequestMethod.GET)
    public ModelAndView listUsers() {
        List&lt;User&gt; users = userService.findAllUsers();
        ModelAndView modelAndView = new ModelAndView(""users"");
        modelAndView.addObject(""users"", users);
        return modelAndView;
    }

}
</code></pre>

<p>very thing is OK. and i start my project by <code>mvn spring-boot:run</code>. and check out <code>http://localhost:8080/mappings</code>
the json result can tell me mapping <code>/html/users</code> is ready to use.
i did check out the <code>http://localhost:8080/html/users</code>, it was fine.</p>

<p><strong>BUT</strong> once i add shiro's annotations like <code>@RequiresAuthentication</code> to my request-mapping-method like this:</p>

<pre><code>@RequiresAuthentication    // **I ADD THIS LINE**
@RequestMapping(value = ""/users"", method = RequestMethod.GET)
public ModelAndView listUsers() {
    List&lt;User&gt; users = userService.findAllUsers();
    ModelAndView modelAndView = new ModelAndView(""users"");
    modelAndView.addObject(""users"", users);
    return modelAndView;
}
</code></pre>

<p>re-run this project, re-check <code>http://localhost:8080/mappings</code>, the mapping <code>/html/users</code> is just GONE. try to access <code>http://localhost:8080/html/users</code> i got a 404 of course.</p>

<p>Did i miss something? Or this is a bug of spring?</p>

<p>Help me please. Sorry to give you a trouble.</p>

<pre><code>git clone git@github.com:yingzhuo/spring-playground.git
cd spring-playground
mvn clean spring-boot:run
</code></pre>
","<spring><spring-mvc><spring-boot><shiro>","0",""
"37156637","List authenticated users from Apache Shiro ServletContainerSessionManager","<p>I want to implement solution for listing logged in users in Apache Shiro. I tried this code:</p>

<pre><code>public Collection&lt;Session&gt; listAccounts() throws IllegalAccessException, NoSuchMethodException, IllegalArgumentException, InvocationTargetException
    {
        DefaultSecurityManager manager = (DefaultSecurityManager) SecurityUtils.getSecurityManager();
        DefaultWebSessionManager sessionManager = (DefaultWebSessionManager) manager.getSessionManager();
        // invoke ""sessionManager.getActiveSessions()"" via reflection:
        Method getActiveSessionsMethod = DefaultSessionManager.class.getDeclaredMethod(""getActiveSessions"");
        getActiveSessionsMethod.setAccessible(true);
        Collection&lt;Session&gt; activeSessions = (Collection&lt;Session&gt;) getActiveSessionsMethod.invoke(sessionManager);

        return activeSessions;
    }
</code></pre>

<p>But when I run the code I get this error message:</p>

<pre><code>Caused by: java.lang.ClassCastException: org.apache.shiro.web.session.mgt.ServletContainerSessionManager cannot be cast to org.apache.shiro.web.session.mgt.DefaultWebSessionManager
    at com.crm.web.authentication.ActiveAccounts.listAccounts(ActiveAccounts.java:22)
</code></pre>

<p>Can you give me some advice how I can fix this issue?</p>
","<java><shiro>","0",""
"16851806","Shiro login redirects with fragment identifiers","<p>We are writing a Java based webapp with Shiro as the authentication framework and came across a redirect issue.</p>

<p>On login redirects the fragment ids get lost:</p>

<ul>
<li>/workspace#documents/... (fragment id is not submitted, which is normal HTTP behaviour)</li>
<li>/login#documents/... (fragment id is reappended by browser after redirect)</li>
<li>/workspace (Shiro redirects to base url)</li>
</ul>

<p>Has anyone figured out a simple solution to preserve the fragment identifier across the login redirects?</p>
","<shiro>","1",""
"37919530","Getting ""redirected you too many times"" error when using apache Shiro authorization","<p>I have a Spring web application using Apache Shiro as security layer.
I'm trying to implement simple authentication and authorization.</p>

<p>My security context xml is:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""/myApp/login"" /&gt;
    &lt;property name=""successUrl"" value=""/myApp/"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/someUnauthorizedUrl""/&gt;

    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /someUnauthorizedUrl = anon
            /myApp/** = authc, roles[user]
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>Once I added the authorization, by using ""roles[user]"" I'm getting ""redirected you too many times"" in the browser.</p>

<p>By debugging in the browser I see indeed multiple redirections to ""/login"". 
It looks like a redirection loop that was created.</p>

<p>When I navigate directly to localhost/myApp/login I also getting the same error, despite the fact that that the login url should be automatically by Shiro.</p>
","<spring><apache><redirect><shiro>","0",""
"39461280","How Does Apache Shiro Hash Salted Passwords?","<p>If I use the <a href=""https://shiro.apache.org/command-line-hasher.html"" rel=""nofollow"">Apache Shiro command line tool</a> to generate a password</p>

<pre><code>java -jar shiro-tools-hasher-1.3.1-cli.jar -p -a SHA-512
</code></pre>

<p>and I use the password <code>password</code> I get </p>

<pre><code>$shiro1$SHA-512$500000$wnjBM5pWpwN5784Aq7i7QA==$IqJ6XdwuKtCNqJCu982CzR6b4A3lnGp2F/WD8tmwVC7SAnOgeuUgtBbJ/ki9FqiIbX/ngF9RJd+5iy971d88cg==
</code></pre>

<p>The documentation says the hashing is salted by default and defaults to 500k iterations and testing it results in a different password each time so I assume it is.</p>

<p>I can now log in without specifying the salt anywhere though</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
UsernamePasswordToken token = new UsernamePasswordToken(""jsmith"", ""password"");
token.setRememberMe(true);
currentUser.login(token);
</code></pre>

<p>The only place I can see is that it must be in the hash. </p>

<p>If we look carefully we can see sections:</p>

<ul>
<li><code>$shiro1</code> shows it is a Shiro hashed password</li>
<li><code>$SHA-512</code> shows the algorithm used</li>
<li><code>$500000</code> shows the number of iterations</li>
</ul>

<p>The salt is probably after that section or at the end.</p>

<p>Is this a dangerous approach?</p>

<p>Are Apache Shiro exposing too much information here and making it somewhat easier to create an attack?</p>
","<passwords><shiro>","1",""
"30771125","Shiro redirecting back to login page after wrong/false credentials(username/password)","<p><strong>Q1:</strong> <strong><em>How can I redirect</em></strong> to unauthenticated url(or any page/way to say user that credentials were incorrect) <strong><em>after credentials entered incorrectly</em></strong>.</p>

<p><strong>Q2:</strong> <strong><em>What is the normal/default behaviour for shiro</em></strong> when credentials are incorrect? (does it send -back to login, -unauthorized page, -some message)</p>

<p><strong>INFO:</strong> shiro integration with spring. I use my own credentials. 
And I have tried to throw IncorrectCredentialsException, WebApplicationException in doGetAuthenticationInfo method of MyRealm when username/password is wrong. 
No help. I debugged and it's using MyRealm when login form posted.(debug stopped in doGetAuthenticationInfo method of my Realm)</p>

<p>Here is part of my spring <strong>settings</strong> for shiro</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/login.html""/&gt;
    &lt;property name=""successUrl"" value=""/rest/security/redirect""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.html""/&gt;

    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /login.html = authc
            /logout = logout
            /apps/admin/** = authc, roles[admin]
</code></pre>

<p><strong>Note</strong>: settings for web.xml and others are configured. Authentication, authorization and any other redirects working as a charm except login redirect after wrong credentials.</p>
","<java><security><filter><shiro>","0",""
"23349330","apache shiro: use google+ for authorizing my REST service","<p>In my android app, I want to set up google+ for authentication. </p>

<p>My android app also needs to talk to my own REST API.  </p>

<p>Is it possible to use the token returned by google+ </p>

<p><a href=""https://developers.google.com/+/mobile/android/sign-in"" rel=""nofollow"">https://developers.google.com/+/mobile/android/sign-in</a></p>

<p>for authenticating my own REST API using Shiro?</p>

<p>I seem to see some connection but couldn't fully flush out how to do that with Shiro.</p>

<p>Thanks!</p>
","<rest><oauth-2.0><google-plus><shiro>","1",""
"27853561","Grails project leveraging Apache Shiro : LegacyShiroFilter uses or overrides a deprecated API","<p>I am working on a grails project that uses Apache Shiro for security.  I am getting this warning when compiling or running the application.  </p>

<pre><code>Note: /../shiro/grails/LegacyShiroFilter.java uses or overrides a deprecated API.

Note: Recompile with -Xlint:deprecation for details.
</code></pre>

<p>BuildConfig.groovy</p>

<pre><code>plugins {

    build "":tomcat:7.0.55""

    compile "":scaffolding:2.1.2""
    compile ':cache:1.1.8'
    compile "":asset-pipeline:1.9.9""

    runtime "":hibernate4:4.3.6.1"" // or "":hibernate:3.6.10.18""
    runtime "":database-migration:1.4.0""

    compile "":shiro:1.2.1""

}
</code></pre>

<p>Any ideas?  Thanks in advance for your help.</p>
","<grails><shiro>","1","27856239"
"36168958","shiro + cas4.0 Into subsystem error in cas after login","<p>follows：</p>

<p>jasig cas 4.0 + shiro 1.2.1 +spring 3.2.1 </p>

<p>client configuration file is as follows:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;property name=""loginUrl"" value=""https://sso.h-guiyang.com:8443/cas/login?service=https://admin.h-guiyang.com:8081/admin/"" /&gt;
    &lt;property name=""successUrl"" value=""https://admin.h-guiyang.com:8081/admin/""&gt;&lt;/property&gt;  
    &lt;property name=""filters""&gt;
        &lt;map&gt;

            &lt;entry key=""casFilter"" value-ref=""casFilter""/&gt;



        &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /admin/management/index = casFilter
            /ehrLoginSSO/**= anon
            /unauthorized = anon
            /loginSSO/**= anon
            /Captcha.jpg = anon
            /styles/** = anon
            /ws/** = anon 
            /resources/** = anon
            /styles/** = anon
            /login/timeout = anon
            &lt;!-- /login = authc --&gt;
            /logout = logout
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id=""casSubjectFactory"" class=""org.apache.shiro.cas.CasSubjectFactory""/&gt;
&lt;!-- Shiro's main business-tier object for web-enabled applications --&gt;
&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""shiroDbRealm"" /&gt;
    &lt;property name=""cacheManager"" ref=""shiroEhcacheManager"" /&gt;

    &lt;property name=""subjectFactory"" ref=""casSubjectFactory""/&gt;
&lt;/bean&gt;


&lt;bean id=""shiroDbRealm"" class=""net.hp.es.adm.healthcare.rphcp.shiro.ShiroDbCasRealm"" depends-on=""userDAO, userRoleDAO, organizationRoleDAO, roleDAO""&gt;
    &lt;property name=""userService"" ref=""userServiceImpl""/&gt;
    &lt;property name=""userRoleService"" ref=""userRoleServiceImpl""/&gt;
    &lt;property name=""roleService"" ref=""roleServiceImpl""/&gt;
    &lt;property name=""organizationRoleService"" ref=""organizationRoleServiceImpl""/&gt;
    &lt;property name=""casServerUrlPrefix"" value=""https://sso.h-guiyang.com:8443/cas""/&gt;
    &lt;property name=""casService"" value=""https://admin.h-guiyang.com:8081/admin""/&gt;

    &lt;property name=""useCaptcha"" value=""false""/&gt;

    &lt;property name=""activeRoot"" value=""false""/&gt;
&lt;/bean&gt;

&lt;bean id=""casFilter"" class=""org.apache.shiro.cas.CasFilter""&gt;
    &lt;property name=""failureUrl"" value=""/unauthorized""/&gt;
&lt;/bean&gt;

&lt;bean id=""shiroEhcacheManager"" class=""org.apache.shiro.cache.ehcache.EhCacheManager""&gt;
    &lt;property name=""cacheManagerConfigFile"" value=""classpath:ehcache/ehcache-shiro.xml""/&gt;
&lt;/bean&gt;

  &lt;bean id=""dWZUserFilter"" class=""net.hp.es.adm.healthcare.rphcp.shiro.DWZUserFilter""/&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;
</code></pre>

<p></p>

<p>When I from CAS login successfully into the subsystem,subsystem shiro error as follows：</p>

<pre><code>org.apache.shiro.authz.UnauthenticatedException: Attempting to perform a user-only operation.  The current Subject is not a user (they haven't been authenticated or remembered from a previous login).  Access denied.
at org.apache.shiro.authz.aop.UserAnnotationHandler.assertAuthorized(UserAnnotationHandler.java:61) ~[shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84) ~[shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100) ~[shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38) ~[shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115) ~[shiro-spring-1.2.1.jar:1.2.1]
at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653) ~[spring-aop-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at net.hp.es.adm.healthcare.rphcp.controller.IndexController$$EnhancerBySpringCGLIB$$e57cb6e1.index(&lt;generated&gt;) ~[spring-core-4.1.2.RELEASE.jar:0.0.1-SNAPSHOT]
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_79]
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_79]
at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_79]
at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215) ~[spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132) ~[spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:781) ~[spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:721) ~[spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83) ~[spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943) [spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877) [spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966) [spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857) [spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at javax.servlet.http.HttpServlet.service(HttpServlet.java:624) [servlet-api.jar:na]
at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842) [spring-webmvc-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at javax.servlet.http.HttpServlet.service(HttpServlet.java:731) [servlet-api.jar:na]
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) [catalina.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.68]
at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat7-websocket.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.68]
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.2.1.jar:1.2.1]
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.2.1.jar:1.2.1]
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.2.1.jar:1.2.1]
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.2.1.jar:1.2.1]
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.2.1.jar:1.2.1]
at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344) [spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261) [spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.68]
at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:176) [spring-orm-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.68]
at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) [spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.1.2.RELEASE.jar:4.1.2.RELEASE]
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.68]
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.68]
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:203) [catalina.jar:7.0.68]
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122) [catalina.jar:7.0.68]
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505) [catalina.jar:7.0.68]
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) [catalina.jar:7.0.68]
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103) [catalina.jar:7.0.68]
at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956) [catalina.jar:7.0.68]
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) [catalina.jar:7.0.68]
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:436) [catalina.jar:7.0.68]
at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1078) [tomcat-coyote.jar:7.0.68]
at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625) [tomcat-coyote.jar:7.0.68]
at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:318) [tomcat-coyote.jar:7.0.68]
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_79]
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_79]
at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-coyote.jar:7.0.68]
at java.lang.Thread.run(Thread.java:745) [na:1.7.0_79]
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public java.lang.String net.hp.es.adm.healthcare.rphcp.controller.IndexController.index(java.util.Map)
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90) ~[shiro-core-1.2.1.jar:1.2.1]
... 62 common frames omitted

2016-03-23 10:12:27,808 [http-bio-8081-exec-3] ERROR 500.jsp - org.apache.shiro.authz.UnauthenticatedException: Attempting to perform a user-only operation.  The current Subject is not a user (they haven't been authenticated or remembered from a previous login).  Access denied.
at org.apache.shiro.authz.aop.UserAnnotationHandler.assertAuthorized(UserAnnotationHandler.java:61)
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
at net.hp.es.adm.healthcare.rphcp.controller.IndexController$$EnhancerBySpringCGLIB$$e57cb6e1.index(&lt;generated&gt;)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:781)
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:721)
at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)
at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)
at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)
at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)
at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:176)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:203)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:436)
at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1078)
at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625)
at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:318)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public java.lang.String net.hp.es.adm.healthcare.rphcp.controller.IndexController.index(java.util.Map)
at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
... 62 more
</code></pre>

<p>ShiroDbrealm code :</p>

<pre><code>public class ShiroDbCasRealm extends CasRealm {
private static final Logger log = LoggerFactory.getLogger(ShiroDbCasRealm.class);
private static final int INTERATIONS = 1024;
private static final int SALT_SIZE = 8;
private static final String ALGORITHM = ""SHA-1"";


protected boolean activeRoot = false;


protected boolean useCaptcha = false;
@Autowired
protected UserService userService;
@Autowired
private RolePermissionService rolePermissionService;
@Autowired
protected RoleService roleService;
@Autowired
protected UserRoleService userRoleService;
@Autowired
protected OrganizationRoleService organizationRoleService;


public ShiroDbCasRealm() {
    HashedCredentialsMatcher matcher = new HashedCredentialsMatcher(ALGORITHM);
    matcher.setHashIterations(INTERATIONS);

    setCredentialsMatcher(matcher);
}


@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken)
        throws AuthenticationException {

    System.out.println(""================"");
    CasToken casToken = (CasToken) authcToken;
    if (authcToken == null)
        return null;
    String ticket = (String) casToken.getCredentials();
    if (!StringUtils.hasText(ticket))
        return null;
    TicketValidator ticketValidator = ensureTicketValidator();
    try {
        Assertion casAssertion = ticketValidator.validate(ticket, getCasService());
        AttributePrincipal casPrincipal = casAssertion.getPrincipal();
        String userId = casPrincipal.getName();
        log.debug(""Validate ticket : {} in CAS server : {} to retrieve user : {}"",
                new Object[] { ticket, getCasServerUrlPrefix(), userId });
        Map attributes = casPrincipal.getAttributes();
        casToken.setUserId(userId);
        User user = userService.getByUsername(userId);
        if (user != null) {
            if (user.getStatus().equals(User.STATUS_DISABLED)) {
                throw new DisabledAccountException();
            }
            byte[] salt = Encodes.decodeHex(user.getSalt());

            ShiroUser shiroUser = new ShiroUser(user.getId(), user.getUsername());
            shiroUser.setUser(userService.get(shiroUser.getId()));

            return new SimpleAuthenticationInfo(shiroUser, user.getPassword(), ByteSource.Util.bytes(salt),
                    getName());
        } else {
            return null;
        }
        // String rememberMeAttributeName = getRememberMeAttributeName();
        // String rememberMeStringValue = (String)
        // attributes.get(rememberMeAttributeName);
        // boolean isRemembered = rememberMeStringValue != null &amp;&amp;
        // Boolean.parseBoolean(rememberMeStringValue);
        // if (isRemembered)
        // casToken.setRememberMe(true);
        // List principals = CollectionUtils.asList(new Object[] { userId,
        // attributes });
        // PrincipalCollection principalCollection = new
        // SimplePrincipalCollection(principals, getName());
        // return new SimpleAuthenticationInfo(principalCollection, ticket);
    } catch (TicketValidationException e) {
        throw new CasAuthenticationException(
                (new StringBuilder()).append(""Unable to validate ticket ["").append(ticket).append(""]"").toString(),
                e);
    }
}


@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    System.out.println((String) principals.getPrimaryPrincipal() + ""我进来了~~~~~~~"");
    Collection&lt;String&gt; hasPermissions = null;
    Collection&lt;String&gt; hasRoles = null;
    String username = (String) principals.getPrimaryPrincipal();
    User user = userService.getByUsername(username);
    ShiroUser shiroUser = new ShiroUser(user.getId(), user.getUsername());
    shiroUser.setUser(userService.get(shiroUser.getId()));
    List&lt;UserRole&gt; userRoles = userRoleService.findByUserId(shiroUser.getId());
    List&lt;OrganizationRole&gt; organizationRoles = organizationRoleService
            .findByOrganizationId(shiroUser.getUser().getOrganization().getId());
    Collection&lt;Role&gt; roles = getUserRoles(userRoles, organizationRoles);
    hasRoles = makeRoles(roles, shiroUser);
    hasPermissions = makePermissions(roles, shiroUser);
    SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
    info.addRoles(hasRoles);
    info.addStringPermissions(hasPermissions);
    shiroUser.setAttribute(""roleNames"", hasRoles);

    // return newAuthorizationInfo(shiroUser);
    return info;
}

private SimpleAuthorizationInfo newAuthorizationInfo(ShiroUser shiroUser) {
    Collection&lt;String&gt; hasPermissions = null;
    Collection&lt;String&gt; hasRoles = null;

    // 是否启用超级管理员 &amp;&amp; id==1为超级管理员，构造所有权限
    if (activeRoot &amp;&amp; shiroUser.getId() == 1) {
        hasRoles = new HashSet&lt;String&gt;();
        Page page = new Page();
        page.setNumPerPage(Integer.MAX_VALUE);
        List&lt;Role&gt; roles = roleService.findAll(page);

        for (Role role : roles) {
            hasRoles.add(role.getName());
        }

        hasPermissions = new HashSet&lt;String&gt;();
        hasPermissions.add(""*"");

        if (log.isInfoEnabled()) {
            log.info(""使用了"" + shiroUser.getLoginName() + ""的超级管理员权限:"" + ""。At "" + new Date());
            log.info(shiroUser.getLoginName() + ""拥有的角色:"" + hasRoles);
            log.info(shiroUser.getLoginName() + ""拥有的权限:"" + hasPermissions);
        }
    } else {
        List&lt;UserRole&gt; userRoles = userRoleService.findByUserId(shiroUser.getId());
        List&lt;OrganizationRole&gt; organizationRoles = organizationRoleService
                .findByOrganizationId(shiroUser.getUser().getOrganization().getId());

        Collection&lt;Role&gt; roles = getUserRoles(userRoles, organizationRoles);
        hasRoles = makeRoles(roles, shiroUser);
        hasPermissions = makePermissions(roles, shiroUser);
    }

    SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
    info.addRoles(hasRoles);
    info.addStringPermissions(hasPermissions);
    shiroUser.setAttribute(""roleNames"", hasRoles);
    return info;
}

private Collection&lt;Role&gt; getUserRoles(List&lt;UserRole&gt; userRoles, List&lt;OrganizationRole&gt; organizationRoles) {
    Set&lt;Role&gt; roles = new HashSet&lt;Role&gt;();
    for (UserRole userRole : userRoles) {
        roles.add(userRole.getRole());
    }

    for (OrganizationRole organizationRole : organizationRoles) {
        roles.add(organizationRole.getRole());
    }

    return roles;
}


private Collection&lt;String&gt; makeRoles(Collection&lt;Role&gt; roles, ShiroUser shiroUser) {
    Collection&lt;String&gt; hasRoles = new HashSet&lt;String&gt;();
    for (Role role : roles) {
        hasRoles.add(role.getName());
    }

    if (log.isInfoEnabled()) {
        log.info(shiroUser.getLoginName() + ""拥有的角色:"" + hasRoles);
    }
    return hasRoles;
}


private Collection&lt;String&gt; makePermissions(Collection&lt;Role&gt; roles, ShiroUser shiroUser) {
    // 清空shiroUser中map
    shiroUser.getHasDataControls().clear();
    shiroUser.getHasModules().clear();

    Collection&lt;String&gt; stringPermissions = new ArrayList&lt;String&gt;();
    for (Role role : roles) {
        List&lt;RolePermission&gt; rolePermissions = role.getRolePermissions();
        for (RolePermission rolePermission : rolePermissions) {
            Permission permission = rolePermission.getPermission();

            String resource = permission.getModule().getSn();
            String operate = permission.getSn();

            StringBuilder builder = new StringBuilder();
            builder.append(resource + "":"" + operate);

            shiroUser.getHasModules().put(resource, permission.getModule());

            // StringBuilder dcBuilder = new StringBuilder();
            // for (RolePermissionDataControl rpdc :
            // rolePermission.getRolePermissionDataControls()) {
            // DataControl dataControl = rpdc.getDataControl();
            // dcBuilder.append(dataControl.getName() + "","");
            //
            // shiroUser.getHasDataControls().put(dataControl.getName(),
            // dataControl);
            // }

            // if (dcBuilder.length() &gt; 0) {
            // builder.append("":"" + dcBuilder.substring(0,
            // dcBuilder.length() - 1));
            // }
            //
            stringPermissions.add(builder.toString());
        }
    }

    if (log.isInfoEnabled()) {
        log.info(shiroUser.getLoginName() + ""拥有的权限:"" + stringPermissions);
    }
    return stringPermissions;
}

public static class HashPassword {
    public String salt;
    public String password;
}

public static HashPassword encryptPassword(String plainPassword) {
    HashPassword result = new HashPassword();
    byte[] salt = Digests.generateSalt(SALT_SIZE);
    result.salt = Encodes.encodeHex(salt);

    byte[] hashPassword = Digests.sha1(plainPassword.getBytes(), salt, INTERATIONS);
    result.password = Encodes.encodeHex(hashPassword);
    return result;
}


public static boolean validatePassword(String plainPassword, String password, String salt) {
    byte[] hashPassword = Digests.sha1(plainPassword.getBytes(), Encodes.decodeHex(salt), INTERATIONS);
    String oldPassword = Encodes.encodeHex(hashPassword);
    return password.equals(oldPassword);
}


@Override
protected Object getAuthorizationCacheKey(PrincipalCollection principals) {
    ShiroUser shiroUser = (ShiroUser) principals.getPrimaryPrincipal();
    return shiroUser.getLoginName();
}


public void clearCachedAuthorizationInfo(String loginName) {
    ShiroUser shiroUser = new ShiroUser(loginName);

    SimplePrincipalCollection principals = new SimplePrincipalCollection(shiroUser, getName());
    clearCachedAuthorizationInfo(principals);
}

public void clearAllCachedAuthorizationInfo() {
    Cache&lt;Object, AuthorizationInfo&gt; cache = getAuthorizationCache();
    if (cache != null) {
        for (Object key : cache.keys()) {
            cache.remove(key);
        }
    }
}


public void setActiveRoot(boolean activeRoot) {
    this.activeRoot = activeRoot;
}

/**
 * 设置 useCaptcha 的值
 * 
 * @param useCaptcha
 */
public void setUseCaptcha(boolean useCaptcha) {
    this.useCaptcha = useCaptcha;
}

public void setUserService(UserService userService) {
    this.userService = userService;
}


public void setUserRoleService(UserRoleService userRoleService) {
    this.userRoleService = userRoleService;
}

/**
 * 设置 organizationRoleService 的值
 * 
 * @param organizationRoleService
 */
public void setOrganizationRoleService(OrganizationRoleService organizationRoleService) {
    this.organizationRoleService = organizationRoleService;
}

/**
 * @param roleService
 *            the roleService to set
 */
public void setRoleService(RoleService roleService) {
    this.roleService = roleService;
}
</code></pre>

<p>}</p>

<p>How can I solve this problem, thank you！</p>
","<java><spring><spring-mvc><cas><shiro>","0",""
"20469547","Configuring shiro-oauth plugin in grails","<p>I am using the shiro-oauth plugin in grails.
I have configured the plugin as follow </p>

<pre><code>    oauth {
    providers {
        facebook {
            provider = org.scribe.builder.api.FacebookApi
            key = 'zuckerberg'
            secret = 'brothers'
            callback = ""${grails.serverURL}/auth/callback""
            successUri = ""/oauth/OnSuccess?provider=facebook""
            failureUri = ""${grails.serverURL}/auth/unauthorized""
        }

    }
    debug = true
}
</code></pre>

<p>but after running application , I got this error as follow</p>

<pre><code>Class: uk.co.desirableobjects.oauth.scribe.exception.InvalidOauthProviderException
Message
[:] is not a Class
</code></pre>

<p>and the stack trace is as follow</p>

<pre><code> Line | Method
-&gt;&gt;  116 | logThrowable     in AbstractFilter.java
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|     70 | doFilter         in     ''
|     55 | doFilter . . . . in SavedRequestFilter.java
|    449 | executeChain     in org.apache.shiro.web.servlet.AbstractShiroFilter
|    365 | call . . . . . . in org.apache.shiro.web.servlet.AbstractShiroFilter$1
|     90 | doCall           in org.apache.shiro.subject.support.SubjectCallable
|     83 | call . . . . . . in     ''
|    380 | execute          in org.apache.shiro.subject.support.DelegatingSubject
|    362 | doFilterInternal in org.apache.shiro.web.servlet.AbstractShiroFilter
|    125 | doFilter         in org.apache.shiro.web.servlet.OncePerRequestFilter
|   1145 | runWorker . . .  in java.util.concurrent.ThreadPoolExecutor
|    615 | run              in java.util.concurrent.ThreadPoolExecutor$Worker
^    722 | run . . . . . .  in java.lang.Thread

Caused by BeanCreationException: Error creating bean with name 'uk.co.desirableobjects.oauth.scribe.OauthController': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthController]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is uk.co.desirableobjects.oauth.scribe.exception.InvalidOauthProviderException: [:] is not a Class
-&gt;&gt;  196 | getBean          in AbstractFilter.java
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|    842 | lookupController in PageFragmentCachingFilter.java
|    176 | doFilter . . . . in     ''
|     63 | doFilter         in AbstractFilter.java
|     55 | doFilter . . . . in SavedRequestFilter.java
|    449 | executeChain     in org.apache.shiro.web.servlet.AbstractShiroFilter
|    365 | call . . . . . . in org.apache.shiro.web.servlet.AbstractShiroFilter$1
|     90 | doCall           in org.apache.shiro.subject.support.SubjectCallable
|     83 | call . . . . . . in     ''
|    380 | execute          in org.apache.shiro.subject.support.DelegatingSubject
|    362 | doFilterInternal in org.apache.shiro.web.servlet.AbstractShiroFilter
|    125 | doFilter         in org.apache.shiro.web.servlet.OncePerRequestFilter
|   1145 | runWorker . . .  in java.util.concurrent.ThreadPoolExecutor
|    615 | run              in java.util.concurrent.ThreadPoolExecutor$Worker
^    722 | run . . . . . .  in java.lang.Thread

Caused by BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthController]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is uk.co.desirableobjects.oauth.scribe.exception.InvalidOauthProviderException: [:] is not a Class
-&gt;&gt;  196 | getBean          in AbstractFilter.java
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|    842 | lookupController in PageFragmentCachingFilter.java
|    176 | doFilter . . . . in     ''
|     63 | doFilter         in AbstractFilter.java
|     55 | doFilter . . . . in SavedRequestFilter.java
|    449 | executeChain     in org.apache.shiro.web.servlet.AbstractShiroFilter
|    365 | call . . . . . . in org.apache.shiro.web.servlet.AbstractShiroFilter$1
|     90 | doCall           in org.apache.shiro.subject.support.SubjectCallable
|     83 | call . . . . . . in     ''
|    380 | execute          in org.apache.shiro.subject.support.DelegatingSubject
|    362 | doFilterInternal in org.apache.shiro.web.servlet.AbstractShiroFilter
|    125 | doFilter         in org.apache.shiro.web.servlet.OncePerRequestFilter
|   1145 | runWorker . . .  in java.util.concurrent.ThreadPoolExecutor
|    615 | run              in java.util.concurrent.ThreadPoolExecutor$Worker
^    722 | run . . . . . .  in java.lang.Thread

Caused by BeanCreationException: Error creating bean with name 'oauthService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is uk.co.desirableobjects.oauth.scribe.exception.InvalidOauthProviderException: [:] is not a Class
-&gt;&gt;  196 | getBean          in AbstractFilter.java
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
|    842 | lookupController in PageFragmentCachingFilter.java
|    176 | doFilter . . . . in     ''
|     63 | doFilter         in AbstractFilter.java
|     55 | doFilter . . . . in SavedRequestFilter.java
|    449 | executeChain     in org.apache.shiro.web.servlet.AbstractShiroFilter
|    365 | call . . . . . . in org.apache.shiro.web.servlet.AbstractShiroFilter$1
|     90 | doCall           in org.apache.shiro.subject.support.SubjectCallable
|     83 | call . . . . . . in     ''
|    380 | execute          in org.apache.shiro.subject.support.DelegatingSubject
|    362 | doFilterInternal in org.apache.shiro.web.servlet.AbstractShiroFilter
|    125 | doFilter         in org.apache.shiro.web.servlet.OncePerRequestFilter
|   1145 | runWorker . . .  in java.util.concurrent.ThreadPoolExecutor
|    615 | run              in java.util.concurrent.ThreadPoolExecutor$Worker
^    722 | run . . . . . .  in java.lang.Thread

Caused by BeanInstantiationException: Could not instantiate bean class [uk.co.desirableobjects.oauth.scribe.OauthService]: Constructor threw exception; nested exception is uk.co.desirableobjects.oauth.scribe.exception.InvalidOauthProviderException: [:] is not a Class
-&gt;&gt;  196 | getBean          in AbstractFilter.java
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


Caused by InvalidOauthProviderException: [:] is not a Class
</code></pre>

<p>Can someone tell me where i wrong while configuring the oauth. 
<a href=""http://pledbrook.github.io/grails-shiro-oauth/guide/introduction.html"" rel=""nofollow"">follow this link</a></p>
","<grails><oauth><grails-plugin><shiro>","0",""
"19397882","struts2 + shiro + spring, why did not call MyRealm's function?","<p>Recently, I am studying to set up SSH+Shiro environment, and I have some questions when using Shiro.</p>

<p>This is my applicationContent.xml:</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;

    &lt;property name=""loginUrl"" value=""/public/login.jsp"" /&gt;
    &lt;property name=""successUrl"" value=""/public/index.jsp"" /&gt;
    &lt;property name=""unauthorizedUrl"" value=""/public/error.jsp"" /&gt;

    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /login = anon
            /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>But in login.jsp when I submit the form, it did not goto index.jsp(login success), And MyRealm::doGetAuthenticationInfo were not called.</p>

<p>This is my login.jsp:</p>

<pre><code>&lt;form action=""login.action"" method=""post""&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Username:&lt;/td&gt;
        &lt;td&gt;&lt;input type=""text"" name=""name"" maxlength=""50"" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Password:&lt;/td&gt;
        &lt;td&gt;&lt;input type=""password"" name=""password"" maxlength=""50"" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=""2"" align=""right""&gt;&lt;input type=""submit"" name=""submit"" value=""login"" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
</code></pre>

<p>What's the right way to do? Thanks a lot.</p>
","<spring><jsp><struts2><shiro>","1",""
"37283218","apache shiro authorization annotations doesn't work with jsf 2.2","<p>I'm using apache shiro 1.2.4 with jsf 2.2 and glassfish 4.1 .</p>

<p>I'm using xhtml views not jsp here.</p>

<p>I have authentication working perfectly and I can require login before accessing pages, authorization works programmatically by using checkRole but not with annotations.  </p>

<p>basically I want this:</p>

<pre><code>@RequiresRoles(""Administrator"")
public static void addEmployee(Employee emp,String plaintextpassword)
{                
    PasswordGenerator.generatePassword(emp, plaintextpassword);
    new TransactionExecuter&lt;Employee,Void&gt;().execute(new ObjectAdder&lt;Employee&gt;(), emp);        
}
</code></pre>

<p>That is only admin can add employees.  </p>

<p>I have added these jars with my netbeans 8.1 : aspectj-jrt, aspectj-weaver, asm , cglib, shiro-aspectj along with shiro-core and shiro-web ofcourse(all the latest version from maven repo).  </p>

<p>I don't see any error related to this in my server log, I have hibernate.show_sql set to true yet I don't see the statement that should select employee role.  </p>

<p>below is my Employee pojo:  </p>

<pre><code>@Entity
@Inheritance
public class Employee implements Serializable 
{
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)    
    private Integer id;

    @Basic(optional=false)
    @Column(unique=true)
    private String username;

    @Basic(optional=false)
    private String passwordhash;

    @Basic(optional=false)
    private String passwordsalt;

    @Basic(optional=false)
    private String firstname;

    @Basic(optional=false)
    private String lastname;

    private String address;

    @Basic(optional=false)
    private Integer salary;

    private String phonenumber;                   

    //getters and setters and constructor
}
</code></pre>

<p>you can see the <code>@Inheritance</code> anotation , I have <code>Administrator</code>,<code>DivisionManager</code>,<code>ManagementEmployee</code> extending Employee with no extra fields or methods.  </p>

<p>The Discriminator column is my Role name :) and As I said <code>checkRole</code> works :).  </p>

<p>Last but not least here is my shiro.ini :  </p>

<pre><code>[main]
authc.loginUrl = /tmp/signin.xhtml
authc.successUrl = /tmp/employee_home.xhtml
logout.redirectUrl = /tmp/signin.xhtml

#Our Realm
jdbcRealm = com.model.realm.EmployeesRealm

# Sha256
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024

jdbcRealm.credentialsMatcher = $sha256Matcher

# User Query
# default is ""select password from users where username = ?""
jdbcRealm.authenticationQuery = SELECT passwordhash, passwordsalt FROM Employee WHERE username = ?

# permissions
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select DTYPE from Employee where username = ?
jdbcRealm.permissionsQuery = select permission from EmployeePermission perm inner join Employee_EmployeePermission empperm on perm.id=empperm.permissions_id inner join Employee emp on emp.id=empperm.Employee_id where username = ?

#database
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = root
ds.databaseName = jsfdb
jdbcRealm.dataSource=$ds

authc.usernameParam = email
authc.passwordParam = password
authc.failureKeyAttribute = shiroLoginFailure

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

securityManager.realms = $jdbcRealm

[urls]
/* = authc
/tmp/signin.xhtml= anon
</code></pre>

<p>I only have web.xml and glassfish-resources.xml besides my shiro.ini, I'm saying this because there seems to be many config files which I don't know where to put.  </p>

<h2>Note1</h2>

<p>I tried integrating spring but that failed not finding <code>SpringBeanFacesELResolver</code> So I thought of switching to AspectJ, I followed the sample project in their documentation and added the neccessary dependencies (with other files That I found in a stackoverflow answer).  </p>

<p>I can work with <code>checkRole</code> but I want this to work :).</p>

<h2>Note2</h2>

<p>I verifed that the above mentioned jars(aspectj-jrt,etc) get deployed with the war, still doesn't work. </p>
","<jsf-2><authorization><aop><shiro>","0",""
"27919638","bypass a url in shiro security","<p>I am using shiro security framework in my webapp for security. and shiro is working properly but i want url = ""/pricing/noAuth/*"" type of urls not to be authorized or bypass shiro simply but other urls ""/pricing/**"" to pass through.</p>

<p>My shiro settings :</p>

<pre><code>            [main]
            authc.successUrl = /dashboard
            authc.failureKeyAttribute = shiroLoginFailure

            [roles]
            ROLE_ADMIN = *

            [urls]
            /static/** = anon
            /pricing/noAuth/whrToBuy/** = anon
            /** = authc
</code></pre>
","<java><spring-mvc><shiro>","0",""
"36266689","Apache Shiro, @RequiresRoles, 401 error code","<p>I have marked my <code>REST</code> method with <code>@RequiresRoles(""role"")</code> annotation and i do expect <code>401</code>, <code>403</code> error code to be returned(when the subject doesn't have the role specified or isn't authenticated), </p>

<p>but <code>org.apache.shiro.authz.UnauthorizedException</code> is wrapped in <code>javax.servlet.ServletException:</code> Filtered request failed <code>500</code> error code is returned instead.</p>

<p><strong>How to configure error codes to be returned depending on exception?</strong></p>

<p>Thx.</p>
","<java><apache><shiro><jaas>","0",""
"18056044","Designing a web platform authentication","<p>I have some architecture question when building a complete web platform (a store for example). With consideration with Java, Google App Engine (GAE), Shiro and Restful api's</p>

<p>Consider I have these 3 main components of the platform:</p>

<ul>
<li>Front-end UI</li>
<li>Admin UI</li>
<li>Backend</li>
</ul>

<p>These 3 components all run as separate applications in the GAE platform. </p>

<p><strong>Front-end</strong> ui refers to the UI where 'users' use as the main UI to interact with the system, designed with Javascript and calls into the backend by Javascript</p>

<p><strong>Admin UI</strong> refers to the UI used by admins to administer the platform, its users and its contents.</p>

<p><strong>Backend</strong>, is the Restful server/service that both the Front-end UI and Admin-UI connects to, which exposes <code>/user</code> api's and <code>/admin</code> api's and api that complete the actual logic of the web service provided.</p>

<p>My question would be, where does authentication fits it, if I put the authentication in the backend, how will work with the front-end authentication. Say user logs in by email or by social login (oauth etc.) do I need to provide the Front-end its own authentication then forward to the Backend or in the Front-end this should be just UI and all operation such as login/logout must be through the backend. </p>

<p>If I use Shiro, how can this be achieved. I really prefer that the front-end UI be minimal as possible, of even just be a Single-Page-Application (SPA) or something like that. With this, what should be the binding for both the Front-end UI and the backend (considering they are both different GAE application) in terms of authentication</p>
","<java><api><google-app-engine><rest><shiro>","1","18075910"
"20548855","Shiro returning wrong user data","<p>we have problem with shiro returning results from another logged user. Our setup is JBOSS AS 7.1.1., Apache Shiro 1.2.1, Vaadin 7.1.6 and ObjectDB 2.4.6. </p>

<p>Thing is that when we have multiple users logged in to the application users get data within grids/tabels from another logged user. Also when we use subject.getPrincipal Shiro returns user name from another logged user.</p>

<p>Plase if anybody can help  on this.</p>

<p>Kind regards.</p>
","<database><jboss7.x><vaadin><shiro><objectdb>","1",""
"26102403","How to use Shiro to map permissions from an Active Directory group policy","<p>Several of the questions that I've reviewed on this subject seem to assume that the reader understands what it is I'm going to ask here.  For example, these two:</p>

<p><a href=""https://stackoverflow.com/questions/18435219/resource-based-access-control-vs-role-based-access-control?lq=1"">Resource Based Access Control vs Role Based Access Control</a></p>

<p><a href=""https://stackoverflow.com/questions/19124192/how-do-concepts-of-user-useraccount-and-realm-relate-in-apache-shiro"">How do concepts of User (UserAccount) and Realm relate in Apache Shiro?</a></p>

<p>My question is more basic:  How does one connect a Shiro Realm to a back end permission construct like Active Directory?  In other words if I have code like this:</p>

<pre><code>if (user.isPermitted(""projectReport:view:12345"")) {
    //show the project report button
} else {
    //don't show the button
}
</code></pre>

<p>How is the interface to the AD established and controlled? Likewise, if the back-end permission repository is LDAP.  </p>

<p>Pointers to appropriate documentation (which I've looked for unsuccessfully) much appreciated.
Thanks</p>
","<active-directory><shiro><rbac>","1",""
"24270462","after OAuth redirect fragment gets lost","<p>I have a web environment where I'm accessing my resources using fragments. (like foo.com/#/my_resource).</p>

<p>I'm trying to add authentication using OAuth 2 to my server. And I'm using Shiro framework with pac4j. The problem I have here is, after I log in to the provider, the browser loses my hash so I get redirected to foo.com/ instead of foo.com/#/my_resource.</p>

<p>Thought it might be a common problem. Are there any workarounds for this? Is this behavior expected?</p>

<p>Thanks!</p>
","<api><authentication><oauth><oauth-2.0><shiro>","0",""
"18432461","Easymock and Shiro","<p>I am trying to use AbstractShiroTest abstract class for my unit tests as explained in <a href=""http://shiro.apache.org/testing.html"" rel=""nofollow"">http://shiro.apache.org/testing.html</a>
I have my test class:</p>

<pre><code>public class BeanTest extends AbstractShiroTest {
...
@Test
public void testShiro() {
    Subject subjectUnderTest = createNiceMock(Subject.class);
    expect(subjectUnderTest.isAuthenticated()).andReturn(true);
    expect(subjectUnderTest.getPrincipal()).andReturn(""cenap"");
    setSubject(subjectUnderTest);
    assertTrue(""Subject is not authenticated"", SecurityUtils.getSubject().isAuthenticated());
    assertNotNull(""Subject principle null"", SecurityUtils.getSubject().getPrincipal());
}

@AfterClass
public static void tearDownClass() {  
    tearDownShiro();
} 
</code></pre>

<p>Both assertions fail... SecurityUtils.getSubject() returns some object but isAuthenticated() method of that object returns false and getPrincipal() method returns null. ""expect"" clauses do not seem to work. What am I missing?</p>
","<easymock><shiro>","1","18683622"
"43305899","Shiro using spring gives "" Shiro INI configuration was either not found or discovered to be empty/unconfigured.""","<p>I was able to get shiro running with shiro.ini and spring but I want to use shiro annotations and so i was trying to go for shiro-spring without ini file. but this is giving me hard time, 
Error:</p>

<p>org.apache.shiro.config.ConfigurationException: Shiro INI configuration was either not found or discovered to be empty/unconfigured.
    at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:87)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
    at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:226)
    at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:138)
    at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4742)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5206)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1439)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1429)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
    at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:953)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1439)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1429)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
    at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:953)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:655)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:355)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:495)</p>

<p>Apr 09, 2017 4:15:32 PM org.apache.catalina.core.StandardContext startInternal</p>

<p>Code:     Spring config:</p>

<pre><code>package com.studentshare.config;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.Filter;

import org.apache.shiro.authc.credential.HashedCredentialsMatcher;
import org.apache.shiro.realm.jdbc.JdbcRealm;
import org.apache.shiro.spring.LifecycleBeanPostProcessor;
import org.apache.shiro.spring.web.ShiroFilterFactoryBean;
import org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter;
import org.apache.shiro.web.mgt.DefaultWebSecurityManager;
import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.DependsOn;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;

@Configuration
@EnableWebMvc
@ComponentScan(basePackages = ""com.studentshare"")
public class AppConfig {

    @Bean
    public JdbcRealm myRealm() {
        JdbcRealm jdbcRealm = new JdbcRealm();
        jdbcRealm.setAuthenticationQuery(""select password from unishare.users where user_name = ?"");
        MysqlDataSource dataSource = new MysqlDataSource();
        dataSource.setServerName(""localhost"");
        dataSource.setUser(""root"");
        dataSource.setPassword(""root"");
        dataSource.setDatabaseName(""unishare"");

        jdbcRealm.setDataSource(dataSource);
        jdbcRealm.setCredentialsMatcher(new HashedCredentialsMatcher());
        return jdbcRealm;
    }

    @Bean
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    public DefaultWebSecurityManager securityManager(@Autowired JdbcRealm myRealm) {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(myRealm);
        return securityManager;
    }

    @Bean
    public BasicHttpAuthenticationFilter myAuthBasic(){
        return new BasicHttpAuthenticationFilter();
    }
    @Bean
    public ShiroFilterFactoryBean ShiroFilter(@Autowired DefaultWebSecurityManager securityManager,@Autowired BasicHttpAuthenticationFilter myAuthBasic) {
        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
        shiroFilter.setSecurityManager(securityManager);

        Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
        filters.put(""myAuthcBasic"", myAuthBasic);
        shiroFilter.setFilters(filters);

        /*Map&lt;String, String&gt; filterChainDefinitionMap = new HashMap&lt;&gt;();
        filterChainDefinitionMap.put(""/"", ""authcBasic"");*/
        shiroFilter.setFilterChainDefinitions(""/ = myAuthcBasic"");//p(filterChainDefinitionMap);
        return shiroFilter;
    }

    @DependsOn(""lifecycleBeanPostProcessor"")
    @Bean
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        return new DefaultAdvisorAutoProxyCreator();
    }



}
</code></pre>

<p>Web configuration:</p>

<pre><code>package com.studentshare.config;

import java.util.EnumSet;

import javax.servlet.DispatcherType;
import javax.servlet.Filter;
import javax.servlet.FilterRegistration;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;

import org.apache.shiro.web.env.EnvironmentLoaderListener;
import org.apache.shiro.web.servlet.ShiroFilter;
import org.springframework.web.filter.DelegatingFilterProxy;
import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {

    @Override
    protected Class[] getRootConfigClasses() {
        return new Class[] { AppConfig.class };
    }

    @Override
    protected Class[] getServletConfigClasses() {
        return null;
    }

    @Override
    protected Filter[] getServletFilters() {
        return new Filter[] { new ShiroFilter() };
    }

    @Override
    protected String[] getServletMappings() {
        return new String[] { ""/"" };
    }

    @Override
    public void onStartup(ServletContext servletContext) throws ServletException {
        super.onStartup(servletContext);
        servletContext.addListener(EnvironmentLoaderListener.class);
        EnumSet&lt;DispatcherType&gt; shiroDispatchers = EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD,
                DispatcherType.INCLUDE, DispatcherType.ERROR);

        FilterRegistration shiroFilter = servletContext.addFilter(""ShiroFilter"", DelegatingFilterProxy.class);
        shiroFilter.setInitParameter(""targetFilterLifecycle"", ""true"");
        shiroFilter.addMappingForUrlPatterns(shiroDispatchers, false,
                ""/*"");
    }

}
</code></pre>
","<java><spring><spring-mvc><shiro>","0",""
"21315304","Best practise for apache shiro security in async (batch) processing","<p>Suppose I have a web application which uses Apache Shiro for authentication (LDAP) and authorization (DB). Everything's fine.
Now I want the web user to schedule some time consuming tasks using Quartz.
Shall the permission be checked only at task creation or as well at task execution?
I would say both but then it means that the task should authenticate and get authorized again.
Problem is that I might know the username but not the password...</p>

<p>Bypassing the authentication I guess it would be wrong.
I might use a default user for batch/async processing, but I would miss the last A (Audit).</p>

<p>What other options do I have?
Would the rememberMe feature help me?</p>

<p>Thank you,
Mats</p>
","<security><java-ee><quartz-scheduler><batch-processing><shiro>","1",""
"30590490","Listerner error on Shiro web application","<p>I am trying to set up authentication on a JSP based web application running on tomcat 7. I am using Java 7. I have a MYSql db so I supposed that the easier user store is the DB itself. I am trying to follow the tutorial in the official repository but, although it seems easy to follow it is not working for me. I am not sure what I am leaving behind.</p>

<p>I am coding on eclipse luna. I created a Dynamic web application project and created the login.jsp and home.jsp, with plain html, just for testing. login.jsp has the form, as obtained from the documentation.</p>

<p>shiro-core-1.2.3.jar and shiro-web-1.2.3.jar are in the lib folder.</p>

<p>I have obtained and adapted the following files:</p>

<p>web.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" id=""WebApp_ID"" version=""2.5""&gt;
  &lt;display-name&gt;paprest&lt;/display-name&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;

&lt;/web-app&gt;
</code></pre>

<p>shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /login.jsp
authc.successUrl = /home.jsp

# password matcher
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService

ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = jdbc/myDS
ds.requiredType = javax.sql.DataSource

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password FROM USERS WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role_name FROM USERS_ROLES WHERE username = ?
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource=$ds
securityManager.realms = $jdbcRealm

[urls]
/login.jsp = authc
/home.jsp = anon, authc
/logout = logout
/account/** = authc
</code></pre>

<p>jetty-env.xml</p>

<pre><code>&lt;?xml version=""1.0""?&gt;
&lt;!DOCTYPE Configure PUBLIC ""-//Mort Bay Consulting//DTD Configure//EN"" ""http://jetty.mortbay.org/configure.dtd""&gt;
&lt;Configure class=""org.eclipse.jetty.webapp.WebAppContext""&gt;
  &lt;New id=""myDS"" class=""org.eclipse.jetty.plus.jndi.Resource""&gt;
    &lt;Arg&gt;jdbc/myDS&lt;/Arg&gt;
    &lt;Arg&gt;
      &lt;New class=""com.jolbox.bonecp.BoneCPDataSource""&gt;
        &lt;Set name=""driverClass""&gt;com.mysql.jdbc.Driver&lt;/Set&gt;
        &lt;Set name=""jdbcUrl""&gt;jdbc:mysql://ip:3306/authzDB&lt;/Set&gt;
        &lt;Set name=""username""&gt;root&lt;/Set&gt;
        &lt;Set name=""password""&gt;pass&lt;/Set&gt;
      &lt;/New&gt;
    &lt;/Arg&gt;
  &lt;/New&gt;
&lt;/Configure&gt;
</code></pre>

<p>When I export it to a war file and try to load it into the Tomcat7 server I get the following error on the catalina.out file on the deployment process:</p>

<pre><code>jun 02, 2015 9:54:55 AM org.apache.catalina.core.StandardContext startInternal
GRAVE: Error listenerStart
</code></pre>

<p>I cannot find any more information but the aplication does not get deployed. I am not sure what I am missing. Any ideas?</p>

<p>[UPDATED]</p>

<p>Tomcat logs during app deploy</p>

<pre><code>DETALLADO: Successfully processed context [/ShiroFroga] configuration file [file:/var/lib/tomcat7/conf/context.xml]
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO: ""ContextConfig"": Procesando ""START""
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO: El contexto [/ShiroFroga] analizará los ficheros web.xml y web-fragment.xml con validación:false y namespaceAware:false
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig parseWebXml
DETALLADO: Analizando fichero de aplicación web.xml en jndi:/localhost/ShiroFroga/WEB-INF/web.xml
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig authenticatorConfig
DETALLADO: Configuración de un autentificador (authenticator) para el método NONE
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO: Pipeline Configuration:
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO:   org.apache.catalina.authenticator.NonLoginAuthenticator/1.0
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO:   org.apache.catalina.core.StandardContextValve/1.0
jun 02, 2015 5:34:20 PM org.apache.catalina.startup.ContextConfig configureStart
DETALLADO: ======================
</code></pre>
","<java><mysql><tomcat><shiro>","0",""
"31859987","Need help configuring Apache Shiro for authentication separation (multiple REST APIs)","<p>I am building a web application using an AngularJS front-end and a Spring Boot REST back-end (they are running on separate servers i.e. port 3000 and port 8443). The back-end is supposed to connect to multiple external services (with separate authentications) and provide endpoints for the front-end to use.</p>

<p>For security, I decided to use Apache Shiro. For simplicity, I will pretend there are just 2 external services (ES1 and ES2).</p>

<p>I have created 2 x <code>AuthorizingRealm</code> which connect to the respective external services and attempt authentication using the provided tokens. </p>

<p>In the <code>doGetAuthenticationInfo</code> method, if the login is successful, I return a <code>SimpleAuthenticationInfo</code> with the principal, credentials and the name of the realm.</p>

<p>In the <code>doGetAuthorizationInfo</code> method, I check the realm name of the principal and, if it checks out, I return a <code>SimpleAuthorizationInfo</code> with the role ""USER"" and a permission (e.g. ES1_permitted).</p>

<p>I also extended the <code>UsernamePasswordToken</code> class for each realm to separate usage even more (through the <code>supports</code> method).</p>

<p>In a configuration class, I create a bean for a <code>DefaultWebSecurityManager</code> that uses my two realms and a bean for the Shiro filter. 
I added 4 filters:</p>

<ul>
<li>anon <code>AnonymousFilter</code></li>
<li>perm <code>PermissionsAuthorizationFilter</code></li>
<li>es1 <code>ES1Filter</code></li>
<li>es2 <code>ES2Filter</code></li>
</ul>

<p>My filter chain looks something like:</p>

<pre><code>/api/es1/login  -&gt; anon
/api/es1/**     -&gt; es1, perms[ES1_permitted]
/api/es2/login  -&gt; anon
/api/es2/**     -&gt; es2, perms[ES2_permitted]
/**             -&gt; anon
</code></pre>

<p>Somehow, when I served front-end and back-end from the same server (no CORS), it seemed to work. However, now that CORS is an issue, I can't seem to get this to work as expected.</p>

<p>Is there a simpler way to achieve this complete separation of authentication/authorization? I am willing to switch to Spring Security if it can be done there as well.</p>

<p>PS: I am using the Java API, not configuration files (spring xml or shiro.ini).</p>
","<java><spring><rest><authentication><shiro>","3",""
"32029899","implementing auth/acl with java ee 7","<p>I'm developing a java ee 7 application. It runs on an webserver and is accessible through HTTP (Web or API). My customers need to login and can create users and groups.  There are two default groups: Admin and Users</p>

<p>So I have a default ACL like ""Users can't access pages /admin/<em>"" and ""Admin can access /</em>""</p>

<p>But I want to give ACL control to my customers. So the customer can say ""User X can access /admin/user/edit"" </p>

<p>I've read about Apache Shiro, but the question is can Shiro implement this idea or do I need to write it by myself?</p>

<p>Thanks!</p>
","<java-ee><shiro><java-ee-7>","0",""
"21600703","Shiro Integration with Guice","<p>I am trying to integrate Guice with Shiro. I'm pulling in the latest Shiro JARs with:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
  &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
  &lt;version&gt;1.2.2&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-guice&lt;/artifactId&gt;
    &lt;version&gt;1.2.2&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
  &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
  &lt;version&gt;1.2.2&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>I am unable to compile the code provided in the <a href=""http://shiro.apache.org/guice.html"" rel=""nofollow"">Shiro documentation</a>. </p>

<pre class=""lang-java prettyprint-override""><code>class MyShiroModule extends ShiroModule {
  protected void configureShiro() {
    try {
      // compile time error is shown with error message:
      // ""Method toConstructor is undefined in type LinkedBindingBuilder"". 
      bindRealm().toConstructor(IniRealm.class.getConstructor(Ini.class));
    } catch (NoSuchMethodException e) {
      addError(e);
    }
  }
  @Provides
  Ini loadShiroIni() {
    return Ini.fromResourcePath(""classpath:shiro.ini"");
  }
}
</code></pre>

<p>It seems like there is some JAR versioning problem.</p>

<p><strong>First Question</strong></p>

<p>Whatis the appropriate Maven configuration to compile this code?</p>

<p><strong>Second Question</strong></p>

<p>I always face this type of version problem and search the net for the correct version. Or use one version over another run of the program and confirm that the program runs. Is there a way to overcome this type of version problem so that one version of a JAR is compatible with every version?</p>
","<java><guice><shiro>","0",""
"23992309","How does one test AuthController generated by Shiro Grails plugin?","<p>I'm getting very frustrated with the Shiro plugin for Grails. First, I'm trying to set up an ini-based SecurityManager like the beginner tutorial for Shiro suggests, and there's nothing in the documentation that tells me how things get configured. So, after struggling to figure it out, and ultimately failing, I just concede that I have to go with the <code>DbRealm</code> that was generated with the quickstart command. Now I'm trying to discover how things are working by creating a unit test for the generated <code>AuthController</code>. Here's my test code:</p>

<pre><code>void ""registered user logs in with valid credentials""() {
    given: ""user 'root' is registered""
    def username = ""root""
    def password = ""secret""
    new User(username: username, password: password).save();

    when: ""user logs in with correct credentials""
    params.username = username
    params.password = password
    controller.signIn();

    then: ""user should be authenticated""
    assertTrue SecurityUtils.subject.authenticated
}
</code></pre>

<p>I'm still not sure how to verify the user is actually logged in so I thought the code in the <code>then</code> block should be fine for now. However, every time I try testing the app with <code>grails test-app</code>, I always get:</p>

<pre><code>org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
    at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
</code></pre>

<p>I'm not exactly new to Grails but it's been a very long time since I last used it, and I never really had that that much exposure to the framework, anyway. However, I know it's supposed to make things less complicated to set up, but the Shiro plugin is giving me a difficult time.</p>

<p>So, how do I go about configuring my app, and/or testing the generated <code>AuthController</code>?</p>
","<grails><plugins><shiro>","1",""
"11145398","Spring Security / Shiro and single-use code","<p>We are developing an exam-application where access to the exam is granted by a single-use code. </p>

<p>So basicly we give a candidate a code, for example 'FG678', and this is his code to access the exam.</p>

<p>So the login-form should only have one field and if the User enters a correct single-use code then access is granted.</p>

<p>I could not find any information about such implementation of Spring Security or Shiro. Have anyone of you guys any info on how easy this would be to implement? If it is possible?</p>

<p>Or maybe even a link to a tutorial?</p>

<p>Thanks in advance!</p>
","<java><spring-security><shiro>","0","11146489"
"18017026","Is Camel Shiro thread safe?","<p>It appears when doGetAuthorizationInfo(PrincipalCollection principals) in the org.apache.shiro.realm.AuthorizingRealm is called the UsernamePasswordToken passed is that of another user.</p>

<p>The trace below explains what I am getting at:</p>

<p>fetching List user1 
fetching List user1-role 
roles for user user1 is/are user1-role..
permissions for user user1 is/are iswapi:service1:, iswapi:service2:..</p>

<p>Those are print outs from the custom implementation of the AuthorizingRealm.
Basically, I get the principals:</p>

<p>String user = (String) getAvailablePrincipal(principals);</p>

<p>and I fetch the roles for that user (which prints out the >>> fetching List ..... line). Surprisingly, the user being printed is user1, when in reality the user that made the call is user2.</p>

<p>The question is, why is getAvailablePrincipal(principals) returning user1 instead of user2? Is that the right call to make to know the current owner/user of that context? I believe getAvailablePrincipal(principals) should return the user in the SHIRO_SECURITY_TOKEN header, but this is not happening.</p>

<p>After a few research/debugging, I realize Shiro gets the current thread's user by doing  </p>

<p>Subject currentUser = SecurityUtils.getSubject();</p>

<p>However, the problem is in camel OSGi, the thread is always re-used therefore the new request coming in a re-used thread will always have the user of the first thread.</p>

<p>This I found out printing out the thread runing the Realm which I found out has a thread id and thread name of user1. Hence, user1's roles will always be fetched for user2.</p>

<p>If my assumptions are correct, how do I go about ensuring a new thread for a new request?</p>

<p>Note:
My camel bundle uses direct:vm component which I think uses the thread of the source/originating endpoint. When I printed out the thread id &amp; name it looks like: </p>

<p>Thread ID: 5944
Thread Name: qtp406786712-5944
Thread Group Name: spring-osgi-extender[1db479f4]-threads
Thread Group Parent Name: org.springframework.osgi.extender-1.2.1</p>
","<thread-safety><apache-camel><shiro>","1",""
"22168927","Shiro different cookies for different realms","<p>Assume my app handles two specific url patterns</p>

<ul>
<li>/foo/* -> Only FooUsers will have access, authenticated in FooUserRealm</li>
<li>/bar/* -> Only BarUsers will have access, authenticated in BarUserRealm</li>
</ul>

<p>I can handle selection of correct realm by means of assigning two seperate authc filters to these url patterns and creating two different authentication token instances, then realms just have to declare which token type they support.</p>

<p>But, what I cannot achieve is that after authenticated FooUsers will have access to /bar/* urls and vice versa. What I really want to achieve is that there are two seperate cookies for each realm and when a FooUser tries to access /bar/* urls, she is redirected to BarUser login page. Only after a user is both authenticated with FooUser and BarUser realms (credentials need not be the same, so an authentication policy doesnot help here, users have to see two seperate login pages if they want to access /foo/* and /bar/*)</p>

<p>I can only think of creating two seperate security managers creating different cookies for these realms and url patterns. </p>

<p>Is there any better way of doing this?</p>
","<java><security><java-ee><shiro>","0",""
"15643893","Resuming Camel Processing after power failure","<p>I'm currently developing a Camel Integration app in which resumption from a previous state of processing is important. When there's a power outage, for instance, it's important that all previously processed messages are not re-processed. The processing should resume from where it left off before the outage.</p>

<p>I've gone through a number of possible solutions including Terracotta and <a href=""http://shiro.apache.org/"" rel=""nofollow"">Apache Shiro</a>. I'm not sure how to use either as documentation on the integration with Apache Camel is scarce. I've not settled on the two, however.</p>

<p>I'm looking for suggestions on the potential alternatives I can use or a pointer to some tutorial to get me started. </p>
","<apache-camel><shiro><terracotta>","1","15646091"
"36955750","Get list of all logged users from Apache Shiro","<p>How I can get all logged in users as a list in Apache Shiro?</p>

<p>Can you give me some example?</p>
","<shiro>","2",""
"40891339","Apache Shiro SQL error while authenticating user","<p>I am attempting to connect to a database in order to authenticate a user using Apache Shiro. I have a servlet call a java class to perform this task. Right now it is simply changing a string if it successfully authenticates. I have attempted many different connection methods: data pools, jtds, Microsoft Sql Server JDBC, and all give me the error:</p>

<blockquote>
  <p>SQL error while authenticating user [user1]</p>
</blockquote>

<p>My log files also show this error:</p>

<blockquote>
  <p>Warning:   RAR5058: Error while Resizing pool SQLS1-TestBilling. Exception : Connection could not be allocated because: The TCP/IP connection to the host SQLS1, port 1433 has failed. Error: ""null. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall."".</p>
</blockquote>

<p>I am able to use the TestBilling connection pool in the servlet just fine so I don't think it is a problem with the pool, but it seems unable to use the ini file declarations to use SQL. Is there something I'm missing, forgetting to do, or doing wrong?</p>

<p>Here are the relevant files:</p>

<p><strong>GetAuthServlet.java:</strong></p>

<pre><code>package com.phmc.shiro5web;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class GetAuthServlet extends HttpServlet {
@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
        response.setContentType(""text/html;charset=UTF-8"");
        PrintWriter out = response.getWriter();
        out.println(""&lt;!DOCTYPE html&gt;"");
        out.println(""&lt;html&gt;"");
        out.println(""&lt;head&gt;"");
        out.println(""&lt;title&gt;Auth&lt;/title&gt;"");            
        out.println(""&lt;/head&gt;"");
        out.println(""&lt;body&gt;"");
        AuthenticationClass au = new AuthenticationClass();

        String b = """"; 
        b = au.isAuthenticated(""mmarino"", ""test"");
        out.println(b);
        out.println(""&lt;/body&gt;"");
        out.println(""&lt;/html&gt;"");
}
</code></pre>

<p><strong>AuthenticationClass.java:</strong></p>

<pre><code>package com.phmc.shiro5web;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.*;
import org.apache.shiro.config.IniSecurityManagerFactory;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.Factory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AuthenticationClass {
    private static final transient Logger log = LoggerFactory.getLogger(Authentication.class);



    String isAuthenticated(String username, String password){
        Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
        SecurityManager securityManager = factory.getInstance();
        SecurityUtils.setSecurityManager(securityManager);
        Subject currentUser = SecurityUtils.getSubject();
        String  b = ""fail"";
        log.info(""Test"");
        try{
            if (!currentUser.isAuthenticated()) {

                UsernamePasswordToken token = new UsernamePasswordToken(""mmarino"", ""test"")   ;
                token.setRememberMe(true);
                try {
                    currentUser.login(token); 
                    b = ""Success"";
                }catch (UnknownAccountException uae) {
                    log.info(""There is no user with username of "" + token.getPrincipal());
                } 
            }
        }catch(Exception e){
            b = e.toString();
        }
        )
        return b;
    }

}
</code></pre>

<p><strong>Shiro.ini:</strong></p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = jdbc/TestBilling


jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT theuser FROM UserList
securityManager.realm = $jdbcRealm
</code></pre>

<p>I have also tried:
    jdbcRealm.authenticationQuery = SELECT theuser FROM UserList where passwordList = ?</p>

<p>In the Shiro.ini file for the second to last line.</p>
","<java><sql-server><web-services><security><shiro>","0","41049734"
"19213730","Shiro persist permission - what to save in the DB?","<p>I have created 3 roles for my application: admin, user, guest. Each of these 3 roles have a set of permissions. I want to persist these roles with their permissions to my database. How do I persist permissions?</p>

<pre><code>Role r = new Role(""admin"");
Permission p1 = new WildcardPermission(""Account:Create"");
Permission p2 = new WildcardPermission(""File:Delete"");
r.addPermission(p1);
r.addPermission(p2);
//etc
</code></pre>

<p>Do I save to my database the following strings ""Account:Create"" and ""File:Delete"" and instantialize permission with them when I query the object? If this is the case, why is there no way to get back the original string from the Permission object? If I call p1.toString(), it returns ""[Account]:[Create]"" which is considered a different permission than ""Account:Create"".</p>
","<java><shiro>","1",""
"43070780","Line argument must contain a key and a value. Only one string token was found. shiro.ini","<p>This is my Error:</p>

<blockquote>
  <p>ERROR StatusLogger No log4j2 configuration file found. Using default
  configuration: logging only errors to the console. Exception in thread
  ""main"" java.lang.IllegalArgumentException: Line argument must contain
  a key and a value.  Only one string token was found.  at
  org.apache.shiro.config.Ini$Section.splitKeyValue(Ini.java:542)   at
  org.apache.shiro.config.Ini$Section.toMapProps(Ini.java:567)  at
  org.apache.shiro.config.Ini$Section.(Ini.java:464)  at
  org.apache.shiro.config.Ini$Section.(Ini.java:445)  at
  org.apache.shiro.config.Ini.addSection(Ini.java:302)  at
  org.apache.shiro.config.Ini.load(Ini.java:351)    at
  org.apache.shiro.config.Ini.load(Ini.java:287)    at
  org.apache.shiro.config.Ini.load(Ini.java:275)    at
  org.apache.shiro.config.Ini.loadFromPath(Ini.java:244)    at
  org.apache.shiro.config.Ini.fromResourcePath(Ini.java:225)    at
  org.apache.shiro.config.IniSecurityManagerFactory.(IniSecurityManagerFactory.java:69)
    at
  com.ldapconsole.ConsoleLdapLogin.shiroIntegration(ConsoleLdapLogin.java:50)
    at com.ldapconsole.ConsoleLdapLogin.main(ConsoleLdapLogin.java:32)</p>
</blockquote>

<p>** shiro.ini file :**</p>

<pre><code>[users]
# user 'root' with password 'secret' and the 'admin' role
root = secret, admin

# user 'Employee1' with the 'CommonUser' role
Employee1=passwd, CommonUser

# user 'Employee2' with the 'Developer' and 'HR' role
Employee2=passwd, Developer, HR

# -----------------------------------------------------------------------------

[roles]
# 'admin' role has all permissions, indicated by the wildcard '*'
admin = *
# The 'hr' role can do anything (*) with any management:
HR = management:*
# The 'Developer' role is allowed to 'access system' (action) the added (type) with 'develop software'
Developer = added:SystemAccess:DevelopSoftware

# -----------------------------------------------------------------------------

[main]
#ds =  com.mysql.jdbc.Driver
#ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource 
ds = org.sqlite.JDBC
@property
@syntesize
ds.databaseName = jdbc:sqlite:getClass().getClassLoader().getResourceAsStream(usersRoles.db)

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = ""SELECT upasswd FROM UsersList WHERE uname = ?""
jdbcRealm.userRolesQuery = ""SELECT urole FROM UsersList WHERE uname = ?""
jdbcRealm.permissionsQuery = ""SELECT upermission FROM RolesPermission WHERE urole = ?""
#securityManager.realms = $jdbcRealm
</code></pre>

<p><strong>ConsoleLdapLogin.java File</strong></p>

<pre><code>package com.ldapconsole;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.config.IniSecurityManagerFactory;
import org.apache.shiro.mgt.DefaultSecurityManager;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.realm.jdbc.JdbcRealm;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.Factory;
import org.apache.log4j.Logger;

public class ConsoleLdapLogin {

        private static Logger log=Logger.getLogger(ConsoleLdapLogin.class);
        static String username="""";
        static String passwd="""";

        public static void main(String[] args){

            /*  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));         
            try {
                System.out.println(""Enter the username: "");
                username=br.readLine();
                System.out.println(""Enter the Password: "");
                passwd=br.readLine();               
            */  
                shiroIntegration(username,passwd);

            /*  } catch (IOException e) {
                log.info(""IOException : ""+e);
            }
            finally{
                 if (br != null) {
                        try {
                            br.close();
                        } catch (IOException e) {
                            log.info(""IOException : ""+e);
                        }
                    }
            }*/
        }

        public static void shiroIntegration(String uname,String passwd)
        {
            Factory&lt;SecurityManager&gt; factory= new IniSecurityManagerFactory(""classpath:shiro.ini"");
            SecurityManager securitymanager=factory.getInstance();
            SecurityUtils.setSecurityManager(securitymanager);
            Subject currentUser = SecurityUtils.getSubject();
            /*ArrayList&lt;String&gt; roleIdentifiers = new ArrayList&lt;String&gt;(Arrays.asList(""admin"",""CommonUser""));*/
            if ( !currentUser.isAuthenticated() ) {
                UsernamePasswordToken token = new UsernamePasswordToken(uname, passwd);
                token.setRememberMe(true);
                try {
                    currentUser.login(token);
                    log.info( ""User "" + currentUser.getPrincipal() + "" logged in successfully."" );
                    //currentUser.getClass().get
                    /*currentUser.checkRoles(roleIdentifiers);*/
                    if (currentUser.hasRole(""admin"")) {
                        log.info( ""Logged in User "" + currentUser.getPrincipal() + "" is admin."" );

                    } else if(currentUser.hasRole(""CommonUser"")) {
                        log.info( ""Logged in User "" + currentUser.getPrincipal() + "" is CommonUser"" );
                    }else{

                        // the key ""jdbcRealm"" must be the same in the shiro.ini file.
                        JdbcRealm realm = (JdbcRealm) ((IniSecurityManagerFactory) factory).getBeans().get(""jdbcRealm"");
                        //realm.setPermissionsLookupEnabled(true);

                        DefaultSecurityManager security = new DefaultSecurityManager(realm);
                        SecurityUtils.setSecurityManager(securitymanager);
                        Subject loginUser = SecurityUtils.getSubject();  
                        if(loginUser.isAuthenticated()){
                               UsernamePasswordToken logintoken = new UsernamePasswordToken(""sroot"", ""sroot"");  
                               logintoken.setRememberMe(true);  
                               loginUser.login(logintoken);
                               log.info(""login into SQLite user successfully..."");
                        }

                        //realm.getAuthorizationInfo(SecurityUtils.getSubject().getPrincipals()).getStringPermissions();
                    }
                } catch (AuthenticationException e) {
                    log.info(""AuthenticationException : ""+e.getMessage());
                }
            }
        }

         /*** Autenticates a user **/
        /*public static Subject authenticate(String username, String pass) {

            final String ROLES_QUERY = ""SELECT access_designation FROM access_level,users WHERE access_level.id=users.access_level_id and users.username = ?"" ;
            Subject currentUser = null;
            try {

           Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
    org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
                // the key ""jdbcRealm"" must be the same in the shiro.ini file.

    JdbcRealm realm = (JdbcRealm) ((IniSecurityManagerFactory) factory).getBeans().get(""jdbcRealm"");
                realm.setAuthenticationQuery(AUTHENTICATION_QUERY);
                realm.setUserRolesQuery(ROLES_QUERY);

                SecurityUtils.setSecurityManager(securityManager);

                currentUser = SecurityUtils.getSubject();

                UsernamePasswordToken token = new UsernamePasswordToken(username, pass);

                currentUser.login(token);

            } catch (Exception e) {
                e.printStackTrace();
            }
            return currentUser;

        }*/


     }
</code></pre>

<p><strong>My try to solve the errors:</strong></p>

<ol>
<li>just before I solved error from shiro.ini file and that was
""Property 'databaseName' not found with org.sqlite.JDBC"" To solve
that one I added the two annotations before that line @property
@syntesize.</li>
</ol>
","<java><sqlite><shiro><jdbcrealm>","0",""
"34752219","ERR_TOO_MANY_REDIRECTS from Shiro security AuthController in Grails app","<p>Shiro security works great with my grails app with the exception of if a user enters incorrect login information. If they put in the wrong username and password combination (which is authenticated via an LDAP server), it seems that I'm entering an infinite loop between the index and login actions. The general form of my AuthController is</p>

<pre><code>class AuthController 
{
    def shiroSecurityManager

    def index =
    {
        println ""in index...""
        redirect(action: ""login"", params: params) 
    }

    def login =
    {     
        println ""in login...""
        return [ username: params.username, rememberMe: (params.rememberMe != null), targetUri: params.targetUri ]
    }

    def signIn =
    {
        println ""in signin...""
        Subject subject = SecurityUtils.getSubject()
        request.getSession().removeAttribute(""subject"")
        request.getSession(true).setAttribute(""subject"", subject)
        String lowerCaseUserName=params.username.toLowerCase()
        def authToken = new UsernamePasswordToken(lowerCaseUserName, params.password)

        // Support for ""remember me""
        if (params.rememberMe) 
        {
            authToken.rememberMe = true
        }

        try
        {
            println ""in signin try...""
            subject.login(authToken)
            if (subject.isAuthenticated()) 
            {
                println ""in signin try if 1...""
                def currentUser = User.findByEmployeeLogin(lowerCaseUserName)

                if (currentUser == null)
                {
                    log.info ""Authentication failure for user '${lowerCaseUserName}'.""
                    flash.message = message(code: ""login.failed"")

                    // Remember the target URI too.
                    if (params.targetUri) 
                    {
                        m['targetUri'] = params.targetUri
                        redirect(controller: 'auth', action: 'login', params: m)
                    }
                    else
                    {
                        redirect(controller: 'auth', action: 'login')
                    }
                }
                else
                {
                    ...
                    redirect(controller: 'home', action: 'index')
                }
            }
        }
        catch (AuthenticationException ex)
        {
            println ""in signin catch...""
            // Authentication failed, so display the appropriate message
            // on the login page.
            log.info ""Authentication failure for user '${lowerCaseUserName}'.""
            flash.message = message(code: ""login.failed"")

            // Keep the username and ""remember me"" setting so that the
            // user doesn't have to enter them again.
            def m = [ username: lowerCaseUserName ]
            if (params.rememberMe) 
            {
                m['rememberMe'] = true
            }

            // Remember the target URI too.
            if (params.targetUri) 
            {
                m['targetUri'] = params.targetUri
            }

            // Now redirect back to the login page.
            redirect(controller: 'auth', action: 'login', params: m)
        }
    }
}
</code></pre>

<p>The println's produce the following output</p>

<pre><code>in signin...
in signin try...
Could not connect to &lt;MYLDAPSERVER&gt;: javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C0903A9, comment: AcceptSecurityContext error, data 52e, v1db1 ]
Could not connect to &lt;MYLDAPSERVER&gt;: javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C0903A9, comment: AcceptSecurityContext error, data 52e, v1db1 ]
No LDAP server available.
in signin catch...
in login...
in index...
in login...
in index...
in login...
in index...
in login...
</code></pre>

<p>The login/index output just keeps going until I get the error</p>

<pre><code>This webpage has a redirect loop

ERR_TOO_MANY_REDIRECTS
</code></pre>

<p>Does anyone see why I'm having this issue?</p>

<p>Edit: I believe it may be due to my SecurityFilters baseFilter:</p>

<pre><code>    baseFilter(controller: ""*"", action: ""*"") {
        before = {                
            /*====================================================================
             * if auth controller then ok to continue
             *===================================================================*/
            if (controllerName.equals(""auth""))
            {
                println ""1..""
                return true;
            }

            /*=====================================================================
             * If no subject (user) and not auth controller
             * then user must authenticate
             *===================================================================*/
            if (!session.subject &amp;&amp; !(controllerName.equals(""auth"")))
            {
                println ""2..""
                params.targetUri = request.forwardURI
                redirect(controller:'auth', action:'login', params: params)
                return false;
            }
        }

        after = {
            try
            { 
                println ""3..""
                if (!(session.subject.isAuthenticated()))
                {
                    println ""4..""
                    redirect(controller:'auth', action:'login', params: params)
                    return false;
                }
            }
            catch(Exception e)
            {
                println ""5..""
            }
        }
    }
</code></pre>

<p>This results in the following output</p>

<pre><code>in login...
3..
4..
1..
in login...
3..
4..
1..
in login...
3..
4..
1..
</code></pre>

<p>So it looks like I've found my issue, but I'm not sure how to fix it still.</p>
","<authentication><grails><shiro>","1",""
"40403037","Using Apache Shiro SecurityUtils in a Filter","<p>I'm using a Filter in a Spring Boot web application to log all my user requests to a database. One of the things I'd like to log is the username, but when I try to get the current user using:</p>

<pre><code>SecurityUtils.getSubject().getPrincipal()
</code></pre>

<p>I get the following error:</p>

<pre><code>No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton. This is an invalid application configuration.
</code></pre>

<p>What do I need to do so that my Filter is able to retrieve the current user?</p>
","<spring-boot><servlet-filters><shiro>","0",""
"24928547","Shiro match any filter in the chain","<p>im using shiro 1.2.3 in my project and try to solve the following issue.<br>
I have users having a role <code>admin</code> who should have access to url <code>/user/edit.xhtml</code>.<br>
I have also users having a permission <code>user:edit:*</code> who should have access to the same url <code>/user/edit.xhtml</code>.</p>

<p>I tried to solve it this way:<br>
<code>[urls]
/user/edit.xhtml = perms[user:edit:?], roles[admin]</code></p>

<p>This does not work, as users having the role <code>admin</code>, do not have the permission <code>user:edit</code> explicitly.
The chain will fail after the first filter.</p>

<p>Second approach was:<br>
<code>[urls]
/user/edit.xhtml = perms[user:edit:?]
/user/edit.xhtml = roles[admin]</code></p>

<p>It does not work either, as shiro documentation says, that first path filter match wins.
The second one will never match.</p>

<p>Is there another way to configure shiro, to match any filter for a specified path?</p>
","<shiro>","0",""
"39381112","Shiro/Stormpath via REST","<p>I'm new to Shiro. We are attempting to use Shiro with Stormpath. I've been trying to dissect the examples to come up with a solution to what I want to do, but I'm unsuccessful so far.</p>

<p>For now, I'm simply trying to create REST services to do what I want, and I'll tie a real client in later. This is what I'm trying to achieve as my first step:</p>

<p>I want to have a client hit a REST endpoint (login) on my server. My server would authenticate, and return a JWT to the client. This JWT would then be used to access secured endpoints on my server. (I have written Java code that can successfully authenticate against Stormpath).</p>

<p>My problem is the JWT. I expected that a JWT would be created for me, or at least easily accessible. I can't find a way to get one. I have seen sample code on how to build one, but that doesn't seem like the way I would expect to acquire one. </p>

<p>I have run through several examples, but most seem to deal with JSP interfaces, and I can't seem to make the leap to what I'm trying to do.</p>

<p>Is this approach reasonable? Any guidance is appreciated.</p>

<p><strong>Edit 1</strong></p>

<p>I now have a Java client that can authenticate using the Shiro servlet and retrieve a JWT. I have this running as a deployed application (war) in GlassFish. My next step is to use that JWT to authenticate against a <em>different</em> application that has my REST endpoints. This REST application doesn't need to know anything about how to authenticate - I just want to pass the JWT along in the call to a given REST endpoint and use Shiro (via annotations) to control access to the endpoint (if that is indeed possible). All of the examples I can find seem to be ""all-in-one"" examples (bundling JSP with Shiro/Stormpath configurations, etc). I'm trying to determine the minimum working configuration for securing REST endpoints and I'm having difficulty determining which pieces of the configuration I need.</p>

<p><strong>Edit 2</strong></p>

<p>I am using the Stormpath-Shiro-Servlet (as stolen from the Shiro Servlet example) as my authentication back-end. Using my Java client, I am sending a login request to the servlet, and I am indeed getting back a JWT. However, I am not able to successfully use the JWT to access my other rest resources. My rest calls result in this error:</p>

<p><code>org.apache.shiro.authz.UnauthenticatedException: This subject is anonymous - it does not have any identifying principals and authorization operations require an identity to check against.  A Subject instance will acquire these identifying principals automatically after a successful login is performed be executing org.apache.shiro.subject.Subject.login(AuthenticationToken) or when 'Remember Me' functionality is enabled by the SecurityManager.  This exception can also occur when a previously logged-in Subject has logged out which makes it anonymous again.  Because an identity is currently not known due to any of these conditions, authorization is denied.</code></p>

<p>First, I don't understand why the servlet 'login' doesn't actually log me in and give me non-anonymous principle? Second, I am attempting to do everything on a separate client, so I don't have access to Subject.login (is this a correct assumption?). </p>
","<shiro><stormpath>","2",""
"23406035","About apache shiro filters","<p>i have a site.and i am using apache shiro in this site.i have a problem.the input is done from the login page.but if you logged in,I want to restrict access to this page.page should tell "" hey come on man! You have already logged in"" then guide to another page(for.ex: home.jsf).How can I make this forwarding with shiro web filters?
shiro.ini</p>

<pre><code>[urls]
/login.xhtml = anon
</code></pre>
","<jsf><shiro>","0",""
"31891409","I don't need shiro.ini on spring webmvc","<p>I'm developing a web application based on spring webmvc and apache shiro.</p>

<p>I made JpaRealm class which extends AuthorizingRealm, and it is instantiated by Spring context in order to inject dependency (UserService).</p>

<p>I don't need shiro.ini file because all of configurations are overriden by spring-context.xml.</p>

<p>If I delete it, the default listener compains because the default IniWebEnvironment always tries to load shiro.ini.</p>

<p>I'd like to ask the custom listener which load the custom environment extends DefaultWebEnvironment.</p>

<p>I copied someone's code from the Internet, but I failed.</p>

<pre><code>public class JpaRealm extends AuthorizingRealm {

    private static final Logger logger = LoggerFactory.getLogger(JpaRealm.class);

    @Autowired
    private UserService userService;

    public JpaRealm() {
    HashedCredentialsMatcher credentialsMatcher = new HashedCredentialsMatcher();
    credentialsMatcher.setHashAlgorithmName(Sha256Hash.ALGORITHM_NAME);
    setCredentialsMatcher(credentialsMatcher);
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {

    SimpleAuthenticationInfo info = null;

    UsernamePasswordToken userPassToken = (UsernamePasswordToken) token;

    String username = userPassToken.getUsername();

    if (username != null &amp;&amp; !username.equals("""")) {
        User user = userService.findByUsername(username);

        logger.debug(""doGetAuthenticationInfo invoked"");
        logger.debug(""username: "" + username);

        info = new SimpleAuthenticationInfo(username, user.getPassword(), getName());
    }

    return info;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {

    AuthorizationInfo authorizationInfo = null;

    if (principals != null) {
        logger.debug(""doGetAuthorizationInfo invoked"");

        String username = (String) getAvailablePrincipal(principals);

        return userService.getAuthorizationInfoByUser(username);
    }

    return authorizationInfo;
    }

}
</code></pre>

<p>security-context.xml</p>

<pre><code>&lt;bean id=""jpaRealm"" class=""foo.bar.JpaRealm"" /&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""jpaRealm"" /&gt;
&lt;/bean&gt;

&lt;bean id=""verboseFormAuthenticationFilter""
    class=""foo.bar.VerboseFormAuthenticationFilter""&gt;
    &lt;property name=""loginUrl"" value=""/login.jsp"" /&gt;
    &lt;property name=""successUrl"" value=""/"" /&gt;
    &lt;property name=""usernameParam"" value=""username"" /&gt;
    &lt;property name=""passwordParam"" value=""password"" /&gt;
    &lt;property name=""rememberMeParam"" value=""rememberMe"" /&gt;
    &lt;property name=""failureKeyAttribute"" value=""yamShiroLoginFailure"" /&gt;
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager"" /&gt;

    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp"" /&gt;

    &lt;property name=""filters""&gt;
        &lt;map&gt;
            &lt;entry key=""authc"" value-ref=""verboseFormAuthenticationFilter"" /&gt;
        &lt;/map&gt;
    &lt;/property&gt;

    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /**=authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>
","<spring-mvc><shiro>","0",""
"43692520","cas client call service validate url /serviceValidate and got CAS server login page html,not xml result","<p>i'm using shiro-cas client 1.2.3 in my webapp and cas server 4.2.0 as sso server,I found  my cas client got login page html content when call url /ucas/serviceValidate  validate service ticket,it seems /serviceValidate had been redirected to cas server login page.<br/>
i got these log form  server:</p>

<pre><code>[INFO][2017-04-2914:02:49][org.jasig.cas.authentication.PolicyBasedAuthenticationManager]UcasAuthenticationHandler successfully authenticated admin
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver]Attempting to resolve a principal...
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver]Creating SimplePrincipal for [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver]Principal id [admin] could not be found
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver]Retrieved [4] attribute(s) from the repository
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.PolicyBasedAuthenticationManager]org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver@11e7f88e resolved admin from admin
[INFO][2017-04-2914:02:49][org.jasig.cas.authentication.PolicyBasedAuthenticationManager]Authenticated admin with credentials [admin].
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.PolicyBasedAuthenticationManager]Attribute map for admin: {uid=uid, eduPersonAffiliation=eduPersonAffiliation, memberOf=[faculty, staff, org], groupMembership=groupMembership}
[DEBUG][2017-04-2914:02:49][org.jasig.cas.audit.spi.TicketOrCredentialPrincipalResolver]Resolving argument [AuthenticationTransaction] for audit
[DEBUG][2017-04-2914:02:49][org.jasig.cas.audit.spi.TicketOrCredentialPrincipalResolver]Resolving argument [UsernamePasswordCredential] for audit
[INFO][2017-04-2914:02:49][org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager]Audit trail record BEGIN
=============================================================
WHO: admin
WHAT: Supplied credentials: [admin]
ACTION: AUTHENTICATION_SUCCESS
APPLICATION: CAS
WHEN: Sat Apr 29 14:02:49 CST 2017
CLIENT IP ADDRESS: 0:0:0:0:0:0:0:1
SERVER IP ADDRESS: 0:0:0:0:0:0:0:1
=============================================================


[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationTransactionManager]Successful authentication; Collecting authentication result [org.jasig.cas.authentication.ImmutableAuthentication@ef8c9139]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationTransactionManager]Transaction ignored since there are no credentials to authenticate
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collecting authentication history based on [1] authentication events
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Evaluating authentication principal [admin] for inclusion in context
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected principal attributes [{uid=uid, memberOf=[faculty, staff, org], groupMembership=groupMembership, eduPersonAffiliation=eduPersonAffiliation}] for inclusion in context for principal [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected single authentication attribute [authenticationMethod] -&gt; [UcasAuthenticationHandler]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected single authentication attribute [successfulAuthenticationHandlers] -&gt; [[UcasAuthenticationHandler]]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Finalized authentication attributes [{authenticationMethod=UcasAuthenticationHandler, successfulAuthenticationHandlers=[UcasAuthenticationHandler]}] for inclusion in authentication context
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultPrincipalElectionStrategy]Nominated [admin] as the primary principal
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Determined primary authentication principal to be [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected authentication attributes for this context are [{authenticationMethod=UcasAuthenticationHandler, successfulAuthenticationHandlers=[UcasAuthenticationHandler]}]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Authentication context commenced at [2017-04-29T14:02:49.773+08:00]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Building an authentication context for authentication org.jasig.cas.authentication.ImmutableAuthentication@835b2f9 and service http://localhost:8081/eadp_oa/shiro-cas
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Added ticket [TGT-**********************************************gw1L7hkf06-localhost] to registry.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.CentralAuthenticationServiceImpl]Publishing org.jasig.cas.support.events.CasTicketGrantingTicketCreatedEvent@200cbbb8[ticketGrantingTicket=TGT-**********************************************gw1L7hkf06-localhost]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.audit.spi.TicketOrCredentialPrincipalResolver]Resolving argument [DefaultAuthenticationContext] for audit
[INFO][2017-04-2914:02:49][org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager]Audit trail record BEGIN
=============================================================
WHO: audit:unknown
WHAT: TGT-**********************************************gw1L7hkf06-localhost
ACTION: TICKET_GRANTING_TICKET_CREATED
APPLICATION: CAS
WHEN: Sat Apr 29 14:02:49 CST 2017
CLIENT IP ADDRESS: 0:0:0:0:0:0:0:1
SERVER IP ADDRESS: 0:0:0:0:0:0:0:1
=============================================================


[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.support.WebUtils]Evaluating request to determine if warning cookie should be generated
[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.WarningCookieRetrievingCookieGenerator]Removed cookie with name [CASPRIVACY]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.flow.SendTicketGrantingTicketAction]Setting TGC for current session.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.support.DefaultCasCookieValueManager]Encoding cookie value [TGT-**********************************************gw1L7hkf06-localhost@0:0:0:0:0:0:0:1@Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.util.DefaultCipherExecutor]Encrypting via [A128CBC-HS256]
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.PlaintextNoneAlgorithm@6c7c98cd registered for alg algorithm none
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.HmacUsingShaAlgorithm$HmacSha256@7c145051 registered for alg algorithm HS256
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.HmacUsingShaAlgorithm$HmacSha384@53065946 registered for alg algorithm HS384
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.HmacUsingShaAlgorithm$HmacSha512@76b1d1bc registered for alg algorithm HS512
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.EcdsaUsingShaAlgorithm$EcdsaP256UsingSha256@24f91458 registered for alg algorithm ES256
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.EcdsaUsingShaAlgorithm$EcdsaP384UsingSha384@3e4e71e0 registered for alg algorithm ES384
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.EcdsaUsingShaAlgorithm$EcdsaP521UsingSha512@305aeea0 registered for alg algorithm ES512
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.RsaUsingShaAlgorithm$RsaSha256@52085950 registered for alg algorithm RS256
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.RsaUsingShaAlgorithm$RsaSha384@4859575d registered for alg algorithm RS384
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]org.jose4j.jws.RsaUsingShaAlgorithm$RsaSha512@5788725d registered for alg algorithm RS512
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]PS256 is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]PS384 is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;JsonWebSignatureAlgorithm]PS512 is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.RsaKeyManagementAlgorithm$Rsa1_5@cdfd4c8 registered for alg algorithm RSA1_5
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.RsaKeyManagementAlgorithm$RsaOaep@194d93b6 registered for alg algorithm RSA-OAEP
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.RsaKeyManagementAlgorithm$RsaOaep256@7af5b7bb registered for alg algorithm RSA-OAEP-256
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.DirectKeyManagementAlgorithm@20800faf registered for alg algorithm dir
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.AesKeyWrapManagementAlgorithm$Aes128@1b44ad0 registered for alg algorithm A128KW
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]A192KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]A256KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.EcdhKeyAgreementAlgorithm@15bd9ee4 registered for alg algorithm ECDH-ES
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.EcdhKeyAgreementWithAesKeyWrapAlgorithm$EcdhKeyAgreementWithAes128KeyWrapAlgorithm@4c06729d registered for alg algorithm ECDH-ES+A128KW
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]ECDH-ES+A192KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]ECDH-ES+A256KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.Pbes2HmacShaWithAesKeyWrapAlgorithm$HmacSha256Aes128@395d8c76 registered for alg algorithm PBES2-HS256+A128KW
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]PBES2-HS384+A192KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]PBES2-HS512+A256KW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]org.jose4j.jwe.AesGcmKeyEncryptionAlgorithm$Aes128Gcm@3f84cdcf registered for alg algorithm A128GCMKW
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]A192GCMKW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;KeyManagementAlgorithm]A256GCMKW is unavailable so will not be registered for alg algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]org.jose4j.jwe.AesCbcHmacSha2ContentEncryptionAlgorithm$Aes128CbcHmacSha256@6354da9f registered for enc algorithm A128CBC-HS256
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]A192CBC-HS384 is unavailable so will not be registered for enc algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]A256CBC-HS512 is unavailable so will not be registered for enc algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]org.jose4j.jwe.AesGcmContentEncryptionAlgorithm$Aes128Gcm@1d495668 registered for enc algorithm A128GCM
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]A192GCM is unavailable so will not be registered for enc algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;ContentEncryptionAlgorithm]A256GCM is unavailable so will not be registered for enc algorithms.
[DEBUG][2017-04-2914:02:49][class org.jose4j.jwa.AlgorithmFactory-&gt;CompressionAlgorithm]org.jose4j.zip.DeflateRFC1951CompressionAlgorithm@3c82ae83 registered for zip algorithm DEF
[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.support.TGCCookieRetrievingCookieGenerator]Added cookie with name [TGC] and value [eyJhbGciOiJIUzUxMiJ9.WlhsS2FHSkhZMmxQYVVwcllWaEphVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYmpBdUxraEhPSFZIWVV4blZsTmxZM2haV0RocFNYTmxWWGN1T1ZwemNWOWZNWFEzVG1aSFJVSnNObXRQYW5CUmVucHVibkZHT0ZObVJGRnlTa1ZzTmt4MlNraHlTMnRGV21WblRrTmxWVXhZU0ZGSGVuRkNWWFpDTmtsd1kxOVpaRWhvVWtsWE1VOXNka1p4VUZkbVNtUjJkVVZmWlhOMWRFMXRha2R0YW1KdmVVOVpTbVZLZDBRMlMxWnNVV1pmWTIxeE5GcEdOWEI2TmtSVmVqQkdVVTVOVjNSWWFHeG1MVWc1WWtwd1FqbHdSMHBPVkVGcE1EY3hOMjlPWkcxVldVbHJibTV2Ukd0V1J6UkplamRDU21WcFlWRkJOMUpFTURNNVpIUnVXVkUxYVc1bWJGQjZWekZ0V0ZZeE1YcEdXblpoY2pOSmRteGxVazk1WWpGVk4zbEhjbmswV21jM2QwRmlTbkJOTjNGMFJFOXFXRTV0VkRCRFFVSjNjRlJOTTJaMlExRlpZbFJSYjFwdVlrbGlNMmN1WWt4NU5GVmZTM2R5T0ZWcWRWRklVakpzZDJaalVRPT0.OeZ8ypOngQWnheTEoAeRNJSa7D4R6xGvNINzr2YQldo6WUXjFzKfUEon7TsH3e54V-qf7Pa0QSMENJnZmbYrcQ]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Attempting to retrieve ticket [TGT-**********************************************gw1L7hkf06-localhost]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Ticket [TGT-**********************************************gw1L7hkf06-localhost] found in registry.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collecting authentication history based on [1] authentication events
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Evaluating authentication principal [admin] for inclusion in context
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected principal attributes [{uid=uid, memberOf=[faculty, staff, org], groupMembership=groupMembership, eduPersonAffiliation=eduPersonAffiliation}] for inclusion in context for principal [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected single authentication attribute [authenticationMethod] -&gt; [UcasAuthenticationHandler]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected single authentication attribute [successfulAuthenticationHandlers] -&gt; [[UcasAuthenticationHandler]]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Finalized authentication attributes [{authenticationMethod=UcasAuthenticationHandler, successfulAuthenticationHandlers=[UcasAuthenticationHandler]}] for inclusion in authentication context
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultPrincipalElectionStrategy]Nominated [admin] as the primary principal
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Determined primary authentication principal to be [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Collected authentication attributes for this context are [{authenticationMethod=UcasAuthenticationHandler, successfulAuthenticationHandlers=[UcasAuthenticationHandler]}]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Authentication context commenced at [2017-04-29T14:02:49.898+08:00]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.DefaultAuthenticationContextBuilder]Building an authentication context for authentication org.jasig.cas.authentication.ImmutableAuthentication@efafdf4 and service http://localhost:8081/eadp_oa/shiro-cas
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Attempting to retrieve ticket [TGT-**********************************************gw1L7hkf06-localhost]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Ticket [TGT-**********************************************gw1L7hkf06-localhost] found in registry.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.DefaultPrincipalAttributesRepository]DefaultPrincipalAttributesRepository will return the collection of attributes directly associated with the principal object
[DEBUG][2017-04-2914:02:49][org.jasig.cas.authentication.principal.DefaultPrincipalAttributesRepository]Found [4] cached attributes for principal [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.services.DefaultRegisteredServiceAccessStrategy]No required attributes are specified
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.DefaultServiceTicketFactory]Looking up service ticket id generator for [org.jasig.cas.authentication.principal.SimpleWebApplicationServiceImpl]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Added ticket [ST-1-TI2dqfpSJIm9BTQs0tZE-localhost] to registry.
[INFO][2017-04-2914:02:49][org.jasig.cas.CentralAuthenticationServiceImpl]Granted ticket [ST-1-TI2dqfpSJIm9BTQs0tZE-localhost] for service [http://localhost:8081/eadp_oa/shiro-cas] and principal [admin]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.CentralAuthenticationServiceImpl]Publishing org.jasig.cas.support.events.CasServiceTicketGrantedEvent@4de8af38[ticketGrantingTicket=TGT-**********************************************gw1L7hkf06-localhost,serviceTicket=ST-1-TI2dqfpSJIm9BTQs0tZE-localhost]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.audit.spi.TicketOrCredentialPrincipalResolver]Resolving argument [String] for audit
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Attempting to retrieve ticket [TGT-**********************************************gw1L7hkf06-localhost]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Ticket [TGT-**********************************************gw1L7hkf06-localhost] found in registry.
[INFO][2017-04-2914:02:49][org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager]Audit trail record BEGIN
=============================================================
WHO: admin
WHAT: ST-1-TI2dqfpSJIm9BTQs0tZE-localhost for http://localhost:8081/eadp_oa/shiro-cas
ACTION: SERVICE_TICKET_CREATED
APPLICATION: CAS
WHEN: Sat Apr 29 14:02:49 CST 2017
CLIENT IP ADDRESS: 0:0:0:0:0:0:0:1
SERVER IP ADDRESS: 0:0:0:0:0:0:0:1
=============================================================


[DEBUG][2017-04-2914:02:49][org.jasig.cas.web.flow.InitialFlowSetupAction]Warning cookie path is set to null and path /ucas/
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]TGC cookie path is set to null and path /ucas/
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.support.DefaultArgumentExtractor]Created http://localhost:8081/eadp_oa/shiro-cas based on org.jasig.cas.authentication.principal.WebApplicationServiceFactory@7fec2fde
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.support.DefaultArgumentExtractor]Extractor generated service for: http://localhost:8081/eadp_oa/shiro-cas
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]Placing service in context scope: [http://localhost:8081/eadp_oa/shiro-cas]
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]Placing registered service [^(https|http|imaps)://.*] with id [10000001] in context scope
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.GenerateLoginTicketAction]Generated login ticket LT-2-d4WAw9gubZB9FE6AzWx5-localhost
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]Warning cookie path is set to null and path /ucas/
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]TGC cookie path is set to null and path /ucas/
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.support.DefaultArgumentExtractor]Created http://localhost:8081/eadp_oa/shiro-cas based on org.jasig.cas.authentication.principal.WebApplicationServiceFactory@7fec2fde
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.support.DefaultArgumentExtractor]Extractor generated service for: http://localhost:8081/eadp_oa/shiro-cas
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]Placing service in context scope: [http://localhost:8081/eadp_oa/shiro-cas]
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.InitialFlowSetupAction]Placing registered service [^(https|http|imaps)://.*] with id [10000001] in context scope
[DEBUG][2017-04-2914:02:50][org.jasig.cas.web.flow.GenerateLoginTicketAction]Generated login ticket LT-3-OOjFkWBQzVOWPtkCpPJN-localhost
[DEBUG][2017-04-2914:03:42][org.jasig.cas.util.CasSpringBeanJobFactory]Created job org.jasig.cas.services.DefaultServicesManagerImpl$ServiceRegistryReloaderJob@6bbdc5de for bundle org.quartz.spi.TriggerFiredBundle@52eb5693
[DEBUG][2017-04-2914:03:42][org.jasig.cas.util.CasSpringBeanJobFactory]Autowired job per the application context
[INFO][2017-04-2914:03:42][org.jasig.cas.services.DefaultServicesManagerImpl]Reloading registered services.
[DEBUG][2017-04-2914:03:42][org.jasig.cas.services.DefaultServicesManagerImpl]Adding registered service ^(https|http|imaps)://.*
[DEBUG][2017-04-2914:03:42][org.jasig.cas.services.DefaultServicesManagerImpl]Adding registered service ^https://www.apereo.org
[INFO][2017-04-2914:03:42][org.jasig.cas.services.DefaultServicesManagerImpl]Loaded 2 services from JsonServiceRegistryDao.
[DEBUG][2017-04-2914:03:48][org.jasig.cas.util.CasSpringBeanJobFactory]Created job org.jasig.cas.ticket.registry.DefaultTicketRegistry@3b2942e1 for bundle org.quartz.spi.TriggerFiredBundle@4e4cda28
[DEBUG][2017-04-2914:03:48][org.jasig.cas.util.CasSpringBeanJobFactory]Autowired job per the application context
[INFO][2017-04-2914:03:48][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO][2017-04-2914:03:48][org.jasig.cas.ticket.registry.DefaultTicketRegistry]Beginning ticket cleanup...
[INFO][2017-04-2914:03:48][org.jasig.cas.ticket.registry.DefaultTicketRegistry]0 expired tickets found and removed.
</code></pre>

<p>shiro-cas client got xml analysis fail exception,because it got the html page content not xml </p>

<pre><code>[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.session.SingleSignOutHandler]Recording session for token ST-1-TI2dqfpSJIm9BTQs0tZE-localhost
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.session.HashMapBackedSessionMappingStorage]Attempting to remove Session=[5963FECCB62C5342CB3E599CF5BD6549]
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.session.HashMapBackedSessionMappingStorage]No mapping for session found.  Ignoring.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Placing URL parameters in map.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Calling template URL attribute map.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Loading custom parameters from configuration.
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Constructing validation url: http://localhost:8080/ucas/serviceValidate?ticket=ST-1-TI2dqfpSJIm9BTQs0tZE-localhost&amp;service=http%3A%2F%2Flocalhost%3A8081%2Feadp_oa%2Fshiro-cas
[DEBUG][2017-04-2914:02:49][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Retrieving response from server.
[DEBUG][2017-04-2914:02:50][org.jasig.cas.client.validation.Cas20ServiceTicketValidator]Server response: &lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
  &lt;meta charset=""UTF-8"" /&gt;
  &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;

  &lt;title&gt;CAS &amp;#8211; Central Authentication Service&lt;/title&gt;

    &lt;meta name=""_csrf"" content=""""/&gt;
    &lt;meta name=""_csrf_header"" content=""""/&gt;



  &lt;link rel=""stylesheet"" href=""/ucas/css/cas.css"" /&gt;
  &lt;link rel=""icon"" href=""/ucas/favicon.ico"" type=""image/x-icon"" /&gt;
  ...
</code></pre>

<p>i read cas protocal doc and search it,still couldn't understand why it happends,What i need to do more? Please advice me.</p>

<p><strong>solved</strong></p>

<p>i rollback all custom configuration and compare it,finally figure out what's happen.</p>

<p>i add these tx spring conf in cas server file:</p>

<pre><code>&lt;tx:annotation-driven transaction-manager=""transactionManager"" proxy-target-class=""true"" /&gt;
</code></pre>

<p>it cause some final class cannot be initialize by spring, like:</p>

<pre><code>org.jasig.cas.adaptors.jdbc.QueryAndEncodeDatabaseAuthenticationHandler
org.jasig.cas.authentication.FileTrustStoreSslSocketFactory
org.jasig.cas.services.DefaultServicesManagerImpl
</code></pre>

<p>so i override these final class, and it cause sso server cannot validate service ticket.
i remove this property:</p>

<pre><code>proxy-target-class=""true""
</code></pre>

<p>now sso server work.</p>
","<single-sign-on><cas><shiro>","0",""
"27883500","shiro annotation is not working in grails. Can anybody suggest me what is wrong?","<p>When I used <code>@RequiresPermissions</code> I got cannot resolve symbol 'RequiresPermissions' error. I already have imported <code>org.apache.shiro.authz.annotation.RequiresPermissions</code>.
Annotations are used as <code>@RequiresPermissions(""module:books:list"")</code></p>

<p>My authorization class</p>

<pre><code>class AuthController {

    def shiroSecurityManager

    def index = { redirect(action: ""login"", params: params) }

    def login = {
        return [ username: params.username, rememberMe: (params.rememberMe != null), targetUri: params.targetUri ]
    }

    def signIn = {
        def authToken = new UsernamePasswordToken(params.username, params.password as String)

        // Support for ""remember me""
        if (params.rememberMe) {
            authToken.rememberMe = true
        }

        // If a controller redirected to this page, redirect back
        // to it. Otherwise redirect to the root URI.
        def targetUri = params.targetUri ?: ""/""

        // Handle requests saved by Shiro filters.
        SavedRequest savedRequest = WebUtils.getSavedRequest(request)
        if (savedRequest) {
            targetUri = savedRequest.requestURI - request.contextPath
            if (savedRequest.queryString) targetUri = targetUri + '?' + savedRequest.queryString
        }

        try{
            // Perform the actual login. An AuthenticationException
            // will be thrown if the username is unrecognised or the
            // password is incorrect.
            SecurityUtils.subject.login(authToken)

            log.info ""Redirecting to '${targetUri}'.""
            redirect(uri: targetUri)
        }
        catch (AuthenticationException ex){
            // Authentication failed, so display the appropriate message
            // on the login page.
            log.info ""Authentication failure for user '${params.username}'.""
            flash.message = message(code: ""login.failed"")

            // Keep the username and ""remember me"" setting so that the
            // user doesn't have to enter them again.
            def m = [ username: params.username ]
            if (params.rememberMe) {
                m[""rememberMe""] = true
            }

            // Remember the target URI too.
            if (params.targetUri) {
                m[""targetUri""] = params.targetUri
            }

            // Now redirect back to the login page.
            redirect(action: ""login"", params: m)
        }
    }

    def signOut = {
        // Log the user out of the application.
        SecurityUtils.subject?.logout()
        webRequest.getCurrentRequest().session = null

        // For now, redirect back to the home page.
        redirect(uri: ""/"")
    }

    def unauthorized = {
        render ""You do not have permission to access this page.""
    }
}
</code></pre>

<p>My application runs but when I login by using user that I have set, it directly sends me to unauthorized page. I have allowed some permissions to the user.</p>
","<grails><shiro>","1",""
"37475004","Avoid direct access to static content in webapps","<p>I have integrated my Spring MVC application Shiro for security reasons.</p>

<p>All my urls are working fine, but I have a few html pages which can be directly accessed.</p>

<p>How can I protect those pages, meaning if a user is not logged in to an application, and tries to open an html page, they should be redirected to the login page.</p>

<p>I have tested on jetty and tomcat server.</p>

<p><strong>Jetty</strong></p>

<pre class=""lang-none prettyprint-override""><code>http://ip:port - works fine, redirects to login page

http://ip:port/html/ - opens html pages
</code></pre>

<p><strong>Tomcat</strong></p>

<pre class=""lang-none prettyprint-override""><code>http://localhost:8070/my-app/html/myPage.html - opens html pages
</code></pre>

<p>Basically I do not want direct access of my static content without a user being logged in.</p>

<p>My html file is integrated with angular code. Is there any sort of servlet that can create and return html from it. Meaning I will read html from some other specific location, parse and return html in response.</p>

<p><strong>html file location</strong> - <code>my-app\html\myPage.html</code></p>

<p><strong>Shiro settings in <code>web.xml</code></strong></p>

<pre><code>filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy
        &lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
            &lt;param-value&gt;true&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
</code></pre>

<p>When i build war, it copies images, html folder outside web-inf also.
<strong>How can avoid copying images, html folder outside web-inf using maven</strong></p>
","<java><html><spring><servlets><shiro>","0",""
"24621986","Creating an authenticated Subject with Shiro","<p>I have a distributed environment (multiple java vms) where the subject is authenticated on one node and should be able to access resources on another node (another VM).</p>

<p>From discussion in 
<a href=""https://issues.apache.org/jira/browse/SHIRO-323"" rel=""nofollow"">https://issues.apache.org/jira/browse/SHIRO-323</a>,</p>

<p>I am passing in all the authenticated Subject information to the other VMs via Redis (Principals , Authenticated State etc ..) and am trying to recreate the Subject using new Subject.Builder().buildSubject() way.</p>

<p>My question,
Is there a way to mark this subject as authenticated based on the authentication flag received from the first node ?</p>

<p>Thanks.</p>
","<security><shiro>","0","24652210"
"17984866","How shiro authenticate request from non-browser client","<p>I have a web site which was secured with shiro. The web site is built with heavy AJAX stuff and REST API.</p>

<p>As I understand, shiro (app server, tomcat) recognize user (client) through cookie (tomcat JSessionID). </p>

<p>Now I'm starting to build an Android App.  How could Shiro (or Tomcat) recognize the client user, since there is no browser to handle cookie automatically?</p>

<p>Should I programmatically handle cookie with HttpClient?  Or is there a better practice about shiro in the scenario of App + RESTful API?</p>
","<api><rest><shiro><stateless>","1",""
"13307945","User logon with Apache Shiro and Sesame","<p>I have a Sesame triple store where I store users account and I'm building a Java Web Application with a login form.
I would like to use Apache Shiro to do this.</p>

<p>Does anyone know how to authenticate users using Shiro and Sesame?</p>

<p>Thank you.
-Antonio</p>
","<apache><login><shiro><sesame>","0",""
"16549505","shiro - ""Error listenerStart"" error while starting","<p>I am trying to integrate Shiro based on an excellent article penned by BalusC in my application. I added required JAR files (shiro-core-1.2.1.jar, shiro-web-1.2.1.jar, slf4j-api-1.7.5.jar and slf4j-simple-1.7.5.jar). Also modified web.xml. and added shiro.ini file. However, it throws the following error on JBOSS EAP 6.0.</p>

<p>3:32:34,470 ERROR [org.apache.catalina.core.StandardContext] (MSC service thread 1-3) Error listenerStart
13:32:34,470 ERROR [org.apache.catalina.core.StandardContext] (MSC service thread 1-3) Context [/FedSep] startup failed due to previous errors</p>
","<shiro>","4",""
"39840747","Spring Security and Shiro -> How to pass a token with authenticated user to Shiro?","<p>I've two web applications: the first web application is using Spring MVC and Security and it makes user's authentication at database. And works fine, thanks.  </p>

<p>The second web-app is using Shiro for user's login to grant the authorities and etc.</p>

<p>Question: How can I make login at the first app and pass the token csrf, or another one, from the Spring Security to the shiro and use it for your necessities?</p>

<p>If you could send me a tutorials or examples of this, I'd appreciate.</p>

<p>Thanks.</p>
","<spring><security><authentication><user><shiro>","1",""
"42976582","Using apache Shiro with Spring MVC non xml project","<p>I have a project in which i am using Spring mvc 4 and i need to include there apache shiro security. I've tried to search over the web for a solution for my problem but didn't managed to fins something. Although there is a guide at Shiro's web site, but this example is only for xml configured Spring project, and my project doesn't contain any xml at all, and when i am trying to configure Shiro with annotation only it fails.
When i run this project i have an access to all of my end points, and non of them is being restricted by Shiro.
I guess that my configuration is wrong but i am unable to figure out which part of it is wrong.
I am not allowed to use Spring boot (i know that there is examples for that).
here is my configuration class:</p>

<pre><code>@Configuration
@EnableWebMvc
@ComponentScan(basePackages = ""com.myproject.menu"")
public class AppConfiguration extends WebMvcConfigurerAdapter{


@Override
public void addResourceHandlers(ResourceHandlerRegistry registry) {
    registry.addResourceHandler(""/**"").addResourceLocations(""/"");
}

@Bean(name=""shiroFilter"")
public ShiroFilterFactoryBean shiroFilter (){
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
    shiroFilter.setLoginUrl(""/MenuTest/login"");
    shiroFilter.setFilterChainDefinitions(""/MenuTest/init=anon"");
    shiroFilter.setFilterChainDefinitions(""/MenuTest/**=authc"");
    shiroFilter.setSecurityManager(realm());
    return shiroFilter;
}

private DefaultWebSecurityManager realm(){
    DefaultWebSecurityManager realm = new DefaultWebSecurityManager();
    return realm;
}
}
</code></pre>

<p>Thx in advance!</p>
","<java><spring><spring-mvc><shiro>","3",""
"23470957","Can not log Out from the application","<p>My cookies had been protected by third party tool like “EditThisCookie”  [ chrome browser]  .when I try to log out using following code : [Use shiro for log out.]</p>

<pre><code>            Subject currentUser = SecurityUtils.getSubject();
            currentUser.logout();
            Executions.sendRedirect(“Login Page”);
</code></pre>

<p>It does not log out the application since on Second time when I enter the url it redirecting me to the home page. How can I Solve this problem.</p>
","<shiro>","0",""
"34963592","Change Shiro web configuration without restarting app","<p>Web-based Shiro RBAC uses web.xml and shiro.ini (or similar name) to configure roles/permissions in a web environment.</p>

<p>If I change roles for users in the web app, thus changing the shiro configuration, shiro doesn't reflect these changes until the web app is restarted..which of course isn't good for a production environment.</p>

<p>Apache Shiro docs/web site goes into great detail about creating roles/caching etc., but nothing about reloading the configuration at runtime in a web environment.
Note that in a non-web environmnet, if the .ini file is changed, by default Shiro reloads the configuration. Not so in a web.xml-based implementation (afaict).</p>

<p>Does anyone know a solid straightforward way to reload Shiro configuration without having to restart the web app?</p>

<p>Many thanks,
Peter</p>
","<apache><shiro><rbac>","0",""
"37534017","Configure Apache Shiro Permissions","<p>Here is the thing:
I want to have users with roles like this:</p>

<p>Table users:
id|username|role_id</p>

<p>Table roles:
id|name|add_users|add_customers|configure_mail|...|...|...</p>

<p>The permissions are type binary, when the user can perform the action It has a 1 or It has a 0 otherwise.</p>

<p>In my shiro.ini I have the queries:</p>

<pre><code>jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password from users where username = ?
jdbcRealm.userRolesQuery = select name from roles where id = (select role_id FROM users WHERE username = ?)
</code></pre>

<p>Is there a way to do that?.
I have searched for days now. I would really appreciate your help.
Thanks in advance guys.</p>
","<java><spring-mvc><shiro>","0","37570959"
"27540327","How to implement SSO using CAS in shiro","<p>I want to implement SSO in shiro using CAS with active directory.If Anyone having experience of this implementation,please share with me. Also suggest basic requirement for this.
Many Thanks.</p>
","<jsf><active-directory><jsf-2.2><shiro>","2",""
"35307946","Grails spring websocket using shiro security","<p>I am new for <strong>spring websocket</strong>. I want to create <strong>chat application</strong> using <strong>Grails Framework</strong>. When I was googling, I reached to <strong>spring websocket plugin</strong>. In my <strong>Grails application</strong> I have implemented <strong>Apache Shiro Security</strong> and I want to use <strong>Apache Shiro Security</strong> for <strong>spring websocket</strong> to <strong>send message to specific user</strong> in chat application. Please any one help me on it.</p>
","<spring><spring-boot><grails-2.0><shiro><spring-websocket>","1",""
"16021414","Apache Shiro - issue with isPermitted() method and wrong Authorizer class","<p>We have implemented a class called AuthorizerImpl that contains two objects: an AuthorizingRealm and a Subject. We have implemented an isPermitted() method which subsequently calls the isPermitted() method on the subject. Our code looks something like this:</p>

<pre><code>// UserContext object uc is passed in here
AuthorizerImpl auth = new AuthorizerImpl(uc.getUser());
auth.isPermitted(""winnebago:drive:eagle5"");
</code></pre>

<p>We initially log in and authenticate a user's permissions using the above code. The first time a user logs in, it is a a ""base user"" so to speak. There are certain screens that are specific to certain users, so we call the above code again with a different uc.getUser() to verify the new users permissions. What I am seeing though is that the backend Shiro code is using the previous user to check the permissions, not the new user that I passed into the isPermitted() method. Each time we are calling ""new AuthorizerImpl(uc.getUser())"" we are creating a new Subject and AuthorizingRealm that are instance variables inside the AuthorizingRealm object. It was my impression that when I create a new AuthorizerImpl, it should use the new subject and realm that we are creating in the constructor. However, it seems that Shiro is caching the previous realm object that was used and is using that? We are using the DefaultSecurityManager. After doing some debugging, I noticed that the DefaultSecurityManager has an authorizer instance variable. It appears to be using the first authorizer object and not the new one that should be created with the new user, which leads me to believe it is is being cached. Is there a way to turn off this caching? Is this what is happening or is it something else?  The permissions are being retrieved correctly from the database if the correct user is used to check. How can I resolve this?</p>

<p>Thank you in advance. </p>
","<apache><shiro>","1",""
"39109471","trying to get response from CAS secure rest api,but getting login page as response from java client","<p>I am trying to get correct response from CAS secure rest api,but every time i am getting login page as a response , i have converted groovy rest client from this site <a href=""https://wiki.jasig.org/display/casum/restful+api"" rel=""nofollow"">https://wiki.jasig.org/display/casum/restful+api</a> into java rest client but it is not giving correct result, 
below is my java rest client for CAS .</p>

<pre><code>HttpClient client = new HttpClient();
    public String getTicketGrantingTicket(String server, String username, String password) {


        PostMethod post = new PostMethod(server);
        post.setParameter(""username"", username);
        post.setParameter(""password"", password);
//        NameValuePair[] nameValuePairs = new NameValuePair[2];
//        nameValuePairs[0] = new NameValuePair(""username"", username);
//        nameValuePairs[1] = new NameValuePair(""password"", password);

//        post.setRequestBody(nameValuePairs);
        try {
            client.executeMethod(post);
            String response = post.getResponseBodyAsString();
            LOG.info(""Response is : "" + response);
            switch (post.getStatusCode()) {
            case 201:
                Matcher matcher = Pattern.compile("".*action=\"".*/(.*?)\"".*"").matcher(response);
                if (matcher.matches())
                    return matcher.group(1);
                LOG.warning(""Successful ticket granting request, but no ticket found!"");
                LOG.info(""Response (1k): "" + response.substring(0, Math.min(1024, response.length())));
                break;
            default:
                LOG.warning(""Invalid response code "" + post.getStatusCode() + "" from CAS server!"");
                LOG.info(""Response: "" + response);
                break;
            }
        } catch (final IOException e) {
            LOG.warning(e.getMessage());
        } finally {
            post.releaseConnection();
        }
        return null;

    }

    public String getServiceTicket(String server, String ticketGrantingTicket, String service) {
        if (ticketGrantingTicket.isEmpty())
            return null;
//        HttpClient client = new HttpClient();
        PostMethod post = new PostMethod(server + ""/"" + ticketGrantingTicket);
        post.setParameter(""service"",service);
//        NameValuePair[] nameValuePairs = new NameValuePair[1];
//        nameValuePairs[0] = new NameValuePair(""service"", service);
//        post.setRequestBody(nameValuePairs);

        try {
            client.executeMethod(post);
            String response = post.getResponseBodyAsString();
            LOG.info(""Service Response is : "" + response);
            switch (post.getStatusCode()) {
            case 200:
                return response;
            default:
                LOG.warning(""Invalid response code ( $post.getStatusCode() ) from CAS server!"");
                LOG.info(""Response (1k): "" + response.substring(0, Math.min(1024, response.length())));
                break;
            }
        } catch (final IOException e) {
            e.printStackTrace();
            LOG.warning(e.getMessage());
        } finally {
            post.releaseConnection();
        }
        return null;
    }

    public String validateServiceTicket(String server, String serviceTicket, String service) {
        if (serviceTicket.isEmpty())
            return null;
//        HttpClient client = new HttpClient();
        PostMethod post = new PostMethod(server + ""/"" + serviceTicket);
        post.setParameter(""service"", service);
        post.setParameter(""ticket"", serviceTicket);
//        NameValuePair[] nameValuePairs = new NameValuePair[2];
//        nameValuePairs[0] = new NameValuePair(""service"", service);
//        nameValuePairs[1] = new NameValuePair(""ticket"", serviceTicket);

//        post.setRequestBody(nameValuePairs);

        try {
            client.executeMethod(post);
            String response = post.getResponseBodyAsString();
            LOG.info(""validate Response is : "" + response);
            switch (post.getStatusCode()) {
            case 200:
                return response;
            default:
                LOG.warning(""Invalid response code ""+ post.getStatusCode()+"" "");
                LOG.info(""Response (1k): "" + response.substring(0, Math.min(1024, response.length())));
                break;
            }
        } catch (final IOException e) {
            e.printStackTrace();
            LOG.warning(e.getMessage());
        } finally {
            post.releaseConnection();
        }
        return null;
    }

    public void getServiceCall(String service, String serviceTicket) {
//        HttpClient client = new HttpClient();
        GetMethod method = new GetMethod(service);
        NameValuePair[] nameValuePair = new NameValuePair[1];
        nameValuePair[0] = new NameValuePair(""ticket"", serviceTicket);

        method.setQueryString(nameValuePair);
        try {
            client.executeMethod(method);
            String response = method.getResponseBodyAsString();
            LOG.info(""Service Request call is  : "" + response);
            switch (method.getStatusCode()) {
            case 200:
                LOG.info(""Response: "" + response);
                break;
            default:
                LOG.warning(""Invalid response code ("" + method.getStatusCode() + "") from CAS server!"");
                LOG.info(""Response: $response"");
                break;
            }
        } catch (final IOException e) {
            LOG.warning(e.getMessage());
        } finally {
            method.releaseConnection();
        }
    }

    public void logout(String server, String ticketGrantingTicket) {
        HttpClient client = new HttpClient();
        DeleteMethod method = new DeleteMethod(server + ""/"" + ticketGrantingTicket);
        try {
            client.executeMethod(method);
            String response = method.getResponseBodyAsString();
            LOG.info(""logout response is  : "" + response);
            switch (method.getStatusCode()) {
            case 200:
                LOG.info(""Logged out"");
                break;
            default:
                LOG.warning(""Invalid response code ("" + method.getStatusCode() + "") from CAS server!"");
                LOG.info(""Response: $response"");
                break;
            }
        } catch (final IOException e) {
            LOG.warning(e.getMessage());
        } finally {
            method.releaseConnection();
        }
    }

    public static void main(String[] args) {
        RestServiceAuthenticator authentication = new RestServiceAuthenticator();
        String server = ""https://casserver.com/cas/v1/tickets"";
        String username = ""username"";
        String password = ""password"";
        String service = ""http://servicetogetresponse"";
        String validate = ""https://casserver.com/cas/validate"";
        // Client client = new Client();
//        String ticketGrantingTicket = authentication.getTicketGrantingTicket(server, username, password);
//        System.out.println(""TicketGrantingTicket is "" + ticketGrantingTicket);
//        String serviceTicket = authentication.getServiceTicket(server, ticketGrantingTicket, service);
//        System.out.println(""ServiceTicket is "" + serviceTicket);
        authentication.validateServiceTicket(validate, serviceTicket, service);
//        authentication.getServiceCall(service, serviceTicket);
//        authentication.logout(server, ticketGrantingTicket);
    }
</code></pre>

<p>Please help</p>
","<java><authentication><cas><shiro>","0",""
"41739368","Integration of apache shiro with java EE application","<p>I am currently building a web application and I have started integrating apache shiro to perform basic authentication. I have developed a custom JdbcRealm. And it seems to be fine.</p>

<p>My [Shiro.ini] file</p>

<pre><code>[main]
jdbcRealm = com.sigmastream.yh.api.http.YhJdbcRealm
jdbcRealm.permissionsLookupEnabled = true
securityManager.realms = $jdbcRealm

[urls]
/yhrest/login/** = authcBasic
</code></pre>

<h1>Custom Jdbc Realm</h1>

<pre><code>public class YhJdbcRealm extends JdbcRealm
{
    public YhJdbcRealm()
    {
        this.dataSource = getDataSource();
        this.authenticationQuery = ""SELECT password from users WHERE username = ?"";
    }

    public BasicDataSource getDataSource()
    {
        String dbPath = AppProperties.getInstance().getConfig().getProperty(""iot.web.admin.source.dbpath"",
                """");
        String poolSize = AppProperties.getInstance().getConfig().getProperty(""iot.db.connection.pool.size"", ""25"");
        BasicDataSource dataSource = new BasicDataSource();
        dataSource.setUrl(""jdbc:sqlite:"" + dbPath);
        dataSource.setDriverClassName(""org.sqlite.JDBC"");
        dataSource.setInitialSize(Integer.valueOf(poolSize));
        dataSource.setMaxActive(1);
        return dataSource;
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException
    {
        AuthenticationInfo info = super.doGetAuthenticationInfo(token);
        return info;
    }
}
</code></pre>

<p>I am using SQLite as database.I am expecting apache shiro to authenticate each request which comes in my application except login page.</p>

<p>I dont know where am I making a mistake in configuring apache shiro in my application. It would be appriciable If any one can provide some guidance or help.</p>
","<java><apache><authentication><shiro>","1",""
"27259006","What plugins or tools do you use for user management in Grails?","<p>What plugins or tools do you use for user management in Grails? 
I would like to use shiro for the security purpose and found <a href=""http://snimavat.github.io/nimble/"" rel=""nofollow"">nimble</a>. But this plugin is no more maintained and have dependency problems in grails 2.4.X.</p>

<p>I am interested in 
1.email verification
2.password recovery</p>

<p>What should be your suggestions regarding this? </p>

<p>Or is the only choice is to develop it on top of shiro grails integration by using email plugin?</p>

<p>Thank you.</p>
","<authentication><grails><authorization><shiro><email-validation>","0",""
"32401239","Shiros Sha256Hash and alternative algorithms","<p>Is Sha256Hash from Apache Shiro based upon a common specification like PBKDF2WithHmacSHA256?</p>

<p>The following example proves, Shiros Sha256Hash doesn't create a valid PBKDF2WithHmacSHA256 hashes.</p>

<pre class=""lang-java prettyprint-override""><code>public static byte[] getEncryptedPassword(
    String password,
    byte[] salt,
    int iterations,
    int derivedKeyLength
) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec keySpec = new PBEKeySpec(
        password.toCharArray(),
        salt,
        iterations,
        derivedKeyLength * 8
    );
    SecretKeyFactory f = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA256"");
    return f.generateSecret(keySpec).getEncoded();
}

@Test
public void testHashing(){
    byte[] salt = new SecureRandomNumberGenerator().nextBytes().getBytes();
    byte[] hash1 = new Sha256Hash(""1234"", salt, 1024).getBytes();
    byte[] hash2 = getEncryptedPassword(""1234"", salt, 1024, 32);
    assertTrue(hash1.equals(hash2));
}
</code></pre>

<p>Is there a common way to use PBKDF2WithHmacSHA256 with shiro, or do I have to implement my own CredentialMatcher?</p>
","<shiro><hmac><sha256><pbkdf2>","2",""
"22674937","Cannot run login form with Shiro","<p>I have searched many pages and follow, seem I'm not lucky guy, I cannot run my login page (I'm a newbie). When I clicked login button, nothing happen. Here is my web-app structure</p>

<p>login.xhtml (JSF form)</p>

<pre><code>&lt;h:form prependId=""false""&gt;
        &lt;h:panelGroup&gt;
            &lt;h:panelGrid id=""panel"" columns=""2"" border=""1"" cellpadding=""0"" cellspacing=""2""&gt;
                &lt;h:outputLabel for=""username"" value=""Email"" /&gt;
                &lt;h:inputText id=""username""  /&gt;

                &lt;h:outputLabel for=""password"" value=""Password"" /&gt;
                &lt;h:inputText id=""password"" /&gt;

            &lt;/h:panelGrid&gt;
            &lt;h:commandButton value=""Login"" style=""margin-top: 10px;""/&gt;
        &lt;/h:panelGroup&gt;
    &lt;/h:form&gt;
</code></pre>

<p>web.xml</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;Pretty Filter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.ocpsoft.pretty.PrettyFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;Pretty Filter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
&lt;!-- Setup Apache Shiro for Authentication &amp; Authorization --&gt;
&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
</code></pre>

<p>shiro.ini</p>

<pre><code>[main]
authc = com.beacon.security.MetroFormAuthenticationFilter
authc.loginUrl = /login.xhtml
authc.successUrl  = /home

[urls]
/login.xhtml = authc
/errors/notAuthorized.xhtml = authc
/** = anon
</code></pre>
","<java><security><jsf><shiro>","0",""
"39447846","Apache shiro: Unable to start application after configuring shirofilter","<p>I'm developing a maven based JSF webapp with PrimeFaces 6.0 and Apache Shiro 1.3.1 under TomEE 7.0.1. The IDE is NetBeans 8.1.</p>

<h2>pom.xml</h2>

<pre><code>&lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax&lt;/groupId&gt;
            &lt;artifactId&gt;javaee-web-api&lt;/artifactId&gt;
            &lt;version&gt;7.0&lt;/version&gt;
            &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;!-- JSF UI Library --&gt;
        &lt;!-- https://mvnrepository.com/artifact/org.primefaces/primefaces --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.primefaces&lt;/groupId&gt;
            &lt;artifactId&gt;primefaces&lt;/artifactId&gt;
            &lt;version&gt;6.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Logging --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
            &lt;version&gt;1.1.7&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Application Security --&gt;
        &lt;!-- Required in all environments --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
            &lt;version&gt;1.3.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Enables support for web-based applications --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
            &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
            &lt;version&gt;1.3.1&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
</code></pre>

<h2>web.xml</h2>

<pre><code> &lt;filter&gt;
            &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
            &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
        &lt;/filter&gt;
        &lt;filter-mapping&gt;
            &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
            &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
            &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
            &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
            &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
        &lt;/filter-mapping&gt;

        &lt;listener&gt;
            &lt;listener-class&gt;
                org.apache.shiro.web.env.EnvironmentLoaderListener
            &lt;/listener-class&gt;
        &lt;/listener&gt;
     &lt;servlet&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
&lt;welcome-file-list&gt;
        &lt;welcome-file&gt;faces/login.xhtml&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;
</code></pre>

<h2>shiro.ini</h2>

<pre><code>[main]
authc.loginUrl = /login.xhtml
authc.successUrl = /index.xhtml
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

[users]
root = topsecret, admin

[roles]
admin = *
guest = *

[urls]
/login.xhtml = authc
/logout = logout
</code></pre>

<p>When I run the application, I see this exception trace:</p>

<pre><code>org.apache.openejb.OpenEJBException: Unable to load servlet listener class:   org.apache.shiro.web.env.EnvironmentLoaderListener
.........
.......
Caused by: java.lang.ClassNotFoundException:   org.apache.shiro.web.env.EnvironmentLoaderListener
</code></pre>

<p>What's wrong here ?</p>
","<jsf-2.2><shiro>","0",""
"43338364","Token Based Authentication in Apache Zeppelin","<p>Apache Zeppelin supports Shiro Authentication and We can write our custom class for Oauth2 authentication. But instead of asking username/password at time of login, I need to authenticate the user with a JWT token.</p>

<p>Is there a way to do the same?</p>
","<apache><shiro><apache-zeppelin>","1",""
"30829007","CDI @Inject return null in AuthorizingRealm","<p>i'm try use Apache Shiro in OSGI env. 
In order to use CDI beans on MyAuthorizingRealm class i've pax-shiro-cdi extension.
My simple AuthorizingRealm is here:</p>

<pre><code>    @ShiroIni
    public class MyAuthorizingRealm extends AuthorizingRealm {

        @Inject // will return null always
        private SimpleUserStorage userStorage;


        @Override
        protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken)
                throws AuthenticationException {


            System.out.println("" BEAN "" + userStorage);

            UsernamePasswordToken usernamePasswordToken = (UsernamePasswordToken) authenticationToken;


            return new SimpleAccount(usernamePasswordToken.getPrincipal(),
                    ""123456"".toCharArray(), super.getName());

   }
</code></pre>

<p>and my SimpleUserStorage is here :</p>

<pre><code>public class SimpleUserStorage {

    private List&lt;String&gt; users = new ArrayList&lt;String&gt;();

    public List&lt;String&gt; getUsers(){
        users.add(""user"");
        users.add(""user1"");
        return users;
    }
}
</code></pre>

<p>but strangely is that i can inject SimpleUserStorage in my RESTService class and it work well..</p>

<pre><code>SimpleUserStorage in RestService and it work well.
For example :

@Path(""/user"")
public class UserRestService {

    @Inject
    private SimpleUserStorage userStorage;

    @GET
    @Produces(""text/html"")
    public String getDataToDisplay() {
        return ""&lt;strong&gt;Hehe)&lt;/strong&gt;"" + userStorage.getUsers().size() ;
    }
}
</code></pre>

<p>Why in MyAuthorizingRealm i got null instead ref of SimpleUserStorage ?</p>

<hr>

<p>i'm user Glassfish 4 and try write pure Java EE application.</p>
","<osgi><cdi><shiro><glassfish-4>","0",""
"37782630","Facing IllegalArgumentException when I try to instantiate IniSecurityManagerFactory class in spring-boot maven project","<p>I'm trying to add Apache shiro's RBAC authentication logic to my Spring boot application. I'm using Shiro.ini file.
But facing IllegalArgumentException when I try to instantiate IniSecurityManagerFactory(To load shiro.ini file).</p>

<p>Here is my code:</p>

<pre><code> @Controller
    @RequestMapping(""/ServiceDesigner/User"")
    public class UserTest {
            @RequestMapping(""/test"")
            @ResponseBody
            public String create(String username,String password) throws IOException {
                Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
                SecurityManager securityManager = factory.getInstance();
                SecurityUtils.setSecurityManager(securityManager);

                    UsernamePasswordToken token = new UsernamePasswordToken(username, password);

                    Subject currentUser = SecurityUtils.getSubject();

                    try {
                        currentUser.login(token);

                    } catch ( Exception uae ) { 
                        System.out.println(uae.getMessage());
                    }

                    return ""Authenticated"";
                    }
</code></pre>

<p>StackTrace: </p>

<pre><code> java.lang.IllegalArgumentException: Line argument must contain a key and a value.  Only one string token was found.
at org.apache.shiro.config.Ini$Section.splitKeyValue(Ini.java:542) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini$Section.toMapProps(Ini.java:567) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:464) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini$Section.&lt;init&gt;(Ini.java:445) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini.addSection(Ini.java:302) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini.load(Ini.java:334) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini.load(Ini.java:287) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini.load(Ini.java:275) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.Ini.loadFromPath(Ini.java:244) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.IniFactorySupport.loadDefaultClassPathIni(IniFactorySupport.java:69) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.IniFactorySupport.resolveIni(IniFactorySupport.java:92) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:108) ~[shiro-core-1.2.2.jar:1.2.2]
at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47) ~[shiro-core-1.2.2.jar:1.2.2]
at com.verizon.servicedesginer.api.UserTest.create(UserTest.java:89) ~[classes/:na]
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:858) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) ~[tomcat-embed-core-8.0.33.jar:8.0.33]
</code></pre>

<p>I'd appreciate any constructive feedback.</p>
","<java><maven><spring-boot><shiro><rbac>","0",""
"36590739","Web-Shiro PassThruAuthenticationFilter not working","<p>I was trying to follow <a href=""http://blogs.bytecode.com.au/glen/2012/12/29/using-apache-shiro-with-jsf.html"" rel=""nofollow noreferrer"">this tutorial</a> about how to secure a jsf-page with apache shiro.</p>

<p>My question is:
Even if i configure in my shiro.ini file, that the protected jsf-page has to be authenticated, I can still access it with the url to it and without authenticating.</p>

<p>My shiro.ini file:</p>

<pre><code>[main]
authc.loginUrl = /login.xhtml
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
securityManager.rememberMeManager.cookie.name = demoRememberMe

[users]
admin = secret

[roles]
admin = *

[urls]
/index.xhtml = anon
/protected.xhtml = authc
</code></pre>

<p><a href=""https://i.stack.imgur.com/5B9Ec.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5B9Ec.png"" alt=""My web-resources folder""></a></p>
","<java><jsf><shiro>","2",""
"28530401","How to save Password and Salt in shiro.ini","<p>currently I work with Shiro to create an authenticated and authorized connection between server and client.
For now I don't have a special realm and only use the shiro.ini to save all my test users.
My question now is if there is a possibility to save the salt for each user in the shiro.ini or do I have to create a seperate database as a realm?</p>

<p>So is there the chance to save it somehow like this within the .ini?</p>

<pre><code>[users]
*username* = *hashed Password*, *salt*, *roles
</code></pre>

<p>I actually do not really understand how or where I can save a random salt for each user.</p>

<p>My current understanding is that the 'hashed Password' in the ini is the final comparison value, for the incoming token containing a password that firstly has to be hashed with the user specific salt.</p>
","<java><ini><salt><shiro>","2",""
"12998368","Best practice for a marketplace/advertisment web-application made in GWT","<p>I'm thinking about making a marketplace/advertisment website using GWT. I've got little experience using GWT but I do like it. Not really experienced with EE-applications either.</p>

<p>However I've done some reading and it seems to be that RequestFactory is the thing. And MVP, and Guice, and GIN, and Shiro (for authentication)</p>

<p>I'm not really sure how to combine all these. I'm thinking about using plain SQL server using JDBC, had thoughts about using an ORM such as Hibernate aswell.</p>

<p>Anyway, would it be good to combine GWT(RequestFactory+MVP) + Guice + GIN + Shiro? I'm I missing out something? Atm it feels like there are several techniques I'm not accustomed to. Which mans I must do quite a lot of reading and it feels kinda hard to combine all those, if its even possible?</p>

<p>//Johan</p>
","<gwt><guice><mvp><requestfactory><shiro>","1","12998655"
"1871714","Data-related security Implementation","<p>Using Shiro we have a great security framework embedded in our enterprise application running on GF. You define users, roles, permissions and we can control at any fine-grain level if a user can access the application, a certain page or even click a specific button.</p>

<p>Is there a recipe or pattern, that allows on top of that, to restrict a user from seeing certain data ?</p>

<p><strong>Sample</strong>: <em>You have a customer table for 3 factories (part of one company). An admin user can see all customer records, but the user at the local factory must not see any customer data of other factories (for whatever reason).</em></p>

<p>Te security feature should be part of the role definition.</p>

<p>Thanks for any input and ideas</p>
","<database><security><shiro>","1",""
"42507352","How to toggle disable/enable of shiro authentication?","<p>Is there a way to toggle on-off shiro authentication in my REST service? 
I am currently using dropwizard with shiro for my REST services?
Also how can I confirm shiro is disabled? </p>

<p>I also have a shiro.ini file but is there any setting that I can include to toggle shiro authentication?</p>

<pre><code>@Override
protected ShiroConfiguration narrow(T configuration) {
    return configuration.getShiroConfiguration();
}

@Override
protected Filter createFilter(T configuration) {
    IniWebEnvironment shiroEnv = new IniWebEnvironment();
    shiroEnv.setConfigLocations(this.narrow(configuration).iniConfigs());
    shiroEnv.init();

    return new AbstractShiroFilter() {
        public void init() throws Exception {
            Collection&lt;Realm&gt; realms = MyShiroBundle.this.createRealms(configuration);

            DefaultWebSecurityManager webSecurityManager =
                    (DefaultWebSecurityManager)shiroEnv.getWebSecurityManager();

            if (webSecurityManager.getRealms() != null) {
                webSecurityManager.setRealms(mergeRealms(webSecurityManager.getRealms(), realms));
            } else {
                webSecurityManager.setRealms(realms);
            }

            this.setSecurityManager(webSecurityManager);
            this.setFilterChainResolver(shiroEnv.getFilterChainResolver());
        }
    };
}

@Override
protected Collection&lt;Realm&gt; createRealms(T configuration) {
    return mergeRealms(super.createRealms(configuration), Collections.singleton(createJdbcRealm(configuration)));
}

private static Collection&lt;Realm&gt; mergeRealms(Collection&lt;Realm&gt; realms, Collection&lt;Realm&gt; realms2) {
    return ImmutableList.&lt;Realm&gt;builder().addAll(realms).addAll(realms2).build();
}

private static Realm createJdbcRealm(ReferenceDataConfiguration configuration) {
    DataSource ds = configuration.getMyDatabaseDataSourceFactory().build(new MetricRegistry(), ""my-shiro"");
    JdbcRealm realm = new JdbcRealm();
    realm.setDataSource(ds);
    realm.setPermissionsLookupEnabled(false);
    realm.setCredentialsMatcher(new AllowAllCredentialsMatcher());
    realm.setAuthenticationQuery(
            ""select UserId from AppUser where IsActive = 1 and UserId = ?"");
    realm.setUserRolesQuery(""select Role from UserRoles where UserId = ? and ValidToTime = "" + VALID_TIME);
    realm.setPermissionsQuery(
            ""select Permission from RolesPermissions where Role = ? and ValidToTime = "" + VALID_TIME);
    return realm;
}
</code></pre>
","<rest><dropwizard><shiro>","1",""
"29598052","Adding Apache Shiro parameters into web.xml unables correct app deployment","<p>I have been trying to use Apache Shiro in my java web project but I have read all the tutorials and examples to no avail. My app was running okay until I created the web.xml file and included the following lines:</p>

<pre><code>&lt;listener&gt;
 &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
 &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
 &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
 &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
 &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
 &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
 &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
 &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Also, I am using Netbeans as IDE and not using Maven because I don't know how to use it, I did try to follow the tutorials with a simple Maven proyect, though. I would like to hear a solution with no Maven in it please.</p>

<p>For more information about my proyect structure, here it is.</p>

<p>NetBeans 8.0
Java Web Application</p>

<p>Libraries under WEB-INF/lib/
shiro-core-1.2.3.jar
shiro-web-1.2.3.jar
slf4j-simple-1.7.2.jar</p>

<p>Those are included using the Netbeans include libraries.</p>

<p>I would like some guidance over this because I have not found pretty much information on using Shiro without Maven. Thank you in advance.</p>
","<maven><netbeans><web.xml><shiro>","0",""
"40912179","Simple POC for authorization only using Apache Shiro","<p>I am new for Apache shiro and rest web service. Based on my requirement i am creating simple POC using Shiro and rest service.</p>

<p>In my application i do not use any login page. simply only one TestService.java with 4 webs service method
I want to control each web service method with different role through invoke the rest client. means</p>

<p><code>insertNewData()</code> method required '<strong>insert</strong>' role, otherwise show some error message</p>

<p><code>updateNewData()</code> method required '<strong>update</strong>' role , otherwise show some error message</p>

<p><code>deleteNewData()</code> method required '<strong>delete</strong>' role, otherwise show some error message</p>

<p><code>searchAllData()</code> method required '<strong>admin</strong>' role, otherwise show some error message</p>

<p>I have no idea about how to configure shiro.ini file for my requirement and rest configuration.</p>

<p><strong>web.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xmlns=""http://java.sun.com/xml/ns/javaee""
xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""
id=""WebApp_ID"" version=""3.0""&gt;

&lt;display-name&gt;SimpleRest&lt;/display-name&gt;

&lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;Jersey Web Application&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Jersey Web Application&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/test/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;listener&gt;
    &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;
&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt; &lt;/web-app&gt;  
</code></pre>

<p><strong>/WEB-INF/shiro.ini</strong> Here how to configure the different role for web service hit</p>

<pre><code>[main]

[users]

[roles]

[urls]
/index.html = anon
</code></pre>

<p><strong>TestService.java</strong></p>

<pre><code>package com.simple.rest;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import org.apache.shiro.authz.annotation.RequiresRoles;
import org.json.JSONException;

@Path(""/testservice"")
public class TestService {

@Path(""/insert"")
@GET
@Produces(""application/json"")
@RequiresRoles( ""insert"" )
public Response insertNewData() throws JSONException {      
    /**
     * Here insert logic 
     */
    String result = ""Insert data method called"";
    return Response.status(200).entity(result).build();
}

@Path(""/update"")
@GET
@Produces(""application/json"")
@RequiresRoles( ""update"" )
public Response updateNewData() throws JSONException {      
    /**
     * Here Update logic 
     */
    String result = ""Updated data method called"";
    return Response.status(200).entity(result).build();
}

@Path(""/delete"")
@GET
@Produces(""application/json"")
@RequiresRoles( ""delete"" )
public Response deleteNewData() throws JSONException {      
    /**
     * Here delete logic
     */
    String result = ""Delete data method called"";
    return Response.status(200).entity(result).build();
}

@Path(""/searchall"")
@GET
@Produces(""application/json"")
@RequiresRoles( ""admin"" )
public Response searchNewData() throws JSONException {      
    /**
     * Here Search logic 
     */
    String result = ""User have admin rights. So only disply all data"";
    return Response.status(200).entity(result).build();
}  }
</code></pre>

<p><strong>pom.xml</strong></p>

<pre><code>&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
&lt;groupId&gt;SimpleRest&lt;/groupId&gt;
&lt;artifactId&gt;SimpleRest&lt;/artifactId&gt;
&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
&lt;packaging&gt;war&lt;/packaging&gt;

&lt;properties&gt;
    &lt;jdk.version&gt;1.7&lt;/jdk.version&gt;
    &lt;shiro.version&gt;1.2.4&lt;/shiro.version&gt;
    &lt;commons-logging.version&gt;1.2&lt;/commons-logging.version&gt;
    &lt;logback-classic.version&gt;1.1.3&lt;/logback-classic.version&gt;
&lt;/properties&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;${shiro.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
        &lt;version&gt;${shiro.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;commons-logging&lt;/groupId&gt;
        &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
        &lt;version&gt;${commons-logging.version}&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
        &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
        &lt;version&gt;${logback-classic.version}&lt;/version&gt;
    &lt;/dependency&gt;


    &lt;dependency&gt;
        &lt;groupId&gt;asm&lt;/groupId&gt;
        &lt;artifactId&gt;asm&lt;/artifactId&gt;
        &lt;version&gt;3.3.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-bundle&lt;/artifactId&gt;
        &lt;version&gt;1.19&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.json&lt;/groupId&gt;
        &lt;artifactId&gt;json&lt;/artifactId&gt;
        &lt;version&gt;20140107&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
        &lt;version&gt;1.19&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-core&lt;/artifactId&gt;
        &lt;version&gt;1.19&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;

&lt;build&gt;
    &lt;finalName&gt;SimpleRest&lt;/finalName&gt;
    &lt;sourceDirectory&gt;src&lt;/sourceDirectory&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;3.1&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.7&lt;/source&gt;
                &lt;target&gt;1.7&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.4&lt;/version&gt;
            &lt;configuration&gt;
                &lt;warSourceDirectory&gt;WebContent&lt;/warSourceDirectory&gt;
                &lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;&lt;/project&gt;
</code></pre>

<p>Please help me on this.
thanks in advance</p>
","<apache><web-services><rest><authorization><shiro>","0",""
"31872557","Configure Shiro context factory to connect to AD using Windows integrated security","<p>I would like to avoid having a plain text password in the .ini file. I guess it should use Kerberos authentication, but I couldn't find how to do that.</p>
","<active-directory><kerberos><shiro>","0",""
"38395499","<shiro:hasPermission> condition check with two expression","<p>I have two expressions: <code>&lt;%=ABC.XYZ%&gt;</code> &amp; <code>&lt;%=ABC.DEF%&gt;</code> in shiro expression. Now if any of these conditions will match , will proceed further.</p>

<p>Suppose for single condition I am showing this as below:</p>

<pre><code>shiro:hasPermission name=""&lt;%=ABC.XYZ%&gt;"" 

//will proceed further.
</code></pre>

<p>Now for both expression (<code>&lt;%=ABC.XYZ%&gt;</code> and <code>&lt;%=ABC.DEF%&gt;</code>), how I can write it?</p>

<p>I have tried as below, but to no success.</p>

<pre><code>shiro:hasPermission name=""&lt;%=ABC.XYZ%&gt;,&lt;%=ABC.DEF%&gt;"" 
</code></pre>
","<jsp><shiro>","1",""
"44195458","Integrate Multiple Shiro Realms into a Spring Boot environment Java","<p>I have a xml based Apache Shiro SecurityManager and few custom realms (They extend build in realms). I am trying to migrate to Spring Boot, which is mostly annotation based.</p>

<p>I want to configure ALL realms into the security manager easily.Currently, I am able to do it by creating a ShiroConfig.java (annotated by @Configuration) , manually creating the object of each realm in the ShiroConfig and adding it under DefaultWebSecurityManager.setRealms(Collection).</p>

<p><strong>Is there any other way, by which same thing can be achieved by annotation, where I annotate each Realm ,saying it's a realm and all of them will be added under security manager at runtime ?</strong></p>

<ul>
<li><p>Current xml configuration</p>

<p><code>&lt;bean id=""securityManager"" class=""com.abc.xyz.SecurityManager""&gt;
        &lt;property name=""realms""&gt;
            &lt;set&gt;
                &lt;ref component-id=""Realm_1”/&gt; 
                &lt;ref component-id=""Realm_2” /&gt;
                &lt;ref component-id=""Realm_3” /&gt;
                &lt;ref component-id=""Realm_4” /&gt;
            &lt;/set&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
 &lt;bean id=""Realm_1"" class=""com.abc.xyz.Realm_1”&gt;
        &lt;/bean&gt;
     &lt;bean id=""Realm_2"" class=""com.abc.xyz.Realm_2”&gt;
        &lt;/bean&gt;
     &lt;bean id=""Realm_3” class=""com.abc.xyz.Realm_3”&gt;
        &lt;/bean&gt;
     &lt;bean id=""Realm_4” class=""com.abc.xyz.Realm_4”&gt;
        &lt;/bean&gt;</code> </p>

<ul>
<li>Current Spring boot code [which I don't want to repeat for each realm]</li>
</ul></li>
</ul>

<p>@Bean(name=""securityManager"")</p>

<pre><code>public DefaultWebSecurityManager securityManager() {
    DefaultWebSecurityManager manager = new DefaultWebSecurityManager();
    manager.setRealm(userRealm());
    manager.setSessionManager(defaultWebSessionManager());
    return manager;
}
</code></pre>

<p>@Bean
    @DependsOn(value=""lifecycleBeanPostProcessor"")</p>

<pre><code>public Realm_1 userRealm() {
    Realm_1 userRealm = new Realm_1();
    return userRealm;
}
</code></pre>
","<java><spring><spring-boot><shiro>","1",""
"18742204","Shiro Security with Spring Web flow","<p>Can we secure Spring web flow with Shiro security? Please let me know if we can do it. In Spring Web Flow documentation I could find out that Spring web flow can be secured through Spring Security ""secured"" element. Need to know if it is possible with Shiro Security? </p>

<p>Thanks,
Taj</p>
","<spring-webflow><shiro>","0",""
"27423892","Which is the better way to create access policies for a Role in Apache Shiro","<p>I am working with Apache Shiro security framework and I have to apply different access policies to Roles (like effectiveFrom date which means this role is active only after a specific date). </p>

<p>And given the API, the best way i could achieve this was to overinding the protected USER_ROLES_QUERY query string to return me only the roles that have comply with this ""effectiveFrom"" date.</p>

<p>And I added this ""effectiveFrom"" field to ROLES_PERMISSIONS table.</p>

<p>Is there any other more effective way to achieve this?</p>
","<java><shiro>","2",""
"7504724","Finding existing ShiroRoles to add to a New ShiroUser using Grails?","<p>How can I retrieve an existing ShiroRole that I've already created and stored in the database?</p>

<p>I've noticed that you can retrieve an existing ShiroUser by calling ShiroUser.findByUserName(""somename"") but I haven't found a method in ShiroRole that appears to do the same in finding the role by name.</p>

<p>I'm using the <a href=""http://grails.org/plugin/shiro"" rel=""nofollow"">Apache Shiro Grails Plugin</a> </p>

<p>Thanks!</p>
","<java><authentication><grails><shiro>","0","7505178"
"31477722","Tapestry 5.4 exception in ExceptionReport.tml","<p>I've got a question regarding tapestry 5.4. I try to integrate it with tynamo tapestry security and Google App Engine and after some development I started to get these exception when ""something"" in application is not working. I have written ""something"" because problem concerns ExceptionPage (as you can see on stacktrace attached below).
Has anybody faced such a problem?</p>

<p>Of course I can post some configuration files, but since I have no idea what can cause this exception of error page, I not posing any at the moment. </p>

<pre><code>HTTP ERROR 500

Problem accessing /. Reason:

    org.apache.tapestry5.internal.services.RenderQueueException: Render queue error in SetupRender[core/ExceptionReport:loop_0]: Failure reading parameter 'source' of component core/ExceptionReport:loop_0: access denied (""java.lang.RuntimePermission"" ""modifyThreadGroup"") [at classpath:org/apache/tapestry5/corelib/pages/ExceptionReport.tml, line 110]
Caused by:

org.apache.shiro.subject.ExecutionException: org.apache.tapestry5.internal.services.RenderQueueException: Render queue error in SetupRender[core/ExceptionReport:loop_0]: Failure reading parameter 'source' of component core/ExceptionReport:loop_0: access denied (""java.lang.RuntimePermission"" ""modifyThreadGroup"") [at classpath:org/apache/tapestry5/corelib/pages/ExceptionReport.tml, line 110]
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:385)
    at org.tynamo.security.services.impl.SecurityConfiguration.service(SecurityConfiguration.java:54)
    at $HttpServletRequestFilter_12a67d391b5c.service(Unknown Source)
    at $HttpServletRequestHandler_12a67d391b5f.service(Unknown Source)
    at org.apache.tapestry5.internal.gzip.GZipFilter.service(GZipFilter.java:59)
    at $HttpServletRequestHandler_12a67d391b5f.service(Unknown Source)
    at org.apache.tapestry5.internal.services.IgnoredPathsFilter.service(IgnoredPathsFilter.java:62)
    at $HttpServletRequestFilter_12a67d391b59.service(Unknown Source)
    at $HttpServletRequestHandler_12a67d391b5f.service(Unknown Source)
    at org.apache.tapestry5.modules.TapestryModule$1.service(TapestryModule.java:804)
    at $HttpServletRequestHandler_12a67d391b5f.service(Unknown Source)
    at $HttpServletRequestHandler_12a67d391b58.service(Unknown Source)
    at org.apache.tapestry5.TapestryFilter.doFilter(TapestryFilter.java:166)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.api.socket.dev.DevSocketFilter.doFilter(DevSocketFilter.java:74)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.tools.development.ResponseRewriterFilter.doFilter(ResponseRewriterFilter.java:127)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.tools.development.HeaderVerificationFilter.doFilter(HeaderVerificationFilter.java:34)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.api.blobstore.dev.ServeBlobFilter.doFilter(ServeBlobFilter.java:63)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.apphosting.utils.servlet.TransactionCleanupFilter.doFilter(TransactionCleanupFilter.java:43)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.tools.development.StaticFileFilter.doFilter(StaticFileFilter.java:125)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.google.appengine.tools.development.DevAppServerModulesFilter.doDirectRequest(DevAppServerModulesFilter.java:366)
    at com.google.appengine.tools.development.DevAppServerModulesFilter.doDirectModuleRequest(DevAppServerModulesFilter.java:349)
    at com.google.appengine.tools.development.DevAppServerModulesFilter.doFilter(DevAppServerModulesFilter.java:116)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
    at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
    at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
    at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
    at com.google.appengine.tools.development.DevAppEngineWebAppContext.handle(DevAppEngineWebAppContext.java:98)
    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
    at com.google.appengine.tools.development.JettyContainerService$ApiProxyHandler.handle(JettyContainerService.java:503)
    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
    at org.mortbay.jetty.Server.handle(Server.java:326)
    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
    at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)
    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)
    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
</code></pre>
","<java><google-app-engine><exception><tapestry><shiro>","0",""
"41298211","Field Level Permission in Spring Domain Object. View and Edit permission based filtering of object","<p>I am looking for a spring based solution for this problem. I have solved this in crude way but looking for better solution.</p>

<p>I have a client server architecture application. 
    Based on user permission, I am able to :
      get list of fields for loggedin user which he is not permitted to write. 
      get list of fields for loggedin user which he is not permitted to read.</p>

<p>Now, how can I verify that the object to be written into database is as per user permission in an efficient way. I can iterate over fields, check if its value is different from that stored in db and reject accordingly. Is there any effecient way ? </p>

<p>Example: </p>

<p>One domain entity ""Account"" which is stored in MongoDB.</p>

<pre><code>class Account {
 String name;
 String email;
 String mobile;
}
</code></pre>

<p>Corresponding DTO Object to be returned to client</p>

<pre><code>class AccountDto {
 String name;
 String email;
 String mobile;
}
</code></pre>

<p>Two User -> User A, User B </p>

<p>Scenario: 
    User A can edit [ name ] but not email, mobile.
    User A can view [name, email] but not mobile. </p>

<p>How can I design to return only those field which he is permitted to view. I donot want to create numerous DTO based on every user permission.</p>

<p>How can I write a code to check that the Object to be written to database is valid as per permission assigned to loggedin user. I dont want to iterate over fields and check field permission and then discard. Expensive operation.</p>

<p>My solution: Whenever user is going to write to db, I can fetch the existing record , compare with the record he is going to write and reject if field value is changed if he has not that permission. But this adds DB read cost and is not that generic solution.</p>
","<mysql><spring><mongodb><spring-security><shiro>","0",""
"43199733","Subject is null alwasys in Apache Shiro - Maven project","<p>Returns <strong>Null</strong>:</p>

<pre><code>Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
SecurityManager securityManager = factory.getInstance();
SecurityUtils.setSecurityManager(securityManager);
Subject currentUser = SecurityUtils.getSubject();
System.out.println(currentUser.getPrincipal());
</code></pre>

<p>Always it returns null, what am I missing ?
Realm is: <code>org.apache.shiro.realm.jdbc.JdbcRealm</code></p>
","<java><shiro>","0","43239086"
"43558564","JerseyTest with shiro","<p>Instantiating JerseyTest with this class </p>

<pre><code>public class NMAAbstractRestTest extends JerseyTest {

  @Override
  protected Application configure() {
    NMAdaptorApplication application = new NMAdaptorApplication();
    return application;
  }

}
</code></pre>

<p>NMAdaptorApplication constructor.</p>

<pre><code>public NMAdaptorApplication() {
    log.info(""NM-Adaptor-Application is being initilized...."");
    register(NMRestExceptionMapper.class);
    register(ShiroFeature.class);
    register(NMMarshallingFeature.class);
    register(new LoggingFeature(java.util.logging.Logger.getLogger(""nma""), LoggingFeature.Verbosity.PAYLOAD_ANY));
    packages(true, ""com.retailwave.rwos.nma.rest.resource"");
    loadProperties();

}
</code></pre>

<p>while executing the following test method</p>

<pre><code>@Test
public void makeOrder()
{  
   ...
   Entity entity = Entity.entity(orderContent, MediaType.APPLICATION_JSON);
   WebTarget target = target(""customerorders"");
   target.path("""");
   target.queryParam(""cmd"", ""create"");
   target.queryParam(""branchCode"", ""610"");
   arget.property(HttpAuthenticationFeature.HTTP_AUTHENTICATION_BASIC_USERNAME, ""admin"");
   target.property(HttpAuthenticationFeature.HTTP_AUTHENTICATION_BASIC_PASSWORD, ""admin"");
   Response response = target.request().post(entity);
}
</code></pre>

<p>getting the following exception</p>

<blockquote>
  <p>16:34:23.893 ERROR [grizzly-http-server-0] c.r.r.n.e.NMRestExceptionMapper - Exception caught at Mapper : No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
  org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
      at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
      at org.apache.shiro.subject.Subject$Builder.(Subject.java:627)</p>
</blockquote>

<p>I guess its due to Shiro filter which I configured in web.xml </p>

<pre><code> &lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
 &lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 &lt;/filter-mapping&gt;
</code></pre>

<p>while JUnit test this fails. Is there any option to include web.xml in JerseyTest</p>
","<java><jersey-2.0><shiro><jersey-test-framework>","1",""
"37481129","Is it possible to set browser basic authentication with javascript?","<p>I have secured static resources (css, js, png, htmls, ...) I use basic authentication. The user can't get anything unless he is authenticated. </p>

<p>My question : is there any way to create a form and use javascript to set the value of basic auth for the browser ? </p>

<p>Where does the browser store this header (Authorization = Basic username:password) ? </p>

<p>Something like : </p>

<pre><code>$ajax({
     'beforeSend': function(xhr) {
                xhr.setRequestHeader(""Authorization"", ""Basic "" + btoa($(""#user"").val() + "":"" + $(""#pass"").val()))
            }
)}
</code></pre>

<p>works for ajax calls but not for static resources requests !! </p>
","<javascript><basic-authentication><shiro>","2",""
"11325031","Delete user registered with shiro security plugin in grails","<p>i have a form for checking the login and password before delete the user. this one:</p>

<pre><code>&lt;table&gt;
        &lt;g:form action=""deleteUser""&gt;
            &lt;tr&gt;
                &lt;td&gt;&lt;label for=""username""&gt;Login: &lt;/label&gt;&lt;/td&gt;
                &lt;td&gt;&lt;g:textField name=""username""/&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;&lt;label for=""password""&gt;Password: &lt;/label&gt;&lt;/td&gt;
                &lt;td&gt;&lt;g:passwordField name=""password""/&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td colspan=""2""&gt;&lt;g:submitButton name=""delete"" value=""Delete""/&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/g:form&gt;
    &lt;/table&gt;
</code></pre>

<p>how i can do logic for this if password in sha512hash(user registered via shiro plugin). how i can check the password as string from the password form with hash code from db? may i use the authenticate method from DbRealm class, if yes then HOW?</p>

<p>P.S. sorry for my english!</p>
","<grails><grails-2.0><shiro>","1","11332876"
"17891617","Shiro 1.2.2: How to catch permissions of role","<p>I want to know if any method exists that returns a boolean if a role has a particular permission, like this:</p>

<pre><code>boolean roleHasPermission(String role, String permission);
</code></pre>
","<java><security><shiro>","0","17911852"
"27106457","Apache shiro always creates a session in Login page (before a succesfull log-in)","<p>good morning.</p>

<p>I don't know how to avoid this issue: Apache Shiro always creates a new session on every login page request. The behaviour I need is to create a session only after a successful log-in because on the contrary we have a security issue if on every login page request we have a new session.</p>

<p>Searching in Stakoverflow I found a similar issue and the proposal to solve this problem was to configure shiro.ini like this:</p>

<pre><code>/login = authc
/logout = noSessionCreation, logout
/** = noSessionCreation, anon
</code></pre>

<p>But I've tried that and other configurations with no success.</p>

<p>Is there a solution to avoid this?</p>

<p>Any help would be much appreciated.</p>

<p>Thank you very much.</p>
","<session><shiro>","2",""
"39679428","Is There A Generic Way To Search For LDAP Groups With Shiro?","<p>I am using <code>org.apache.shiro.realm.ldap.DefaultLdapRealm</code> to authenticate against LDAP (using <code>ldap://ldap.forumsys.com:389/dc=example,dc=com</code> as an example).</p>

<p>However, when I try to check for Roles it always fails. It turns out that the DefaultLdapRealm returns null when searching for groups.</p>

<pre><code>/**
 * Method that should be implemented by subclasses to build an
 * {@link AuthorizationInfo} object by querying the LDAP context for the
 * specified principal.&lt;/p&gt;
 *
 * @param principals          the principals of the Subject whose AuthenticationInfo should be queried from the LDAP server.
 * @param ldapContextFactory factory used to retrieve LDAP connections.
 * @return an {@link AuthorizationInfo} instance containing information retrieved from the LDAP server.
 * @throws NamingException if any LDAP errors occur during the search.
 */
protected AuthorizationInfo queryForAuthorizationInfo(PrincipalCollection principals,
                                                      LdapContextFactory ldapContextFactory) throws NamingException {
    return null;
}
</code></pre>

<p>There is a <a href=""https://stackoverflow.com/questions/12173492/shiro-jndildaprealm-authorization-against-ldap"">similar question from 2012</a>, however, it looks like a copy of the code from the <a href=""https://github.com/apache/shiro/blob/master/core/src/main/java/org/apache/shiro/realm/activedirectory/ActiveDirectoryRealm.java#L158"" rel=""nofollow noreferrer"">ActiveDirectoryRealm</a>.</p>

<p>Does <em>everyone</em> who wants to use LDAP with groups using Shiro have to write a custom Realm? </p>

<p>Couldn't the DefaultLdapRealm take a property that configures the search filter for groups but doesn't require extra code (like the userDNTemplate is used for login)?</p>

<p>Does such a Realm already exist in a maven dependency?</p>
","<ldap><shiro>","0",""
"39724015","The org.apache.shiro.session.mgt.DelegatingSession implementation requires that the SessionKey argument returns a non-null sessionId","<p>We've been using Apache Shiro for some time, with no problems, but have recently noticed users getting the following error when they attempt to login or just after they logout of our application:</p>

<p><strong>java.lang.IllegalArgumentException: The org.apache.shiro.session.mgt.DelegatingSession implementation requires that the SessionKey argument returns a non-null sessionId to support the Session.getId() invocations.</strong></p>

<p>What could be causing this?</p>
","<java><apache><shiro>","0","39724016"
"31706196","Override binding of Authentication class in Shiro with Guice","<p>The problem I encountered is connected with message of a type:</p>

<pre><code>OPTIONS http://localhost:8080
XMLHttpRequest cannot load http://localhost:8080/. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 401.
</code></pre>

<p>So basically it is an issue of our Angular JS 1.4.3 frontend sending <code>OPTIONS</code> request to the server <strong>before</strong> actual request. Problem occurs, because there is no way to add authentication data to this request and it is being blocked by Apache Shiro as it tries to access protected address.</p>

<p>Since I can not fix it on Angular side, I thought it would be easy on the server side. Would be, but we use <strong>Guice 4</strong>.</p>

<p>In Guice config we properly set up Shiro:</p>

<pre><code>install(new EEShiroModule(getServletContext()));
filter(""/services/*"").through(GuiceShiroFilter.class);
</code></pre>

<p>so far so good. But now I want to make a hole in the system, allowing the <code>OPTIONS</code> request not to be authenticated. I have found a similar approach here: <a href=""http://blog.awolski.com/cors-dart-dropwizard-and-shiro/"" rel=""nofollow"">http://blog.awolski.com/cors-dart-dropwizard-and-shiro/</a>.</p>

<p>At the end I am supposed to <em>override</em> the <code>BasicHttpAuthenticationFilter</code> but it is not so simple as it would be in Spring or Ini configuration because I can not override class binding.</p>

<p>What would be the best approach? Thanks!</p>
","<angularjs><web-services><guice><shiro>","2",""
"39398555","Configure JTDS datasource for Apache Shiro","<p>I recently started to program a JSF application. I use ecplise neon with maven3 and jetty webserver for fast test deployment. Everything is fine so far, but now I wanted to try apache shiro, since it seems to be a pretty cool and good security framework.</p>

<p>Now since I user ms sql server i use the jtds db driver. But unfortunately I am not able to get shiro working, because of the following error:</p>

<blockquote>
  <p>[WARNING] Failed startup of context o.e.j.m.p.JettyWebAppContext@6ea04618{/,[file:///E:/Dev/JSF/Lister/Lister/src/main/webapp/, jar:file:///C:/Users/Dethrall/.m2/repository/com/sun/faces/jsf-impl/2.2.2/jsf-impl-2.2.2.jar!/META-INF/resources],UNAVAILABLE}{file:///E:/Dev/JSF/Lister/Lister/src/main/webapp/}
  org.apache.shiro.config.ConfigurationException: Property 'database' does not exist for object of type net.sourceforge.jtds.jdbcx.JtdsDataSource.</p>
</blockquote>

<p>Especially interesting is the portion ""Property 'database' does not exist...""
So i looked in the according javadoc and there is indeed no property database.</p>

<p>This brings us down to my question. How am I supposed to configure a jtds datasource in the shiro.ini. If anyone has any suggestions it would be greatly appreciated!</p>

<p>Sorry btw cause I am a little overwhelmed with all this new stuff like maven, jsf, shiro, jetty and so on...</p>

<p>web.xml</p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://java.sun.com/xml/ns/javaee"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" version=""2.5""&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.STATE_SAVING_METHOD&lt;/param-name&gt;
        &lt;param-value&gt;client&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;context-param&gt;
        &lt;param-name&gt;javax.servlet.jsp.jstl.fmt.localizationContext&lt;/param-name&gt;
        &lt;param-value&gt;resources.application&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;com.sun.faces.config.ConfigureListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.DEFAULT_SUFFIX&lt;/param-name&gt;
        &lt;param-value&gt;.xhtml&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
        &lt;param-value&gt;Development&lt;/param-value&gt;
    &lt;/context-param&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
        &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
        &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>pom.xml</p>

<pre><code>...

&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;${shiro.version}&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;${shiro.version}&lt;/version&gt;
&lt;/dependency&gt;

...
</code></pre>

<p>shiro.ini</p>

<pre><code>[main]

#authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /faces/login.xhtml
authc.successUrl = /faces/users.xhtml
logout.redirectUrl = /faces/users.xhtml

ds = net.sourceforge.jtds.jdbcx.JtdsDataSource
ds.serverName = localhost
ds.portNumber = 1434
ds.user = lister
ds.password = 1234
ds.database = Lister

sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password FROM trs_sec_t_users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role FROM trs_sec_t_roles WHERE username = ?

#jdbcRealm.credentialsMatcher = $sha256Matcher


[users]
#admin = admin, ROLE_ADMIN
#root = 1234, ROLE_ADMIN

[roles]
#ROLE_ADMIN = *

[urls]
/faces/users.xhtml = authc
</code></pre>
","<java><maven-3><shiro><jtds>","0","39417138"
"39520080","Correct configuration for REST endpoints in Shiro","<p>My original post is <a href=""https://stackoverflow.com/questions/39381112/shiro-stormpath-via-rest"">here</a></p>

<p>I am trying to protect a set of REST endpoints with Shiro. My theory is that if I pass a JWT with my REST request, that I can use Shiro (via annotations) to secure my endpoints.</p>

<p>I've create my endpoints like this (for example):</p>

<pre><code>@GET
@Produces(MediaType.APPLICATION_JSON)
@Path(""status/{companyId}"")
@RequiresAuthentication
@RequiresRoles(""SomeRole"")
public Response getStatus(@PathParam(""companyId"") int companyId){
  ... do stuff ...
}
</code></pre>

<p>I'm expecting that if I call the endpoint without authenticating, I will get a HTTP 401 error. However, the method is called successfully if the JWT is not supplied <em>as it would be when there is no security on it at all</em>. </p>

<p>I assume then that my Shiro config is incorrect. Since this is strictly a 'backend' application, I have no use for the Shiro/Stormpath configurations that apply to anything 'front-end' related (such as loginURLs, etc.)</p>

<p>Here is my shiro.ini :</p>

<pre><code>[main]
#ERRORS IF UNCOMMENTED
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $cacheManager
#stormpathClient.cacheManager = $cacheManager

# NOT NEEDED?
#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager = $sessionManager
#securityManager.sessionManager.sessionIdCookieEnabled = false
#securityManager.sessionManager.sessionIdUrlRewritingEnabled = false

[urls]
/** = rest
</code></pre>

<p>This configuration lets every request through (as described above).</p>

<p>If I uncomment the [main] section, I get <code>IllegalArgumentException: Configuration error.  Specified object [stormpathClient] with property [cacheManager] without first defining that object's class.  Please first specify the class property first, e.g. myObject = fully_qualified_class_name and then define additional properties.</code></p>

<p>What I need to figure out is what is the correct minimum Shiro configuration for REST endpoints (and ONLY REST endpoints) so I can allow access with a JWT.</p>

<p>Thanks for any help.</p>
","<shiro>","0","39538160"
"22065221","Suppress rendering a UICommand when action method is not accessible to current user?","<p>Here's my problem: when rendering a facelet, I don't want to display buttons and links that will execute actions the currently logged in user is not allowed to execute.</p>

<p>What the user <em>is</em> allowed to execute is annotated with <code>@RequiresPermissions</code> (from shiro-core) and <code>@ShiroSecured</code> (from <a href=""http://balusc.blogspot.de/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html"" rel=""nofollow"">http://balusc.blogspot.de/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html</a>).</p>

<p>So a backing bean might look like this:</p>

<pre><code>@Named @ViewScoped
public class MyBean implements Serializable {
    @ShiroSecured @RequiresPermissions({ ""user:create"" })
    public void createUser() {
        // do stuff
    }
}
</code></pre>

<p>Now, I can replicate this authorization logic in my view like this (I've implemented a subset of shiro's <code>Subject</code> interface for the <code>user</code> object since the EL-resolver gets confused on the original one...):</p>

<pre><code>&lt;h:commandButton id=""createUserBtn"" action=""#{myBean.createUser}"" 
    value=""create"" rendered=""#{user.isPermitted('user:create')}"" /&gt;
</code></pre>

<p>Obviously, this is duplication I'd like to avoid. I don't think I'm the first to try this, so here goes asking: how do I prevent such a button or link from displaying without explicitly specifying the <code>rendered</code> attribute?</p>
","<jsf-2><authorization><shiro><jsf-2.2>","1",""
"40741096","Zeppelin Authentication has a wrong ticket #","<p>I currently the latest zeppelin source running in a master server with HDP 2.5, System is CENTOS 7.2. I have also a worker server. Under the master server, the following entry inside the Zeppelin log: </p>

<p>NotebookServer.java[onMessage]:169) - PING message: invalid ticket c89ae223-65ac-2222-1111-fa46122bafec != fbffe895-1111-1111-8d50-67c2b8fbfbf6</p>

<p>and on the browser I can see a JS error with invalid :
JSESSIONID=6c89ae223-65ac-2222-1111-fa46122bafec</p>

<p>So, If I restart the browser in incognito mode the issues does not happen in the browser, but I can still see the log entry in the server. It will remain there until I restart all services and kill all connections.</p>

<p>I ended up disabling the authentication and now the issue is gone (but I have no authentication)</p>

<p>On the other side, the server is behind 2 proxies, one faces the internet and the other a LAN. I am using a similar proxy configuration as recommended by the guide, the only difference is that I am using a url rewrite.</p>

<p>so, the question is: how can I avoid that issue? How can I flush the current sessions of Zeppelin and force a re-login?</p>

<p>Thanks, </p>
","<nginx><shiro><apache-zeppelin>","0",""
"41311212","Annotation based security restriction does not work for web socket triggered method calls","<p>I did some research on this, but I couldn't find the solution.</p>

<p>I have a class like this </p>

<pre><code>@Stateless
class ConfigBean {
  @RequiresRole(""administrator"")
  public void reloadConfiguration(){
     ......
  }
}
</code></pre>

<p>and I have a JAX-RS (jersey) service as below.</p>

<pre><code>@Path(""config"")
class ConfigService{

  @EJB
  ConfigBean config;

  @Get
  @Path(""reload"")
  public void reload(){ 
     config.reloadConfiguration();
  }
}
</code></pre>

<p>This will work properly on calling API <code>/Test/config/relaod</code> (i.e only work with administrator user).</p>

<p>But the below code does not work as expected (i.e Normal user can trigger the reload config method),</p>

<pre><code>@ServerEndpoint(""/socket"") 
public class EchoServer {
/**
 * @OnOpen allows us to intercept the creation of a new session.
 * The session class allows us to send data to the user.
 * In the method onOpen, we'll let the user know that the handshake was 
 * successful.
 */

@EJB
ConfigBean config;

@OnOpen
public void onOpen(Session session){
    System.out.println(session.getId() + "" has opened a connection""); 
    try {
        session.getBasicRemote().sendText(""Connection Established"");
    } catch (IOException ex) {
        ex.printStackTrace();
    }
}

/**
 * When a user sends a message to the server, this method will intercept the message
 * and allow us to react to it. For now the message is read as a String.
 */
@OnMessage
public void onMessage(String message, Session session){
    System.out.println(""Message from "" + session.getId() + "": "" + message);
    try {
        if(message.equalsIgnoreCase(""reloadConfig"")){
           config.reloadConfiguration();
        }
    } catch (IOException ex) {
        ex.printStackTrace();
    }
 }

/**
 * The user closes the connection.
 * 
 * Note: you can't send messages to the client from this method
 */
@OnClose
public void onClose(Session session){
    System.out.println(""Session "" +session.getId()+"" has ended"");
   }
}
</code></pre>
","<java><security><websocket><annotations><shiro>","8",""
"29495163","Apache Shiro store token in session","<p>I have a Grails application that interfaces with a restful services to authenticate and data retrieval. I need to implement user authentication using Shiro for the user to enter id/password which is then passed on to authentication endpoint of the restful service and after successful validation will the respond with a token. This token needs to be stored somewhere securely (Shiro session?) to used later for subsequent calls to other endpoints of the restful service. Also, how would it work with session replication in a HA setup?</p>

<p>I am trying to find a secured approach to store token which should be available until the user is logged in but should be destroyed on logout.</p>

<p>Just to add - this application will be secured via SSL.</p>
","<grails><shiro>","0",""
"40967528","how to save attributes of Shiro session in database?","<p>I want to save certain information at session attribute and want to get it back after sometime or next operation. So want to save an object at session attribute in database. How can I do it?</p>
","<shiro>","0",""
"26717796","Role-specific login: override getUnauthorizedURL() in shiro / tapestry-security","<p>How would one redirect a user to a specific login page depending on the role with <strong>shiro / tapestry-security</strong>?</p>

<p>I've tried to override the <code>getUnauthorizedURL</code> method in order to achieve that, some things along the lines of this, but obviously, there seems more to it than I understand:</p>

<pre><code>@RequiresRoles(""foo"")
public class foobar {

  public String getUnauthorizedURL() {
    return ""foobar_login_url"";
  }
}
</code></pre>
","<java><security><tapestry><shiro>","0","26760663"
"42046187","Apache Shiro - Browser URL only works when using the website to navigate","<p>I'm using Java (maven) for the backend and Angular 2 for the frontend with Shiro.  I can navigate to different URLs as long as I use the website.  Entering the URL manually causes a 404 error.  </p>

<p>I'm not sure if the problem is with Angular (since it uses a single index.html page) or it's with the <code>[URL]</code> section in shiro.ini.</p>

<p>Leaving the <code>[URL]</code> section empty or adding <code>/index.html = anon</code> continues to cause the same problem.  </p>

<p>Also, using <code>authc</code> redirects me to login.jsp. </p>

<p>How can I allow access to every route regardless of the users status/role?</p>
","<angular><angular2-routing><shiro>","0","42070649"
"44840245","Shiro setUnauthorizedUrl(""/403"") didn't work","<p>I'm using Shiro in my SpringBoot project. This is my code:</p>

<pre><code>@Configuration
public class ShiroConfiguration {

    @Bean
    public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) {

        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();
        shiroFilterFactoryBean.setSecurityManager(securityManager);

        Map&lt;String, String&gt; filterChainDefinitionMap = new LinkedHashMap&lt;&gt;();
        filterChainDefinitionMap.put(""/logout"", ""logout"");
        filterChainDefinitionMap.put(""/**"", ""authc"");

        shiroFilterFactoryBean.setLoginUrl(""/login"");
        shiroFilterFactoryBean.setSuccessUrl(""/index"");
        shiroFilterFactoryBean.setUnauthorizedUrl(""/403"");

        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);
        return shiroFilterFactoryBean;
    }


    @Bean
    public SecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(myShiroRealm());
        return securityManager;
    }

    @Bean
    public MyShiroRealm myShiroRealm() {
        MyShiroRealm myShiroRealm = new MyShiroRealm();
        myShiroRealm.setCredentialsMatcher(hashedCredentialsMatcher());
        return myShiroRealm;
    }

    @Bean
    public HashedCredentialsMatcher hashedCredentialsMatcher() {
        HashedCredentialsMatcher hashedCredentialsMatcher = new HashedCredentialsMatcher();
        hashedCredentialsMatcher.setHashAlgorithmName(""md5"");
        hashedCredentialsMatcher.setHashIterations(2);
        return hashedCredentialsMatcher;
    }

    @Bean
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(SecurityManager securityManager) {
        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();
        advisor.setSecurityManager(securityManager);
        return advisor;
    }
}
</code></pre>

<p>my Realm code:</p>

<pre><code>public class MyShiroRealm extends AuthorizingRealm {

    @Resource
    private UserInfoService userInfoService;

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {

        String username = (String) token.getPrincipal();
        UserInfo userInfo = userInfoService.findByUsername(username);

        if (userInfo == null) {
            return null;
        }

        SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(
                userInfo, //用户名
                userInfo.getPassword(), //密码
                ByteSource.Util.bytes(userInfo.getCredentialsSalt()), //salt=username+salt
                getName() //realm name
        );

        return authenticationInfo;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {

        SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();
        UserInfo userInfo = (UserInfo) principals.getPrimaryPrincipal();

        for (SysRole role: userInfo.getRoleList()) {
            authorizationInfo.addRole(role.getRole());
            for (SysPermission p: role.getPermissions()) {
                authorizationInfo.addStringPermission(p.getPermission());
            }
        }

        return authorizationInfo;
    }
}
</code></pre>

<p>I have write the code of <code>shiroFilterFactoryBean.setUnauthorizedUrl(""/403"");</code>,but it didn't work, i just got the AuthorizationException in Console.</p>

<p>SomeOne said that <code>authc</code> doesn't support this feature, because of the code in Shiro:</p>

<pre><code>private void applyUnauthorizedUrlIfNecessary(Filter filter) {
    String unauthorizedUrl = this.getUnauthorizedUrl();
    if(StringUtils.hasText(unauthorizedUrl) &amp;&amp; filter instanceof AuthorizationFilter) {
        AuthorizationFilter authzFilter = (AuthorizationFilter)filter;
        String existingUnauthorizedUrl = authzFilter.getUnauthorizedUrl();
        if(existingUnauthorizedUrl == null) {
            authzFilter.setUnauthorizedUrl(unauthorizedUrl);
        }
    }

}
</code></pre>

<p>but how can it work if i use <code>authc</code>? anyone can help me?</p>
","<spring-boot><shiro>","0",""
"28243080","Shiro mock subject and roles","<p>Is there an example on how to mock a subject and roles in junit? I would like to mock the subject with a specific set of roles. This <a href=""http://shiro.apache.org/testing.html"" rel=""nofollow"">link</a> doesn't explain how to accomplish this task. Thanks</p>
","<shiro>","1",""
"24525419","Avoiding multiple JSESSIONIDs in a Jetty / OSGI / Shiro environment","<p>Im developing a java application with OSGI and Shiro, using Jetty as the web container.
While navigating through my apllication i recognized that for different paths / osgi modules I get different JSESSIONIDs. I spend hours searching the web and debugging and could not find any solution.
My SecurityManager is shared between the modules with an osgi service.</p>

<p>My Shiro config:</p>

<pre><code>    [main]
    shiro.loginUrl = /security/ui/redirect?redirectTo=login
    shiro.successUrl = /UserManagement.html

    credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
    credentialsMatcher.storedCredentialsHexEncoded = false
    credentialsMatcher.hashIterations = 1024

    upRealm = com.sap.sse.security.UsernamePasswordRealm
    upRealm.credentialsMatcher = $credentialsMatcher

    oauthRealm = com.sap.sse.security.OAuthRealm

    securityManager.realms = $upRealm, $oauthRealm

    sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
    securityManager.sessionManager = $sessionManager

    sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
    securityManager.sessionManager.sessionDAO = $sessionDAO

    cacheManager = com.[...].SecurityCacheManager
    securityManager.cacheManager = $cacheManager

    [urls]
    /Login.html = anon
</code></pre>

<p>I tried different SessionDAOs and different CacheManager this didn't help either.</p>

<p>The SecurityManager is loaded with the following code (shiroConfiguration is the loaded Ini-file)</p>

<pre><code>    Factory&lt;SecurityManager&gt; factory = new WebIniSecurityManagerFactory(shiroConfiguration);
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>How can I avoid those multiple JSESSIONIDs?</p>
","<java><session><jetty><osgi><shiro>","1",""
"26413555","how can I use an existing realm with shiro?","<p>I have a simple question.. can I use an existing realm in glassfish with the Shiro framework?
I noticed the class org.apache.shiro.realm.jndi.JndiRealmFactory but I have had no luck trying to look up a realm through JNDI to glassfish.. I have this in shiro.ini:</p>

<pre><code>[main]  
realmFactory = org.apache.shiro.realm.jndi.JndiRealmFactory   
realmFactory.jndiNames = java://app/realms/file
</code></pre>

<p>how can I do it?
thanks in advance</p>

<p>jmann</p>
","<glassfish><shiro>","1",""
"34594410","Apache Shiro Multirealm Authentication + find out which realm did the authentication","<p>I have 2 possible realms to authenticate my users in my webapplication.</p>

<p>here are a few lines from my shiro.ini:</p>

<pre><code>securityManager.realms = $ldapRealm, $saltedJdbcRealm
strategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $strategy
</code></pre>

<p>Authentication works fine for both realms and the FirstSuccessfulStrategy works fine as well.</p>

<p>In my custom AuthenticationFilter within the <code>executeLogin()</code> method I have this code to do the login:</p>

<pre><code>Subject currentUser = SecurityUtils.getSubject();
UsernamePasswordToken token = new UsernamePasswordToken(username, password);
currentUser.login(token);
</code></pre>

<p>How can I now determine which realm was resposible for the authentication after the .login() method is executed?</p>

<p>If the user was authenticated via the LDAP Realm I would like to get some more information about the user from the LDAP.</p>

<p>Does anyone know how this can be done?</p>
","<shiro>","0",""
"46198326","How to add role authorization using Apache Shiro with LDAP Authentication","<p>I'm new to Apache Shiro and LDAP.
I'm trying to create a simple LDAP Authentication using Apache shiro. The authentication worked, but I'm unable to add roles to the user. Below is the shiro.ini file i'm using:</p>

<pre><code>[main]
realm = org.apache.shiro.realm.ldap.JndiLdapRealm
realm.contextFactory.url = ldap://localhost:389
contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory
contextFactory.systemUsername = cn=Manager,dc=maxcrc,dc=com
contextFactory.systemPassword = secret
[roles]
People = *
role = *
Administrator = *
</code></pre>

<p>And below is the java class file:</p>

<pre><code>import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.config.IniSecurityManagerFactory;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.Factory;

import java.util.ArrayList;
import java.util.List;

import javax.naming.NamingException;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.ldap.JndiLdapRealm;
import org.apache.shiro.realm.ldap.LdapContextFactory;
import org.apache.shiro.subject.PrincipalCollection;

public class LDAPTest extends JndiLdapRealm 
{

public static final String userName = ""uid=aarippa,ou=People,dc=maxcrc,dc=com"";
//public static final String userName = ""uid=arjunarippa"";
public static final String password = ""SomePassword"";

public static void main(String[] args)
{
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""N:\\workspace\\LdapAuthentication\\src\\auth.ini"");
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager( securityManager );
    System.out.println( ""userName is  : "" +userName);
    System.out.println( ""password is  : "" +password);
    //UsernamePasswordToken token = new UsernamePasswordToken( ""cn=Panji Pratomo,ou=people,dc=maxcrc,dc=com"", ""SomePassword"" );
    UsernamePasswordToken token = new UsernamePasswordToken( userName,password );
    Subject currentUser = SecurityUtils.getSubject();
    //System.out.println(currentUser);

    try
    {
        currentUser.login( token );
        System.out.println( ""We've authenticated! :)"" );
    }
    catch ( AuthenticationException e )
    {
        System.out.println( ""We did not authenticate :("" );
        e.printStackTrace();
    }


    if ( currentUser.hasRole( ""people"" ) )
    {
        System.out.println( ""We have the role! :)"" );
    }
    else
    {
        System.out.println( ""We do not have the role :("" );
    }
    if ( currentUser.isPermitted( ""foo.blah"" ) )
    {
        System.out.println( ""We're authorized! :)"" );
    }
    else
    {
        System.out.println( ""We are not authorized :("" );
    }
}
}
</code></pre>

<p>I'm unable to understand how to add roles to the the users. The authentication is working fine but getting the error message as ""We do not have the role :("" and ""We are not authorized :(""
Currently I'm using an OpenLDAP server and below is one .LDIF entry I've made in the server:</p>

<pre><code>dn: uid=aarippa,ou=people,dc=maxcrc,dc=com
objectclass: inetOrgPerson
cn: Arjun Arippa
cn: A Arippa
cn: Aarippa
sn: fahmi
uid: aarippa
userpassword: SomePassword
carlicense: HISCAR 123
homephone: 555-111-2222
mail: f.satrio222@gmail.com
mail: f.satrio222@mysamz.com
mail: guest108222@fif.co.id
description: tukang ngulik ga jelas
ou: SOA
</code></pre>

<p>Can anyone please let me know if i've done the right thing by adding the correct roles and correct me if am wrong. Am i missing something in methods written?</p>

<p>Thanks,
Arjun</p>
","<java><apache><authentication><ldap><shiro>","0","46208178"
"36022705","Object stored in session will not match same class after redeploy of project","<p>I have two classes <code>Stream</code> and <code>Lake</code> that extend <code>WaterBody</code>. The <code>Stream</code> or <code>Lake</code> are stored in the session managed by Apache Shiro 1.2.4 to be used later.</p>

<pre><code>WaterBody lake = new Lake();
session.setAttribute(""water"", lake);`
</code></pre>

<p>And retrieve it by using</p>

<pre><code>WaterBody water = (WaterBody) session.getAttribute(""water"");
</code></pre>

<p>On a fresh start of the Wildfly 9.0.2 server I can store the store the objects just fine to the session and retrieve them just fine. It does not matter if I am storing a <code>Lake</code> or <code>Stream</code> to the <code>water</code> session attribute. However after a redeploy of the project without restarting the Wildfly server I can store to the session attribute <code>water</code> the same class type only as before ie: can't store <code>Lake</code> first and redeploy then store <code>Stream</code>. I get this error:</p>

<pre><code> java.lang.ClassCastException: cannot assign instance of [Lfwp.fish.water.HydroUnit; to field fwp.fish.water.WaterBody.hucs of type [Lfwp.fish.water.HydroUnit; in instance of fwp.fish.water.Stream
</code></pre>

<p>The class <code>WaterBody</code> has getters and setters for a private field of type <code>HydroUnit</code> and since this is inheritied by both <code>Stream</code> and <code>Lake</code> the error makes little sense.</p>

<p>If on a fresh start the <code>water</code> session attribute is assigned to both the same class before and after the redeploy it will assign the value to the session variable just fine and then on retrieval it will throw this error:</p>

<pre><code>java.lang.ClassCastException: fwp.fish.water.Lake cannot be cast to fwp.fish.water.WaterBody
</code></pre>

<p>Since <code>Lake</code> extends <code>WaterBody</code> it should not have an issue.</p>

<p>With Shiro we are using the ehcache 2.9 for the session cache. </p>

<p>It seems like the <code>serialVersionUID</code> is being ignored by the cache or it's generating a different one itself behind the scenes and it thinks that the classes have changed when they have not between redeployments.</p>

<p>The classes:</p>

<pre><code>public class WaterBody implements Serializable {
    private static final long serialVersionUID = -5481729151007010163L;
    private int id;
    private HydroUnit[] hucs;

    public WaterBody() {
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public HydroUnit[] getHucs() {
        return hucs;
    }

    public void setHucs(HydroUnit[] hucs) {
        this.hucs = hucs;
    }
}

public class Lake extends WaterBody {
    private static final long serialVersionUID = -925557850476426686L;
    private String centroidLatitude;
    private String centroidLongitude;

    public Lake(){
        super();    
    }

    public String getCentroidLatitude() {
        return centroidLatitude;
    }

    public void setCentroidLatitude(String centroidLatitude) {
        this.centroidLatitude = centroidLatitude;
    }

    public String getCentroidLongitude() {
        return centroidLongitude;
    }

    public void setCentroidLongitude(String centroidLongitude) {
        this.centroidLongitude = centroidLongitude;
    }
}

public class Stream extends WaterBody {
    private static final long serialVersionUID = 2556033593701784053L;
    private String mouthLatitude;
    private String mouthLongitude;

    public Stream(){
         super();       
    }

    public String getMouthLatitude() {
        return mouthLatitude;
    }

    public void setMouthLatitude(String mouthLatitude) {
        this.mouthLatitude = mouthLatitude;
    }

    public String getMouthLongitude() {
        return mouthLongitude;
    }

    public void setMouthLongitude(String mouthLongitude) {
        this.mouthLongitude = mouthLongitude;
    }
}
</code></pre>
","<java><session><wildfly><ehcache><shiro>","1","37554369"
"28198578","Apache Shiro does not retain user in EJB application","<p>I'm trying to use apache shiro in a ear application. My idea is to use shiro in the ejb backend and then provide services to the war frontend, because I want all permission related stuff to be managed in the backend.</p>

<p>For authenticating I'm using a JpaRealm class:</p>

<pre><code>public class JpaRealm extends AuthorizingRealm {
  private static final Logger LOG = Logger.getLogger(JpaRealm.class.getName());

  private static final String AUT_USUARIO_EJB = ""java:global/Engine/Engine-ejb/AutUsuarioServices"";
  private AutUsuarioServices autUsuarioServices;

  protected void lookup() {
    try {
      this.autUsuarioServices = (AutUsuarioServices) new InitialContext().lookup(AUT_USUARIO_EJB);
    } catch (NamingException ex) {
      LOG.log(Level.SEVERE, null, ex);
    }
  }  

  public JpaRealm() {
    setName(""JpaRealm""); 
  }

  @Override
  protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken) throws AuthenticationException {
    try {
      this.lookup();
      UsernamePasswordToken token = (UsernamePasswordToken) authcToken;
      AutUsuario usuario = autUsuarioServices.cargarUsuario(token.getUsername());
      if (usuario != null) {
        return new SimpleAuthenticationInfo(usuario.getIdUsuario(), usuario.getContrasena(), this.getName());
      } else {
        return null;
      }
    } catch (Exception ex) {
      LOG.log(Level.SEVERE, null, ex);
      return null;      
    }
  }

  @Override
  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    try {
      this.lookup();      
      Integer id = (Integer) principals.fromRealm(getName()).iterator().next();
      AutUsuario usuario = autUsuarioServices.cargarUsuario(id);
      if (usuario != null) {
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
        for (AutRol rol : usuario.getAutRolCollection()) {
          info.addRole(rol.getNombre());
          ArrayList&lt;String&gt; permisos = new ArrayList&lt;&gt;();
          for (AutPermiso permiso : rol.getAutPermisoCollection()) {
            permisos.add(permiso.getPermiso());
          }
          info.addStringPermissions(permisos);
        }
        return info;          
      } else {
        return null;
      }
    } catch (Exception ex) {
      LOG.log(Level.SEVERE, null, ex);
      return null;
    }
  }

}
</code></pre>

<p>AutUsuarioServices is a @Stateless bean that use JPA for loading and persisting users, so there's no mistery. 
In my ejb I have an ejb that, in my idea, have to manage all the user-related stuff:</p>

<pre><code>@Stateless
@LocalBean
public class UserServices implements UserServicesRemote {
  private static final Logger LOG = Logger.getLogger(UserServices.class.getName());

  private SecurityManager securityManager;  
  private String username;

  @PostConstruct
  public void init() {
    LOG.log(Level.INFO, ""*** UserServices:PostConstruct"");
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""/opt/shiro.ini"");
    this.securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
  }

  @Override
  public boolean login(String login, String contrasena) {
    Subject subject = SecurityUtils.getSubject();
    if (subject.isAuthenticated()) {
      return true;
    } else {
      this.username = null;
      UsernamePasswordToken token = new UsernamePasswordToken(login, contrasena);
      token.setRememberMe(true);
      try {
        subject.login(token);
        this.username = login;
        return true;
      } catch (Exception e) {
      }
    }
    return false;
  }

  @Override
  public String getUsuario() {
    Subject subject = SecurityUtils.getSubject();
    return ""["" + subject.getPrincipal() + "" "" + subject.isAuthenticated() + ""]"" + this.username;
  }

}
</code></pre>

<p>Finally, in my war I have a UserBean that use UserServices, this baking bean is used in the login page and in works:</p>

<pre><code>@Named
@SessionScoped
public class UserBean implements Serializable {
  private static final Logger LOG = Logger.getLogger(UserBean.class.getName());

  private String loginFormUser;
  private String loginFormPass;

  @EJB
  private UserServicesRemote userServices;

  public String getLoginFormUser() {
    return loginFormUser;
  }

  public void setLoginFormUser(String loginFormUser) {
    this.loginFormUser = loginFormUser;
  }

  public String getLoginFormPass() {
    return loginFormPass;
  }

  public void setLoginFormPass(String loginFormPass) {
    this.loginFormPass = loginFormPass;
  }

  public String getUsername() {
    return userServices.getUsuario();
  }

  public String login() {
    LOG.log(Level.INFO,""*** login ""+loginFormUser+"" ""+loginFormPass);
    userServices.login(this.loginFormUser, this.loginFormPass);
    // @TODO
    return ""ok"";
  }

}
</code></pre>

<p>When I call the login method it works correctly, usign jpa to recall the user data from the database etc, and I have a correctly logged user: subsequent calls to UserServices.login tell me the user is already logged.
Anyway if I put #{userBean.username} in any other page I always get null subject.getPrincipal() and false subject.isAuthenticated().</p>

<p>I've read a lot of examples and documentation, but I'm feeling lost. I wonder if my approach is correct...</p>

<p>I appreciate suggestion and pointers to examples that uses shiro in an ejb backend.</p>

<p>Thank you</p>
","<java-ee><jpa><ejb><shiro>","1",""
"41143860","buji-pac4j integartion with Apache Shiro and identityServer3","<p>I am trying to learn integration of buji-pac4j. I already tried demo version which is provided on following URL <a href=""https://github.com/pac4j/buji-pac4j-demo"" rel=""nofollow noreferrer"">https://github.com/pac4j/buji-pac4j-demo</a> but it is seem to be working for me partially. (there is some issue from ops side to give me correct call back url). </p>

<p>So far I can notice handshake is happening using demo code.</p>

<p>I’m now trying other way as it is been provided in the documentation that is <strong>client</strong>. </p>

<p>As per documentation:
A Client represents an authentication mechanism. It performs the login process and returns (if successful) a user profile.</p>

<p>My class has now following details</p>

<pre><code>OidcConfiguration oidcConfiguration = new OidcConfiguration();
oidcConfiguration.setClientId(""someClientIDString"");
oidcConfiguration.setSecret(""someClientSecretString"");
oidcConfiguration.setDiscoveryURI(""https://development.domainName.com/projectName/idp/.well-known/openid-configuration"");
oidcConfiguration.setScope(""openid email hrauser hrainfo"");
oidcConfiguration.setCallbackUrl(""http://localhost:8080/callback""); 

OidcClient oidcClient = new OidcClient(oidcConfiguration);
Config config = new Config(oidcClient);
config.addAuthorizer(""admin"", new RequireAnyRoleAuthorizer(""ROLE_ADMIN""));
OidcAuthenticator OidcAuthenticator = new  OidcAuthenticator(oidcConfiguration); 
</code></pre>

<p>Above is mostly setting variable in the class,
What am not able to figure is out how above will actually go and talk to openID server.  </p>

<p>What all part I am missing.</p>

<p>I am going through the documentation provided on <a href=""https://github.com/bujiio/buji-pac4j"" rel=""nofollow noreferrer"">https://github.com/bujiio/buji-pac4j</a> but it is not clear to me on the flow. </p>

<p>Any kind of help or direction will be appreciated. </p>

<p>PS: I am quite new in this area so request to bear with me.</p>
","<shiro><identityserver3>","0",""
"41924741","using shiro with stormpath for jax-rs rbac","<p>I'm attempting to adapt this excellent stormpath post  by Brian Demers -  <a href=""https://stormpath.com/blog/protecting-jax-rs-resources-rbac-apache-shiro"" rel=""nofollow noreferrer"">https://stormpath.com/blog/protecting-jax-rs-resources-rbac-apache-shiro</a> - to my own purposes and so far it works pretty well - except that now I want to add stormpath for user/role management rather then having the users in a shiro-ini file. </p>

<p>I'm using Apache Shiro shiro-jaxrs 1.4.0-RC to secure a REST endpoint using jax-rs. It works fine. I'm able to selectively secure the endpoints using a @RequiresPermissions tag like so:</p>

<pre><code>@Path(""/scan"")
@Produces(""application/json"")
public class ScanService {

final static Logger logger = Logger.getLogger(ScanService.class);

@GET
@Path(""/gettest"")
@RequiresPermissions(""troopers:read"")
public List&lt;Barcode&gt; gettest() throws Exception {

ArrayList&lt;Barcode&gt; listofstrings = new ArrayList&lt;Barcode&gt;();
    Barcode b = new Barcode();
    b.setBarcode(""this is a big barcode"");
    listofstrings.add(b );

    return listofstrings;

}


@GET
@Produces( MediaType.APPLICATION_JSON  )
@Path(""/gettest2"")
public List&lt;Barcode&gt; gettest2() throws Exception {
    ArrayList&lt;Barcode&gt; listofstrings = new ArrayList&lt;Barcode&gt;();
    Barcode b = new Barcode();
    b.setBarcode(""this is a BIGGER barcode"");
    listofstrings.add(b );

    return listofstrings;
}
</code></pre>

<p>I also have an application class to add my resource and the ShiroFeature class like so:</p>

<pre><code>package ca.odell.erbscan;
import ca.odell.erbscan.ws.ScanService;

import javax.ws.rs.ApplicationPath;
import javax.ws.rs.core.Application;
import java.util.HashSet;
import java.util.Set;

import org.apache.shiro.web.jaxrs.ShiroFeature;
import com.stormpath.shiro.jaxrs.StormpathShiroFeature;


@ApplicationPath(""/"")
public class ERBApplication extends Application {

@Override
public Set&lt;Class&lt;?&gt;&gt; getClasses() {
    Set&lt;Class&lt;?&gt;&gt; classes = new HashSet&lt;Class&lt;?&gt;&gt;();

    // register Shiro
    classes.add( ShiroFeature.class);
    // register resources
    classes.add(ScanService.class);

    return classes;
}
}
</code></pre>

<p>and my web.xml to init my Application class like so:</p>

<pre><code>&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://java.sun.com/xml/ns/javaee"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"" id=""WebApp_ID"" version=""3.0""&gt;
&lt;display-name&gt;ERBSCAN&lt;/display-name&gt;
&lt;servlet&gt;


    &lt;servlet-name&gt;ERBRest&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
        &lt;param-value&gt;ca.odell.erbscan&lt;/param-value&gt;
    &lt;/init-param&gt;

    &lt;init-param&gt;
        &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
        &lt;param-value&gt;ca.odell.erbscan.ERBApplication&lt;/param-value&gt;
    &lt;/init-param&gt;


    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;



&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;ERBRest&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;listener&gt;
&lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;filter&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
    &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
&lt;/filter-mapping&gt;


&lt;/web-app&gt;
</code></pre>

<p>and finally my shiro.ini</p>

<pre><code>[main]



cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager



sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionIdCookieEnabled = false
securityManager.sessionManager.sessionIdUrlRewritingEnabled = false


[urls]
/** = noSessionCreation, authcBasic[permissive]

[users]
# format: username = password, role1, role2, ..., roleN
root = secret,admin
emperor = secret,admin
officer = secret,officer
guest = secret

[roles]

admin = *
officer = troopers:create, troopers:read, troopers:update
</code></pre>

<p>What I want to do next is add Stormpath for RBAC rather then having users and roles in a file. My feeling is there's a simple way to do this and that I'm overthinking it. </p>

<p>I thought it would be a fairly straightforward manner of adding in my shiro.ini: </p>

<pre><code>stormpathClient = com.stormpath.shiro.client.ClientFactory
stormpathClient.cacheManager = $cacheManager

stormpath.application.href=http://....
</code></pre>

<p>But I was wrong. Could someone point me in the right direction?</p>
","<jersey><jax-rs><shiro><stormpath>","1",""
"45464056","Shiro blocking CORS requests with HTTP 401 Unauthorized error","<p>I am facing an issue where in shiro blocks cross origin requests stating the below error. If I take out Shiro and my requests are going through fine and I am able to get a successful response back. </p>

<blockquote>
  <p>My dropwizard application is hosted on 
  <a href=""http://localhost:8199/api/konak/orders"" rel=""nofollow noreferrer"">http://localhost:8199/api/konak/orders</a> and my angular application is
  being launched from <a href=""http://localhost:4200"" rel=""nofollow noreferrer"">http://localhost:4200</a></p>
</blockquote>

<p><strong>Error</strong></p>

<blockquote>
  <p>No 'Access-Control-Allow-Origin' header is present on the requested
  resource. Origin. 401 Unauthorized error</p>
</blockquote>

<p>I have started by angular application by passing in the proxy file, <code>ng serve --proxy-config proxy.conf.json</code>. I am running my angular application with the below proxy details</p>

<pre><code>{
  ""/api"": {
    ""target"": ""http://localhost:8199"",
    ""secure"": false
  }
}
</code></pre>

<p>Below is my Request-Response headers </p>

<p><strong>General</strong></p>

<pre><code>Request URL:http://localhost:8199/api/konak/reconciliations
Request Method:GET
Status Code:401 Unauthorized
Remote Address:[::1]:8199
Referrer Policy:no-referrer-when-downgrade
</code></pre>

<p><strong>Request Headers</strong></p>

<pre><code>Content-Length:0
Date:Wed, 02 Aug 2017 13:17:49 GMT
WWW-Authenticate:BASIC realm=""application""
</code></pre>

<p><strong>Request Headers</strong></p>

<pre><code>Accept:application/json, text/plain, */*
Accept-Encoding:gzip, deflate, br
Accept-Language:en-GB,en-US;q=0.8,en;q=0.6
Connection:keep-alive
Host:localhost:8199
Origin:http://localhost:4200
Referer:http://localhost:4200/konak-dashboard
User-Agent:Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36
</code></pre>

<p>I have also setup Shiro authentication and I suspect Shiro is causing some issue and not able to accept the request. (I have masked the ladap details and jndildaprealm details, but they work fine)</p>

<p><strong>shiro.ini file</strong></p>

<pre><code>l# Use SSO
contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory
contextFactory.url = ldap://&lt;hidden-ldap-config&gt;
contextFactory.systemUsername = svc-gitlab
contextFactory.systemPassword = xxxxxxxxxxxx

ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = {0}&lt;@company.domain&gt;
ldapRealm.contextFactory = $contextFactory
    allowAllCredentialsMatcher=org.apache.shiro.authc.credential.AllowAllCredentialsMatcher

authenticationStrategy = org.apache.shiro.authc.pam.AllSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authenticationStrategy

waffleRealmSSO = waffle.shiro.negotiate.NegotiateAuthenticationRealm
waffleUserPass = waffle.shiro.GroupMappingWaffleRealm
waffleFilter = waffle.shiro.negotiate.NegotiateAuthenticationFilter

securityManager.realms= $waffleRealmSSO, $ldapRealm

# Use the configured native session manager:
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
# the following call is only necessary in a web-configured ShiroFilter (otherwise
# a native session manager is already enabled):
securityManager.sessionMode = native

# cookie for single sign on
cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = SSOcookie
cookie.path = /
securityManager.sessionManager.sessionIdCookie = $cookie

authcStrategy = waffle.shiro.negotiate.NegotiateAuthenticationStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

[urls]
/** = port[8199], authcBasic, noSessionCreation
</code></pre>

<p>I have added my CORS headers to my Dropwizard Application as follows</p>

<pre><code> private void enableCorsHeaders(Environment env) {
        final FilterRegistration.Dynamic corsFilter = env.servlets().addFilter(""CrossOriginFilter"", CrossOriginFilter.class);

        corsFilter.setInitParameter(""Access-Header"", ""true"");
        corsFilter.setInitParameter(""Access-Control-Allow-Credentials"", ""true"");
        corsFilter.setInitParameter(""Access-Control-Allow-Origin"", ""http://localhost:4200"");
        corsFilter.setInitParameter(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept, Access-Control-Request-Headers, Access-Control-Request-Method, Cache-Control, Pragma, Expires"");
        corsFilter.setInitParameter(""Access-Control-Allow-Methods\"" "", ""OPTIONS,GET,PUT,POST,DELETE,HEAD"");
        corsFilter.setInitParameter(""allowedOrigins"", ""*"");
        corsFilter.setInitParameter(""allowedHeaders"", ""X-Requested-With,Content-Type,Accept,Origin"");
        corsFilter.setInitParameter(""allowedMethods"", ""OPTIONS,GET,PUT,POST,DELETE,HEAD"");
        corsFilter.setInitParameter(CrossOriginFilter.CHAIN_PREFLIGHT_PARAM, Boolean.FALSE.toString());

        // Add URL mapping
        corsFilter.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST), true, ""/*"");
    }
</code></pre>
","<angular><dropwizard><shiro>","1",""
"25622946","session management in a complex network topology","<p>There are 2 homogeneous clusters and these fall under a common domain.
cluster1 has different app servers than cluster2.</p>

<p>How to manage session between these clusters? 
How to authenticate cluster1-app-server created sessionId(session) in cluster2-app-server 
or Is there a common place I can create jsessionId(session) and make it not a container specific implementation?</p>

<p>hazlecast or tomcat gives session replication/management inside a homogeneous cluster.
How to take this between clusterS ?
Any data point is much appreciated.
Is shiro suited for this?</p>
","<session><web-applications><architecture><load-balancing><shiro>","1",""
"14891538","Tomcat server remote redeployement","<p>We have a web app using Apache Shiro for security and deployed in a Tomcat 7 server, and an administration application in java swing. One of the purposes of the administration application is to manage urls access rights for users in the web application. When the rights are modified, the web app need to be redeployed. 
We are already using JMX to start/stop/reload the web app in Tomcat, but is there a way to redeploy the web app each time the shiro.ini file is updated?</p>
","<java><tomcat><jmx><shiro>","0",""
"44613848","Configure Tomcat 8 and Shiro with JNDI","<p>I want to configure Apache Shiro to use JNDI in order to authenticate users.
I configured shiro.ini</p>

<pre><code>[main]
shiro.loginUrl = /authentication/login.xhtml
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.requiredType = javax.sql.DataSource
dataSource.resourceName = jdbc/sqliteDB
dataSource.resourceRef = true
jdbcRealm = com.web.authentication.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true
securityManager.realm = $jdbcRealm
</code></pre>

<p>I added in WEB-INF/web.xml these lines:</p>

<pre><code>&lt;resource-ref&gt;
        &lt;description&gt;postgreSQL Datasource example&lt;/description&gt;
        &lt;res-ref-name&gt;jdbc/sqliteDB&lt;/res-ref-name&gt;
        &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
        &lt;res-auth&gt;Container&lt;/res-auth&gt;
    &lt;/resource-ref&gt;
</code></pre>

<p>Tomcat/conf/context.xml</p>

<pre><code>&lt;Server port=""8009"" shutdown=""SHUTDOWN""&gt;
     ..................
    &lt;Resource auth=""Container"" 
    driverClassName=""org.sqlite.JDBC"" 
    factory=""org.apache.tomcat.jdbc.pool.DataSourceFactory"" 
    maxIdle=""2"" maxTotal=""60"" 
    name=""java:comp/env/jdbc/sqliteDB"" 
    password="""" 
    type=""javax.sql.DataSource"" 
    url=""jdbc:sqlite:/C:/sqlite/test.sqlite"" 
    username="""" 
    validationQuery=""select sqlite_version();""/&gt;
    .......................
      &lt;/Host&gt;
    &lt;/Engine&gt;
  &lt;/Service&gt;
&lt;/Server&gt;
</code></pre>

<p>But when I deploy the package I get error:</p>

<pre><code> java.lang.IllegalStateException: Unable to look up javax.sql.DataSource with jndi name 'jdbc/sqliteDB'.
    at org.apache.shiro.jndi.JndiObjectFactory.getInstance(JndiObjectFactory.java:44)
    at org.apache.shiro.config.ReflectionBuilder.resolveReference(ReflectionBuilder.java:417)
Caused by: javax.naming.NameNotFoundException: Name [jdbc/sqliteDB] is not bound in this Context. Unable to find [jdbc].
    at org.apache.naming.NamingContext.lookup(NamingContext.java:816)
    at org.apache.naming.NamingContext.lookup(NamingContext.java:173)
</code></pre>

<p>Can you give me some advice how I can fix this problem?</p>
","<java><tomcat><jndi><tomcat8><shiro>","0",""
"43976170","Shiro gets different sessions for every getSession()","<p>I want to do the session attributes validation recently.I made an interceptor that when requests come it will get the shiro session to set some attributes in the session.But I found that I always got the different shiro sessions when use the <code>getSession()</code> for the same user who has logged in the system.</p>

<blockquote>
  <p>Here is the shiro configuration xml</p>
</blockquote>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
</code></pre>

<p>http://www.springframework.org/schema/beans/spring-beans-3.1.xsd""
       default-lazy-init=""true""></p>

<pre><code>&lt;description&gt;Shiro Configuration&lt;/description&gt;

&lt;bean id=""sessionIdGenerator"" class=""org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator""/&gt;

&lt;bean id=""sessionDAO"" class=""org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO""&gt;
    &lt;property name=""activeSessionsCacheName"" value=""shiro-activeSessionCache""/&gt;
    &lt;property name=""sessionIdGenerator"" ref=""sessionIdGenerator""/&gt;
&lt;/bean&gt;

&lt;bean id=""sessionManager"" class=""org.apache.shiro.session.mgt.DefaultSessionManager""&gt;
    &lt;property name=""globalSessionTimeout"" value=""3600000""/&gt;
    &lt;property name=""deleteInvalidSessions"" value=""true""/&gt;
    &lt;property name=""sessionValidationSchedulerEnabled"" value=""true""/&gt;
    &lt;property name=""sessionValidationScheduler"" ref=""sessionValidationScheduler""/&gt;
    &lt;property name=""sessionDAO"" ref=""sessionDAO""/&gt;
&lt;/bean&gt;

&lt;!--&lt;bean id=""sessionValidationScheduler"" class=""org.apache.shiro.session.mgt.quartz.ExecutorServiceSessionValidationScheduler ""&gt;
    &lt;property name=""interval"" value=""60000""/&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
&lt;/bean&gt;--&gt;

&lt;bean id=""sessionValidationScheduler"" class=""org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler""&gt;
    &lt;constructor-arg name=""sessionManager"" ref=""sessionManager""/&gt;
    &lt;property name=""interval"" value=""3600000""/&gt;
&lt;/bean&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""shiroDbRealm""/&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;property name=""sessionManager"" ref=""sessionManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""shiroDbRealm"" class=""com.aspire.cms.service.impl.ShiroDbRealm""&gt;
&lt;/bean&gt;

&lt;bean id=""systemLogoutFilter"" class=""com.aspire.cms.filter.SystemLogoutFilter""&gt;&lt;/bean&gt;

&lt;!-- Shiro Filter --&gt;
&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/login""/&gt;
    &lt;property name=""successUrl"" value=""/main""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""/login""/&gt;
    &lt;property name=""filters""&gt;
        &lt;map&gt;
            &lt;entry key=""logout"" value-ref=""systemLogoutFilter"" /&gt;
        &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /login = authc
            /ajaxLogin = anon
            /logout = logout
            /static/** = anon
            /** = user
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager""/&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;bean class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
      depends-on=""lifecycleBeanPostProcessor""&gt;
    &lt;property name=""proxyTargetClass"" value=""true""/&gt;
&lt;/bean&gt;

&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt;
</code></pre>

<p></p>

<blockquote>
  <p>Here is the code to get shiro session</p>
</blockquote>

<pre><code>public class CsrfInterceptor extends HandlerInterceptorAdapter {

private static final Logger logger = LogManager.getLogger(CsrfInterceptor.class);

@Override
public boolean preHandle(HttpServletRequest request,
                         HttpServletResponse response, Object handler) throws Exception {

    Session session = SecurityUtils.getSubject().getSession();
    System.out.println(""==========sessionId:""+session.getId());
    String sessionCsrfToken = (String) session.getAttribute(CsrfTokenManager.CSRF_TOKEN_FOR_SESSION_ATTR_NAME);

    if (""POST"".equalsIgnoreCase(request.getMethod())) {
        String CsrfToken = CsrfTokenManager.getTokenFromRequest(request);
        if (CsrfToken == null || !CsrfToken.equals(sessionCsrfToken)) {
            String reLoginUrl = ""/login?backurl=""
                    + URLEncoder.encode(getCurrentUrl(request), ""utf-8"");

           response.sendRedirect(reLoginUrl);
            return false;
        }
    }

    return true;
}
</code></pre>
","<java><session><shiro>","0",""
"43685361","Matching Hashed and Salted Passwords from Database","<p>I have built a custom realm using Apache Shiro to account for our application having more than one location for user accounts and stored passwords. Originally I was using Shiro to hash and match the passwords, but the custom realm means I have to do some of these things manually.</p>

<p>After looking I came across this code:</p>

<pre><code>public String sha256(String base) {
    try{        
        MessageDigest digest = MessageDigest.getInstance(""SHA-256"");
        byte[] hash = digest.digest(base.getBytes(""UTF-8""));
        StringBuffer hexString = new StringBuffer();

        for (int i = 0; i &lt; hash.length; i++) {
            String hex = Integer.toHexString(0xff &amp; hash[i]);
            if(hex.length() == 1) hexString.append('0');
            hexString.append(hex);
        }

        return hexString.toString();
    } catch(Exception ex){
       throw new RuntimeException(ex);
    }
}
</code></pre>

<p>I added a salt and it works great, so I'm wondering if I can just store the returned value in a database when creating a username\password pair and then later retrieve it to match the provided password (plus the salt). That seems like it should work, but when I did this previously with Shiro the SHA256 password hasher did NOT return the same value with the same base password each time, yet it was able to always match it. I wanted to make sure I'm following a valid (and most importantly secure) methodology for handling passwords.</p>
","<java><authentication><shiro><sha256>","1",""
"31653579","Shiro Authentication failed","<p>I use shiro 1.2.3 in a JSF2+Hibernate project. No luck to get a user authenticated. Can't figure out what i'm doing wrong.</p>

<p>shiro.ini</p>

<pre><code>[main]
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager

hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 100000
hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService

customSecurityRealm = com.sapienzo.common.CustomSecurityRealm
customSecurityRealm.credentialsMatcher = $passwordMatcher
securityManager.realms = $customSecurityRealm
</code></pre>

<p>ShiroUtils class (helper class to create salted hash)</p>

<pre><code>public class ShiroUtils {

private static int HASH_ITERATIONS = 100000;

public static String createSaltedHash(String plainTextPassword) {
    DefaultHashService hashService = new DefaultHashService();
    hashService.setHashIterations(HASH_ITERATIONS);
    hashService.setHashAlgorithmName(Sha256Hash.ALGORITHM_NAME);
    hashService.setGeneratePublicSalt(true);

    DefaultPasswordService passwordService = new DefaultPasswordService();
    passwordService.setHashService(hashService);
    String encryptedPassword = passwordService.encryptPassword(plainTextPassword);

    return encryptedPassword;
}
}
</code></pre>

<p>saving a user to database while registration (getting username and password from form fields)</p>

<pre><code>...
user.setUsername(username);
user.setPassword(ShiroUtils.createSaltedHash(password);
userService.saveUser(user);
...
</code></pre>

<p>login (again username and password from form fields)</p>

<pre><code>UsernamePasswordToken token = new UsernamePasswordToken(user.getUsername(), ShiroUtils.createSaltedHash(user.getPassword()));
Subject currentUser = SecurityUtils.getSubject();
currentUser.login(token);
</code></pre>

<p>CustomSecurityRealm.java</p>

<pre><code>public class CustomSecurityRealm extends AuthorizingRealm {
    public CustomSecurityRealm() {
        setName(""CustomSecurityRealm"");
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;
        if (token.getUsername() == null) {
            return null;
        }
        UserService userService = new UserService();
        String saltedHashPassword = userService.getPasswordByUsername(token.getUsername()); //get encrypted password from DB

        if( saltedHashPassword != null ) {
            SimpleAuthenticationInfo authn = new SimpleAuthenticationInfo(token.getUsername(), saltedHashPassword, getName());
            return authn;
        } else {
            return null;
        }
    }
    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
        return null;    
    }
}
</code></pre>
","<hibernate><authentication><jsf-2><shiro>","0","31663676"
"41849439","Apache Shiro Annotation AOP and RMI","<p>I am trying to use Apache Shiro for an RMI server with multiple clients connecting.</p>

<p>The architecture I want to have is a few singleton service registered in the register of RMI. Each of them have a login method that return a new exported service by client.
So I can in each client's service keep a final reference to a client Object.</p>

<p>With Shiro I will use annotation @RequireRoles etc on services of clients.</p>

<p>My question is how to intercept the Aspect of all annotations @RequireRoles and just set the Subject with the reference in the service?</p>

<p>I could write my own annotations @AllowRoles(String[]) and my own Aspect to get the jointPoint (the service) with the ""this"" and get the reference to the client and check if the client has these roles.
But I would rather use a good framework and not code everything from beginning...</p>

<p>The same apply to @Transactional but I do not use SpringAOP.</p>

<p><a href=""https://stackoverflow.com/questions/13632442/how-to-organize-rmi-client-server-architecture"">How to organize RMI Client-Server architecture</a></p>

<p><a href=""https://stackoverflow.com/questions/20406295/correct-way-to-use-apache-shiro-on-distributed-system-using-rmi"">Correct way to use Apache Shiro on distributed system using RMI?</a></p>

<p>EDIT:
I might have found a solution but not sure it is the good one:
Without precedence it would not work properly or not work at all if subject is null.</p>

<pre><code>public aspect TestIntercept {

private static final Logger log = LoggerFactory.getLogger(TestIntercept.class);

declare precedence : TestIntercept, org.apache.shiro.aspectj.ShiroAnnotationAuthorizingAspect;

pointcut allow(): execution(@org.apache.shiro.authz.annotation.RequiresPermissions * *(..)) || execution(@org.apache.shiro.authz.annotation.RequiresRoles * *(..));

before(): allow(){
        log.info(""Before, in log2"");

        Signature sig = thisJoinPointStaticPart.getSignature();
        String line = String.valueOf(thisJoinPointStaticPart.getSourceLocation().getLine());

        String sourceName = thisJoinPointStaticPart.getSourceLocation()
                .getWithinType().getCanonicalName();
        System.out.println(""Call2 from "" + sourceName + "" line "" + line + ""\n   to ""
                + sig.getDeclaringTypeName() + ""."" + sig.getName() + ""\n"");


        log.info(""Got subject from service: "" + ((Service) thisJoinPoint.getThis()).getSubject().isAuthenticated());
        log.info(""Got subject from service: "" + ((Service) thisJoinPoint.getThis()).getSubject().getPrincipal());

//        Subject subject = ((Service) thisJoinPoint.getThis()).getSubject();
        /*
        Subject subject = new Subject.Builder()
                .authenticated(true)
                .principals(new SimplePrincipalCollection(""fake"", ""realmm""))
                .buildSubject();
        //*/
        //*
        Subject subject = SecurityUtils.getSubject();
        subject.logout();
        subject.login(new UsernamePasswordToken(""fake2"", ""11""));
        //*/
        ThreadState threadState = new SubjectThreadState(subject);
        threadState.bind();

    }
}
</code></pre>

<p>I did not unbind the subject from the thread context because any call to a service method will make sure the user of the service is bound to the executing thread.</p>

<p>I could use instead of bind, use: subject.execute(()->{return proceed()}); within an advice ""around"" to automatically have the threadConext cleared but is it really necessary ?</p>

<p>Thanks for any help</p>
","<rmi><interceptor><shiro><aspect>","0","41876464"
"44245239","Custom AuthenticationFilter with Shiro's JndiObjectFactory","<p>I'm integrating Apache Shiro 1.3.2 in a Java EE 7 web application. For configuration purposes I'd like to use managed beans (CDI and EJB).</p>

<p>The <code>org.apache.shiro.jndi.JndiObjectFactory</code> works great for setting up custom realms:</p>

<pre class=""lang-java prettyprint-override""><code>ini.setSectionProperty(""main"", ""dynamicRealm"", JndiObjectFactory.class.getName());
ini.setSectionProperty(""main"", ""dynamicRealm.requiredType"", jndiClass.getName());
ini.setSectionProperty(""main"", ""dynamicRealm.resourceName"", jndiLookupPath(jndiClass));
ini.setSectionProperty(""main"", ""securityManager.realms"", ""$dynamicRealm""); // , $...
</code></pre>

<p>But it doesn't seem to work for <code>authc</code>:</p>

<pre><code>Ini ini = new Ini();
ini.setSectionProperty(""main"", ""authc"", JndiObjectFactory.class.getName());
ini.setSectionProperty(""main"", ""authc.requiredType"", jndiClass.getName());
ini.setSectionProperty(""main"", ""authc.resourceName"", jndiLookupPath(jndiClass));
</code></pre>

<p>Shiro does not use my provided custom sub-class of <code>AuthenticationFilter</code> but always defaults to <code>FormAuthenticationFilter</code> that redirects me to <code>/login.jsp</code>.</p>

<p>Is JNDI lookup of <code>AuthenticationFilter</code> not supported or is there another approach?</p>
","<java><shiro><java-ee-7>","0",""
"46604295","Shiro: How to write a test for an endpoint protected with @RequiresRoles?","<p>Say I have this resource:</p>

<pre><code>import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.shiro.authz.annotation.RequiresAuthentication;
import org.apache.shiro.authz.annotation.RequiresRoles;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Path(""/authhello"")
@Api(value = ""hello"", description = ""Simple endpoints for testing api authentification"",
    hidden = true)
@Produces(MediaType.APPLICATION_JSON)
@RequiresAuthentication
public class AuthenticatedHelloWorldResource {

  private static final String READ = ""READ"";
  private static final String WRITE = ""WRITE"";

  @GET
  @ApiOperation(value = ""helloworld"",
      notes = ""Simple hello world."",
      response = String.class)
  @RequiresRoles(READ)
  public Response helloWorld() {
    String hello = ""Hello world!"";
    return Response.status(Response.Status.OK).entity(hello).build();
  }

  @GET
  @Path(""/{param}"")
  @ApiOperation(value = ""helloReply"",
      notes = ""Returns Hello you! and {param}"",
      response = String.class)
  @RequiresRoles(WRITE)
  public Response getMsg(@PathParam(""param"") String msg) {
    String output = ""Hello you! "" + msg;
    return Response.status(Response.Status.OK).entity(output).build();
  }
}
</code></pre>

<p>Should I write tests that confirm that certain (test) users get a response from the endpoints, and certain users don't? And if so: How can I write those tests? I've tried something like this:</p>

<pre><code>import javax.ws.rs.core.Application;

import org.glassfish.jersey.server.ResourceConfig;
import org.junit.Test;

import com.cognite.api.shiro.AbstractShiroTest;

import static org.junit.Assert.assertEquals;

public class AuthenticatedHelloWorldTest extends AbstractShiroTest {

  @Override
  protected Application configure() {
    return new ResourceConfig(AuthenticatedHelloWorldResource.class);
  }

  @Test
  public void testAuthenticatedReadHelloWorld() {
    final String hello = target(""/authhello"").request().get(String.class);
    assertEquals(""Hello world!"", hello);
  }

  @Test
  public void testAuthenticatedWriteHelloWorld() {
    final String hello = target(""/authhello/test"").request().get(String.class);
    assertEquals(""Hello you! test"", hello);
  }

}
</code></pre>

<p>but I'm not sure how to actually test the function of the <code>@RequiresRoles</code>-annotation. I've read <a href=""https://shiro.apache.org/testing.html"" rel=""noreferrer"">Shiro's page on testing</a>, but I haven't been able to write a failing test (e.g. a test for a subject that does not have the <code>WRITE</code> role trying to access <code>/authhello/test</code>). Any tips would be appreciated.</p>
","<java><jax-rs><shiro>","5","46652323"
"45722997","Apache Shiro : Filter vs Realm, which one to use?","<p>Use case : HTTP context, I need to restrict access to urls given a certain session attribute state</p>

<p>Extending the is* methods of AccessControlFilter in a custom filter works, but it looks sorta ugly : I have no Realm.</p>

<p>AFAIK Realms are used for things like LDAP, JDBC, INI backends. Whenever my ""realm"" is in fact web-bound, i.e the HttpSession itself is the realm.</p>

<ol>
<li>Is my custom filter the proper way to secure, given that I have the information I need in the HttpSession</li>
<li>If not, how would you bind a Realm to web based context ? Like HttpSession or even HttpServletRequest</li>
</ol>
","<java><shiro>","-1","45759420"
"42157393","Restrict users access using shiro ZeppelinHub Realm","<p><strong>Goal</strong></p>

<p>I'd want a group of people to have access to our spark/zeppelin cluster. For that I use the shiro authentication configuration as explained on the <a href=""https://zeppelin.apache.org/docs/0.6.2/security/shiroauthentication.html#zeppelinhub"" rel=""nofollow noreferrer"">zeppelin website</a> which basically comes down to adding the following to your shiro.ini</p>

<pre><code>### A sample for configuring ZeppelinHub Realm
zeppelinHubRealm = org.apache.zeppelin.realm.ZeppelinHubRealm
## Url of ZeppelinHub
zeppelinHubRealm.zeppelinhubUrl = https://www.zeppelinhub.com
securityManager.realms = $zeppelinHubRealm
</code></pre>

<p><strong>Problem</strong></p>

<p>The problem is that it seems that everyone with a zeppelinhub account can access this server.</p>

<p><strong>Question</strong></p>

<p>How can I restrict access to only those users with a zeppelinhub account that I know?</p>
","<shiro><apache-zeppelin>","0","42157692"
"34439353","OpenEntityManagerInViewFilter not working with shiro","<p>I have a Spring MVC app, Using Shiro for authentication. I have configured </p>

<pre><code>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
</code></pre>

<p>But it's giving error</p>

<pre><code>Stacktrace:
    at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:510)
    at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:419)
    at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)
    at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)
    at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)
    at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)
    at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
    at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:168)
    at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303)
    at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1244)
    at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1027)
    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:971)
    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:178)
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
    at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.coupon.domain.User.roles, could not initialize proxy - no Session
    at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:575)
    at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:214)
    at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:554)
    at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:142)
    at org.hibernate.collection.internal.PersistentSet.iterator(PersistentSet.java:180)
    at org.apache.taglibs.standard.tag.common.core.ForEachSupport.toForEachIterator(ForEachSupport.java:348)
    at org.apache.taglibs.standard.tag.common.core.ForEachSupport.supportedTypeForEachIterator(ForEachSupport.java:224)
    at org.apache.taglibs.standard.tag.common.core.ForEachSupport.prepare(ForEachSupport.java:155)
    at javax.servlet.jsp.jstl.core.LoopTagSupport.doStartTag(LoopTagSupport.java:256)
    at org.apache.jsp.cpanel.user.user_002ddetails_jsp._jspx_meth_c_005fforEach_005f0(user_002ddetails_jsp.java:1139)
    at org.apache.jsp.cpanel.user.user_002ddetails_jsp._jspService(user_002ddetails_jsp.java:331)
    at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
    at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)
    ... 36 more
2015-12-23 20:30:52 DEBUG DispatcherServlet:989 - Could not complete request
</code></pre>

<p>In log it shows that filter is configured properly.
<strong>web.xml</strong></p>

<pre><code> &lt;!DOCTYPE web-app PUBLIC
 ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN""
 ""http://java.sun.com/dtd/web-app_2_3.dtd"" &gt;

&lt;web-app&gt;
    &lt;display-name&gt;coupon&lt;/display-name&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;classpath:spring-config.xml&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;servlet&gt;
        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
            &lt;param-value&gt;classpath:spring-config.xml&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

    &lt;!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml --&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
            &lt;param-value&gt;true&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;
    &lt;!-- spring open in view filter --&gt;
    &lt;filter&gt;
         &lt;filter-name&gt;openEntityManagerFilter&lt;/filter-name&gt;
          &lt;filter-class&gt;
              org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
          &lt;/filter-class&gt;
          &lt;init-param&gt;
              &lt;param-name&gt;entityManagerFactoryBeanName&lt;/param-name&gt;
              &lt;param-value&gt;entityManagerFactory&lt;/param-value&gt;
          &lt;/init-param&gt;
      &lt;/filter&gt;

      &lt;filter-mapping&gt;
          &lt;filter-name&gt;openEntityManagerFilter&lt;/filter-name&gt;
          &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
      &lt;/filter-mapping&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>

<p>spring config file</p>

<pre><code> &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
    &lt;context:component-scan annotation-config=""true""
        base-package=""com.coupon.*"" /&gt;
    &lt;context:annotation-config /&gt;
    &lt;context:property-placeholder location=""classpath:db.properties"" /&gt;

    &lt;bean id=""jspViewResolver""
        class=""org.springframework.web.servlet.view.InternalResourceViewResolver""&gt;
        &lt;property name=""viewClass""
            value=""org.springframework.web.servlet.view.JstlView"" /&gt;
        &lt;property name=""prefix"" value=""/"" /&gt;
        &lt;property name=""suffix"" value="".jsp"" /&gt;
    &lt;/bean&gt;
    &lt;!-- &lt;mvc:default-servlet-handler /&gt; --&gt;
    &lt;mvc:resources mapping=""/resources/**"" location=""/resources/"" /&gt;
    &lt;mvc:annotation-driven /&gt;


    &lt;!-- Datasource with a c3p0 poolable connection pool --&gt;
    &lt;bean name=""dataSource"" class=""com.mchange.v2.c3p0.ComboPooledDataSource""&gt;
        &lt;property name=""driverClass"" value=""${jdbc.driverClassName}"" /&gt;
        &lt;property name=""jdbcUrl"" value=""${jdbc.url}"" /&gt;
        &lt;property name=""user"" value=""${jdbc.username}"" /&gt;
        &lt;property name=""password"" value=""${jdbc.password}"" /&gt;

        &lt;!-- these are C3P0 properties --&gt;
        &lt;property name=""acquireIncrement"" value=""${c3p0.acquireIncrement}"" /&gt;
        &lt;property name=""minPoolSize"" value=""${c3p0.minPoolSize}"" /&gt;
        &lt;property name=""maxPoolSize"" value=""${c3p0.maxPoolSize}"" /&gt;
        &lt;property name=""maxIdleTime"" value=""${c3p0.maxIdleTime}"" /&gt;
    &lt;/bean&gt;
    &lt;bean id=""entityManagerFactory""
        class=""org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean""&gt;
        &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
        &lt;property name=""packagesToScan"" value=""com.coupon"" /&gt;
        &lt;property name=""jpaVendorAdapter""&gt;
            &lt;bean class=""org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"" /&gt;
        &lt;/property&gt;
        &lt;property name=""jpaProperties""&gt;
            &lt;props&gt;
                &lt;prop key=""hibernate.hbm2ddl.auto""&gt;${hibernate.hbm2ddl.auto}&lt;/prop&gt;
                &lt;prop key=""hibernate.dialect""&gt;${hibernate.dialect}&lt;/prop&gt;
                &lt;prop key=""hibernate.show_sql""&gt;false&lt;/prop&gt;
                &lt;prop key=""hibernate.cache.use_second_level_cache""&gt;false&lt;/prop&gt;
                &lt;!-- &lt;prop key=""hibernate.cache.region.provider_class""&gt;net.sf.ehcache.hibernate.EhCacheProvider&lt;/prop&gt; --&gt;
            &lt;/props&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;bean id=""transactionManager"" class=""org.springframework.orm.jpa.JpaTransactionManager""&gt;
        &lt;property name=""entityManagerFactory"" ref=""entityManagerFactory"" /&gt;
    &lt;/bean&gt;

    &lt;tx:annotation-driven transaction-manager=""transactionManager"" /&gt;

    &lt;!-- http://shiro.apache.org/spring.html https://docs.spring.io/spring-security/site/docs/3.0.x/reference/springsecurity.html --&gt;
    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""/cpanel/login"" /&gt;
        &lt;property name=""successUrl"" value=""/cpanel/home"" /&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /cpanel/** = authc, anAlias
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
    &lt;bean id=""openEntityManagerFilter""
    class=""org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter""&gt;
        &lt;property name=""entityManagerFactoryBeanName"" value=""entityManagerFactory""&gt;&lt;/property&gt;
    &lt;/bean&gt;
    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
        &lt;property name=""realm"" ref=""myRealm"" /&gt;
    &lt;/bean&gt;
    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor"" /&gt;
    &lt;bean id=""myRealm"" class=""com.coupon.shiro.PortalHibernateRealm""&gt;&lt;/bean&gt;
    Enable Shiro Annotations for Spring-configured beans. Only run after 
        the lifecycleBeanProcessor has run:
    &lt;bean
        class=""org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator""
        depends-on=""lifecycleBeanPostProcessor"" /&gt;
    &lt;bean
        class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
    &lt;/bean&gt;

&lt;/beans&gt;
</code></pre>
","<java><hibernate><spring-mvc><spring-data><shiro>","0",""
"27234529","Extracting Parameters in ShiroFiler for MultiPart Forms","<p>I'm trying to implement a filter for CSRF protection using a Shiro filer and am having trouble getting the value of a form parameter from a ""multipart/form-data"" request. </p>

<p>Does anyone know a way to implement this, or perhaps even a better approach to handle CSRF generically using Shiro?</p>
","<java><csrf><multipartform-data><shiro>","1",""
"36667990","NPE in DataSource object","<p>I would like to use Apache Shiro in a Java EE application. I tried this custom realm:</p>

<pre><code> public class JdbcRealm extends AuthorizingRealm implements Serializable
{
    @Resource(name = ""jdbc/DefaultDB"")
    private DataSource dataSource;

    protected static final String DEFAULT_AUTHENTICATION_QUERY = ""select passwd from user where username = ?"";
    protected static final String DEFAULT_SALTED_AUTHENTICATION_QUERY = ""select passwd, passwd_salt from user where username = ?"";
    protected static final String DEFAULT_USER_ROLES_QUERY = ""select role_name from user_roles where username = ?"";
    protected static final String DEFAULT_PERMISSIONS_QUERY = ""select permission from roles_permissions where role_name = ?"";
    private static final Logger log = LoggerFactory.getLogger(JdbcRealm.class);

    public enum SaltStyle
    {
        NO_SALT, CRYPT, COLUMN, EXTERNAL
    };

    protected String authenticationQuery = DEFAULT_AUTHENTICATION_QUERY;
    protected String userRolesQuery = DEFAULT_USER_ROLES_QUERY;
    protected String permissionsQuery = DEFAULT_PERMISSIONS_QUERY;
    protected boolean permissionsLookupEnabled = false;

    protected SaltStyle saltStyle = SaltStyle.NO_SALT;

    public void setDataSource(DataSource dataSource)
    {
        this.dataSource = dataSource;
    }

    public void setAuthenticationQuery(String authenticationQuery)
    {
        this.authenticationQuery = authenticationQuery;
    }

    public void setUserRolesQuery(String userRolesQuery)
    {
        this.userRolesQuery = userRolesQuery;
    }

    public void setPermissionsQuery(String permissionsQuery)
    {
        this.permissionsQuery = permissionsQuery;
    }

    public void setPermissionsLookupEnabled(boolean permissionsLookupEnabled)
    {
        this.permissionsLookupEnabled = permissionsLookupEnabled;
    }

    public void setSaltStyle(SaltStyle saltStyle)
    {
        this.saltStyle = saltStyle;
        if (saltStyle == SaltStyle.COLUMN &amp;&amp; authenticationQuery.equals(DEFAULT_AUTHENTICATION_QUERY))
        {
            authenticationQuery = DEFAULT_SALTED_AUTHENTICATION_QUERY;
        }
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException
    {
        UsernamePasswordToken upToken = (UsernamePasswordToken) token;
        String username = upToken.getUsername();
        // Null username is invalid
        if (username == null)
        {
            throw new AccountException(""Null usernames are not allowed by this realm."");
        }
        Connection conn = null;
        SimpleAuthenticationInfo info = null;
        try
        {
            conn = dataSource.getConnection();
            String password = null;
            String salt = null;
            switch (saltStyle)
            {
                case NO_SALT:
                    password = getPasswordForUser(conn, username)[0];
                    break;
                case CRYPT:
                    // TODO: separate password and hash from getPasswordForUser[0]
                    throw new ConfigurationException(""Not implemented yet"");
                //break;
                case COLUMN:
                    String[] queryResults = getPasswordForUser(conn, username);
                    password = queryResults[0];
                    salt = queryResults[1];
                    break;
                case EXTERNAL:
                    password = getPasswordForUser(conn, username)[0];
                    salt = getSaltForUser(username);
            }
            if (password == null)
            {
                throw new UnknownAccountException(""No account found for user ["" + username + ""]"");
            }
            info = new SimpleAuthenticationInfo(username, password.toCharArray(), getName());

            if (salt != null)
            {
                info.setCredentialsSalt(ByteSource.Util.bytes(salt));
            }
        }
        catch (SQLException e)
        {
            final String message = ""There was a SQL error while authenticating user ["" + username + ""]"";
            if (log.isErrorEnabled())
            {
                log.error(message, e);
            }
            // Rethrow any SQL errors as an authentication exception
            throw new AuthenticationException(message, e);
        }
        finally
        {
            JdbcUtils.closeConnection(conn);
        }
        return info;
    }

    private String[] getPasswordForUser(Connection conn, String username) throws SQLException
    {
        String[] result;
        boolean returningSeparatedSalt = false;
        switch (saltStyle)
        {
            case NO_SALT:
            case CRYPT:
            case EXTERNAL:
                result = new String[1];
                break;
            default:
                result = new String[2];
                returningSeparatedSalt = true;
        }

        PreparedStatement ps = null;
        ResultSet rs = null;
        try
        {
            ps = conn.prepareStatement(authenticationQuery);
            ps.setString(1, username);
            // Execute query
            rs = ps.executeQuery();
            // Loop over results - although we are only expecting one result, since usernames should be unique
            boolean foundResult = false;
            while (rs.next())
            {
                // Check to ensure only one row is processed
                if (foundResult)
                {
                    throw new AuthenticationException(""More than one user row found for user ["" + username + ""]. Usernames must be unique."");
                }
                result[0] = rs.getString(1);
                if (returningSeparatedSalt)
                {
                    result[1] = rs.getString(2);
                }
                foundResult = true;
            }
        }
        finally
        {
            JdbcUtils.closeResultSet(rs);
            JdbcUtils.closeStatement(ps);
        }
        return result;
    }

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)
    {
        //null usernames are invalid
        if (principals == null)
        {
            throw new AuthorizationException(""PrincipalCollection method argument cannot be null."");
        }
        String username = (String) getAvailablePrincipal(principals);
        Connection conn = null;
        Set&lt;String&gt; roleNames = null;
        Set&lt;String&gt; permissions = null;
        try
        {
            conn = dataSource.getConnection();
            // Retrieve roles and permissions from database
            roleNames = getRoleNamesForUser(conn, username);
            if (permissionsLookupEnabled)
            {
                permissions = getPermissions(conn, username, roleNames);
            }
        }
        catch (SQLException e)
        {
            final String message = ""There was a SQL error while authorizing user ["" + username + ""]"";
            if (log.isErrorEnabled())
            {
                log.error(message, e);
            }
            // Rethrow any SQL errors as an authorization exception
            throw new AuthorizationException(message, e);
        }
        finally
        {
            JdbcUtils.closeConnection(conn);
        }
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo(roleNames);
        info.setStringPermissions(permissions);
        return info;
    }

    protected Set&lt;String&gt; getRoleNamesForUser(Connection conn, String username) throws SQLException
    {
        PreparedStatement ps = null;
        ResultSet rs = null;
        Set&lt;String&gt; roleNames = new LinkedHashSet&lt;String&gt;();
        try
        {
            ps = conn.prepareStatement(userRolesQuery);
            ps.setString(1, username);
            // Execute query
            rs = ps.executeQuery();
            // Loop over results and add each returned role to a set
            while (rs.next())
            {
                String roleName = rs.getString(1);
                // Add the role to the list of names if it isn't null
                if (roleName != null)
                {
                    roleNames.add(roleName);
                }
                else
                {
                    if (log.isWarnEnabled())
                    {
                        log.warn(""Null role name found while retrieving role names for user ["" + username + ""]"");
                    }
                }
            }
        }
        finally
        {
            JdbcUtils.closeResultSet(rs);
            JdbcUtils.closeStatement(ps);
        }
        return roleNames;
    }

    protected Set&lt;String&gt; getPermissions(Connection conn, String username, Collection&lt;String&gt; roleNames) throws SQLException
    {
        PreparedStatement ps = null;
        Set&lt;String&gt; permissions = new LinkedHashSet&lt;&gt;();
        try
        {
            ps = conn.prepareStatement(permissionsQuery);
            for (String roleName : roleNames)
            {
                ps.setString(1, roleName);
                ResultSet rs = null;
                try
                {
                    // Execute query
                    rs = ps.executeQuery();
                    // Loop over results and add each returned role to a set
                    while (rs.next())
                    {
                        String permissionString = rs.getString(1);
                        // Add the permission to the set of permissions
                        permissions.add(permissionString);
                    }
                }
                finally
                {
                    JdbcUtils.closeResultSet(rs);
                }
            }
        }
        finally
        {
            JdbcUtils.closeStatement(ps);
        }
        return permissions;
    }

    protected String getSaltForUser(String username)
    {
        return username;
    }
}
</code></pre>

<p>But I get NPE in this line:</p>

<pre><code>conn = dataSource.getConnection();
</code></pre>

<p>As you can see I get data source via annotation <code>@Resource(name = ""jdbc/DefaultDB"")</code>. I suspect that this annotation is initialized after Java method <code>getRoleNamesForUser</code>. IS there any way to call the annotation before <code>getRoleNamesForUser</code>?</p>
","<java-ee><shiro>","-2","36853222"
"40924272","Provide authorisation using apache shiro for Rest service method in java application","<p>in my simple web application, i have two web service method. one is <code>storeName()</code>and another one is <code>viewAllNames()</code> methods.</p>

<p>Admin role can be access to both methods. But user role should be access viewAllNames() method.</p>

<p>I am going to use <strong>Apache shiro, maven with web based project and rest service</strong>. Provide authorization only for those two methods.</p>

<p>My actual rest url is : </p>

<pre><code>http://localhost:8080/SimpleRest/simpleservice/store/jackreobert  --&gt; admin only
http://localhost:8080/SimpleRest/simpleservice/viewall/           --&gt; user only
</code></pre>

<p>How to configure shiro.ini, web.xml and annotaion/xml.</p>

<p>For shiro approach, do i need pass any other information into web service url, how to achieve this.</p>

<p><strong>SimpleService.java</strong></p>

<pre><code>package com.simple.rest;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import org.apache.shiro.authz.annotation.RequiresRoles;
import org.json.JSONException;

@Path(""/simpleservice"")
public class SimpleService {
   @Path(""/store/{name}"")
@GET
@Produces(""application/json"")
public Response storeName(@PathParam(""name"") String name) throws JSONException { 
/**
 * Here insert logic 
 */
String result = ""Given name: "" + name + "" successfully stored"";
return Respo}nse.status(200).entity(result).build();
}
@Path(""/viewall"")
@GET
@Produces(""application/json"")
public Response viewAllNames() throws JSONException { 
   /**
 * Here retrieve logic 
 */
String result = ""All names are taken"";
return Response.status(200).entity(result).build();
}}
</code></pre>

<p>Thanks for reading for my post.
Help me,
Thanks in advance.    </p>
","<apache><rest><authorization><shiro>","0",""
"46551397","How to configure Apache shiro with spring boot in a separate module?","<p>My spring boot project contains more than 10 modules, with Cassandra DB. i want to do the security with the separate module. Is this possible?</p>
","<spring-boot><shiro><spring-boot-maven-plugin>","0",""
"44682295","Apache Shiro with Spring MVC AuthorizingRealm @Autowired java.lang.NullPointerException","<p>I am working with <strong>Spring MVC</strong> based application using <strong>Spring version 4</strong>. I am trying to use <strong>Apache Shiro</strong> for security framework. I have implemented AuthorizingRealm in my application but some how when I am trying to login I get java.lang.NullPointerException error. My code is as below:</p>

<p>@Component</p>

<p>public class CustomSecurCustomSecurityRealmityRealm extends AuthorizingRealm {</p>

<pre><code>@Autowired
UserService userService;

@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {

    Set&lt;String&gt; roles = new HashSet&lt;&gt;();
    Collection&lt;org.apache.shiro.authz.Permission&gt; permissions = new HashSet&lt;&gt;();

    String username = (String) principals.getPrimaryPrincipal();

    User user = userService.findByEmail(username);

    if (user == null)
        throw new UnknownAccountException();

    for (Role role : user.getRole()) {
        roles.add(role.getName());
        for (Iterator&lt;Permission&gt; iterator = role.getPermissions().iterator(); iterator.hasNext();) {
            Permission permission = iterator.next();
            permissions.add(new WildcardPermission(permission.getName()));
        }
    }

    SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();
    authorizationInfo.setRoles(roles);
    authorizationInfo.addObjectPermissions(permissions);
    return authorizationInfo;
}

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {

    UsernamePasswordToken upat = (UsernamePasswordToken) token;
    User user = userService.findByEmail(upat.getUsername());
    if (user != null &amp;&amp; user.getPasswordHash().equals(new String(upat.getPassword()))) {
        return new SimpleAuthenticationInfo(user, user.getPasswordHash(), getName());
    } else {
        throw new AuthenticationException(""Invalid username/password!"");
    }
}
</code></pre>

<p>}</p>

<p>@Configuration is as below:</p>

<pre><code>@Bean
public WebSecurityManager securityManager() {
    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
    securityManager.setRealm(new CustomSecurityRealm());
    return securityManager;
}

@Bean
public static LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
    return new LifecycleBeanPostProcessor();
}

@Bean
public MethodInvokingFactoryBean methodInvokingFactoryBean() {
    MethodInvokingFactoryBean methodInvokingFactoryBean = new MethodInvokingFactoryBean();
    methodInvokingFactoryBean.setStaticMethod(""org.apache.shiro.SecurityUtils.setSecurityManager"");
    methodInvokingFactoryBean.setArguments(new Object[] { securityManager() });
    return methodInvokingFactoryBean;
}

@Bean
@DependsOn(value = ""lifecycleBeanPostProcessor"")
public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
    return new DefaultAdvisorAutoProxyCreator();
}

@Bean
public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {
    AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();
    authorizationAttributeSourceAdvisor.setSecurityManager(securityManager());
    return authorizationAttributeSourceAdvisor;
}

@Bean
public ShiroFilterFactoryBean shiroFilterBean() {
    ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();
    Map&lt;String, String&gt; definitionsMap = new HashMap&lt;&gt;();
    definitionsMap.put(""/auth/signIn"", DefaultFilter.anon.name());
    definitionsMap.put(""/auth/login"", DefaultFilter.anon.name());
    definitionsMap.put(""/home/index"", ""authc"");
    shiroFilter.setFilterChainDefinitionMap(definitionsMap);
    shiroFilter.setLoginUrl(""/auth/login"");
    shiroFilter.setSuccessUrl(""/home/index"");
    shiroFilter.setSecurityManager(securityManager());
    return shiroFilter;
}
</code></pre>

<p>Anyone please help me that why UserService userService get null and throw <strong>NullPointerException</strong> </p>
","<spring-mvc><dependency-injection><autowired><shiro><jdbcrealm>","0",""
"35282988","securing ,html with jetty and shiro due to caching","<p>i am having issues securing my .html files with shiro.</p>

<p>my app is .html/jquery with rest calls.</p>

<ol>
<li>user hit landing page redirects to /secure/index.html </li>
<li>user logs in. </li>
<li>user redirected to secure page /secure/index.html </li>
<li>user logouts and goes to /logout.html (shiro confirms logout)</li>
<li>type in browser address ""/secure/index.html"" and the page is
displayed despite being logged out.</li>
</ol>

<p>at step5. the access,log is not showing any activity.
according to chrome developer tools the page is loading from cache.</p>

<p>the issue seems to be the browser is not reloading the page and hence shiro filter never gets to fire, and the contents of the secure html file is visible.</p>

<p>it is very evident that the browser cache bypasses the shiro auth.</p>

<p>only if i Ctl+F5 refresh will the page be reload from jetty and security is activated.</p>

<pre><code>shiro.ini
====================== 
authc.loginUrl = /login.html
authc.usernameParam = username
authc.passwordParam = password
authc.rememberMeParam = remember
logout.redirectUrl = /logout.html 
</code></pre>

<h2>Solution #1</h2>

<p>my solution was to force the browser to have a 'no-cache'on the .html files. 
however i want cache control for my static content.</p>

<p>i know the DefaultServlet can do this so i created another 2 instances of the DefaultServlet (staticDefaultServlet and webDefaultServlet) to server different cache-control headers for my content.</p>

<pre><code>&lt;servlet&gt;
&lt;servlet-name&gt;webDefaultServlet&lt;/servlet-name&gt;
&lt;servlet-class&gt;org.eclipse.jetty.servlet.DefaultServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;cacheControl&lt;/param-name&gt;
        &lt;param-value&gt;max-age=5,no-store&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;pathInfoOnly&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;

     &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet&gt;
&lt;servlet-name&gt;staticDefaultServlet&lt;/servlet-name&gt;
&lt;servlet-class&gt;org.eclipse.jetty.servlet.DefaultServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;cacheControl&lt;/param-name&gt;
        &lt;param-value&gt;max-age=604800&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;pathInfoOnly&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;   
     &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;staticDefaultServlet&lt;/servlet-name&gt;
  &lt;url-pattern&gt;/static/**&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;webDefaultServlet&lt;/servlet-name&gt;
  &lt;url-pattern&gt;/pages/**&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt; 
</code></pre>

<p>however the cache headers are not coming thru. </p>

<h1>Questions</h1>

<p>Q1. can i use multiple instances of DefaultServlet to have different each control for different paths?</p>

<p>Q2. Is there another mechanism to protect .html files with shiro?</p>

<p>thanks</p>

<p>-lp</p>
","<jetty><shiro><jetty-9>","0",""
"37701155","Securing Rest Service Resources Using Apache Shiro","<p>I'm trying to secure my rest services written using dropwizard by Apache Shiro. First I initialized the security manager in the main method.</p>

<pre><code>    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
</code></pre>

<p>Then I wrote a service for user login.</p>

<pre><code>if (!currentUser.isAuthenticated()) {
        UsernamePasswordToken token = new UsernamePasswordToken(username, password);
        token.setRememberMe(true);
        try {
            currentUser.login(token);
            System.out.println(""USER AUTHENTICATED!!!!!!!!"");
        } catch (Exception uae) {
            System.out.println(""Error logging in ................."");
        }
    }
</code></pre>

<p>Then I declared a method with some java annotations.</p>

<pre><code>    @RequiresAuthentication 
    @RequiresRoles(""admin"")
    @GET
    @Path(""/account"")
    @ApiOperation(value = ""getAccount"")
    public void getAccount() {
        //do something
    }
</code></pre>

<p>But when I accessed this resource without logging in, I was successful.</p>

<p>What mistake am I doing? Or should I add something more? Like in the web.xml?</p>
","<java><rest><shiro>","0","37781971"
"20557250","Java type parameter confusion","<p>I'm trying to implement the Apache Shiro <a href=""http://shiro.apache.org/static/1.2.2/apidocs/org/apache/shiro/cache/CacheManager.html"" rel=""nofollow"">CacheManager interface</a>. Its only method has the following signature:  </p>

<pre><code>&lt;K,V&gt; Cache&lt;K,V&gt; getCache(String name) throws CacheException
</code></pre>

<p>It seems the leftmost <code>&lt;K, V&gt;</code> type parameter is effectively telling the compiler that K and V are ""types."" My question is this: How can I return an instance of that type? When I try the following code, Eclipse complains that K and V cannot be resolved to types:  </p>

<pre><code>public class ShiroGuavaCacheManager implements CacheManager
{
    private Cache&lt;K, V&gt; cache; // &lt;--- The compiler complains here

    @Override
    public &lt;K, V&gt; Cache&lt;K, V&gt; getCache(String name) throws CacheException
    {
        return (cache != null) ? cache : new ShiroGuavaCache&lt;K, V&gt;();
    }
}
</code></pre>
","<java><shiro>","0",""
"26760851","shiro configuration for integration testsing","<p>For most of my integration test I don't need any security checks. I just want to have shiro out of my way. Beeing a shiro noob I'm wondering whether there's a better way than the one I found.</p>

<p>In my ShiroFilter class, if authentication fails I added this code:</p>

<pre><code>try {
    currentUser.login(token);
    return CONTINUE;
} catch (AuthenticationException e1) {

    // if everything failed, we might actualy have the integration test configuration, let's try
    UsernamePasswordToken testToken = new UsernamePasswordToken(""testUser"", ""testPassword"", true, host);
    try {
        currentUser.login(testToken);
        return CONTINUE;
    } catch (AuthenticationException e2) {
        LOGGER.info(""Unable to login"", e2);
    }

}
</code></pre>

<p>And this is the shiro.ini for the integration tests:</p>

<pre><code>[users]
testUser = testPassword, administrator

[roles]
administrator = *
</code></pre>
","<java><shiro>","1",""
"43578766","apache Shiro Login","<p>I am kind of new to Apache shiro and trying to use authcBasic for securing the webservice.</p>

<p>I need to create a webservice using which I can login by providing username and password which can utilize apache shiro's features.</p>

<p>Any guidance will highly be appreciated</p>
","<spring><apache><shiro>","1",""
"46032100","How to get roles from principal in Apache Shiro?","<p>I am a bit stuck here.</p>

<p>Using a very simple Shiro configuration with jdbcRealm:</p>

<pre><code>[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

# Create JDBC realm.
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Configure JDBC realm datasource.
ds = org.postgresql.ds.PGSimpleDataSource
ds.databaseName = pg_sensor
***
jdbcRealm.dataSource = $ds

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT pass FROM users WHERE name = ?
# user id is a user Role )
jdbcRealm.userRolesQuery = SELECT id FROM users WHERE name = ?
</code></pre>

<p>So, I use <code>userid</code> as a role to do authorization in the code. 
In one scenario I need to get role name to proceed.</p>

<p>Can anyone suggest how to do that from the <code>Principal</code> (<code>SecurityUtils.getSubject().getPrincipal()</code>)? </p>

<p>I guess we need to use <code>getRoles()</code> withing <code>SimpleAccount</code> class, but not able to connect it with <code>Principal</code>.</p>
","<authorization><shiro>","0",""
"40866956","Wrong status code in HttpResponse","<p>At first - I am pretty new to Java. I am working on an app that uses Shiro and I have defined a REST for logout. It has a redirect inside which gives me 302 Found Status Code while using dev tools in Chrome:</p>

<pre><code>return Response.temporaryRedirect(redirectionAddress).build();
</code></pre>

<p>The problem is, I can't get this status using Postman or just by invoking it in a test:</p>

<pre><code>HttpUriRequest request = new HttpGet(""http://localhost:8080/shop/logout/);
HttpResponse httpResponse = HttpClientBuilder.create().build().execute(request);
</code></pre>

<p>After calling the rest I get only 200 OK code without 302 redirection. Prehaps it's the response when there is no session on the server side. In Postman I am using Basic Auth, but in the HttpGet there is no authorization because I am not sure how to do it. I tried adding a header, but it doesn't work also:</p>

<pre><code>httpRequestBase.addHeader(""Authorization"", ""Basic "" + auth);
</code></pre>

<p>Should I first invoke login rest and than logout? Is there any option to test the logout without login?</p>
","<java><rest><http><jax-rs><shiro>","0","40872435"
"33254863","How can i get the cacheManager from shiro framework in any part of application","<p>How can I get a reference to the cacheManager object in the Shiro framework in any part of my application? For example, I want to remove the old user data that was cached during the removal of a user or updating its permission.
Right now I am handling it following way</p>

<pre><code>public void cleanUserCache(final String userName) {
        final EmbeddedCacheManager embeddedCacheManager = securityRealmsProducer.getEmbeddedCacheManger();
        final Cache&lt;Object, Object&gt; authenticationCache = embeddedCacheManager.getCache(""JPA-Auth-Realm.authenticationCache"");
        final Cache&lt;Object, Object&gt; authrizationCache = embeddedCacheManager.getCache(""JPA-Auth-Realm.authorizationCache"");
        final Object userAuthenticationInfo = authenticationCache.get(userName);
        if (userAuthenticationInfo != null) {
            authenticationCache.remove(userName);
            final SimpleAuthenticationInfo principle = (SimpleAuthenticationInfo) userAuthenticationInfo;
            final SimplePrincipalCollection simple = (SimplePrincipalCollection) principle.getPrincipals();
            authorizationCache.remove(simple);
        }
    }
</code></pre>
","<java><shiro>","9",""
"31172001","Is it possible to have multi realm security with the Grails Spring Security Plugin?","<p>I have found a few examples of how spring security itself supports the ability to use different authentication mechanisms for different url patterns. A likely use case is where you want to distinguish between browser authentication and RESTful API key authentication depending on the url. <a href=""http://www.javacodegeeks.com/2012/08/spring-security-two-security-realms-in.html"" rel=""nofollow"">http://www.javacodegeeks.com/2012/08/spring-security-two-security-realms-in.html</a></p>

<p>Today we use two grails apps to accomplish this separation. I have seen shiro plugin has the concepts of realms but would like to know if its possible to accomplish this with the Spring Sec Plugin?</p>
","<grails><spring-security><shiro>","0",""
"26651994","Often Used Identity Management Technology Stack","<p>I understand that Identity Management can be done in multiple ways, using multiple protocols, depending on one's needs. However, the more I read about various Security Frameworks and Protocols, the more I get confused as to where and when to use them. My need is that I need a robust central Identity Management System that manages Authentication and Authorisation for a host of web applications that might query it. Also, I am looking for such a structure that can be progressively used for SSO (Single Sign On) when the software scales. What are the common technology stacks used worldwide for such identity management systems? How technologies and protocols like LDAP, Apache Shiro, OAuth, CAS fit into all these; i.e what roles do they play? Are they complimentary technologies or interchangeable? Do some of them perform same functions, what are the merits and demerits of using them?</p>

<p>I know I am asking a number of questions and a lot of information but I could not find any good resources that could give me the ""bigger picture"" for such a requirement. Any help, any sources would be appreciated. </p>
","<web-services><oauth><architecture><ldap><shiro>","1","26837674"
"24056101","How to handle different password encryption with Shiro","<p>Assuming an account database with users having passwords encrypted differently. E.g. with sha1 with salt, sha1 without salt and plain text.</p>

<p>What would be the best way to handle a login with Apache Shiro?</p>

<p>Should I use multiple Realms for each encryption method or should I better handle different encryptions in single Realm?</p>

<p>The AuthenticationToken is for all encryptions the same. The user will always login via a form   providing username/password.</p>
","<security><encryption><shiro>","0",""
"27858451","Can active directory alone support single sign on in shiro without using CAS?","<p>I have mapped an active directory in shiro which authenticates user properly. 
    Now I want to do a single sign on within two web application which is mapped with the same active directory.
    Is it possible to do a single sign on without using CAS approach?
    Below is the code that I have written,</p>

<pre><code>**shiro.ini file**
[main]
authc.loginUrl = /Login.xhtml
authc.usernameParam = USERNAME
authc.passwordParam = USERPASSWORD
authc.rememberMeParam = rememberMe
user.loginUrl = /Login.xhtml

activeDirectoryRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
activeDirectoryRealm.systemUsername = testuser
activeDirectoryRealm.systemPassword = password
activeDirectoryRealm.searchBase = DC=XXX,DC=XXXXXX,DC=com
activeDirectoryRealm.url = ldap://XXX.XXXXXX.com:389

[users]

[urls]
/Login.xhtml = authc
/** = authc
/Login.xhtml = anon
/app/** = user

I would be very grateful, if any of you could help me with this. Thanks in advance
</code></pre>
","<java><active-directory><shiro>","3",""
"41572617","How I can not filter Websocket with Shiro","<p>I have a web application I implemented <strong>Shiro Security</strong> the problem now is the WebSocket is not working.</p>

<p>I try telling Shiro allow anonymous to <strong>/device where the WebSocket is running.</strong></p>

<p>Shiro urls part (shiro.ini file):</p>

<pre><code>[urls]
/javax.faces.resource/** = anon
/public/**  = anon
/device/* = anon
/* = authc
</code></pre>
","<java><websocket><shiro>","1",""
"43506612","Issues with Apache Shiro plugin, Grails 2.4.4 upgrade to 3.2.8","<p>Upgrading Grails from version 2.4.4 to 3.2.8. Plugin declared not being resolved.</p>

<pre><code>dependencies {
    compile ""org.grails.plugins:shiro:1.2.1""
    ...
}
</code></pre>

<p>Grails attempted to find the dependency in the maven repo then at repo.grails.org.</p>

<p>Is there a different location to look for the grails shiro plugin?</p>

<pre><code>Error initializing classpath: Could not find org.grails.plugins.shiro:1.2.1
Searched the following locations
    file:/C:/Users/Owner/.m2/repository...shiro-1.2.1.pom
    file:/C:/Users/Owner/.m2/repository...shiro-1.2.1.jar
    https://repo.grails.org/grails/core/org/grails/plugins/shiro/1.2.1/shiro-1.2.1.pom
    ...shiro-1.2.1.jar
</code></pre>

<p>I am also attempting to build the plugin myself but running into issues with gradle and a dependency. <a href=""https://stackoverflow.com/questions/43506245/new-to-gradle-could-not-create-task-of-type-dependencymanagementreporttask"">Could not create task of type &#39;DependencyManagementReportTask&#39;. New to Gradle</a></p>

<p>I attempted to include spring-security-shiro but it creates ready made login/auth functionality and haven't figured out a way around it. See below</p>

<p><a href=""https://i.stack.imgur.com/Ynntx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ynntx.png"" alt=""enter image description here""></a></p>
","<grails><grails-plugin><shiro>","0","43507212"
"43999696","How to set a shiro subject as current subject in SecurityUtils?","<p>I am working on shiro sessions on jetty server and jersey web services. I have created a filter which have a map like subjectMap. In this map the String is a accessToken and each authenticated token is associated with a authenticated subject. I want to make a particular subject as current session subject, so that I can directly access that subject in other controller classes like SecurityUtils.getSubject(). </p>

<p>Is there any way to use that authenticated Shiro Subject as current Subject in any Controller?</p>
","<java><jersey><shiro>","0",""
"34490747","Enabling/Disabling Shiro Security - Apache Camel","<p>i'm using Apache Camel route and i want to enable/disable Shiro security.</p>

<p>This is the route (blueprint.xml):</p>

<pre><code>&lt;bean id=""shiroPolicy"" class=""org.apache.camel.component.shiro.security.ShiroSecurityPolicy""&gt;
     &lt;argument value=""shiro.ini""/&gt;
 &lt;/bean&gt;

&lt;route&gt;
&lt;from uri=""bean:com.ngt.secured.ShiroSecurity?method=tokeninject(Exchange)""/&gt;
                &lt;policy ref=""shiroPolicy""&gt;
                        &lt;to uri=""bean:com.ngt.secured.transform?method=addrip(Exchange)""/&gt;
                         ...
                         some process..
                &lt;/policy&gt;
&lt;/route&gt;
</code></pre>

<p>This is token injection (ShiroSecurity.java):</p>

<pre><code>public void tokeninject(Exchange exchange) throws Exception
           {
           ShiroSecurityToken shiroSecurityToken = new ShiroSecurityToken(login,password);
           TestShiroSecurityTokenInjector shiroSecurityTokenInjector = new     TestShiroSecurityTokenInjector(shiroSecurityToken, passPhrase);
           shiroSecurityTokenInjector.process(exchange);
}
private static class TestShiroSecurityTokenInjector extends ShiroSecurityTokenInjector {
                   public TestShiroSecurityTokenInjector(ShiroSecurityToken shiroSecurityToken, byte[] bytes)
                   {
                        super(shiroSecurityToken, bytes);
                   }

                    public void process(Exchange exchange) throws Exception {
                        exchange.getIn().setHeader(""SHIRO_SECURITY_TOKEN"", encrypt());
                        //exchange.getIn().setBody(""Beatle Mania"");
                    }
           }
</code></pre>

<p>in this case Security is enabled. How do I disable it ? is there an option to set On/Off ? </p>
","<java><security><apache-camel><shiro><blueprint-osgi>","0",""
"18734526","How can I config apache shiro without xml document","<p>I need to deploy shiro for My j2ee app. But I use Annotation configuration in my whole project. So I don't want to deploy shiro with xml. But I didn't find any demo without xml in google. Can't someone can give me a hand to write some demo for me? Thanks!</p>
","<apache><java-ee><shiro>","2",""
"39034573","How Shiro can protect JSF-2 page from unprotected page without login?","<p>I try to set up Apache Shiro to JSF 2 pages.
I want to protect page1 but I can reach it without login from the unprotected home.xhtml.
From page1.xhtml with redirect I get to the loginpage.xhtml. (As defined)</p>

<p>If logged in it works fine.</p>

<p>It looks not the target but the 'from' page is supervised.
How do I have to modify shiro.ini to set 
home.xhtml available without login AND page1.xhtml NOT available without login?</p>

<h1>shiro.ini .....</h1>

<pre><code>[main]
authc.loginUrl = /faces/loginpage.xhtml
//authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter - It was the same without REM
securityManager.rememberMeManager.cookie.name = demoRememberMe
[users]
a = q
[roles]
a = *

[urls]
/home.xhtml = anon
/loginpage.xhtml = authc
/page1.xhtml = authc
/protected.xhtml = authc
/faces/home.xhtml = anon
/faces/loginpage.xhtml = authc
/faces/page1.xhtml = authc
/faces/protected.xhtml = authc
/** = anon
</code></pre>

<p>home.xhtml:</p>

<pre><code>&lt;h:commandButton action=""#{navigationController.moveToPage1}""  value=""Page 1"" &gt;
</code></pre>

<p>page1.xhtml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
   ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""
   xmlns:h=""http://java.sun.com/jsf/html""&gt;
         &lt;h:head&gt;
      &lt;title&gt;BEMO - Page 1&lt;/title&gt;      
      &lt;h:outputStylesheet library=""css"" name=""styles.css""  /&gt;   
   &lt;/h:head&gt;
      &lt;h:form&gt;
         &lt;h:commandButton action=""home?faces-redirect=true""
            value=""Back To Home Page"" /&gt;
      &lt;/h:form&gt;
   &lt;/h:body&gt;
&lt;/html&gt;
</code></pre>

<p>web.xml:</p>

<pre><code>&lt;filter&gt;
        &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
    &lt;/filter&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
</code></pre>
","<jsf-2><shiro>","0",""
"27401024","Shiro grails pluggin 1.2.1 for LDAP authentication with grails 2.4.2","<p>I'm using grails 2.4.2 and have installed shiro grails plugin 1.2.1. I want to enable LDAP authentication and it is giving error being fail to get initial context from com.sun.jndi.ldap.LdapCtxFactory (factory.getInitialContext(env)) throwing a NamingException,</p>

<p>Could not connect to ldap://:389: javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C0903C5, comment: AcceptSecurityContext error, data 52e, v23f0]</p>

<p>What could be the cause for this ? </p>
","<grails><ldap><shiro>","1",""
"36750350","Apache Shiro: ClassCastException on Realm","<p>Ok, I am officially confused.</p>

<p>In Shiro I have my own realm (DatastoreRealm) that extends AuthorizingRealm.  In my DatastoreRealm, I have the method ""<strong>clearCachedAuthorizationInfo</strong>"" which allows me to clear the users permissions, etc, (and then re-check) when those permissions change on the fly.</p>

<p>In order to get to that method, I have to get access to my <strong>DatastoreRealm</strong> object.
I do this in the following way...</p>

<pre><code>private static Realm lookupRealm(String realmName)  {
     SecurityManager securityManager = SecurityUtils.getSecurityManager();
     RealmSecurityManager realmSecurityManager = (RealmSecurityManager) securityManager;

     Collection&lt;Realm&gt; realms = realmSecurityManager.getRealms();
     for (Realm realm : realms) {
         if (realm.getName().equalsIgnoreCase(realmName)) {
             log.info(""look up realm name is : "" + realm.getName());
             return realm;
         }
     }
    return null; }
</code></pre>

<p>This seems to work fine.  It returns me a ""DatastoreRealm"" object.</p>

<p>Although when I call this method, I am forced to do the following...</p>

<pre><code> DatastoreRealm dsRealm =  (DatastoreRealm) lookupRealm(""rfRealm"");
</code></pre>

<p>Which throws a ""<strong>ClassCastException</strong>"" telling me...</p>

<pre><code>rf.gae.DatastoreRealm cannot be cast to rf.gae.DatastoreRealm
</code></pre>

<p>How/Why is this happening???</p>

<p>If I DON'T cast, and simply use the ""<strong>Realm</strong>"" object, the ""<strong>clearCachedAuthorizationInfo</strong>"" is not available to me!</p>

<p>Thanks in advance for the help!</p>
","<apache><classcastexception><shiro>","0",""
"44404474","Issue with shiro and ehcache","<p>I am using shiro for authentication along with ehcache.xml for enabling SSO.</p>

<p>My ehcache.xml looks like  </p>

<pre><code>&lt;ehcache xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:noNamespaceSchemaLocation=""ehcache.xsd"" updateCheck=""true""
         monitoring=""autodetect"" dynamicConfig=""true"" name=""my-cache""&gt;

    &lt;diskStore path=""java.io.tmpdir/mycache"" /&gt;


    &lt;cache name=""shiro-activeSessionCache"" maxElementsInMemory=""1000""
           eternal=""true"" overflowToDisk=""true"" memoryStoreEvictionPolicy=""LFU""&gt;

    &lt;/cache&gt;

    &lt;defaultCache maxElementsInMemory=""100"" eternal=""true""
                  overflowToDisk=""true"" memoryStoreEvictionPolicy=""LFU""&gt;
    &lt;/defaultCache&gt;
&lt;/ehcache&gt;
</code></pre>

<p>I have a factory class like below</p>

<pre><code>public class SharedEhCacheManagerFactory implements Factory&lt;CacheManager&gt; {

    private String cacheManagerConfigFile = ""/ehcache.xml"";

    @Override
    public CacheManager getInstance()
    {
        return CacheManager.create(readCacheManagerConfigFileAsInputStream());
    }

    public InputStream readCacheManagerConfigFileAsInputStream()
    {
        InputStream is = getClass().getResourceAsStream(cacheManagerConfigFile);
        return is;
    }
}
</code></pre>

<p>And my shiro.ini files main section for all webapps is like </p>

<pre><code>[main]
ehCacheManager = com.nokia.anv.app.security.service.SharedEhCacheManagerFactory
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManager=$ehCacheManager
securityManager.cacheManager = $cacheManager

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.sessionDAO = $sessionDAO

cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie.name = SSOCookie
cookie.path = /
sessionManager.sessionIdCookie = $cookie
sessionManager.sessionIdUrlRewritingEnabled = false
securityManager.sessionManager = $sessionManager
</code></pre>

<p>I am using apache karaf and this apps comes in a docker container. When I start the container for the first time everything is fine, but if I stop and start the container I am getting the error for most of the appllications like </p>

<pre><code>javax.servlet.ServletException: java.lang.IllegalStateException: The CacheManager has been shut down. It can no longer be used.
        at org.apache.shiro.web.servlet.AdviceFilter.cleanup(AdviceFilter.java:196)
        at org.apache.shiro.web.filter.authc.AuthenticatingFilter.cleanup(AuthenticatingFilter.java:155)
        at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:148)
        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
        at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
        at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
        at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
</code></pre>

<p>But always two applications are fine. Please let me to what is the issue.</p>
","<java><ehcache><shiro>","0",""
"24059679","Where does Apache Shiro belongs in a tech stack?","<p>Apologies if this has been somehow already answered somewhere - I can't seem to find an appropriate response to my question. Here goes ... </p>

<p>I am currently working on an app accessible via REST. My current teck stack is as follows:</p>

<ul>
<li>The presentation layer - exposing the functionality in REST</li>
<li>The service layer - taking care of all the business logic, and</li>
<li>The persistence layer - taking care of all DAOs and database-related affairs.</li>
</ul>

<p><em>All of this (including Shiro) is autowored using Spring's IoC.</em></p>

<p>Shiro is currently wired in the presentation layer, making sure all of the calls are protected. The questions I have are: <strong>is this the right approach? Does it make sense to apply it to the service layer and, even more so, to the persistence layer?</strong></p>

<p>Many thanks.</p>
","<spring><security><spring-security><ws-security><shiro>","1",""
"25675533","Shiro Guice PermissionsResolver","<p>In the Shiro docs, they configure the global PermissionsResolver in the shiro.ini (see <a href=""http://shiro.apache.org/authorization.html#Authorization-Configuringaglobal%7B%7BPermissionResolver%7D%7D"" rel=""nofollow"" title=""PermissionResolver"">permissionResolver</a> ).</p>

<pre><code>globalPermissionResolver = com.foo.bar.authz.MyPermissionResolver
...
securityManager.authorizer.permissionResolver = $globalPermissionResolver
</code></pre>

<p>However, I am using Guice, so I don't want to rely on the shiro.ini. I know that I can call 
<code>setPermissionResolver()</code> in my <code>Realm</code>   but I would rather not since I have multiple <code>Realm</code>s. </p>

<p>Any ideas? Thanks.</p>
","<java><guice><shiro>","2","25941030"
"43633633","Exclude urls from filters in shiro in grails","<p>I have multiple url's for which i need machine to machine(MToM) authentication to be done and some url's for which authentication is not required. How to exclude the urls for which authentication is needed.
My code looks like this...</p>

<pre><code>class MToMFilters {

    def filters = {

        all(uri: ""/api/mtom/**"") {
             before = {
                boolean isAccessControl = false
                validateRequest(controllerName,actionName,isAccessControl)
                if(isAccessControl)
                    accessControl()
             }
        }

        allUser(uri:""/user/**""){
            before = {
                if (
                    !(controllerName == 'office' &amp;&amp; actionName == 'hall') &amp;&amp;
                    !(request.forwardURI.contains(""/api/""))
                ) {
                    accessControl()
                }
            }
        }

    }
    def validateRequest(String controllerName,String actionName,boolean isAccessControl){
        def isValidRequest = false
        MToMToken authToken = new MToMToken(username:""xyz"")
        try {
            SecurityUtils.subject.login(authToken)
            isValidRequest = true
            //if no exception, that's it, we're done!
        } catch ( UnknownAccountException uae ) {
            //username wasn't in the system, show them an error message?
            log.error uae
        } catch ( IncorrectCredentialsException ice ) {
            //password didn't match, try again?
            log.error ice
        } catch ( LockedAccountException lae ) {
            //account for that username is locked - can't login.  Show them a message?
            log.error lae
        } catch ( AuthenticationException ae ) {
            //unexpected condition - error?
            log.error ae
        }

        if(!isValidRequest) {
            render(contentType: ""application/json"") {
                def err = new Error(statusCode:4001, statusMessage:""Invalid source client or Request was tempered."")
                new Response(error: [err], statusCode:4001, statusMessage:""Invalid source client or Request was tempered."")
            }
            return false
        }

        log.info ""User authenticated successfully!""
        log.info ""isValidRequest: ""+isValidRequest
        if (!(controllerName == 'office' &amp;&amp; actionName == 'hall') &amp;&amp; isValidRequest) {
            isAccessControl = true
        }
    }

}
</code></pre>

<p>I have a url which should not go via authentication like this:/api/mtom/abcd</p>
","<authentication><grails><shiro>","1",""
"39239527","Suggestion/Guidance to Implementing LDAP (Active Directory) authentication","<p><strong>Problem Statement:</strong></p>

<p>I am trying to build a custom management system which would require authentication and authorization both. 
The system needs to have capabilities to manage/create/update/delete users, roles, permissions and groups. </p>

<p><strong>My Design Solution</strong></p>

<p>I am planing to implement this in-house from scratch and would provide authentication and authorization as follows.</p>

<p>Authentication : user would provide their credentials and the system would authenticate if the user is valid or not.</p>

<p>Authorization: once the user is authenticated, based on the user groups and the permissions they could access the requested pages on the site. </p>

<p><strong>Question:</strong></p>

<p>Now, my question is that suppose I have this application built successfully and in future my application requires LDAP (active directory) authentication would it be possible to plug in LDAP related features keeping my existing application intact or I would have to re-write the entire or most application using LDAP API's.</p>

<p>I have had a look at at apache shiro and spring security which
provides LDAP functionality and they also provide capabilities to manage/create/update/delete users.</p>

<p>As of now I have not yet decided if I would go with either of them or write my own. </p>

<p>Would appreciate if I could get a detailed reponse about how to go about things.</p>

<p><strong>Note:</strong> 
I am a complete newbie to LDAP so please excuse me if I have used some wrong terminology with regards to LDAP. </p>
","<ldap><shiro><spring-ldap>","0","39270181"
"17532368","How to filter [urls ]using package and not folder with Apache Shiro","<p>Is it possible to use servlets's package name instead of JSP's folder to filter specific page?</p>

<p>Actually, i can filter the access to all JSP pages inside a given folder but what I want is to filter some servlets's urlPatterns.</p>

<p>example: let's suppose I have <em><code>Servlet1</code></em> and <em><code>Servlet2</code></em> inside the package <em><code>com.myProject.controller</code></em>:
can I use something like this to filter the urlPatterns of these Servlet:</p>

<pre><code>[urls]  
/login.jsp = authc
/logout = logout 
/com.myProject.controller/** = user, roles[admin]
</code></pre>
","<security><jsp><java-ee><servlets><shiro>","0",""
"19040620","Disable Dynamic Routing capability in Camel","<p>With Camel, it is possible to add routes dynamically to the context. And it appears the context is always passed as part of the exchange. </p>

<p>Is there a way to prevent applications from adding routes at runtime? I looked at Shiro security but did not seem to find something along those lines.</p>
","<apache-camel><shiro>","0",""
"24525556","why apache shiro WildcardPermisssion object not work in version 1.2.0","<p>I will use WildcardPermission in my code. I use it Similar following code:  </p>

<pre><code>getSubject().isPermitted(new WildcardPermission(""a:b:*""));
getSubject().isPermitted(new WildcardPermission(""a:b""));
getSubject().isPermitted(new WildcardPermission(""a:b:c,d""));
getSubject().isPermitted(new WildcardPermission(""a:b:c""));
getSubject().isPermitted(new WildcardPermission(""a:b:d""));  
</code></pre>

<p>The first 3 lines return false but lines 4 and 5 return true. I use apache shiro 1.2.0.<br>
Have i any mistake? Do you have any solution for it?<br>
Thanks.</p>
","<shiro>","1",""
"22350513","Date field not working properly in grails","<p>I have a <code>lastLogin</code> field in my <code>User</code> domain class with type <code>Date</code>. I use it to track the last login date with time. When a user logs in successfully I change this field value as under,</p>

<pre><code>someUser.lastLogin = new Date()
 someUser.save()
</code></pre>

<p>When I view that user in list the lastLogin value looks like this <code>2014-38-12 04:38:40</code> i.e the <code>month</code> in the <code>date</code> is replaced by the <code>time</code>.  Every time I try, this occurs. Help will be appreciated. </p>
","<date><grails><groovy><gorm><shiro>","1","22350665"
"31843528","How to change which resources answers a request from Servlet Filter?","<p>I have a <code>ServletFilter</code> (which happens to be a <code>GuiceShiroFilter</code>) that processes incoming web requests before they go to a Jersey 1.x Resource.</p>

<p>However, in some situations (namely when Shiro finds that the request is not authenticated), I want to change which Jersey resource answers my request, without the resource that otherwise <em>would</em> have answered even being able to respond.</p>

<p>Here's what I have (in my Shiro <code>AuthenticatingFilter</code>.<code>onLoginFailure()</code>):</p>

<pre><code>ServletRequest request = ...;
RequestDispatcher disp = request.getRequestDispatcher(""/resource/that/always/responsds/with/a/403"");
try {
    disp.forward(request, response);
} catch (ServletException | IOException e) {
    e.printStackTrace();
}

// this is needed to prevent the woud-be resource from responding as well
return false;
</code></pre>

<p>The problem of this server-side redirect is that not returning <code>false</code> will invoke both my resource for <code>""/resource/that/always/responsds/with/a/403""</code> and the original would-be response, and in the best case the response body contains both responses concatenated.</p>

<p><strong>Is there a way to modify an existing instance of (<code>Http</code>)<code>ServletRequest</code> from a <code>Filter</code> such that later on, only the redirected-to resource can answer?</strong></p>
","<redirect><jersey><servlet-filters><shiro>","0",""
"41049888","Apache Shiro userRolesQuery only looking for an int","<p>I was able to authenticate using Apache Shiro, but now I need to authorize which means grabbing the roles from the database. The queries work, but only if I use roles that are integers. For some reason it is looking for roles to be integers. That seems unhelpful if I have to look for numbers as roles, am I missing some setting that tells Shiro to look for a string or varchar?</p>

<p>Here is my Shiro.ini file:</p>

<pre><code>[main]
ds = org.apache.shiro.jndi.JndiObjectFactory 
ds.requiredType = javax.sql.DataSource
ds.resourceName = jdbc/SQL05

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT company_password FROM CompanyUser where company_username = ?
jdbcRealm.userRolesQuery = SELECT role FROM CompanyUser where company_username = ?
</code></pre>

<p>Authentication.java</p>

<pre><code>        System.setProperty(""log4j.category.org.apache.shiro"", ""DEBUG"");          
        Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
        SecurityManager securityManager = factory.getInstance();
        SecurityUtils.setSecurityManager(securityManager);
        Subject currentUser = SecurityUtils.getSubject();
        String  b = ""false"";
        log.info(""WTF"");
        try{
            if (!currentUser.isAuthenticated()) {

                UsernamePasswordToken token = new UsernamePasswordToken(""user1"", ""test"")   ;
                token.setRememberMe(true);
                try {                        
                    currentUser.login(token); 
                    b = ""You have successfully logged in user: "" + token.getPrincipal().toString();
                    if (currentUser.hasRole(""1"")) {
                        b += "" and they have the role of being awesome"";
                    } else {
                       b += "" and we can't find the role yet."";
                    }

                }catch (UnknownAccountException uae) {
                    b =  token.getPrincipal().toString();
                    log.info(""There is no user with username of "" + token.getPrincipal().toString());
                } 
            }
        }catch (AuthenticationException ae) {
            b = ae.toString();
            log.info(b);
        }catch(Exception e){
            b = e.toString();
            log.info(b);
        }
</code></pre>

<p>So to be clear, this currently works, because I have:</p>

<pre><code> currentUser.hasRole(""1"")
</code></pre>

<p>In there and the role field has a 1 in it for that username. If I change the 1 to ""awesome"" (without quotes) in both places I get the following error:</p>

<blockquote>
  <p>Severe:   com.microsoft.sqlserver.jdbc.SQLServerException: Conversion failed when converting the nvarchar value 'Awesome' to data type int.</p>
</blockquote>

<p>So how do I get it to accept strings?</p>

<p>My table CompanyUser:</p>

<blockquote>
  <p>userid int not null auto increment </p>
  
  <p>personid int not null</p>
  
  <p>company_username varchar(15) not null </p>
  
  <p>company_password varchar(15) not</p>
  
  <p>null role varchar(20) not null</p>
</blockquote>

<p>For some reason it is trying to convert the column ""role"" to an int.</p>
","<java><security><authorization><shiro>","0",""
"40857878","Trying to secure Spring Web MVC using Apache Shiro where user management is achieved through Stormpath Api.","<p>I am trying to secure my Spring Web MVC project using Apache Shiro and Stormpath. I went through some tutorials on the web and got an example configuration through shiro.ini file example, and also configuring Shiro through Spring's applicationContext.xml. I am trying to get the same results from both the methods. 
Here's the shiro.ini file:</p>

<blockquote>
  <p>[main]</p>
  
  <p>shiro.loginUrl = admin/login.htm</p>
  
  <p>authc.successUrl = /admin/index.htm</p>
  
  <p>cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager</p>
  
  <p>securityManager.cacheManager = $cacheManager</p>
  
  <p>stormpathClient = com.stormpath.shiro.client.ClientFactory</p>
  
  <p>stormpathClient.cacheManager = $cacheManager</p>
  
  <p>stormpathClient.apiKeyFileLocation =
  $HOME/.stormpath/apiKey.properties</p>
  
  <p>stormpathRealm = com.stormpath.shiro.realm.ApplicationRealm</p>
  
  <p>stormpathRealm.client = $stormpathClient</p>
  
  <p>stormpathRealm.applicationRestUrl =
  <a href=""https://api.stormpath.com/v1/applications/"" rel=""nofollow noreferrer"">https://api.stormpath.com/v1/applications/</a></p>
  
  <p>stormpathRealm.groupRoleResolver.modeNames = name</p>
  
  <p>securityManager.realm = $stormpathRealm</p>
  
  <p>[urls]</p>
  
  <p>/admin/** = authc</p>
  
  <p>/logout.htm = logout</p>
</blockquote>

<p>and here's the bean definations in the applicationContext.xml file:</p>

<pre><code> &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;   
    &lt;property name=""loginUrl"" value=""/admin/login.htm""/&gt;
    &lt;property name=""successUrl"" value=""/admin/index.htm""/&gt;
    &lt;!-- override these for application-specific URLs if you like:
    &lt;property name=""unauthorizedUrl"" value=""/unauthorized.jsp""/&gt; --&gt;
    &lt;!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  --&gt;
    &lt;!-- defined will be automatically acquired and available via its beanName in chain        --&gt;
    &lt;!-- definitions, but you can perform instance overrides or name aliases here if you like: --&gt;
    &lt;!-- &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""anAlias"" value-ref=""someFilter""/&gt;
        &lt;/util:map&gt;
    &lt;/property&gt; --&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;           
            /admin/** = authc, roles[admin]
            /logout.htm = logout  
            # some example chain definitions:
            #/docs/** = authc, perms[document:read]
            #/** = authc
            # more URL-to-FilterChain definitions here
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- Define any javax.servlet.Filter beans you want anywhere in this application context.   --&gt;
&lt;!-- They will automatically be acquired by the 'shiroFilter' bean above and made available --&gt;
&lt;!-- to the 'filterChainDefinitions' property.  Or you can manually/explicitly add them     --&gt;
&lt;!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for more details.       --&gt;
&lt;!--&lt;bean id=""someFilter"" class=""...""/&gt;
&lt;bean id=""anotherFilter"" class=""...""&gt; ... &lt;/bean&gt;
--&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. --&gt;
    &lt;property name=""realm"" ref=""myRealm""/&gt;
    &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;

    &lt;!-- By default the servlet container sessions will be used.  Uncomment this line
    to use shiro's native sessions (see the JavaDoc for more): --&gt;
    &lt;!-- &lt;property name=""sessionMode"" value=""native""/&gt; --&gt;
&lt;/bean&gt;
&lt;bean id=""stormpathClient"" class=""com.stormpath.shiro.client.ClientFactory""&gt;
    &lt;!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. --&gt;   
    &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;
    &lt;property name=""apiKeyFileLocation"" value=""$HOME/.stormpath/apiKey.properties""/&gt;
    &lt;!-- By default the servlet container sessions will be used.  Uncomment this line
    to use shiro's native sessions (see the JavaDoc for more): --&gt;
    &lt;!-- &lt;property name=""sessionMode"" value=""native""/&gt; --&gt;
&lt;/bean&gt;
&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;!-- Define the Shiro Realm implementation you want to use to connect to your back-end --&gt;
&lt;!-- security datasource: --&gt;
&lt;bean id=""myRealm"" class=""com.stormpath.shiro.realm.ApplicationRealm""&gt;
    &lt;property name=""applicationRestUrl"" value=""https://api.stormpath.com/v1/applications/&lt;my app key here removed for privacy&gt;""/&gt;   
    &lt;property name=""client"" ref=""stormpathClient""/&gt;

&lt;/bean&gt;

&lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager"" /&gt;  
</code></pre>

<p>I keep getting error saying:</p>

<p><em>Cannot convert value of type [com.stormpath.shiro.client.ClientFactory] to required type [com.stormpath.sdk.client.Client] for property 'client': no matching editors or conversion strategy found</em></p>

<p>This maybe because of incomplete maven dependency:</p>

<pre><code>    &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;
    &lt;version&gt;1.4.0-RC2&lt;/version&gt;
&lt;/dependency&gt;
&lt;!-- https://mvnrepository.com/artifact/com.stormpath.shiro/stormpath-shiro-core --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.stormpath.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;stormpath-shiro-core&lt;/artifactId&gt;
    &lt;version&gt;0.8.0-RC1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Can someone suggest the dependencies required to achieve this. </p>
","<xml><spring><maven><shiro><stormpath>","-1","40878606"
"38068569","Dropwizard-Shiro : Unauthorized Access Even After Logging in","<p>I wrote some rest web services using dropwizard. Then I used <a href=""https://github.com/silb/dropwizard-shiro/tree/release-0.2"" rel=""nofollow noreferrer"">dropwizard-shiro bundle</a> to secure my resources, which I have described in <a href=""https://stackoverflow.com/questions/37701155/securing-rest-service-resources-using-apache-shiro"">this</a> question. I've also used swagger UI to test my resources. Everything worked fine in the swagger UI. I wrote a php web application that consumes these services. There is a login page in the php application which calls my login service. The log in is successful but when trying to access some other resources through the php application, it gives Unauthorized Access error. Why am I getting this error? Is it because the created session expiring?</p>
","<java><dropwizard><shiro>","0",""
"33370636","Apache Shiro: Howto set principalSuffix in JndiLdapContextFactory?","<p>In Shiro's <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/realm/ldap/DefaultLdapContextFactory.html"" rel=""nofollow"">DefaultLdapContextFactory</a> it was possible to set a <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/realm/ldap/DefaultLdapContextFactory.html#setPrincipalSuffix(java.lang.String)"" rel=""nofollow"">principalSuffix</a>. </p>

<p>Since DefaultLdapContextFactory deprecated and <a href=""http://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/realm/ldap/JndiLdapContextFactory.html"" rel=""nofollow"">JndiLdapContextFactory</a> should be used instead, I wonder how to set a principalSuffix there. </p>

<p>I don't want to hard-code it, and found no way to define it in JndiLdapContextFactory.</p>
","<java><security><shiro>","2",""
"38975338","Login with passwordHash in Apache Shiro Grails","<p>I am using Apache Shiro plugin in grails for handling user Authentification. </p>

<p>I would like to add a feature to the admin part of the system, where our admin would be able to login for a particular user. </p>

<p>I want to avoid creating a new complex interface for admin.</p>

<p>How to login as a user, when I do not know his password, but only his passwordHash?</p>
","<grails><shiro><user-management>","1","38992131"
"41596973","How to integrte Apache shiro with wso2 identity server","<p>I am new to Apache shiro I want to use Apache shiro as a security frame work for my spring mvc based web application. Currently I am using wso2 identity server for authentication purpose.</p>
","<apache><shiro>","0",""
"43202869","Shiro returns 302 for correct session id as well for any API call","<p>I am using Jersey Framework and decided to use Shiro for authentication mechanism.</p>

<p>My problem is, I am able to generate session id and authenticate the user with login url, but using the same session key for any other API call is always resulting in a 302 response. It's actually happening automatically behind the scenes, and my API call is not even getting executed to perform other stuff.</p>

<p>Even the logs also say that session is found, but the API code never get's executed. Also, the doReadSession is getting called for at least 11 times.</p>

<p><strong>Here is my shiro.ini:</strong></p>

<pre><code>[main]
#Defining authentication filter and realm
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
mongoRealm = com.company.core.usermanagement.MongoRealm
securityManager.realms = $mongoRealm

#Defining session DAO and session Manager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionDAO = com.company.core.usermanagement.MongoSessionDAO
sessionManager.sessionDAO = $sessionDAO
sessionManager.globalSessionTimeout = 10000

sessionManager.sessionValidationSchedulerEnabled = false
securityManager.sessionManager = $sessionManager

#Session cache manager
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

authc.loginUrl = /api/userlogin

[urls]
/api/userlogin = authc
/api/** = noSessionCreation, authc
</code></pre>

<p><strong>Here are my API calls and response:</strong></p>

<pre><code>curl -i -X POST -H ""Content-Type: application/json"" -d '{""username"": ""admin"", ""password"": ""password"", ""rememberMe"": true}' http://localhost:8080/securitysample/api/userlogin
</code></pre>

<p><strong>Response (Expected and Actual):</strong></p>

<pre><code>HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965; Path=/securitysample; HttpOnly
Set-Cookie: rememberMe=deleteMe; Path=/atlantis-analytics; Max-Age=0; Expires=Mon, 03-Apr-2017 07:50:21 GMT
Set-Cookie: rememberMe=pPC2qCOGj93a/sWbOSngHMW3WFAXYnUeINnhLtuNzAf6dAh56APdoArG3k1JWuCZ4I9ljPjqmRqaPYGtalY2ZIMKkCZfs0LvjL+k+4SKTbA8BC5232jrBBYszzphSGsal4+EGPDK29OkeHUY3Yi4ld+3wMNuyP/CoaZUjcqZ5qPpj1c5ym7qFj4ylZGf4qscAOtkzqNeste0zns2jTtxakhMKzyqgAXFohrhi3eeBqmpaLGXuUN1z4v5jFxV14nqsIAVWiqr1x2BVXfAWD946UyrjYlFO92g+TQkuLxkAW2WKTyOYtFUDUM+/AVeUGQc5Tdkj8X94BkywvUuE6BpUQ7BpYaIn9PiC7L5GRRpQ+1L3elEi9XJ6OQ92x8E9xTMPMsr7iFiHqc1edUMhQJmTrRUJPx1iFa1uK+yGz9I6IsDKO4JYWlu7INouiiuFgnSOCpNhChDBXwbACJ9cFp2Fv9qcBx/Ucx5Kuh71qIJpRct53kz5C7NGffuNOmj9tvqf3vRaBZKe+RxpuiCvnFVCwLMpAHutSDA7Kh3EGkeTaYaS9oRgWdd/U/QwIEJ1j1iMVaeK7H6+EhvTr15hJTmuA==; Path=/securitysample; Max-Age=31536000; Expires=Wed, 04-Apr-2018 07:50:21 GMT; HttpOnly
Access-Control-Allow-Origin: *
Content-Type: */*
Content-Length: 18
Date: Tue, 04 Apr 2017 07:50:21 GMT
</code></pre>

<p>This is totally expected and I get a session id which is stored in my mongo db as well. But call to any other API is always resulting in 302 and the actual api code is never getting executed.</p>

<p><strong>Any other API call:</strong></p>

<pre><code>curl -i -X GET -H ""Cookie: JSESSIONID=d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965"" http://localhost:8080/securitysample/api/projects?username=admin
</code></pre>

<p><strong>Response (Actual and not expected):</strong></p>

<pre><code>HTTP/1.1 302 Moved Temporarily
Server: Apache-Coyote/1.1
Location: http://localhost:8080/securitysample/api/userlogin
Content-Length: 0
Date: Tue, 04 Apr 2017 07:55:30 GMT
</code></pre>

<p>Here are the server logs upon calling any other API:</p>

<pre><code>2017-04-04 13:25:30 DEBUG SimpleCookie:389 - Found 'JSESSIONID' cookie value [d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965]
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 DEBUG MongoSessionDAO:30 - Update session
2017-04-04 13:25:30 INFO  MongoSessionDAO:68 - doReadSession - Looking for session id: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 INFO  MongoProvider:19 - In init() Method
2017-04-04 13:25:30 INFO  MongoProvider:86 - In getCollection() Method
2017-04-04 13:25:30 INFO  MongoSessionDAO:85 - Found session: d2594305-e7e1-4bf6-a4ea-6ff2ee9c7965
2017-04-04 13:25:30 DEBUG MongoSessionDAO:30 - Update session
</code></pre>

<p>Can someone please tell where I am doing mistake? Don't understand why doReadSession is being called so many times. I have spent a lot of time in reading shiro documentations and tried lots of other filters such user, anon etc. None is working. Please help.</p>
","<session><authentication><shiro><http-status-code-302>","0",""
"45691345","How to configure the filter chain programmatically?","<p>Is there a way to do programmatic restriction of  <code>user</code> access to a particular <code>[URL]</code> based on the said <code>users</code> <code>role</code>.
<br/> <br/>
For example in a <code>shiro.ini</code> file you could define :</p>

<pre><code>      [urls]
      ...
  1.  /app/**= user
</code></pre>

<p>which can be achieved in code be defining a <code>filter chain</code> as so:</p>

<pre><code> .....

 UserFilter user = new UserFilter();//create user filter
 user.setLoginUrl(""login.xhtml"");


FilterChainManager fcMan = new DefaultFilterChainManager();
fcMan.addFilter(""user"", user);//add filter to filter chain
fcMan.createChain(""/app/**"", ""user"");//define url path expression for filterName

.....
</code></pre>

<p>My question here is how do I achieve that with <code>roles</code> as i would have done in a <code>shiro.ini</code> file as so :</p>

<pre><code>[urls]
...
/api/admin/**= user, roles[admin]
...
</code></pre>

<p>for example: </p>

<pre><code>RolesAuthorizationFilter adminRole = new RolesAuthorizationFilter();//eg create role filter      
adminRole.setLoginUrl(""login.xhtml"");
UserFilter user = new UserFilter();//create user filter
user.setLoginUrl(""login.xhtml"");


FilterChainManager fcMan = new DefaultFilterChainManager();

fcMan.addFilter(""user"", user);
fcMan.addFilter(""admin"", adminRole);      
fcMan.createChain(""/api/admin/**"", ""admin"");
</code></pre>
","<java-ee><shiro><java-ee-7>","0","45730449"
"39211179","Apache Shiro add URL Exception for Spring MVC project","<p>I am developing a system with Maven + Spring MVC + Apache Shiro. 
Here is my shiro beans</p>

<pre><code>&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt; 
    &lt;property name=""sessionMode"" value=""native""/&gt; 
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/login.jsp""/&gt; 
    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""authc""&gt;
                &lt;bean class=""org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter""/&gt;
            &lt;/entry&gt;
        &lt;/util:map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /static/** = anon
            /index.jsp = anon
            /login.jsp = anon
            /user/login = anon
            /user/register = anon 
            /client/face = anon
            /user/logout = logout
            /** = authc
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;
</code></pre>

<p>After Adding those beans. Now all requests will be redirect to login page. </p>

<p>I wander how to add URL exceptions. Like “/show” will not be asked for login or any other authorization method.</p>
","<java><spring><servlets><shiro><url-mapping>","0",""
"37287981","Apache Shiro MD5Hash and SimpleHash generate different values","<p>I am new to security and Apache Shiro. I am learning Shiro recently.
As far as I have learnt there are two ways to hash a value by using md5, the code is below.</p>

<pre><code>public static void main(String[] args) {
    SecureRandomNumberGenerator generator = new SecureRandomNumberGenerator();
    ByteSource nextByteSource = generator.nextBytes();
    Md5Hash md5Hash = new Md5Hash(""234"", ByteSource.Util.bytes(nextByteSource));

    int iterations = 2;
    md5Hash.setIterations(iterations);
    System.out.println(""md5hash to hex: ""+md5Hash.toHex());
    SimpleHash hash = new SimpleHash(""md5"",""234"",ByteSource.Util.bytes(nextByteSource),iterations);
    System.out.println(""simple hash to hex: ""+hash.toHex());
}
</code></pre>

<p>Both Md5Hash and SimpleHash use the same algorithm, same salt, same input and same iterations, but the outputs are different:</p>

<pre><code>md5hash to hex: 93a2bb8a10727716085e3ae234a90fc8
simple hash to hex: e691e292d8300f29c6e0c448f1ecba76
</code></pre>

<p>What makes the two hashed values different?</p>
","<java><security><shiro>","0",""
"23704652","What is the recommended version of ehcache for shiro?","<p>I have been through the Apache Shiro 1.2.3 website and I can not find the recommended version of Ehcache. </p>

<p>The latest version of Ehcache, 2.8.2 does not work.</p>

<p>An older version of Ehcache, 2.4.7 <em>seems</em> to work.</p>

<p>Any help, feedback on what you use?</p>
","<ehcache><shiro>","0","23763308"
"39000002","Tomcat connection pool with both Shiro and Postgres","<p>I'm trying to add some efficiency to my web app with Tomcat jdbc connection pool. Currently i have configured it to work with Shiro - it saves logins in Postgres db. But at the same time i have other part of my app that needs to work with Postgres db. Is it possible to configure only one pool to be available both for Shiro and my app?</p>

<p>Part of the shiro.ini about jdbc:</p>

<pre><code>ds = org.apache.tomcat.jdbc.pool.DataSource
ds.driverClassName = org.postgresql.Driver
ds.username = shiroadmin
ds.password = adminshiro
ds.url = jdbc:postgresql://localhost:5432/cleb

jdbcRealm.dataSource = $ds
</code></pre>

<p>PS: i'm using tomcat pool as a maven dependency</p>
","<java><postgresql><tomcat><jdbc><shiro>","1",""
"28445678","Optional login with Shiro","<p>I am using Apache Shiro in my java application to provide authentication and permission to my application.</p>

<p>I have my rest-api bind to authcBasic[permissive], rest.</p>

<p>And my webapplication  bind to /** = authc</p>

<p>By default, authc will requires the requesting user to be authenticated to be able to access to the content. But in my application, I want to be able to let the unknown user to access the app without login and display only certain type of content and let the user the choice of login or not.</p>

<p>Is there any way to achieve that with Shiro? I was thinking about removing the authc and create a custom login function via my rest api. But i am not sure if it will be enough.</p>

<p>Thanksss.</p>
","<java><shiro>","2",""
"45689970","Cannot get principal in SecurityUtils.getSubject()","<p>Using Shiro, when login</p>

<pre><code>@RequestMapping(value = ""/login"", method = RequestMethod.POST)
    @ResponseBody
    public ResponseEntity&lt;RestResult&gt; login(@Valid @RequestBody User user, BindingResult result,
                                            HttpSession session, HttpServletRequest request) {
        Subject subject = SecurityUtils.getSubject();
        Result result = userService.login(user.getName(), user.getPassword());
        if (result.isSuccess()) {
            UsernamePasswordToken token = new UsernamePasswordToken(user.getName(), user.getPassword(), false,
                            request.getRemoteHost());
            subject.login(token);
        }
        return result.toResponseEntity();
    }
</code></pre>

<p>and in logout method:</p>

<pre><code>   @RequestMapping(""/logout"")
@ResponseBody
public ResponseEntity&lt;RestResult&gt; logout(HttpSession session) {
    Subject subject = SecurityUtils.getSubject();
    subject.logout();
    return Result.success().build();
}
</code></pre>

<p>the snippet seems OK，but in the logout method, members in the subject as below,
<a href=""https://i.stack.imgur.com/rF4vp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rF4vp.png"" alt=""enter image description here""></a></p>

<p>as the picture indicates the principal is null, so, what's the matter?</p>
","<java><shiro>","0",""
"38143462","Different Sessions Created For Each Request From A Different Port","<p>I have written some web services in dropwizard and secured the resources using <a href=""https://github.com/silb/dropwizard-shiro"" rel=""nofollow"">dropwizard-shiro bundle</a>. I have annotated the JAX-RS resources with @RequiresAuthentication. These services run on port 8585. I have another php web application running on port 80, consuming those services. The web application has a login form which consumes my login service. The login is successful and creates a new session in port 8585. But when the next request comes to my services, it is coming with another session ID. I have swagger UI running on port 8585 and it is working fine. What mistake am I doing? Should I have to configure anything with ports?</p>
","<java><session><dropwizard><shiro>","0","38217210"
"40150043","When I try to run my war on Wildfly 8.1 I get Error: Caused by: java.lang.ClassNotFoundException com.myapp.myappname.api.shiro.ShiroSecuredInterceptor","<p>When I try to enable my war on Wildfly 8.1 installed on my ubuntu server I get the next error. But when I try to run my app on netbeans all its running ok. What can I do? something with modules?:</p>

<pre><code> 10:49:49,918 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-12) MSC000001: Failed to start service jboss.deployment.unit.""MyAppName-web-1.0-SNAPSHOT.war"".WeldStartService: org.jboss.msc.service.StartException in service jboss.deployment.unit.""MyAppName-web-1.0-SNAPSHOT.war"".WeldStartService: Failed to start service
at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1904) [jboss-msc-1.2.2.Final.jar:1.2.2.Final]
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_101]
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_101]
at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_101]
 Caused by: org.jboss.weld.exceptions.DeploymentException: WELD-000123: Error loading com.myapp.myappname.api.shiro.ShiroSecuredInterceptor defined in &lt;class&gt;com.myapp.myappname.api.shiro.ShiroSecuredInterceptor&lt;/class&gt; in vfs:/content/MyAppName-web-1.0-SNAPSHOT.war/WEB-INF/beans.xml@7
at org.jboss.weld.bootstrap.enablement.GlobalEnablementBuilder$ClassLoader.apply(GlobalEnablementBuilder.java:265)
at org.jboss.weld.bootstrap.enablement.GlobalEnablementBuilder$ClassLoader.apply(GlobalEnablementBuilder.java:252)
at com.google.common.collect.Lists$TransformingRandomAccessList$1.transform(Lists.java:582)
at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48)
at com.google.common.collect.ImmutableCollection$Builder.addAll(ImmutableCollection.java:281)
at com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.addAll(ImmutableCollection.java:360)
at com.google.common.collect.ImmutableList$Builder.addAll(ImmutableList.java:665)
at org.jboss.weld.bootstrap.enablement.GlobalEnablementBuilder.createModuleEnablement(GlobalEnablementBuilder.java:224)
at org.jboss.weld.bootstrap.BeanDeployment.createEnabled(BeanDeployment.java:217)
at org.jboss.weld.bootstrap.WeldStartup.startInitialization(WeldStartup.java:344)
at org.jboss.weld.bootstrap.WeldBootstrap.startInitialization(WeldBootstrap.java:73)
at org.jboss.as.weld.WeldStartService.start(WeldStartService.java:91)
at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948) [jboss-msc-1.2.2.Final.jar:1.2.2.Final]
at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881) [jboss-msc-1.2.2.Final.jar:1.2.2.Final]
... 3 more
 Caused by: java.lang.ClassNotFoundException: com.myapp.myappname.api.shiro.ShiroSecuredInterceptor from [Module ""deployment.MyAppName-web-1.0-SNAPSHOT.war:main"" from Service Module Loader]
at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:213) [jboss-modules.jar:1.3.3.Final]
at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:459) [jboss-modules.jar:1.3.3.Final]
at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:408) [jboss-modules.jar:1.3.3.Final]
at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:389) [jboss-modules.jar:1.3.3.Final]
at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:134) [jboss-modules.jar:1.3.3.Final]
at org.jboss.as.weld.WeldModuleResourceLoader.classForName(WeldModuleResourceLoader.java:68)
at org.jboss.weld.bootstrap.enablement.GlobalEnablementBuilder$ClassLoader.apply(GlobalEnablementBuilder.java:263)
... 16 more
</code></pre>

<p>The interceptor is declared at:</p>

<p>WEB-INF/beans.xml:        </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd""
   bean-discovery-mode=""annotated""&gt;
&lt;interceptors&gt;
    &lt;class&gt;com.mycompany.myapp.api.shiro.ShiroSecuredInterceptor&lt;/class&gt;
&lt;/interceptors&gt;
&lt;/beans&gt;
</code></pre>
","<java><wildfly><wildfly-8><shiro>","0",""
"38451532","Implement Caching in Apache Shiro using JBoss Infinspan","<p>I am using Apache shiro in a project for security implementation. I have injected the security realm using CDI. I want to implement authentication and authorization caching in shiro using Jboss Infinispan. Can someone please share some pointers?</p>
","<java><shiro><infinispan>","-1","38452296"
"33804899","ApacheShiro -SSO using Storm path","<p>I have set up my two applications in single tomcat instance using the procedure described in <a href=""https://support.stormpath.com/hc/en-us/articles/203815036-Can-I-SSO-between-multiple-Wars-in-the-same-servlet-with-Stormpath-and-Apache-Shiro-"" rel=""nofollow"" title=""Entry in the support knowledge base of Stormpath about SSO for multiple wars"">Can I SSO between multiple Wars in the same servlet with Stormpath and Apache Shiro?</a> </p>

<p>Both of the WARs run fine individually with the users registered in Stormpath directory. But when I link the two applications and do successful login in War A, still redirected to the Login Page of WAR B and I need to login again. I also see the jSessionId is different on login page of WAR A and WAR B. So somehow both the applications are not getting linked.</p>
","<java><tomcat7><single-sign-on><shiro><stormpath>","0",""
"42220919","Apache Shiro: not able to access secured URL although logged in successfully","<p>Im currenlty working on a Java EE Web application with Spring MVC.
I want to secure it with Apache Shiro and the form-based authentication with the
FormAuthenticationFilter is already working. 
Now i want to customize the login and write my own login-controller.</p>

<p>Here is my Problem: the authentication works, I don't get any exceptions, but I am still unable to acess the secured URL (/welcome.jsp), even if I try to access it directly, although I am logged in correctly (Subject.isAuthenticated returns true) .</p>

<p>Here is my shiro.ini:</p>

<pre><code># =======================
# Shiro INI configuration
# =======================

[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
#authc = org.apache.shiro.web.filter.authc.FormAuthenticationFilter
authc.loginUrl = /login.jsp
authc.successUrl = /welcome.jsp

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

[users]
admin=admin, ROLE_ADMIN

[roles]
ROLE_ADMIN = *

[urls]
/login.jsp = authc
/welcome.jsp = authc
</code></pre>

<p>And here is the method in the respective controller class:</p>

<pre><code>@RequestMapping(value=""/login"", params ={""username"",""password""})
public ModelAndView login(HttpServletRequest request, HttpServletResponse response,
     @RequestParam(""username"") String username, @RequestParam(""password"") String password) {

     if (!this.currentUser.isAuthenticated()) {
            UsernamePasswordToken token = new UsernamePasswordToken(username, password);
            try {
                this.currentUser.login(token);
            } catch (UnknownAccountException uae) {
                logger.info(""There is no user with username of "" + token.getPrincipal());
            } catch (IncorrectCredentialsException ice) {
                logger.info(""Password for account "" + token.getPrincipal() + "" was incorrect!"");
            } catch (LockedAccountException lae) {
                logger.info(""The account for username "" + token.getPrincipal() + "" is locked.  "" +
                        ""Please contact your administrator to unlock it."");
            }

            catch (AuthenticationException ae) {
                //TODO
            }


            logger.info(""User ["" + currentUser.getPrincipal() + ""] logged in successfully."");

        }

    String message = """";
    ModelAndView modelAndView = new ModelAndView(""login"", ""message"", message);
    String fallbackUrl = ""/welcome.jsp"";
    try
    {
        WebUtils.redirectToSavedRequest(request, response, fallbackUrl);
    }
    catch (IOException e)
    {
        e.printStackTrace();
    }

    return modelAndView;
}
</code></pre>

<p>I would be very happy, if someone could tell me, what I'm doing wrong, I am stuck at this for a few days now and haven't found anything on the web.</p>

<p>With best regards,
M.B.</p>

<p>P.S. I haven't posted my web.xml, and my pom.xml because shiro is already working with the FormAuthenticationFilter. But if someone still needs these files to give me an answer, it is no problem, to post them too.</p>

<p><strong>UPDATE 1:</strong> It has to be an issue with Shiro itself. If I escape only the last line in the shiro.ini file,</p>

<pre><code> #/welcome.jsp = authc
</code></pre>

<p>the redirection works correctly and the username: ""admin"" is only shown on the welcome-page, if I enter the username and password correctly.</p>

<p>For some reason, shiro doesn't accept the authenticated user but I have absolutely no idea why.</p>
","<java><apache><spring-mvc><shiro>","0",""
"41623577","Apache Shiro: GET /login results in 406 HTTP Response","<p>I am running and app that uses Dropwizard 1.0.5 (Jetty 9.3.14) and Apache Shiro 1.2.6. Recently, I started getting ""406 Not Acceptable"" responses to GET requests for /login. A sample stacktrace is shown below.</p>

<p>The problem went away after restarting the app. Anyone have any ideas what the cause could be, or how I go about troubleshooting it? </p>

<pre><code>javax.ws.rs.NotAcceptableException: HTTP 406 Not Acceptable
at org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(MethodSelectingRouter.java:529)
at org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.access$000(MethodSelectingRouter.java:94)
at org.glassfish.jersey.server.internal.routing.MethodSelectingRouter$4.apply(MethodSelectingRouter.java:779)
at org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.apply(MethodSelectingRouter.java:371)
at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:109) at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)
at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)
at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)
at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:92)
at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:61)
at org.glassfish.jersey.process.internal.Stages.process(Stages.java:197)
at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:318)
at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)
at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)
at org.glassfish.jersey.internal.Errors.process(Errors.java:315)
at org.glassfish.jersey.internal.Errors.process(Errors.java:297)
at org.glassfish.jersey.internal.Errors.process(Errors.java:267)
at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)
at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)
at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)
at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:471)
at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:425)
at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:383)
at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:336)
at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:223)
at io.dropwizard.jetty.NonblockingServletHolder.handle(NonblockingServletHolder.java:49)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
at org.eclipse.jetty.servlets.UserAgentFilter.doFilter(UserAgentFilter.java:83)
at org.eclipse.jetty.servlets.GzipFilter.doFilter(GzipFilter.java:364)
at io.dropwizard.jetty.BiDiGzipFilter.doFilter(BiDiGzipFilter.java:132)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at io.dropwizard.servlets.ThreadNameFilter.doFilter(ThreadNameFilter.java:29)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at io.dropwizard.jersey.filter.AllowedMethodsFilter.handle(AllowedMethodsFilter.java:43)
at io.dropwizard.jersey.filter.AllowedMethodsFilter.doFilter(AllowedMethodsFilter.java:38)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at com.example.shiro.dropwizard.SessionFilter.doFilter(SessionFilter.java:75)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at org.eclipse.jetty.servlets.CrossOriginFilter.handle(CrossOriginFilter.java:256)
at org.eclipse.jetty.servlets.CrossOriginFilter.doFilter(CrossOriginFilter.java:219)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at com.codahale.metrics.jetty9.InstrumentedHandler.handle(InstrumentedHandler.java:240)
at io.dropwizard.jetty.RoutingHandler.handle(RoutingHandler.java:51)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:159)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
at org.eclipse.jetty.server.Server.handle(Server.java:499)
at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
at java.lang.Thread.run(Thread.java:745) [na:1.8.0_111]
</code></pre>

<p>Probably not relevant to the problem, but for completeness, the app is running behind a Nginx reverse proxy.</p>

<p>The shiro.ini:</p>

<pre><code>[main]
authc.loginUrl = /login
authc.successUrl  = /admin
logout.redirectUrl = /login

authc = com.example.shiro.CustomFormAuthenticationFilter

# tells Shiro to use form-based authentication
/login = authc
/logout = logout

# Form auth for everything
/** = authc
</code></pre>

<p>The class CustomFormAuthenticationFilter just extends FormAuthenticationFilter and has the method:</p>

<pre><code>// Ensures this filter only swallows form data if the referrer is the login form.
    protected boolean isLoginSubmission(ServletRequest request, ServletResponse response)
    {
        boolean result = false;
        if (request instanceof HttpServletRequest)
        {
            HttpServletRequest httpRequest = (HttpServletRequest) request;
            if (httpRequest.getMethod().equalsIgnoreCase(POST_METHOD))
            {
                String referrer = httpRequest.getHeader(HttpHeaders.REFERER);
                if (referrer != null &amp;&amp; !referrer.isEmpty())
                {
                    if (referrer.endsWith(""/login""))
                    {
                        result = true;
                    }
                }
            }
        }

        return result;
    }
</code></pre>
","<jersey><jetty><dropwizard><shiro><jetty-9>","1",""
"41780040","Java (maven) using SSL with Shiro - https port plugin for Tomcat 7 not working","<p>I've created a keystore and placed it in a folder called ""cert"".<br>
I used the code below in the pom.xml to listen for port number 8443 but it has no effect on the browser loading the page.  I assume shiro works because it successfully redirects me from port number 8080 to 8443.<br>
I also don't get any errors which makes things harder.</p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;
    &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;2.0&lt;/version&gt;
    &lt;configuration&gt;
        &lt;path&gt;/${project.build.finalName}&lt;/path&gt;
        &lt;contextFile&gt;${basedir}/WebContent/META-INF/context.xml&lt;/contextFile&gt;
        &lt;httpsPort&gt;8443&lt;/httpsPort&gt;
        &lt;keystoreFile&gt;${basedir}/certs/cert.jks&lt;/keystoreFile&gt;
        &lt;keystorePass&gt;secret&lt;/keystorePass&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>

<p>I don't know if there is something missing.<br></p>
","<java><maven><tomcat><ssl><shiro>","0","41780135"
"42827789","Shiro based Authentication for rest api in a bundle not working","<p>I am using shiro for authenticating my rest api, I have configured the jaxrs to use the ShiroFeature like </p>

<pre><code>&lt;jaxrs:server address=""/"" id=""shiroRestService""&gt;
        &lt;jaxrs:serviceBeans&gt;
            &lt;ref component-id=""shiroRestServiceImpl""/&gt;
        &lt;/jaxrs:serviceBeans&gt;
        &lt;jaxrs:providers&gt;
            &lt;bean class=""org.apache.shiro.web.jaxrs.ShiroFeature""/&gt;
        &lt;/jaxrs:providers&gt;
    &lt;/jaxrs:server&gt;
</code></pre>

<p>and in my rest service I have use the @RequiresAuthentication like </p>

<pre><code>@Path(""shiro"")
@RequiresAuthentication
public interface ShiroRestService {
    @GET
    @Path(""hello/{name}"")
    public String handleGet(@PathParam(""name"") String name);
}
</code></pre>

<p>my shiro.ini file is </p>

<pre><code>exampleuser = examplepassword, examplerole

[roles]
examplerole = something:readpermission

[urls]
/** = noSessionCreation, authcBasic
</code></pre>

<p>But my rest api can be accessed without authentication, I have checked all the solutions mentioned here and the tutorials in other blogs but all of them talk about authenticating a rest api inside a web application(war file) mine is a jar file without web.xml. Please let me know how to resolve the issue </p>

<p>The complete code can be found in <a href=""https://github.com/vineethvnair0/Karaf/tree/master/shiro-rest-auth"" rel=""nofollow noreferrer"">github</a></p>
","<java><rest><shiro>","0",""
"35749243","How do I configure Apache Shiro to use the principal from the HTTP session?","<p>I have a set up where I need to combine the two security frameworks CXF Fediz and Shiro. I've set up my system in such a way that the <code>FederationFilter</code> does the login via an SSO service. That means I already have the principal in the HTTP session.</p>

<p>I'm using a library which depends on Shiro for authentication. As I understand Shiro, it also wants to authenticate the current user against some external authority (LDAP, AD, etc). I don't need that since Fediz has already done this for me.</p>

<p>How do I configure Shiro to simply use the existing HTTP principal which Fediz has created?</p>
","<single-sign-on><shiro><http-authentication><principal><cxf-fediz>","1",""
"39028093","Defining a security model with implicit permissions / role","<p>I'm working on a roles/permission system for my web app and I'm unsure quite how to structure this.</p>

<p>Briefly. Users can access a number of Projects. This is a Participation and, amongst other things, a Participation has a Profile with a number of Rights. So these are Rights specific to a User within a Project. A Participation also has a Type (Admin, Support, etc.).</p>

<p>A Profile is based on a Role. Roles (perhaps poorly named) are effectively standard Profiles with default rights configurations defined in advance by admins. When creating a new profile one selects a Role to act as a base and then, if needed, one adjusts the rights. Profiles aren't exclusive to one user.</p>

<p>So far, so good (or not! you tell me!) </p>

<p>Rights are grouped by context/subject. So for instance all rights to do with 'Project Tasks' are grouped together. I haven't modelled this because it's handled by the UI (not sure whether that's a bad thing).</p>

<p>Now my issue is as follows. Depending on the Participation Type, certain Rights are implicit and should not be disabled. So when creating a Role for a 'Support' Participation, the 'See my own support tickets' Right should be implied and either not shown, or shown disabled so that it cannot be changed. Whereas a different Participation Type can optionally assign this Right or not. </p>

<p>I've basically got a spreadsheet with Participant Type / Right = Can't apply, Can apply (Selected or not) &amp; Always applies. eg :</p>

<pre><code>| RIGHT              | INV | SUP | ADM |
| ------------------ | --- | --- | --- |
| G_PROJECTS_READ    |  I  |  I  |  Y  | 
| G_PROJECTS_UPDATE  |  Y  |  N  |  Y  |
| G_PROJECTS_CREATE  |  N  |  N  |  Y  |
| G_PROJECTS_PUBLISH |  N  |  N  |  Y  |

Where Y = Type can toggle right on/off, N = Type doesn't have right 
&amp; I = Implied i.e. Type has right and it can't be deselected
</code></pre>

<p>Any ideas/pointers as to how this can be modelled?  </p>

<p><a href=""https://i.stack.imgur.com/xnqRS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xnqRS.png"" alt=""model""></a></p>

<p>Many thanks, </p>

<p>AW</p>
","<java><design-patterns><permissions><roles><shiro>","0",""
"38052806","Apache Shiro authentication customization","<p>How can I customize authentication logic in Apache Shiro? In Spring Security I write my custom logic inside the ""authenticate()"" method in AuthenticationManager:</p>

<p><code>public Authentication authenticate(Authentication auth) { ... }</code></p>

<p>Is there a way to do the same in Apache Shiro?</p>
","<java><security><java-ee><spring-security><shiro>","2","38084353"
"35170410","Shiro.ini file in AEM instance","<p>I had created a web app with shiro. Now i want to secure aem application with Shiro. I am not able to get where to place the <code>shiro.ini</code> file and how to set <code>EnvironmentLoaderListener</code> and <code>ShiroFilter</code>.</p>

<p>I had tried a lot of things like fetching ini file through <code>bundleContext</code> in <code>activate()</code> method </p>

<p>I want to know where i have to do the shiro configurations in aem?</p>
","<aem><ini><shiro>","0","35313128"
"28726128","Shiro - Don't transmit password to server","<p>I'm not much of a security expert, so I've implemented user authentication for my Client+REST API using Apache Shiro.  Everything works, however I'm a bit confused about one aspect: Shiro seems to require me to transmit the user's password to the server for authentication.  </p>

<p>I have a endpoint, /user/auth that my frontend (angular) POSTs login info to, which then creates a UsernamePasswordToken and calls Subject.login() with it, and Shiro then takes care of querying my db for the 'password' string it generates (using DefaultPasswordService.encryptPassword()) and comparing it with the password the user POSTed.  This is all going to be over SSL once I put it on a public server, however it still seems strange to me to be sending the user's password to the server every login, instead of hashing it somehow.  </p>

<p>I'd thought the default practice was to hash the password on the client side, and then send that to the server?  Or does this just not matter anymore once you've got SSL?  Would it be better to have the client hash the password before sending it, even when registering, so that the server would only ever store the hash?  I know Shiro isn't storing the password in plaintext, so I assume its storing a hash in my database, but it could just be encrypted with something for all I know.  </p>
","<authentication><ssl><shiro>","0",""
"31456150","(default package) in GGTS","<p>I have a Grails project in GGTS and am authenticating users on an LDAP server with the Shiro security plugin. When I ran <code>grails quick-start-shiro</code>, the script created </p>

<ul>
<li><code>controllers/(default package)AuthController.groovy</code></li>
<li><code>domain/(default package)ShiroRole.groovy</code></li>
<li><code>domain/(default package)ShiroUser.groovy</code></li>
</ul>

<p>Now, if I create some home page controller, it puts it in <code>controllers/&lt;project name&gt;/HomeController.groovy</code> and not <code>controllers/(default package)/HomeController.groovy</code>. What I'm wondering is, how can I create a controller and/or domain and have it be in the same (default package)? </p>

<p>Thanks in advance!</p>
","<grails><groovy><controller><shiro><ggts>","0","31457767"
"31548659","enable annotations shiro spring","<p>I followed <a href=""http://shiro.apache.org/spring.html"" rel=""nofollow"">this subject</a> then created ""working"" code.</p>

<p>However, an unauthenticated person may call a method with annotations:</p>

<pre><code> @RequiresAuthentication 
</code></pre>

<p>No exception is thrown. </p>

<p>(Important thing: I don't create a web application. It is a simple console program.)</p>
","<shiro>","1",""
"37154207","prohibit redirection to login page in shiro","<p>How can I do to prohibit redirect on login and logout?</p>

<p>It should work with CORS but all what I can do is sending 200 to OPTION request</p>

<p>shiro.ini:<br>
        </p>

<pre><code>    &lt;bean id=""corsFormAuth"" class=""ru.protei.eas.auth.filter.CorsLoyalFormAuthenticationFilter""/&gt;
    &lt;bean id=""corsRoles"" class=""ru.protei.eas.auth.filter.CorsLoyalRolesAuthorizationFilter""/&gt;
    &lt;bean id=""corsLogout"" class=""ru.protei.eas.auth.filter.CorsShiroLogoutFilter""/&gt;

    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;
        &lt;property name=""unauthorizedUrl"" value=""/error""/&gt;
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
            /soap/** = noSessionCreation,basicHttpFilter,roles
            /rest/notifications/*/report/* = noSessionCreation,basicHttpFilter
            /auth/login = corsFormAuth
            /auth/status = anon
            /auth/logout = corsLogout
            /rest/** = corsFormAuth
            /** = anon
            &lt;/value&gt;
        &lt;/property&gt;
        &lt;property name=""loginUrl"" value=""/auth/login""/&gt;
    &lt;/bean&gt;
</code></pre>
","<java><spring><shiro>","2",""
"43935594","Remote access notebook in zeppelin through authentication","<p>I am trying to remote access (GET) a paragraph of a notebook in Zeppelin. As I have to use paragraph link address for that, there is a vulnerability in access that information by anybody having that link.</p>

<p>So therefore, I started with securing the zeppelin access itself by having it login credentials (using Shiro). </p>

<p>Therefore to remotely access (GET) a paragraph of a notebook, I need to provide login credentials a user first. </p>

<p>How to provide credentials, manage sessions and access the paragraph? </p>

<p>I tried the GET request through Postman using Basic Access Authentication, and the information access is not successful. Any idea on how to proceed?</p>

<p>FYI, example remote address of a notebook I am using:</p>

<pre><code>http://localhost:8080/#/notebook/2CGQZKB1Z/paragraph/20170512-189525_564547874?asIframe
</code></pre>
","<authentication><shiro><apache-zeppelin>","0",""
"46256386","Can't get user session info from Apache Shiro with Jersey RESFUL API","<p>I built a web service application with Jersey Jax-RS web service api, and i added apache shiro security framework in it, I can login to system without problem with apache shiro framework but I want to get current user info from another page and I wrote a GET method for this purpose, but in the GET method I can't get session information from Apache Shiro it returns null, I present code information below, please help me to get session information in GET method.</p>

<p>This is login method and it works fine:</p>

<pre><code>@POST
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public SonucModel loginDeneme(LoginModel loginmodel) throws ClassNotFoundException {

    shiroUser.setUsername(loginmodel.getUsername());
    shiroUser.setPassword(loginmodel.getPassword());

    //sonuc=logindao.sonucDonder(username, password);

    UsernamePasswordToken token = new UsernamePasswordToken(shiroUser.getUsername(), shiroUser.getPassword());
    subject.login(token);

    // UsernamePasswordToken token = new UsernamePasswordToken(username, password);
    String userName = token.getUsername();
    System.out.println(""userName:"" + userName);

    if(subject.hasRole(""admin"")) {
        Session session = subject.getSession(true);
        session.setAttribute(CURRENT_USER_KEY, ""admin"");

        sonucmodel.setSonuc(""admin"");
        return sonucmodel;
    }
    else if(subject.hasRole(""kasiyer"")) {

        Session session = subject.getSession(true);
        session.setAttribute(CURRENT_USER_KEY, ""kasiyer"");
        /* String username = (String) session.getAttribute(CURRENT_USER_KEY);
        System.out.println(""Session: "" + username);*/
        sonucmodel.setSonuc(""kasiyer"");
            Session session1 = subject.getSession(false);
            if(session1!=null) {
                String username = (String) session.getAttribute(CURRENT_USER_KEY);
                System.out.println(""Session: "" + username);
            }
            else if(session1 == null) {
                System.out.println(""session boş"");
            }

        return sonucmodel;
    }
    //System.out.println(""Session: "" + username);
    return sonucmodel;

}
</code></pre>

<p>but, this GET method could not get the session information</p>

<pre><code>@GET
@Produces(MediaType.APPLICATION_JSON)
public String getUser() {

    //Subject subject= SecurityUtils.getSubject();
    Session session = subject.getSession(false);
    String message;
    if(session != null) {
        message = ""Current user: "" + session.getAttribute(CURRENT_USER_KEY);
    } else {
        message = ""No current user, no session created"";
    }

    System.out.println(message);

    return message;
 }
</code></pre>

<p>and this is the shiro.ini file :</p>

<pre><code>[main]
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password FROM users where username = ?
jdbcRealm.userRolesQuery = select role from users where username=?

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = asd123123
ds.databaseName = marketdb
jdbcRealm.dataSource= $ds

authc.loginUrl = /giris.html
#authc.successUrl = /kasiyer/index.html
user.loginUrl = /giris.html


[urls]
/giris.html = authc
/logout = logout
/admin/** = user, roles[admin]
/kasiyer/** = user, roles[kasiyer]
</code></pre>
","<java><apache><jersey><jax-rs><shiro>","1",""
"41121157","How do I define the initial context factory in shiro.ini?","<p>In my Shiro application, I am using the <code>JndiRealmFactory</code> to define my realms. I Register my realms like this:</p>

<pre><code>Hashtable&lt;String, String&gt; args = new Hashtable&lt;&gt;();
args.put(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.openejb.client.LocalInitialContextFactory"");
InitialContext ctx = new InitialContext(args);
ctx.bind(""realms/MyRealm"", myRealm);
</code></pre>

<p>However, Shiro cannot find <code>realms/MyRealm</code>. I think the reason is, that I Need to define the <code>JndiRealmFactory</code>'s jndiEnvironment, which contains the <code>Context.INITIAL_CONTEXT_FACTORY</code> property. However, I don't know how to set this property in my <code>shiro.ini</code>:</p>

<pre><code>realmFactory.jndiEnvironment = ?
</code></pre>

<p>I am running my application on TomEE.</p>

<p>My current <code>shiro.ini</code> looks like this:</p>

<pre><code>realmFactory = org.apache.shiro.realm.jndi.JndiRealmFactory
realmFactory.jndiNames = realms/MyRealm
</code></pre>
","<java><jndi><shiro><tomee>","0","41126423"
"19125869","How would i configure that a user is only allowed to change it's own account-data?","<p>given Apache Shiro's permission format <code>domain:action:instance</code> how would I define that a user may only change it's <em>own</em> account-data?</p>

<p>I could do the following but this leads to an enormous explosion of permissions: </p>

<p><code>useraccountdata:write:user1</code> permit to <code>user1</code> 
...
<code>useraccountdata:write:userN</code> permit to <code>userN</code> </p>

<p>What I need instead is something of permission-rules to configure this dynamically. </p>

<p>Something like: <code>useraccountdata:write:user{n}</code> permit to <code>user{n}</code> automatically for all <code>n</code></p>

<p>Is this supported somehow or am I completely on the wrong path here? If not, how would you do it?</p>
","<permissions><acl><shiro>","1","19604293"
"34579815","Password protected web page in restful webservices using apache shiro","<p>I want to make my website pages password protected.I make the website using restful webservices in java using jersey.So can any one tell me how to protect my web pages using apache shiro.Any one have implemented example to securing a website using apache shiro if yes than plz share the example.I shall be thankful :)</p>
","<shiro>","0","34584568"
"38063379","SAML2.0 for Spring 4 based application","<p>I'm new bee to SAML. I just want to know which all Security integration framework will go good with below set of framework and server.</p>

<ol>
<li>Spring 4 </li>
<li>Jboss EAP6</li>
<li>Hibernate application</li>
<li>SAML 2.0</li>
<li>Single sign-on</li>
<li>Page wise authorization</li>
<li>Only internal users with proper Auth Function &amp; Data elements.</li>
</ol>

<p>I have seen Spring SAML, Picketlink, Apache Shiro, Keycloak, Shibboleth. In these five framework, which will go good for my above framework, server and requirement.</p>
","<spring><spring-security><saml-2.0><shiro><picketlink>","0",""
"44772398","Spring autowire byName giving NullPointer exception","<p>I am trying to integrate Apache Shiro into my Spring Web MVC project but having problems with appropriate bean definition. Here is my <em>applicationContext.xml</em>:</p>

<pre><code>    &lt;?xml version='1.0' encoding='UTF-8' ?&gt;   
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""       
       xmlns:aop=""http://www.springframework.org/schema/aop""
       xmlns:tx=""http://www.springframework.org/schema/tx""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd""&gt;       

    &lt;bean id=""propertyConfigurer"" class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""&gt;
        &lt;property name=""locations""&gt;
            &lt;list&gt;
                &lt;value&gt;/WEB-INF/jdbc.properties&lt;/value&gt;    
                &lt;value&gt;/WEB-INF/wmsauth.properties&lt;/value&gt;  
            &lt;/list&gt;    
        &lt;/property&gt;               
    &lt;/bean&gt;         

    &lt;bean id=""dataSource"" class=""org.springframework.jdbc.datasource.DriverManagerDataSource""&gt;
        &lt;property name=""driverClassName"" value=""${jdbc.driverClassName}""/&gt;
        &lt;property name=""url"" value=""${jdbc.url}""/&gt;
        &lt;property name=""username"" value=""${jdbc.username}"" /&gt;
        &lt;property name=""password"" value=""${jdbc.password}"" /&gt;
    &lt;/bean&gt;      

    &lt;bean id=""sessionFactory"" class=""org.springframework.orm.hibernate4.LocalSessionFactoryBean""&gt;
        &lt;property name=""dataSource"" ref=""dataSource""/&gt;  
        &lt;property name=""packagesToScan"" value=""com.smth.smth.model""/&gt;

        &lt;property name=""hibernateProperties""&gt;
            &lt;props&gt;
                &lt;prop key=""hibernate.dialect""&gt;org.hibernate.dialect.MySQLDialect&lt;/prop&gt;
                &lt;prop key=""hibernate.current_session_context_class""&gt;thread&lt;/prop&gt;
                &lt;prop key=""hibernate.show_sql""&gt;true&lt;/prop&gt;
            &lt;/props&gt;
        &lt;/property&gt;     
    &lt;/bean&gt; 

    &lt;bean id=""shiroFilter"" class=  ""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager""/&gt;   
        &lt;property name=""loginUrl"" value=""/login.jsp""/&gt;
        &lt;property name=""successUrl"" value=""/login/index""/&gt;         
        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /login.jsp = authc                  
                /login/** = authc   
                /admin/** = authc
                /logout.htm = logout  
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;          

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;            
        &lt;property name=""realm"" ref=""adminRealm""/&gt;
        &lt;property name=""cacheManager"" ref=""cacheManager""/&gt;   

    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt; 

    &lt;bean id=""adminRealm"" class=""com.smth.smth.model.admin.AdminRealm"" autowire=""byName""&gt;          
        &lt;property name=""credentialsMatcher"" ref = ""sha256Matcher""/&gt;
        &lt;property name=""authenticationQuery"" value = ""SELECT password, salt FROM admin WHERE email = ?""/&gt;
        &lt;property name=""permissionsLookupEnabled"" value = ""true""/&gt;
        &lt;property name=""userRolesQuery"" value = ""SELECT role_name FROM admin_role WHERE email = ?""/&gt;
        &lt;property name=""permissionsQuery"" value = ""SELECT permission FROM roles_permission WHERE role_name = ?""/&gt;
        &lt;property name=""dataSource"" ref = ""dataSource""/&gt;       
    &lt;/bean&gt;  

    &lt;bean id=""sha256Matcher"" class=""org.apache.shiro.authc.credential.Sha256CredentialsMatcher"" &gt;
        &lt;property name=""storedCredentialsHexEncoded"" value = ""false""/&gt;
        &lt;property name=""hashIterations"" value = ""1024""/&gt;
    &lt;/bean&gt; 

    &lt;bean id=""cacheManager"" class=""org.apache.shiro.cache.MemoryConstrainedCacheManager"" /&gt; 

    &lt;bean id=""multipartResolver"" class=""org.springframework.web.multipart.commons.CommonsMultipartResolver""&gt;
        &lt;property name=""maxUploadSize"" value=""10000000""/&gt;
    &lt;/bean&gt;     
&lt;/beans&gt;
</code></pre>

<p>As you can see I have <code>adminRealm</code> bean defined here with <code>autowire = ""byName""</code>.</p>

<p><code>AdminRealm</code> Class is as follows:</p>

<pre><code>package com.smth.smth.model.admin;

import com.smth.smth.service.AdminService;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SaltedAuthenticationInfo;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.realm.jdbc.JdbcRealm;
import org.springframework.beans.factory.annotation.Autowired;

public class AdminRealm extends JdbcRealm {

    @Autowired
    AdminService adminService;

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {     
        UsernamePasswordToken userPassToken = (UsernamePasswordToken) token;
        final String username = userPassToken.getUsername();

        if (username == null) {
            System.out.println(""Username is null."");
            return null;
        }            
        final Admin admin = adminService.getByEmail(username);

        if (admin == null) {
            System.out.println(""User does not exist with principal: ["" + username + ""]"");
            return null;
        }
            SaltedAuthenticationInfo info = new AdminAuthInfo(username, admin.getPassword(), admin.getSalt());

        return info;
    }
}
</code></pre>

<p>Here we have <code>AdminService</code> which is <code>@Autowired</code> which I was expecting to be handled by Spring dependency injection through the configuration in the <em>applicationContext.xml</em> but I keep getting <code>java.lang.NullPointerException</code> at <code>adminService.getByEmail(username);</code>. Any information would be much appreciated.</p>

<p>I don't think there should be any problem with component scanning. My <code>dispatcher-servlet</code> is as follows:</p>

<pre><code>    &lt;?xml version='1.0' encoding='UTF-8' ?&gt;    
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:p=""http://www.springframework.org/schema/p""
       xmlns:aop=""http://www.springframework.org/schema/aop""
       xmlns:tx=""http://www.springframework.org/schema/tx""
       xmlns:context=""http://www.springframework.org/schema/context""
       xmlns:mvc=""http://www.springframework.org/schema/mvc""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd""&gt;

    &lt;context:component-scan base-package=""com.smth.smth""/&gt;
    &lt;mvc:resources mapping=""/resources/**"" location=""/resources/"" /&gt;
    &lt;mvc:annotation-driven/&gt;        

    &lt;bean id=""urlMapping"" class=""org.springframework.web.servlet.handler.SimpleUrlHandlerMapping""&gt;
        &lt;property name=""mappings""&gt;
            &lt;props&gt;
                &lt;prop key=""index.htm""&gt;indexController&lt;/prop&gt;
            &lt;/props&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;bean id=""viewResolver""
          class=""org.springframework.web.servlet.view.InternalResourceViewResolver""
          p:prefix=""/WEB-INF/jsp/""
          p:suffix="".jsp"" /&gt;

    &lt;bean name=""indexController""
          class=""org.springframework.web.servlet.mvc.ParameterizableViewController""
          p:viewName=""index"" /&gt;

&lt;/beans&gt;
</code></pre>
","<spring-mvc><dependency-injection><autowired><shiro><applicationcontext>","0",""
"19959050","How to protect user permissions?","<p>I am quite new to user authentication.</p>

<p>I want to implement a user authentication and authorization in my Java application (no network stuff, just plain dekstop). I found Apache Shiro as a suitable library. It is probably a bit too big for my needs, but why to invent the wheel twice.
The users can authenticate with username and password. The password is salted and hashed and stored somewhere (in my case in a file). The user permissions are stored in the same file. The permissions are  not protected (except the file is a binary created with Java serialization). I created my own Realm. Works fine.</p>

<p>So everybody who has access to the file can edit the file and give all desired permissions to a certain user. </p>

<p>I know Shiro is more designed for storing accounts in a database. So is Shiro not suitable for user authentication stored in a file?</p>

<p>I thought I could hash the permissions and validate the hash. But why do I need Shiro then? I would expect Shiro to do this as an library for authentication and authorization.</p>

<p>Did I understand something totally wrong or did I miss some functionality in the Shiro library.</p>

<p>How is user authorization done correctly when storing data in a file?</p>
","<java><authentication><authorization><shiro>","1",""
"45595322","Share SessionManager between two WAR's on same tomcat","<p><strong>Problem:</strong></p>

<p>We have apache shiro authentication in our two applications, let's name them application1 (context is ""/"") and application2 (context is ""/app2""). For basic authentication, it's working fine. We deploy these two applications on two tomcats (both applications on each tomcat) and then handle context sharing via tomcat 8 context sharing and for preserving sessions, we use memcached so that even if one tomcat is down, application and sessions remain preserved.</p>

<p><strong>How session is already handled?</strong></p>

<p>If user logs in on any of the two applications, their session is shared between two applications with getting the root context (""/"") and then an interceptor to intercept any request and find if user is already logged in or not.</p>

<p><strong>New Requirement:</strong></p>

<p>Recently, we had to implement a functionality where we need to expire a certain user's all sessions on the basis of a certain trigger and I was reading about Apache Shiro's Session Management. I integrated in application1 and everything worked fine but now session sharing between application1 and application2 is gone.</p>

<p>I explained above scenario so that I could get right directions what exactly I should look for or try.</p>

<p><strong>What I want to do is</strong>:</p>

<p>I want to somehow share shiro session manager between these two applications so that once it's shared, we can easily handle the session sharing part and rest of the functionality (invalidating sessions of some user) is already in place.</p>

<p><strong>Question:</strong></p>

<p>So, please tell me, if what I want to do is exactly what I should do and what I need to understand and read? OR if I am thinking in the wrong direction, please suggest me the right path.</p>
","<spring-mvc><tomcat8><shiro>","0",""
"44148773","How to add HttpSessionListener for ShiroSession in embedded Jetty server?","<p>I am working on a application which supports both SimpleSession and HttpSession. There is already implemented SessionListener for SimpleSession but that is not working for Http Sessions. The application is using embedded Jetty server. The existing implementation for SimpleSession is mentioned below- </p>

<pre><code>    getShiroSessionManager().getSessionListeners().add(new org.apache.shiro.session.SessionListener() {
    /**
    * {@inheritDoc}
    */
    @Override
    public void onStart(Session session) {
       LOGGER.info(""Session started : "" + session.getId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void onExpiration(Session session) {
      LOGGER.info(""Session expired : "" + session.getId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void onStop(Session session) {
        LOGGER.info(""Session stopped : "" + session.getId());
    }
    });
    /**
     * Gets the shiro session manager.
     * 
     * @return the shiro session manager
     */
    private static AbstractValidatingSessionManager getShiroSessionManager() {
    SessionsSecurityManager ssm = (SessionsSecurityManager) SecurityUtils.getSecurityManager();
    return (AbstractValidatingSessionManager) ssm.getSessionManager();
  }
</code></pre>

<p>I want to track also my HttpSession. How can I implement like this for Shiro Http Sessions?</p>
","<java><shiro><httpsession>","0",""
"44448126","How to set shiro principal's property as thymeleaf tag attribute?","<p>I have a demand that I want to use a shiro principal's property as thymeleaf tag's attribute.</p>

<p>I use the lib thymeleaf-extras-shiro, it's true to use like this.</p>

<pre><code>&lt;a&gt;
    &lt;shiro:principal property='imgUrl'/&gt;
&lt;/a&gt;
</code></pre>

<p>but I want to set the property 'imgUrl' as tag '' attribute 'href'.</p>

<p>so anybody could tell me about this?
Thank you.</p>
","<thymeleaf><shiro>","0",""
"41822354","Apache Shiro JDBC Realm in an OSGi project","<p>I'm trying to realize an authentication bundle in an OSGi project and I decided to use this powerful Apache Shiro framework. As I tried to initiate a JDBC realm using this shiro.ini file:</p>

<pre><code>[main]

# Create JDBC realm.
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Configure JDBC realm datasource.
dataSource = org.postgresql.Driver
dataSource.URL = jdbc:postgresql://127.0.0.1:5432/user
dataSource.user = postgres
dataSource.password = postgres
jdbcRealm.dataSource = $dataSource

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password FROM Users WHERE email = ?
jdbcRealm.userRolesQuery = SELECT role from roles WHERE id = (SELECT roleId FROM UserRoles WHERE userId = (SELECT id FROM Users WHERE email = ?))
</code></pre>

<p>I'm having this error message:</p>

<blockquote>
  <p>Failed to start bundle
  com.soner.prototype.auth.application.client-1.0.0.1, exception
  activator error. Unable to instantiate class [org.postgresql.Driver]
  for object named 'dataSource'.   Please ensure you've specified the
  fully qualified class name correctly. from:
  org.apache.shiro.config.ReflectionBuilder:createNewInstance#309</p>
</blockquote>

<p>I'm using PostgreSQL as it is seen in .ini file, and I have the PostegreSQL drivers bundle already loaded before activating Shiro bundle.</p>

<p>I think that I should have Shiro JDBC realm classes and they reside in Apache Shiro Core package which I import as a bundle. Does anyone have an idea or a workaround for this problem? Is Shiro available in OSGi environment only with its native .ini file realm?</p>

<p>Thanks in advance..</p>
","<osgi><shiro><jdbcrealm>","0",""
"39672056","Which LDAP Realm Should I Use When I have to Suport Multiple LDAP Implementations?","<p>I have a requirement for my (on-site installed web based) application to authenticate via LDAP and I am attempting to use Apache Shiro to do so.</p>

<p>The majority of my clients have Microsoft Active Directory, however, a couple have <a href=""http://www.oracle.com/technetwork/middleware/id-mgmt/overview/index-082035.html"" rel=""nofollow"">Oracle Internet Directory</a> or <a href=""http://www.oracle.com/technetwork/middleware/id-mgmt/index-093158.html"" rel=""nofollow"">Oracle Virtual Directory</a> and I think someone mentioned OpenLDAP.</p>

<p>I'm guessing, based on the name, that the ActiveDirectoryRealm only works with Microsoft ActiveDirectory. Is that right?</p>

<p>ActiveDirectoryRealm extends from AbstractLdapRealm and not from DefaultLdapRealm. However, DefaultLdapRealm extends from AuthorizingRealm and not AbstractLdapRealm, which is confusing and I'm not sure what I should be using.</p>

<p>Should I just give instructions to each client to change the shiro.ini depending on their LDAP implementation?</p>

<p>I would rather just have one implementation that I could use for all clients though and not bother them with low level config like this.</p>

<p>I will probably have to make a custom Realm to handle <a href=""https://issues.apache.org/jira/browse/SHIRO-586"" rel=""nofollow"">other issues with Shiro</a>. Am I going to have to make the same changes in 2 Realms - one for ActiveDirectory and one for other LDAP?</p>

<p>Or do I make one that extends DefaultLdapRealm and have to re-implement the code in the ActiveDirectoryRealm that searches for roles?</p>
","<active-directory><ldap><shiro>","0",""
"40720674","Proper Criteria for Shiro plugin in Grails","<p>I have Shiro domain classes as below:</p>

<pre><code>class ShiroUser {
String email
String password

static hasMany = [ roles: ShiroRole, permissions: String ]

static constraints = {
    email(nullable: false, blank: false, unique: true)
    }
}


class ShiroRole {
String name

static hasMany = [ users: ShiroUser, permissions: String ]
static belongsTo = ShiroUser

static constraints = {
    name(nullable: false, blank: false, unique: true)
     }
}
</code></pre>

<p>I received ShiroUser's email from params.email. And I want to find out the permission that  belongsTo ShiroUser using criteria().</p>

<p>I tried the below code, but couldn't succeed.</p>

<pre><code> def criteria= permissions.createCriteria().listDistinct {
                ShiroRole{
                     ShiroUser{
                         eq(""email"", params.email)
                        }
                    }
                }
</code></pre>
","<grails><gorm><criteria><shiro>","0","40721223"
"46644979","Retrieve Full name or Display name from LDAP server using AD and Apache shiro","<p>I'm trying to authenticate a set of credentials against an LDAP server and I was able to authenticate them successfully. Now am trying to get the full name or the display name of the user logged-in into the server. Am unable to get the same. Being new to LDAP concepts, am unable to figure out a way to get the full display name of the user. Can some please help me how to get the full display name of the user logged in. </p>

<p>Below is the shiro.ini file am using:</p>

<pre><code>[main]
activeDirectoryRealm = 
org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
activeDirectoryRealm.systemUsername = adminusername
activeDirectoryRealm.systemPassword = adminpswd
activeDirectoryRealm.searchBase = ""OU=User Accounts,DC=dmn,DC=net""
activeDirectoryRealm.url = ldaps://localhost:389
</code></pre>

<p>My Java code is as below:</p>

<pre><code>import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.*;
import org.apache.shiro.config.IniSecurityManagerFactory;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.Factory;
public class ExampleActiveDirectory {


public static final String userName = ""myusername"";
public static final String password = ""mypassword"";

public static void main(String[] args)
{
    //Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""N:\\workspace\\LdapAuthentication\\src\\auth.ini"");
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""N:\\workspace\\LdapAuthentication\\src\\shiro.ini"");
    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager( securityManager );
    System.out.println( ""userName is  : "" +userName);
    System.out.println( ""password is  : "" +password);
    UsernamePasswordToken token = new UsernamePasswordToken( userName,password );
    Subject currentUser = SecurityUtils.getSubject();
    try
    {
        //currentUser.login( token ) ;
        securityManager.login(currentUser,token).isAuthenticated();
        System.out.println( ""We've authenticated! :)"" );
    }
    catch ( AuthenticationException e )
    {
        System.out.println( ""We did not authenticate :("" );
        e.printStackTrace();
    }

   }
}
</code></pre>
","<java><active-directory><ldap><shiro>","0",""
"44722698","Shiro.ini file is missing in Zeppelin","<p>I am not able to find shiro.ini file inside conf folder, i  need to enable authentication but i am not able to find shiro.ini.  </p>

<p>I tried adding shiro.ini file manually but it doesn't work.</p>
","<shiro><apache-zeppelin>","0",""
"37970402","How to have a pop-up screen to warn that the time out of the session is over in shiro?","<p>I have my project with shiro and I need when closing inactivity timeout, pops out pop up warning the user that the session will close. At the moment I have shiro with Servlet Container</p>
","<servlets><shiro>","-4",""
"30752162","spring-data-mongodb requires a spring ApplicationEventMulticaster to have been initialised before it can be used","<p>I'm using shiro with spring data and mongodb in a web application. 
 I've created a simple mongodb realm which is also configured via spring. </p>

<p>I'm also using the spring DelegatingFilterProxy along with ShiroFilterFactoryBean. </p>

<p>when I try to use it I invariably get: 
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: Root WebApplicationContext </p>

<p>the problem is that spring-data-mongodb requires a spring ApplicationEventMulticaster to have been initialised before it can be used. </p>

<p>ShiroFilterFactoryBean is a beanPostProcessor, and as such, during initialisation, spring attempts to configure its realms(and hence my realm and spring data mongo based userDao). 
it fails because ApplicationEventMulticaster has not yet been created. </p>

<p>the relevant part in spring. 
org.springframework.context.support.AbstractApplicationContext.refresh() </p>

<pre><code>... 
try { 
     ... 
     registerBeanPostProcessors(beanFactory); 

     // Initialize message source for this context. 
     InitMessageSource(); 

     // Initialize event multicaster for this context. 
     initApplicationEventMulticaster(); 

     // Initialize other special beans in specific context subclasses. 
     onRefresh(); 
     registerListeners(); 
     ... 
    } 
</code></pre>

<p>you can see that the BeanPostProcessors are setup before initApplicationEventMulticaster() is ever called. </p>

<p>so my query is, whats the best way to solve this? whats the sanest option? </p>

<p>Thanks</p>
","<shiro><spring-data-mongodb>","0",""
"31685454","Check Permissions for Each Logged-In Subject","<p>In our application, we store WebSocket information within an authenticated User's session.  When new data arrives, we'd like to broadcast it to all active users who have permission to see the particular data set. How do I get the Subject for all active sessions?  (With the Subject, I can then checkPermission() prior to delivering the data set.)</p>

<p>I know how to get all the active sessions.  I know how to set the DefaultSessionStorageEvaluator to save the PrincipalCollection in the session.  I know that RememberMeManager sees the Subject.  I know about AuthenticationListener.  I know about sub-classing various classes to override various login and authenticated methods.</p>

<p>Do I need to maintain my own map from PrincipalCollection -> Subject?  Have I overlooked one in the existing code base?  Should I store the Subject itself in the Session?</p>
","<shiro>","0",""
"43369752","Apache Shiro: Permission filter is validating last matched path","<p>I am using Apache Shiro with Guice on Google App Engine.</p>

<p>Following filter chain is present in configureShiroWeb() function</p>

<pre><code>addFilterChain(""/**/first/second/third/**"", AUTHC_BASIC, config(REST, ""X""));
addFilterChain(""/**/first/**"", AUTHC_BASIC, config(REST, ""Y""));
</code></pre>

<p>When a request is made for an API- example.appspot.com/v1/first/second/third, the first filter is bypassed and the access is granted for a user with permission Y and not with X.</p>

<p>I am using the following shiro and guice related dependencies:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-guice&lt;/artifactId&gt;
    &lt;version&gt;1.2.4&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.google.inject&lt;/groupId&gt;
    &lt;artifactId&gt;guice&lt;/artifactId&gt;
    &lt;version&gt;3.0&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.google.inject.extensions&lt;/groupId&gt;
    &lt;artifactId&gt;guice-servlet&lt;/artifactId&gt;
    &lt;version&gt;3.0&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.google.inject.extensions&lt;/groupId&gt;
    &lt;artifactId&gt;guice-multibindings&lt;/artifactId&gt;
    &lt;version&gt;3.0&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.sun.jersey.contribs&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-guice&lt;/artifactId&gt;
    &lt;version&gt;1.8&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
","<google-app-engine><guice><shiro>","1",""
"38386264","CAS Single Sign Out ticket not valid","<p>I triggered CAS Single Sign Out event by visit <code>https://xx/cas-server/logout?service=myservice</code>, and CAS POST a request to <code>myservice</code>(<a href=""http://test.ogg:8080/cas"" rel=""nofollow"">http://test.ogg:8080/cas</a>) with the body： </p>

<p><code>
&lt;samlp:LogoutRequest xmlns:samlp=""urn:oasis:names:tc:SAML:2.0:protocol"" ID=""LR-329-TxwPlscwOydLQH0JD0R2AKmOr4ew5FdiKN2"" Version=""2.0"" IssueInstant=""2016-07-15T08:21:38Z""&gt;&lt;saml:NameID xmlns:saml=""urn:oasis:names:tc:SAML:2.0:assertion""&gt;@NOT_USED@&lt;/saml:NameID&gt;&lt;samlp:SessionIndex&gt;ST-329-lNWcDWJIW0Ve7ij9gsNG-cas&lt;/samlp:SessionIndex&gt;&lt;/samlp:LogoutRequest&gt;
</code></p>

<p>I have customised logout logic, so used the ticket in <code>&lt;samlp:SessionIndex&gt;ST-329-lNWcDWJIW0Ve7ij9gsNG-cas&lt;/samlp:SessionIndex&gt;</code> to call <code>https://xx/cas-server/validateService？service=myservice&amp;ticket=ST-329-lNWcDWJIW0Ve7ij9gsNG-cas</code>, but CAS report ticket invalid：</p>

<p><code>
&lt;cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'&gt;
    &lt;cas:authenticationFailure code='INVALID_TICKET'&gt;
        Ticket &amp;#039;ST-329-lNWcDWJIW0Ve7ij9gsNG-cas&amp;#039; not recognized
    &lt;/cas:authenticationFailure&gt;
</code></p>

<p>Here is the log from CAS server:</p>

<pre><code>2016-07-15 08:21:38,334 DEBUG [org.jasig.cas.logout.SamlCompliantLogoutMessageCreator.create(SamlCompliantLogoutMessageCreator.java:53)] - Generated logout message: [&lt;samlp:LogoutRequest xmlns:samlp=""urn:oasis:names:tc:SAML:2.0:protocol"" ID=""LR-328-qwK2GgGVhRlRtu9QtebIoXIo30iwd4dWWwu"" Version=""2.0"" IssueInstant=""2016-07-15T08:21:38Z""&gt;&lt;saml:NameID xmlns:saml=""urn:oasis:names:tc:SAML:2.0:assertion""&gt;@NOT_USED@&lt;/saml:NameID&gt;&lt;samlp:SessionIndex&gt;ST-329-lNWcDWJIW0Ve7ij9gsNG-cas&lt;/samlp:SessionIndex&gt;&lt;/samlp:LogoutRequest&gt;]

2016-07-15 08:21:38,334 DEBUG [org.jasig.cas.logout.LogoutManagerImpl.performBackChannelLogout(LogoutManagerImpl.java:143)] - Sending logout request for: [http://test.ogg:8080/cas]

2016-07-15 08:21:38,334 DEBUG [org.jasig.cas.util.SimpleHttpClient$MessageSender.call(SimpleHttpClient.java:297)] - Attempting to access http://test.ogg:8080/cas

2016-07-15 08:21:38,371 DEBUG [org.jasig.cas.web.support.AbstractArgumentExtractor.extractService(AbstractArgumentExtractor.java:45)] - Extractor generated service for: http://test.ogg:8080/cas

2016-07-15 08:21:38,372 DEBUG [org.jasig.cas.ticket.registry.DefaultTicketRegistry.getTicket(DefaultTicketRegistry.java:80)] - Attempting to retrieve ticket [ST-329-lNWcDWJIW0Ve7ij9gsNG-cas]

2016-07-15 08:21:38,372 INFO [org.jasig.cas.CentralAuthenticationServiceImpl.validateServiceTicket(CentralAuthenticationServiceImpl.java:413)] - ServiceTicket [ST-329-lNWcDWJIW0Ve7ij9gsNG-cas] does not exist.
</code></pre>

<p>It seems the ticket was expired in 1 second?</p>
","<java><spring><cas><shiro>","0",""
"44848142","Shiro error redirection","<p>How can I make Shiro redirect errors in a Web app?</p>

<p>I have configured my <code>web.xml</code> </p>

<pre><code>&lt;error-page&gt;
    &lt;error-code&gt;500&lt;/error-code&gt;
    &lt;location...&lt;/location&gt;
&lt;/error-page&gt;
&lt;error-page&gt;
    &lt;error-code&gt;404&lt;/error-code&gt;
    &lt;location&gt;...&lt;/location&gt;
&lt;/error-page&gt;
</code></pre>

<p>And it works fine. But when Shiro is active and I raise a 500 error on purpose the page stays blank.</p>
","<shiro>","0","44849520"
"43882751","How to achieve Single Sign On for my scenario?","<p>I have three web applications which are App1, App2 and App3 developed in SpringMVC and Apache Shiro framework.</p>

<ul>
<li>App1: App1 has own users and roles </li>
<li>App2: App2 has own users and roles</li>
</ul>

<p>App1 and App2 has different users and roles.</p>

<ul>
<li>App3: App3 doesn’t have own users and roles, it is common application
for both App1 and App2</li>
</ul>

<h2>My scenario:</h2>

<ol>
<li>If one user logged in App1 and the user should be able to view App3
with his roles and permission. At the same time the user should not
able to view App2.</li>
<li>If one user logged in App2 and the user should be able to view App3
with his roles and permission. At the same time the user should not
able to view App1.</li>
</ol>

<p>How to achieve this? Please give me your valuable suggestions.</p>
","<spring-mvc><authentication><single-sign-on><cas><shiro>","0",""
"45989422","Apache Zeppelin & Shiro Authorization","<p>I have Apache Shiro up and running just fine. I'm able to block regular users from accessing 'configuration' parameters using the examples given by blocking the Zeppelin API shown below</p>

<pre><code>/api/configurations/** = authc, roles[admin]
</code></pre>

<p>I'm having issues with the Shiro syntax for blocking users from specific URLs or functionality in Apache Zeppelin 0.7.2.</p>

<p>I'd like to block users from seeing the 'Job' section as well as the 'About Zeppelin' modal. The landing screen has links to github, the mailing list, and community which I'd also like to block.</p>

<p>Is this possible using the roles based authorization for [urls] ? For the 'Job' blocking, I've tried ;</p>

<p><code>/api/jobmanager/** = authc, roles[admin]</code></p>

<p>but it doesn't block 'user1' from seeing the 'Job' section. If it's not possible through Shiro, is there another option? Thanks in advance!</p>
","<apache><shiro><apache-zeppelin><zeppelin>","1",""
"46882223","Autowiring is not working in Apache Shiro custom Realm class","<p>Currently I am using apache shiro authentication in my spring boot project. I wrote Custom Realm for Cassandra DB. While autowiring the class inside realm object returns null when submitting login details. My Application Config(@component annotation used):</p>

<pre><code>@Bean(name = ""realm"")
@DependsOn(""lifecycleBeanPostProcessor"")
public ApplicationRealm realm() {
    ApplicationRealm realm = new ApplicationRealm();
    realm.init();
    return realm;
}

@Bean
public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
    return new LifecycleBeanPostProcessor();
}
</code></pre>

<p>My Application Realm Class :</p>

<pre><code> @Configuration
 @ComponentScan(""com.scm.auth"")
public class ApplicationRealm extends AuthorizingRealm {

@Autowired
IAuthRepository authRepo;

@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    Set&lt;String&gt; roles = new HashSet&lt;String&gt;();
    try {
        roles.add(""admin"");
    } catch (Exception rEx) {
        throw new AuthorizationException(rEx);
    }
    SimpleAuthorizationInfo info = new SimpleAuthorizationInfo(roles);
    info.setRoles(roles);

    return info;
}

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    SimpleAuthenticationInfo info = null;
    UsernamePasswordToken upToken = (UsernamePasswordToken) token;

    User user = authRepo.findByUserName(upToken.getUsername(), true); // my model class

        try {
            if (user.getCurrentPwd().equals(upToken.getPassword())) {
                info = new SimpleAuthenticationInfo(user, user.getCurrentPwd(), getName());
            } else {
                throw new AuthenticationException(""Login name ["" + upToken.getUsername() + ""] not found!"");
            }
        } catch (Exception idEx) {
            throw new AuthenticationException(idEx);
        }
        return info;


}
</code></pre>

<p>Is any annotation missed?</p>
","<java><spring-boot><spring-security><annotations><shiro>","0","46895481"
"26474743","Apache Shiro using two Authentications (2x shiro.ini)","<p>I want to have two Authentications pages (two login pages).</p>

<p>a) User: username: emailaddess   and password: password
b) Customer -> username: emailaddress  password: token in URL</p>

<p>But now my problem is:
How can I define this two logins?</p>

<ul>
<li>In need two shiro.ini correct?</li>
</ul>

<p>I have two LoginBeans. But how can I make the a different for user / customer?
Thank you for your help </p>
","<apache><shiro>","0",""
"46803971","How to set permission/role to specific resource with Shiro","<p>I try to implement file server where users has permission to serve/upload to only authorized directory. Here just about what I want in code:</p>

<pre><code>    router.get(""/files/*"").handler(ctx -&gt; {

        String requestedDir = ctx.request().path().replaceFirst(""/files/"", """");

        ctx.user().isAuthorised(""read:"" + requestedDir, isAuth -&gt; {
            if (isAuth.succeeded()) ctx.next();
            else ctx.fail(401);
        });
    });

    router.get(""/files/*"").handler(StaticHandler.create().setDirectoryListing(true));

    router.post(""/upload"").handler(ctx -&gt; {
        String toDir = ctx.pathParam(""dir"");
        ctx.user().isAuthorised(""write:"" + toDir, isAuth -&gt; {
          //upload
        });
    });
</code></pre>

<p>I try to use Apache Shiro, but don't understand how implement this with permission/role. What I want, for example: user1 can serve all dirs, others - only specific dirs. </p>

<p>Theoretical code:</p>

<pre><code>user.user1 = pass,write:* // write = write+read
user.user2 = pass,write:/some/folder1 
user.user3 = pass,write:/some/folder2,read:/some/folder3 
</code></pre>

<p>How to implement this with Shiro or maybe another solution?</p>
","<permissions><roles><shiro><vert.x>","1",""
"47444161","Spring Boot and Apache Shiro with JWT - Am I using it correctly?","<p>I have Spring Boot application and I attempted to integrate Apache shiro with it. As a first iteration, I am authenticating and authorizing the JWT way, no session whatsoever.</p>

<p>The way I have architected it, every REST request has to contain a JWT header that needs to be validated. I am doing it in a shiro filter. Post validation, filter sets a context, that any REST controller method will be able to fetch and act upon it.</p>

<p>I want the opinion of community to make sure my configuration is correct. 
Moreover, there are certain problems (at least IMO), I am facing with it. So if someone can throw some light on a correct way of handing it, would be greatly appreciated.</p>

<p>Following are some code snippets demonstrating my configuration and realm design.</p>

<p><strong>Snippet 1 : ShiroConfiguration</strong></p>

<pre><code>private AuthenticationService authenticationService;
/**
 * FilterRegistrationBean
 * @return
 */
@Bean
public FilterRegistrationBean filterRegistrationBean() {
    FilterRegistrationBean filterRegistration = new FilterRegistrationBean();
    filterRegistration.setFilter(new DelegatingFilterProxy(""shiroFilter""));
    filterRegistration.setEnabled(true);
    filterRegistration.setDispatcherTypes(DispatcherType.REQUEST);
    filterRegistration.setOrder(1);
    return filterRegistration;
}
@Bean(name = ""securityManager"")
public DefaultWebSecurityManager securityManager() {
    DefaultWebSecurityManager dwsm = new DefaultWebSecurityManager();
    dwsm.setRealm(authenticationService());
    final DefaultWebSessionManager sessionManager = new DefaultWebSessionManager();
    // disable session cookie
    sessionManager.setSessionIdCookieEnabled(false);
    dwsm.setSessionManager(sessionManager);
    return dwsm;
}

/**
 * @see org.apache.shiro.spring.web.ShiroFilterFactoryBean
 * @return
 */
@Bean(name=""shiroFilter"")
public ShiroFilterFactoryBean shiroFilterFactoryBean(@Qualifier(""securityManager"") SecurityManager securityManager, JWTTimeoutProperties jwtTimeoutProperties, TokenUtil tokenUtil) {
    ShiroFilterFactoryBean bean = new ShiroFilterFactoryBean();
    bean.setSecurityManager(securityManager);

    //TODO: Create a controller to replicate unauthenticated request handler
    bean.setUnauthorizedUrl(""/unauthor"");

    Map&lt;String, Filter&gt; filters = new HashMap&lt;&gt;();
    filters.put(""perms"", new AuthenticationTokenFilter(jwtTimeoutProperties, tokenUtil));
    filters.put(""anon"", new AnonymousFilter());
    bean.setFilters(filters);

    LinkedHashMap&lt;String, String&gt; chains = new LinkedHashMap&lt;&gt;();
    chains.put(""/"", ""anon"");
    chains.put(""/favicon.ico"", ""anon"");
    chains.put(""/index.html"", ""anon"");
    chains.put(""/**/swagger-resources"", ""anon"");
    chains.put(""/api/**"", ""perms"");

    bean.setFilterChainDefinitionMap(chains);
    return bean;
}
@Bean
@DependsOn(value=""lifecycleBeanPostProcessor"")
public AuthenticationService authenticationService() {
    if (authenticationService==null){
        authenticationService = new AuthenticationService();
    }

    return  authenticationService;
}


@Bean
@DependsOn(value=""lifecycleBeanPostProcessor"")
public Authorizer authorizer() {
    return authenticationService();
}


@Bean
@DependsOn(""lifecycleBeanPostProcessor"")
public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
    DefaultAdvisorAutoProxyCreator proxyCreator = new DefaultAdvisorAutoProxyCreator();
    proxyCreator.setProxyTargetClass(true);
    return proxyCreator;
}
</code></pre>

<p><strong>Snippet 2 : AuthenticationFilter</strong></p>

<pre><code>public class AuthenticationTokenFilter extends PermissionsAuthorizationFilter {
@Override
public boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) throws IOException {
    HttpServletRequest httpRequest = (HttpServletRequest) request;
    String authorizationHeader = httpRequest.getHeader(TOKEN_HEADER);
    String authToken;

    String alreadyFilteredAttributeName = getAlreadyFilteredAttributeName();
    httpRequest.setAttribute(alreadyFilteredAttributeName, true);

    AuthenticationService.ensureUserIsLoggedOut(); // To not end up getting following error.

    if (authorizationHeader != null &amp;&amp; !authorizationHeader.isEmpty()) {

        if (authorizationHeader.startsWith(BEARER_TOKEN_START_WITH)) {
            authToken = authorizationHeader.substring(BEARER_TOKEN_START_INDEX);
        } else if (authorizationHeader.startsWith(BASIC_TOKEN_START_WITH)) {
            String caseId = UUID.randomUUID().toString();
            log.warn(""{} Basic authentication is not supported but a Basic authorization header was passed in"", caseId);
            return false;
        } else {
            // if its neither bearer nor basic, default it to bearer.
            authToken = authorizationHeader;
        }
        try {
            if(tokenUtil.validateTokenAgainstSignature(authToken, jwtTimeoutProperties.getSecret())) {
                Map&lt;String, Object&gt; outerClaimsFromToken = tokenUtil.getOuterClaimsFromToken(authToken, jwtTimeoutProperties.getSecret());

                JWTAuthenticationToken jwtAuthenticationToken = new JWTAuthenticationToken(outerClaimsFromToken.get(TokenUtil.CLAIM_KEY_USERID),
                                                (String) outerClaimsFromToken.get(TokenUtil.CLAIM_KEY_INNER_TOKEN));
                SecurityUtils.getSubject().login(jwtAuthenticationToken);

        } catch (JwtException | AuthenticationException ex) {
            log.info(""JWT validation failed."", ex);
        }
    }
    return false;
}
</code></pre>

<p><strong>Snippet 3 : TokenRestController</strong></p>

<pre><code>public Response getToken() {

    AuthenticationService.ensureUserIsLoggedOut(); // To not end up getting following error.
                                                        // org.apache.shiro.session.UnknownSessionException: There is no session with id

        // TODO: In case of logging in with the organization, create own token class implementing HostAuthenticationToken class.
        IAMLoginToken loginToken = new IAMLoginToken(authenticationRequestDTO.getUsername(), authenticationRequestDTO.getPassword());
        Subject subject = SecurityUtils.getSubject();
        try {
            subject.login(loginToken);
        } catch (AuthenticationException e) {
            log.debug(""Unable to login"", e);
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null);
        }

        AuthenticatingUser user = (AuthenticatingUser) subject.getPrincipal();

            String authToken = authenticationService.generateToken(user);
            return ResponseEntity.status(HttpStatus.OK).body(new AuthenticationResponseDTO(authToken));
    });
</code></pre>

<p><strong>Snippet 4 : AuthorizingRealm</strong></p>

<pre><code>@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    if (token instanceof IAMLoginToken) {
        IAMLoginToken usernamePasswordToken = (IAMLoginToken) token;

        UserBO user = identityManagerRepository.getUserByUsername(usernamePasswordToken.getUsername(), true);

        if (user != null &amp;&amp; user.getSecret() != null &amp;&amp; !user.getSecret().isEmpty()) {
            if(passwordEncoder.matches(String.valueOf(usernamePasswordToken.getPassword()), user.getPassword())) {
                if (!isActive(user)) {
                    throw new AuthenticationException(""User account inactive."");
                }
                return new SimpleAuthenticationInfo(toAuthenticatingUser(user).withSecret(user.getSecret()), usernamePasswordToken.getPassword(), getName());
            }
        }
    } else if (token instanceof JWTAuthenticationToken) {
        JWTAuthenticationToken jwtToken = (JWTAuthenticationToken) token;
        String userId = (String) jwtToken.getUserId();
        String secret = cache.getUserSecretById(userId, false);

        if (secret != null &amp;&amp; !secret.isEmpty()) {
            Map&lt;String, Object&gt; tokenClaims = tokenUtil.getClaims(jwtToken.getToken(), secret);
            String orgId = (String) tokenClaims.get(TokenUtil.CLAIM_KEY_ORG);
            String email = (String) tokenClaims.get(TokenUtil.CLAIM_KEY_EMAIL);
            String firstName = (String) tokenClaims.get(TokenUtil.CLAIM_KEY_FIRSTNAME);
            String lastName = (String) tokenClaims.get(TokenUtil.CLAIM_KEY_LASTNAME);
            Set&lt;String&gt; permissions = (Set&lt;String&gt;) tokenClaims.get(TokenUtil.CLAIM_KEY_PERMISSIONS);

            return new SimpleAccount(new AuthenticatingUser(userId, orgId, email, firstName, lastName, permissions), jwtToken.getToken(), getName());
        }
    }

    throw new AuthenticationException(""Invalid username/password combination!"");
}

@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {

    SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();
    authorizationInfo.setStringPermissions(((AuthenticatingUser)principals.getPrimaryPrincipal()).getPermissions());
    return authorizationInfo;
}
</code></pre>

<p><strong>Problems and issues</strong></p>

<ul>
<li><p>Same error as mentioned in here. 
<a href=""https://stackoverflow.com/questions/14516851/shiro-complaining-there-is-no-session-with-id-xxx-with-defaultsecuritymanager"">Shiro complaining &quot;There is no session with id xxx&quot; with DefaultSecurityManager</a> 
I basically want Shiro to stop using and/or validating sessions. Is there a way to achieve that ? I solved it by implementing the same fix as mentioned in the answer, thats what <code>ensureUserIsLoggedOut()</code> does.</p></li>
<li><p>As you can see in the configuration's ShiroFilterFactoryBean definition, I am setting some filter chain definitions. And there you can see I set every api call that starts with <code>/api</code> will have authentication filter in front. But the thing is I want to add some exceptions to it. Such as, <code>/api/v0/login</code> is one of them. Is there a way of achieving this ?</p></li>
<li><p>Overall, I am not sure if the configuration I have come up with is appropriate, as I found very limited documentation and similar open source project samples.</p></li>
</ul>

<p>Any feedback is welcome.</p>
","<spring-boot><spring-security><jwt><shiro><spring-config>","1",""
"44054768","Cas (for authentication ) + OpenLDAP ( for username, password + roles and permissions ) + Apache Shiro ( for authorization )","<p>As stated, I am developing a springboot application with following tech stack:
1. CAS for SSO
2. LDAP for usrname, password storage</p>

<p>Till here all works fine. Now I need to add apache shiro for authorization. I am not sure about what should be the realm definition as I don't want authentication to be done by Shiro. I am not able to find any decent example with this combination.  </p>
","<cas><openldap><shiro>","0","44201844"
"43774225","Alternative ways of transmitting session ID in Shiro","<p>I am not sure if I am using the right terminology, but I was looking at the documentation and trying to work out if I could achieve the following with Shiro:-</p>

<ol>
<li>Allow the user to login via a post of JSON</li>
<li>Check credentials and send a session ID to the user (probably on the header)</li>
<li>For every subsequent request, send the session ID transmitted on the login response on the request header</li>
<li>Use a SessionDAO which stores the session data in the DB (thereby creating a ""sessionless"" application).</li>
</ol>

<p>I know how to create the session DAO, but I wasn't sure how to set the current subject on a web application.  Is this possible? Is there any reason not to do this?</p>
","<shiro>","0","43785901"
"43713649","Grails spring-security-shiro : working with Apache Shiro subject in gsp - migrating from shiro to spring-security-shiro","<p>I am upgrading an existing application from Grails 2.4.4 to Grails 3.2.8. I am attempting to migrate from the grails <code>shiro</code> plugin to the grails <code>spring-security-shiro</code> plugin. I would like to perform the normal login check within a layout template gsp in addition to accessing the logged in user.</p>

<p>Here is what I had before in my layout gsp</p>

<p><strong>main.gsp</strong></p>

<pre><code>&lt;g:if test=""${shiro.principal()}""&gt;
    Welcome back 
    &lt;g:link controller=""account"" action=""profile""&gt;
        &lt;shiro:principal/&gt;
    &lt;/g:link&gt;|
    &lt;g:link controller=""auth"" action=""signOut"" class=""navbar-brand""&gt;Logout&lt;/g:link&gt;
&lt;/g:if&gt;
&lt;g:else&gt;
    &lt;g:link controller=""auth"" action=""login"" class=""navbar-brand""&gt;Login&lt;/g:link&gt;
&lt;/g:else&gt;
</code></pre>
","<grails><spring-security><shiro>","0",""
"44872093","struts2 cannot show result page when integrating with apache shiro","<p>struts2 2.5.10, spring 4.x, struts2-spring-plugin 2.5.10, shiro 1.4.0,
shiro-spring 1.4.0.</p>

<p>web.xml :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;

&lt;web-app xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""
         version=""3.1""&gt;
  &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;

  &lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;classpath:beans.xml&lt;/param-value&gt;
  &lt;/context-param&gt;

  &lt;filter&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
  &lt;/filter&gt;

  &lt;filter&gt;
    &lt;filter-name&gt;struts2&lt;/filter-name&gt;
    &lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;
  &lt;/filter&gt;

  &lt;!-- shiro filter mapping has to be first --&gt;
  &lt;filter-mapping&gt;
    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
    &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
  &lt;/filter-mapping&gt;

  &lt;filter-mapping&gt;
    &lt;filter-name&gt;struts2&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;

  &lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
  &lt;/listener&gt;

  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;

&lt;/web-app&gt;
</code></pre>

<p>beanx.xml :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        ""&gt;

    &lt;bean name=""loginAction"" class=""example.shiro.action.LoginAction"" &gt;

    &lt;/bean&gt;

    &lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
        &lt;property name=""securityManager"" ref=""securityManager"" /&gt;
        &lt;property name=""loginUrl"" value=""/login.jsp"" /&gt;

        &lt;property name=""filterChainDefinitions""&gt;
            &lt;value&gt;
                /login.jsp = authc
                /logout = logout
                /* = authc
            &lt;/value&gt;
        &lt;/property&gt;
    &lt;/bean&gt;

    &lt;bean id=""iniRealm"" class=""org.apache.shiro.realm.text.IniRealm""&gt;
        &lt;property name=""resourcePath"" value=""classpath:shiro.ini"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;

        &lt;property name=""realm"" ref=""iniRealm"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;

&lt;/beans&gt;
</code></pre>

<p>struts.xml :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;!DOCTYPE struts PUBLIC
""-//Apache Software Foundation//DTD Struts Configuration 2.0//EN""
""http://struts.apache.org/dtds/struts-2.0.dtd""&gt; 

&lt;struts&gt;

    &lt;constant name=""struts.devMode"" value=""true"" /&gt;

    &lt;package name=""default"" extends=""struts-default""&gt;

        &lt;action name=""list"" class=""loginAction"" method=""list""&gt;
            &lt;result name=""success""&gt;/success.jsp&lt;/result&gt;
            &lt;result name=""error""&gt;error.jsp&lt;/result&gt;
        &lt;/action&gt;

    &lt;/package&gt;

&lt;/struts&gt;
</code></pre>

<p>index.jsp :</p>

<pre><code>&lt;body&gt;
    &lt;s:action name=""list"" /&gt;
&lt;/body&gt;
</code></pre>

<p>login.jsp looks like:</p>

<pre><code>&lt;form name=""loginform"" action="""" method=""post""&gt;
        &lt;table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""3""&gt;
            &lt;tr&gt;
                &lt;td&gt;Username:&lt;/td&gt;
                &lt;td&gt;&lt;input type=""text"" name=""username"" maxlength=""30""&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Password:&lt;/td&gt;
                &lt;td&gt;&lt;input type=""password"" name=""password"" maxlength=""30""&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td colspan=""2"" align=""left""&gt;&lt;input type=""checkbox""
                    name=""rememberMe""&gt;&lt;font size=""2""&gt;Remember Me&lt;/font&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td colspan=""2"" align=""right""&gt;&lt;input type=""submit""
                    name=""submit"" value=""Login""&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/table&gt;
    &lt;/form&gt; 
</code></pre>

<p>LoginAction.list() : </p>

<pre><code>public String list() {

        Subject currentUser = SecurityUtils.getSubject();

        if(currentUser.isAuthenticated()) {System.out.println(""user : ""+currentUser.getPrincipal());
            System.out.println(""You are authenticated!"");
        } else {
            System.out.println(""Hey hacker, hands up!"");
        }

        return ""success"";
    }
</code></pre>

<p>shiro.ini :</p>

<pre><code>[users]
root=123,admin
guest=456,guest
frank=789,roleA,roleB

# role name=permission1,permission2,..,permissionN
[roles]
admin=*
roleA=lightsaber:*
roleB=winnebago:drive:eagle5
</code></pre>

<p>index.jsp, login.jsp and success.jsp are placed under webapp.</p>

<p>What I want is : enter into LoginAction.list() need to be authenticated, if login success, then run LoginAction.list() and return ""success"" then show success.jsp which defined as struts action result.</p>

<p>Now LoginAction.list() can be executed after login successful, but success.jsp is not displayed, browser is a blank page.  </p>

<p>Why?</p>
","<spring><struts2><shiro>","0","44909300"
"44395610","Load remembered user data with Apache Shiro","<p>I'm using Apache Shiro 1.4.0 with Java EE 7 on a Payara 4.1.1.x. My shiro.ini looks like:</p>

<pre><code>[urls]
page1.xhtml = user
must_be_logged.xhtml = authc
</code></pre>

<p>The standard RememberMe functionality works perfectly on page1.xhtml</p>

<p>Regarding the login, I'm using a programmatic login <a href=""http://balusc.omnifaces.org/2013/01/apache-shiro-is-it-ready-for-java-ee-6.html#ProgrammaticLogin"" rel=""nofollow noreferrer"">from BalusC's article</a>. As it's a CDI bean, I can inject some EJB and perform some actions:</p>

<pre><code>@Named
@RequestScoped
public class Login{

    // username, password, rememberMe attribute definition with getter and setter

    @EJB
    private SomeService someServiceImpl;

    public void submit(){
        try {
            SecurityUtils.getSubject().login(new UsernamePasswordToken(username, password, remember));

            Session session = SecurityUtils.getSubject().getSession(false);
            if(session != null){
                someServiceImpl.addUserInfoToSession(username, session);
            }
            // redirect to page
        }
        catch(AuthenticationException e) {
            // send error message
        }
    }
}
</code></pre>

<p>The <code>addSomeUserInfoToSession</code> basically retrieves a User entity from the database and add some information (first name, last name, language preferences, etc) to the session attributes via <code>session.setAttribute(""first_name"", ...);</code>.</p>

<p>I could not find how to perform such action for remembered users: <strong>When a subject is identified from a rememberMe cookie, how to perform a EJB-involved action?</strong></p>

<ol>
<li>I could not find the filter where the rememberMe mecanism is triggered</li>
<li>I tried using session listeners (implementing <code>org.apache.shiro.session.SessionListener</code>) but I could not find how to inject CDI bean or how to use EJB in such ""POJO""</li>
<li>If I use a custom RememberMeManager like extending <code>org.apache.shiro.mgt.AbstractRememberMeManager</code>, I could not find how to inject @EJB in it.</li>
</ol>
","<java-ee><shiro><remember-me>","0","44791467"
"40726342","Apache Shiro JDBC Connection Issue","<p>I am attempting to connect to a database to start a baseline user authentication program. I was able to use the shiro.ini to get user roles, but I'm getting an error when trying to run the program using a JDBC connection. I have tried using both the Microsoft sqljdbc42.jar and the jTDS jar file as well, with no difference in the result. Either way I get the following error:</p>

<blockquote>
  <p>[ERROR] No plugin found for prefix 'java' in the current project and in the plugin groups [org.apache.maven.plugins, org.codehaus.mojo] available from the repositories [local (C:\Users\mainuser.m2\repository), central (<a href=""https://repo.maven.apache.org/maven2)]"" rel=""nofollow noreferrer"">https://repo.maven.apache.org/maven2)]</a> -> [Help 1]</p>
</blockquote>

<p>I've seen a couple of different troubleshooting questions for ""No plugin found for prefix"" but none for 'java', so I'm at a loss as to how to proceed.</p>

<p>Here is my Shiro.ini file, using the jTDS jar:</p>

<pre><code>[main]
ds = net.sourceforge.jtds.jdbcx.JtdsDataSource
ds.serverName = SQL5
ds.user = myUser
ds.password = myPassword
ds.databaseName = myDatabase

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = ""SELECT pswd FROM Users     WHERE user = ?""
jdbcRealm.userRolesQuery = ""SELECT role FROM Role WHERE user = jdbcRealm.permissionsQuery = ""SELECT perm FROM Person WHERE user = ?""
</code></pre>

<p>Here is my pom.xml file, using the jTDS jar:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd""&gt;

&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
&lt;groupId&gt;org.apache.shiro.tutorials&lt;/groupId&gt;
&lt;artifactId&gt;shiro-tutorial&lt;/artifactId&gt;
&lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
&lt;name&gt;First Apache Shiro Application&lt;/name&gt;
&lt;packaging&gt;jar&lt;/packaging&gt;

&lt;properties&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
&lt;/properties&gt;

&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.0.2&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.5&lt;/source&gt;
                &lt;target&gt;1.5&lt;/target&gt;
                &lt;encoding&gt;${project.build.sourceEncoding}&lt;/encoding&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;

    &lt;!-- This plugin is only to test run our little application.  It is not
         needed in most Shiro-enabled applications: --&gt;
               &lt;plugin&gt;
        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
        &lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;1.1&lt;/version&gt;
    &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;net.sourceforge.jtds&lt;/groupId&gt;
        &lt;artifactId&gt;jtds&lt;/artifactId&gt;
        &lt;version&gt;1.3.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
        &lt;version&gt;1.1.0&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;!-- Shiro uses SLF4J for logging.  We'll use the 'simple' binding
         in this example app.  See http://www.slf4j.org for more info. --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
        &lt;version&gt;1.6.1&lt;/version&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

<p></p>
","<authentication><jdbc><shiro>","0","40730484"
"33310805","Shiro SessionDAO class loading issue in shared library","<p>I am getting a <code>java.lang.ClassNotFoundException: com.example.pricing.shared.MyClass</code> and I don't understand why given that the class is on the classpath.</p>

<p>Here is the config I'm using:
I have 2 war files in the same Tomcat 7 instance:</p>

<ol>
<li><code>ROOT.war</code> pointing to www.example.com/ </li>
<li><code>app.war</code>pointing to www.example.com/app/*</li>
</ol>

<p>Both files contain 2 shared libraries: </p>

<ol>
<li><code>commons.jar</code></li>
<li><code>pricing.jar</code></li>
</ol>

<p>The <code>commons.jar</code> lib contains the <code>SessionDAO</code> class which extends Shiro's <code>AbstractSessionDAO</code>. My SessionDAO class is a basic implementation which saves the Shiro Session in a MySQL table (VARCHAR id, BLOB Session object).</p>

<p>Now when I try to access a URL of the <code>app.war</code> module I get the following exception while de-serializing the Session from the DB: </p>

<pre><code>org.apache.shiro.session.SessionException: Class not found exception while reading Session from input stream!
com.example.dao.SessionDAO.deserialize(SessionDAO.java:97)
... (omitted)

Root cause:
java.lang.ClassNotFoundException: com.example.pricing.shared.MyClass 
java.net.URLClassLoader$1.run(URLClassLoader.java:366)
</code></pre>

<p>The faulty deserialize method is as follow:</p>

<pre><code>private static Session deserialize(ResultSet resultSet, String col){
    ByteArrayInputStream bais=null;
    ObjectInputStream ins=null;
    Session res=null;
    try{
        byte[] barray=resultSet.getBytes(col);
        if(barray!=null){
            bais=new ByteArrayInputStream(barray);
            ins=new ObjectInputStream(bais);
            res=(Session)ins.readObject();
        }
    }catch(IOException e){
        throw new SessionException(""IO exception while reading Session from input stream!"",e);
    }catch(ClassNotFoundException e){
        throw new SessionException(""Class not found exception while reading Session from input stream!"",e);//the one causing the issue
    }catch(SQLException e){
        throw new SessionException(""SQL exception while reading Session from input stream!"",e);
    }finally{
        try{
            ins.close();
        }catch(NullPointerException|IOException e){}
        try{
            bais.close();
        }catch(NullPointerException|IOException e){}
    }
    return res;
}
</code></pre>

<p></p>

<p>Do you have any idea of how to fix this issue?</p>
","<java><deserialization><classnotfoundexception><shiro>","0",""
"44765033","Shiro and client certs","<p>For my JSF/TomEE application, I have a NoSQL database with users and roles that specifies how users can access resources (basically, IDs in a url parameter) either read-only or write.</p>

<p>I want to implement security and <a href=""https://stackoverflow.com/questions/12516349/jsf-how-control-access-and-rights-in-jsf"">this post gave me some ideas</a> but I am keen to try a 3rd party library - probably Shiro or PicketLink. The rule is that users will authenticate themselves with a client certificate, and if that is not provided, they will be authenticated as a default guest user.</p>

<p>Surprisingly, I am having a bit of trouble finding some information on how to do this in Shiro, it doesn't look straight forward. It is a bit of a surprise to me that there is nothing ""out of the box"" in Shiro to implement client certificate authentication.</p>

<p>So I think I have to create a Realm to ""connect"" Shiro with my database. Then I read I might need to extend <code>org.apache.shiro.authc.UsernamePasswordToken</code> to read the certificate and pass it to Shiro. Then I suppose I have to restrict access to content in JSF xhtml pages (using the <code>rendered</code> attribute for example) and I suppose that even in all methods of the <code>Named</code> Managed beans I will need to check the permissions.</p>

<p>Also, It is not clear to me how I can assign the guest user when a certificate is not provided, since apparently it is TomEE the one who validates the client, so if no certificate is provided, my code will not get executed to assign the guest user. I could open two different ports in TomEE, but then the access will not be unified, since I want to treat the guest user uniformely, as any other user in the system. How can this be done?</p>

<p>Is this implemented in a easier way in PicketLink? (which is also better prepared for JSF)</p>
","<jsf-2><shiro><tomee-7><picketlink>","1","44892591"
"44431214","Apache Shiro UnknownSessionException occured after logout and before next page loading","<p>I'm trying my luck here. I had checked <a href=""https://stackoverflow.com/questions/13188718/shiro-unknownsessionexception-after-logout"">this</a> and <a href=""https://stackoverflow.com/questions/43299354/how-to-solve-unknownsessionexception-thrown-in-logout-method-in-apache-shiro"">this</a> to get some hint without success. I use Apache Shiro 1.4.0 on a Payara 4.1.1.171.1. The logout part in my shiro.ini is:</p>

<pre><code>[main]
user.loginUrl = /login.xhtml
logout.redirectUrl = /index.xhtml

[urls]
/index.xhtml = ssl, user
/login.xhtml = ssl, user
/logout.xhtml = logout
</code></pre>

<p>On my user interface, I do have a <em>logout button</em> calling the <code>submit()</code> method defined as:</p>

<pre><code>public void submit() throws IOException {
    // some actions involving EJBs
    Faces.redirect(""/logout.xhtml"");
}
</code></pre>

<p>Then I have this error:</p>

<pre><code>Warning:   StandardWrapperValve[Faces Servlet]: Servlet.service() for servlet Faces Servlet threw exception
org.apache.shiro.session.UnknownSessionException: There is no session with id [db328e2a-8b78-40e6-afb7-72c01e10a20a]
    at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
    at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
    at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
    at org.apache.shiro.web.servlet.ShiroHttpSession.getAttribute(ShiroHttpSession.java:131)
    at com.sun.faces.context.SessionMap.get(SessionMap.java:118)
    at org.omnifaces.util.FacesLocal.getSessionAttribute(FacesLocal.java:1505)
    at org.omnifaces.util.Hacks.removeViewState(Hacks.java:437)
    at org.omnifaces.viewhandler.OmniViewHandler.unloadView(OmniViewHandler.java:136)
    at org.omnifaces.viewhandler.OmniViewHandler.restoreView(OmniViewHandler.java:103)
    at com.sun.faces.lifecycle.RestoreViewPhase.execute(RestoreViewPhase.java:199)
    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)
    at com.sun.faces.lifecycle.RestoreViewPhase.doPhase(RestoreViewPhase.java:123)
    at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:658)
    at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1696)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:344)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)
    at org.glassfish.tyrus.servlet.TyrusServletFilter.doFilter(TyrusServletFilter.java:305)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
    at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
    at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
    at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
    at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
    at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:316)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:160)
    at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:734)
    at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:673)
    at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:174)
    at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:416)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:283)
    at com.sun.enterprise.v3.services.impl.ContainerMapper$HttpHandlerCallable.call(ContainerMapper.java:466)
    at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:169)
    at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:206)
    at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:180)
    at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:235)
    at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:284)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:201)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:133)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:112)
    at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)
    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:526)
    at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:56)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:137)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:591)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:571)
    at java.lang.Thread.run(Thread.java:745)
</code></pre>

<p>I put some <code>LOGGER.debug(...)</code> in filter and my involved classes to know when this happens, assuming that filtering is sequential, and it appears that <strong>this error happens after logout filter <code>afterCompletion()</code> method and before the next page (namely the login page) loads</strong>.</p>

<p>So I struggle to find the guilty component. If anyone has an idea about this, please let me know.</p>
","<java-ee><logout><shiro><omnifaces>","0",""
"41008110","unable to resolve class org.apache.shiro.grails.ConfigUtils","<p>I've upgraded my grails shiro plugin and now get the following error:</p>

<p>unable to resolve class org.apache.shiro.grails.ConfigUtils</p>

<p>using grails 2.4.3 with shiro plugin: 1.2.1</p>

<p>I'm guessing ConfigUtils has been deprecated at some point but I've been unable to find a guide that describes what I need to do with the latest Shiro.</p>

<p>I found the following in the Shiro plugin source:</p>

<p>security.shiro.filter.config option is deprecated. Use Grails' bean property override mechanism instead.</p>

<p>But I have no explanation to what this means.</p>
","<grails><grails-plugin><shiro>","0",""
"41256084","How to declare multiple Un-authorized URL's in apache Shiro configuration","<p>I am trying out the Apache Shiro framework and I basically downloaded the setup from a project online. I managed to get it working but I am stuck at a really small issue. I want to make multiple JSF pages in my project to be accessed without any authorization. </p>

<p>The configuration currently looks something like: </p>

<pre><code>authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter    
authc.loginUrl = /login.xhtml
roles.unauthorizedUrl = /login.xhtml
</code></pre>

<p>Now I would like to add one more page to roles.unnauthorizeddUrl i.e. signUp.xhtml</p>

<p>I tried </p>

<pre><code>roles.unauthorizedUrl = /login.xhtml,/signUp.xhtml
</code></pre>

<p>but that doesnt work. Is there a way to declare multiple unauthorized URL's in the config. </p>
","<configuration><shiro>","0","41267695"
"26033084","How does a Shiro enabled web application handle CacheExceptions","<p>I have a question about handling <code>org.apache.shiro.cache.CacheException</code>. </p>

<p>What is shiro's responsibility when a cache exception occurs? This RTE ripples through the whole stack, but I'm unclear where it is handled and in what manner. </p>

<p>Can a shiro enabled web application recover? </p>

<p>Is the cache manager reinitialised? </p>

<p>Do I have to restart the application when a cache exception occurs? </p>

<p>For example, a timeout exception or a failed to connect to node exception occurs on cache.get(key). What's the expected outcome apart from bubble to the stop and die? </p>

<p>Thanks  </p>
","<java><caching><memcached><shiro>","0",""
"39630210","SSM with Shiro, filter ineffective, just display only when you login then you can see the page, why it happens?","<p>After the project starts, it displayed only after  success login ,then you can see the page, when I debug, found SecurityFilter not excute, UserRealm doGetAuthorizationInfo () method is not excute. where is the  problem? Grateful! .</p>

<p>Can anyone help me work out why this did execute? </p>

<p>It's my class:</p>

<pre><code>public class UserRealm extends AuthorizingRealm {


    @Resource
    private UserService userService;

    /**
     * @param principalCollection
     * @return
     */
    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
        String username=principalCollection.getPrimaryPrincipal().toString();
        SimpleAuthorizationInfo info=new SimpleAuthorizationInfo();
        Set&lt;String&gt; roleName=userService.findRoles(username);
        Set&lt;String&gt; permissions=userService.findPermissions(username);
        info.setRoles(roleName);
        info.setStringPermissions(permissions);
        return info;
    }

    /**
     * @param token
     * @return
     * @throws AuthenticationException
     */
    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {

        String username=token.getPrincipal().toString();
        User user=userService.findUserByUsername(username);
        if(user!=null){

            AuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(user.getUsername(),user.getPassword(),user.getUsername()) ;
            return authenticationInfo;
        }else {
            return null;
        }
    }
}
</code></pre>

<p>filter:</p>

<p>public class SecurityFilter extends AccessControlFilter {</p>

<pre><code>@Override
protected boolean isAccessAllowed(ServletRequest request,
                                  ServletResponse response, Object mappedValue) throws Exception {


    HttpServletRequest httpServletRequest = (HttpServletRequest) request;
    String url = httpServletRequest.getRequestURI();

    if (null != token || isLoginRequest(request, response)) {
        return false;
    }
    return true;
}


@Override
protected boolean onAccessDenied(ServletRequest request,
                                 ServletResponse response) throws Exception {


    saveRequestAndRedirectToLogin(request, response);
    return false ;
}
</code></pre>

<p>}</p>

<p>realm:</p>

<p>public class UserRealm extends AuthorizingRealm {   </p>

<p>@Resource  </p>

<p>private UserService userService;  </p>

<p>/**  * </p>

<ul>
<li><p>@param principalCollection  </p>

<ul>
<li>@return  */ </li>
</ul>

<p>@Override  </p></li>
</ul>

<p>protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {</p>

<p>String username=principalCollection.getPrimaryPrincipal().toString(); </p>

<p>SimpleAuthorizationInfo info=new SimpleAuthorizationInfo(); </p>

<p>Set roleName=userService.findRoles(username); </p>

<p>Set permissions=userService.findPermissions(username);  </p>

<p>info.setRoles(roleName); </p>

<p>info.setStringPermissions(permissions);  </p>

<p>return info;  </p>

<p>}   </p>

<p>/**  *   </p>

<ul>
<li><p>@param token </p>

<ul>
<li>@return  </li>
</ul></li>
<li><p>@throws AuthenticationException </p>

<p>*/  </p></li>
</ul>

<p>@Override  </p>

<p>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {</p>

<p>String username=token.getPrincipal().toString();</p>

<p>User user=userService.findUserByUsername(username); </p>

<p>if(user!=null){ </p>

<p>AuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(user.getUsername(),user.getPassword(),user.getUsername()) ;</p>

<p>return authenticationInfo;  }else {</p>

<p>return null; </p>

<p>}    </p>

<p>} </p>

<p>}</p>
","<java><shiro><ssm>","0",""
"39386552","A browser to achieve multiple login in Shiro","<p>I have a web app which have 2 parts: front part and backend part. Both part need a login page for users. Members need to use /signin to login front part. Admins need to use /admin/signin to login backend part.How to achieve, thank you</p>
","<shiro>","0",""
"43370319","Some questions about Apache Shiro in Spring MVC","<p>I downloaded a Spring MVC project which using Apache Shiro for security layer. In the controller, it uses @RequiresPermissions to define the permission, for example:</p>

<pre><code>@RequiresPermissions(""sys:user:view"")
@RequestMapping(value = {""index""})
public String index(User user, Model model) {
    return ""modules/sys/userIndex"";
}

@RequiresPermissions(""sys:user:view"")
@RequestMapping(value = {""list"", """"})
public String list(User user, HttpServletRequest request, HttpServletResponse response, Model model) {
    return ""modules/sys/userList"";
}
</code></pre>

<p>I have couple of questions about this:</p>

<ol>
<li>What kind of permission is this? I checked the <a href=""https://shiro.apache.org/permissions.html"" rel=""nofollow noreferrer"">Shiro documents</a>, based on the doc, three parts should be ""domain:action:instance"", but in the code above, the first two parts are path, and the last part is the action. So I'm just confused. </li>
<li>I'm not sure whether the annotation @RequiresPermissions is using to define the permission. I tried to use that define a new permission, but failed. If it's not, how to define a new permission?</li>
</ol>
","<spring-mvc><shiro>","0","43395097"
"43648671","You do not have permission... spring security shiro","<p>I am currently working on implementing the spring security shiro plugin but seem to be running into an issue with permissions. Below is my setup. I get a 'You do not have permission to access this order...' when accessing a resource I should have access to.</p>

<p><strong>Domain Class</strong></p>

<pre><code>class Permission {

   Account user
   String permission

   static constraints = {
      permission unique: 'user'
   }
}
</code></pre>

<p><strong>Controller</strong></p>

<pre><code>if(!subject.isPermitted(""todo:edit:${todo.id}"")){
    flash.message = ""You do not have permission to access this order...""
    forward(controller:'todo', action:'list')
    return
}
</code></pre>

<p><strong>Bootstrapped data</strong></p>

<pre><code>account.addToPermissions(""todo:save"")
account.addToPermissions(""todo:edit:"" + todo.id)
account.addToPermissions(""todo:update:"" + todo.id)
account.addToPermissions(""todo:remove:"" + todo.id)
account.save(flush:true)
</code></pre>

<p>The permissions match up, but unsure where the hickup is. The <code>isPermitted</code> should work without issue now.</p>

<p>Any guidance would be most appreciated.</p>

<p>Thanks in advance for your help.</p>

<p>Regards</p>
","<grails><spring-security><shiro>","0",""
"45530261","How does Apache Shiro can be used for rest api session id based authentication..?","<p>Need to implement rest API autentication in which I need to generate sessionId or access token which has expiry time and use it for api authentication.</p>

<p>Any working example on this? Thanks in advance.</p>
","<java><rest><authentication><shiro>","0",""
"45402431","Shiro: Is it possible to get the URL in doGetAuthenticationInfo(AuthenticationToken token)","<p>I am trying to create a RESTful web service using Jersey framework on google appengine. I am using apache shiro for authentication.</p>

<p>Let's say I have the following scenario:</p>

<ol>
<li>There is a admin user pre-configured which creates other user and provides the username and password offline to each of those users.</li>
<li>For the normal users, there are a number of REST APIs. There is one API: 
<code>GET /tokenInfo</code>  which should use username and password for authentication and return a UserId and token as response.</li>
<li>For all the other REST APIs, I want the credential used for authentication to be the UserId and Token instead of Username and password.</li>
<li>So basically it a scenario where the credential pair used for authentication varies based on the API.</li>
</ol>

<p>How can I achieve this in shiro. From what I understand, doGetAuthenticationInfo() passes the credentials sent by the client and expects you to validate, but in this case, I need to know which API is called. So is there a way to get the URL?
If no then what other way is there to achieve this?</p>
","<rest><google-app-engine><jersey><shiro>","0","45421655"
"43090385","passwordRetryCache in shiro","<p>Mutiple times for login in shiro.
I set a cache call passwordRetryCache which can log the attempts times from the user and after 10 minutes the account will be clear. when I try 5 times wrong password attempt,the acount was locked at 16:05.then ten minutes the acount will be not locked.But when I try sixth times at 16:10.the account was stil locked at 16:15.After 16:20,the account was open.Why?the account should be open at 16:15</p>

<p>RetryLimitCredentialsMatcher.java (which extends HashedCredentialsMatcher):</p>

<pre><code>public boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {
    String username = (String) token.getPrincipal();
    // retry count + 1
    AtomicInteger retryCount = passwordRetryCache.get(username);
    if (retryCount == null) {
        retryCount = new AtomicInteger(0);
        passwordRetryCache.put(username, retryCount);
    }
    if (retryCount.incrementAndGet() &gt; 5) {
        // if retry count &gt; 5 throw
        throw new ExcessiveAttemptsException();
    }

    boolean matches = super.doCredentialsMatch(token, info);
    if (matches) {
        // clear retry count
        passwordRetryCache.remove(username);
    }
    return matches;
}
</code></pre>
","<java><shiro>","0",""
"42060480","Shiro multiple principals must be unique","<p>I am using <a href=""https://shiro.apache.org/"" rel=""nofollow noreferrer"">shiro</a> v1.2.2 for authentication in a web program. I have 2 principals for each user, a primary value and some other value and so I am using the <a href=""https://shiro.apache.org/static/1.2.2/apidocs/org/apache/shiro/subject/SimplePrincipalCollection.html"" rel=""nofollow noreferrer""><code>SimplePrincipalCollection</code></a> to store these 2 principals.</p>

<p>The problem I am having is that if the 2 principals are the same value (although they represent 2 distinct concepts in my system), the <code>SimplePrincipalCollection</code> only stores 1 value and so calls to <code>SecurityUtils.getSubject().getPrincipals()</code> only has 1 value. </p>

<p>My realm <a href=""https://shiro.apache.org/static/1.2.2/apidocs/org/apache/shiro/realm/AuthenticatingRealm.html#doGetAuthenticationInfo"" rel=""nofollow noreferrer""><code>doGetAuthenticationInfo</code></a> implementation looks something like this:</p>

<pre><code>@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken) throws AuthenticationException {
    ...
    List&lt;Integer&gt; principalList = new ArrayList&lt;&gt;();
    principalList.add(primaryPrincipal); // This is the primary principal so should be first in the list
    principalList.add(secondaryPrincipal);

    PrincipalCollection principals = new SimplePrincipalCollection(principalList, getName());
    AuthenticationInfo authInfo = new SimpleAuthenticationInfo(principals, credentials);
    return authInfo;
}
</code></pre>

<p>So if <code>primaryPrincipal</code> and <code>secondaryPrincipal</code> are the same value, the <code>SimplePrincipalCollection</code> only stores 1 value. I have verified this with a simple test:</p>

<pre><code>@Test
public void testMultiplePrincipal() {
    final String realmName = ""TestRealm"";

    List&lt;Integer&gt; principalList = new ArrayList&lt;&gt;();
    principalList.add(1);
    principalList.add(2);

    PrincipalCollection principals = new SimplePrincipalCollection(principalList, realmName);
    assertThat((List&lt;?&gt;) principals.asList(), hasSize(2)); // This passes

    principalList = new ArrayList&lt;&gt;();
    principalList.add(1);
    principalList.add(1);

    principals = new SimplePrincipalCollection(principalList, realmName);
    assertThat((List&lt;?&gt;) principals.asList(), hasSize(2)); // This fails because size = 1
}
</code></pre>

<p>Upon debugging, I found that this behaviour is caused by <code>SimplePrincipalCollection</code> using a <a href=""https://docs.oracle.com/javase/7/docs/api/java/util/LinkedHashSet.html"" rel=""nofollow noreferrer""><code>LinkedHashSet</code></a> to store the principals.</p>

<p>I know that I can define my own custom principal object and use the constructor <a href=""https://shiro.apache.org/static/1.2.2/apidocs/org/apache/shiro/authc/SimpleAuthenticationInfo.html#SimpleAuthenticationInfo"" rel=""nofollow noreferrer""><code>SimpleAuthenticationInfo(Object principal, Object credentials, String realmName)</code></a> but then I would have to change the code that calls <code>SecurityUtils.getSubject().getPrincipal()</code>.</p>

<p>Am I using the <code>SimplePrincipalCollection</code> the wrong way and is there a way I can get around this unique principal problem without defining a custom principal?</p>
","<java><shiro>","1",""
"46849433","How to ignore session in specific filters","<p>We have a few filters that run and we are trying to implement the ""hybrid"" approach mentioned in the documentation.  </p>

<p>Users can login through a web form and in most cases that is ok and using the created session works fine, but for /api/** calls we want to force the use of a tokens and ignore an authenticated user who may of come from a form login.</p>

<pre><code>/api/content/** : jwt, api, user
/api/**: noSessionCreation, jwt, api, end
/**: jwt, api, user
</code></pre>

<p>We would like the /api/** to ignore any authenticated subjects that come from a session (created by a form login).  Right now, if I login through the form page the session carries over to the /api calls and bypasses the need for the token being passed in on the url.</p>

<p>So, once I login from the form these calls will work:</p>

<ul>
<li>/api/info</li>
<li>/api/info?token=123</li>
<li>/api/content/hello.png &lt;-- This is the only one i want to work based off of the logged in user from the from</li>
</ul>

<p>Our goal, basing of of the hybrid approach mentioned in the documentation is:</p>

<ol>
<li>/api/** calls must be stateless and always use the token passed to the call.</li>
<li>/api/content/** can use a session, from a form login or the standard filter chain jwt and api calls</li>
<li>/** can pretty much take in anything - session or token.</li>
</ol>

<p>Is there a way to recognize and forcibly (in a filter?) ignore authenticated users that come from the session?</p>
","<shiro>","0",""
"39490338","Configuring Apache Shiro to work with Neo4j","<p>I am trying to configure Apache Shiro to work with Neo4j using the shiro.ini file.</p>

<p>This is my shiro.ini part of the file responsible for authentication:</p>

<pre><code>...
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = java:comp/env/jdbc/Neo4jDb
# What type do I set here
ds.requiredType = 

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = &lt;Cypher Query&gt;
jdbcRealm.userRolesQuery = &lt;Cypher Query&gt;
jdbcRealm.permissionsQuery = &lt;Cypher Query&gt;
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource=$ds
securityManager.realms = $jdbcRealm
...
</code></pre>

<p>And in my context.xml</p>

<pre><code>...
&lt;Resource auth=""Container"" driverClassName=""org.neo4j"" maxIdle=""30"" maxTotal=""50"" maxWaitMillis=""10000"" 
        name=""jdbc/Neo4jDb"" password=""p4ssw0rd"" type="""" url=""jdbc:neo4j:bolt://localhost/"" username=""neo4j""/&gt;
</code></pre>

<p>My question is, what type do I set in shiro.ini and context.xml &lt;Resource ... type="" "" ...&gt;</p>

<p>If this doesn't work, I'm interested in alternative solutions on how to make shiro work with neo4j, or even better if neo4j has a good built in authentification and authorization, I'm willing to use that as a solution.</p>
","<apache><jdbc><neo4j><shiro>","0","39497862"
"45534062","Why the ""/index"" redirect to the UnauthorizedUrl in shiro?","<p>I test the shiro with springboot,but no matter what urls like 127.0.0.1:8080/index are redirected to the the UnauthorizedUrl(""/error"");</p>

<p>Here is my ShiroConfig:</p>

<pre><code>@Configuration
public class ShiroConfig {

    @Bean(name = ""lifecycleBeanPostProcessor"")
    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {
        return new LifecycleBeanPostProcessor();
    }

    @Bean
    @DependsOn(""lifecycleBeanPostProcessor"")
    public MyShiroRealm myShiroRealm(){
        MyShiroRealm myShiroRealm = new MyShiroRealm();
        myShiroRealm.setCredentialsMatcher(hashedCredentialsMatcher());
        return myShiroRealm;
    }

    @Bean
    public HashedCredentialsMatcher hashedCredentialsMatcher(){
        HashedCredentialsMatcher hashedCredentialsMatcher = new HashedCredentialsMatcher();
        hashedCredentialsMatcher.setHashAlgorithmName(""MD5"");
        hashedCredentialsMatcher.setHashIterations(2);
        return hashedCredentialsMatcher;
    }

    @Bean
    public DefaultWebSecurityManager securityManager() {
        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();
        securityManager.setRealm(myShiroRealm());
        //securityManager.setCacheManager(ehCacheManager());
        return securityManager;
    }

    @Bean
    public ShiroFilterFactoryBean shiroFilter() {
        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();
        shiroFilterFactoryBean.setSecurityManager(securityManager());

        Map&lt;String,String&gt; filterChainDefinitionMap = new LinkedHashMap&lt;String,String&gt;();
        filterChainDefinitionMap.put(""/index"", ""anon"");

        filterChainDefinitionMap.put(""/logout"", ""logout"");

        filterChainDefinitionMap.put(""/**"", ""authc"");

        shiroFilterFactoryBean.setLoginUrl(""/login"");

        shiroFilterFactoryBean.setSuccessUrl(""/welcome"");
        //Unauthorized;
        shiroFilterFactoryBean.setUnauthorizedUrl(""/error"");        
        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);       
        return shiroFilterFactoryBean;
    } 

    @Bean
    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(){
        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();
        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager());
        return authorizationAttributeSourceAdvisor;
    }

    @Bean
    @ConditionalOnMissingBean
    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {
        DefaultAdvisorAutoProxyCreator defaultAAP = new DefaultAdvisorAutoProxyCreator();
        defaultAAP.setProxyTargetClass(true);
        return defaultAAP;
    }

    @Bean
    public PassThruAuthenticationFilter passThruAuthenticationFilter(){
        return new PassThruAuthenticationFilter();
    }
}
</code></pre>

<p>And  the Realm</p>

<pre><code>public class MyShiroRealm extends AuthorizingRealm {
    private static final  Logger LOGGER = Logger.getLogger(MyShiroRealm.class);
    @Resource 
    UserService userService;

    @Override
    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
        LOGGER.info(""AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) : ""+principalCollection);
        String principal=(String) principalCollection.getPrimaryPrincipal();
        LOGGER.info(principal);
        User user=(User) userService.findUserByName(principal);
        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
        for(Role role:user.getRoles()){
            info.addRole(role.getName());
            for(Permission permission:role.getPermissions()){
                info.addStringPermission(permission.getName());
            }
        }
        return info;
    }

    @Override
    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        LOGGER.info(""AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) : ""+authenticationToken);
        String name=((UsernamePasswordToken)authenticationToken).getUsername();
        User user=userService.findUserByName(name);
        if (user != null) {
          Session session = SecurityUtils.getSubject().getSession();
          session.setAttribute(""user"", user);
          return new SimpleAuthenticationInfo(name,user.getPassword(),getName());
      } else {
          return null;
      }
    }
}
</code></pre>

<p>Properties in application.properties</p>

<pre><code>#thymeleaf
spring.thymeleaf.cache=false

#hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.show-sql= true
#html

spring.mvc.view.prefix=/

spring.mvc.view.suffix=.html
</code></pre>

<p>DB properties are not given. Tomcat's server port is 8080.</p>

<p>The recources dir:
<a href=""https://i.stack.imgur.com/s6OY5.png"" rel=""nofollow noreferrer"">dir of resource</a></p>

<p>When I access the ""127.0.0.1:8080/index"" ,it redirects to the ""error"" page setted by </p>

<pre><code>  shiroFilterFactoryBean.setUnauthorizedUrl(""/error"");.
</code></pre>

<p>when the ""/login"" Controller method is given it redirects to login page.</p>

<p>I am so confused and cannot find a way to solve it.</p>

<p>UPDATE </p>

<p>After moving the index.html to templates dir and make a @RequestMapping(""/index"") method,I get the index in browser.(If the index.html is in the static dir, A @RequestMapping(""/index"") method don't work.)
How could I get the static html ?</p>
","<spring-boot><shiro>","0",""
"44261979","waffle-shiro negotiate issue after session timeout","<p>I use the waffle-shio negotiate source from <a href=""https://github.com/Waffle/waffle/tree/master/Source/JNA/waffle-shiro/src/main/java/waffle/shiro/negotiate"" rel=""nofollow noreferrer"">https://github.com/Waffle/waffle/tree/master/Source/JNA/waffle-shiro/src/main/java/waffle/shiro/negotiate</a> to use windows authentication as login token.</p>

<p>You can refer to that source in URL it's exactly what I use with one thing I changed is replace AuthenticatingRealm with AuthorizingRealm and override getAuthorizationInfo method to get token info and do authorizing accordingly.</p>

<p>It works like a charm, but the problem happens when the session is timeout as I set it to 15min in web.xml , I got the following exception</p>

<pre><code>org.springframework.web.util.NestedServletException: Request processing

failed; nested exception is org.apache.shiro.authz.UnauthenticatedException:

This subject is anonymous - it does not have any identifying principals and

authorization operations require an identity to check against. A Subject

instance will acquire these identifying principals automatically after a

successful login is performed be executing

org.apache.shiro.subject.Subject.login(AuthenticationToken) or when 'Remember

Me' functionality is enabled by the SecurityManager. This exception can also

occur when a previously logged-in Subject has logged out which makes it

anonymous again. Because an identity is currently not known due to any of

these conditions, authorization is denied.

org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServ

let.java:982)

org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:

javax.servlet.http.HttpServlet.service(HttpServlet.java:624)

org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.jav

a:846)

javax.servlet.http.HttpServlet.service(HttpServlet.java:731)

org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)

sdir.web.filters.SecurityFilter.doFilter(SecurityFilter.java:69)

org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFi

lter.java:449)

org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.j

ava:365)

org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:

org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83

)

org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.

java:383)

org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShi

roFilter.java:362)

org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilt

er.java:125)

org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(Delegatin

gFilterProxy.java:346)

org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilte

rProxy.java:262)
</code></pre>

<p>Well, I see there are options in the exception itself to solve the problem, but my question <strong>is there anyway to let NegotiateAuthenticationFilter.java filter be called again when the session is invalidated?</strong></p>

<p>I need a best practice way to login in again using windows auth when the session is invalidated and I see the best way to let the filter NegotiateAuthenticationFilter be called again.</p>
","<java><spring><session><shiro><waffle>","0",""
"44024113","How to add SHIRO realm request time out for user authentication?","<p>In my shiro.ini, I configured 2 realm i.e. LDAP and JDBC</p>

<p>But I am not able to set the authentication request time out.</p>

<p>When I added: ldapRealm.connectionTimeout = 1000
then it throws exception: </p>

<pre><code>SEVERE: Exception sending context initialized event to listener instance of class org.apache.shiro.web.env.EnvironmentLoaderListener
</code></pre>

<p>org.apache.shiro.config.ConfigurationException: Property 'connectionTimeout' does not exist for object of type com.bc.xyz.auth.efgLdapRealm.
    at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:413)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:702)
    at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:364)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:325)
    at org.apache.shiro.config.ReflectionBuilder$AssignmentStatement.doExecute(ReflectionBuilder.java:955)
    at org.apache.shiro.config.ReflectionBuilder$Statement.execute(ReflectionBuilder.java:887)
    at org.apache.shiro.config.ReflectionBuilder$BeanConfigurationProcessor.execute(ReflectionBuilder.java:765)
    at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:260)
    at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:167)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:130)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:108)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:94)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
    at org.apache.shiro.web.env.IniWebEnvironment.createWebSecurityManager(IniWebEnvironment.java:203)
    at org.apache.shiro.web.env.IniWebEnvironment.configure(IniWebEnvironment.java:99)
    at org.apache.shiro.web.env.IniWebEnvironment.init(IniWebEnvironment.java:92)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:45)
    at org.apache.shiro.util.LifecycleUtils.init(LifecycleUtils.java:40)
    at org.apache.shiro.web.env.EnvironmentLoader.createEnvironment(EnvironmentLoader.java:221)
    at org.apache.shiro.web.env.EnvironmentLoader.initEnvironment(EnvironmentLoader.java:133)
    at org.apache.shiro.web.env.EnvironmentLoaderListener.contextInitialized(EnvironmentLoaderListener.java:58)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4727)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)</p>
","<java><shiro>","0",""
"36299827","Strange error occured in shiro doGetAuthorizationInfo method","<p>I am encountered with a strange error for a few days,and still in puzzled,details are below:</p>

<p>I'm using <strong>apache shiro</strong> with spring,</p>

<p>after some work,I got ready to setup ""<strong>doGetAuthorizationInfo</strong>"" method,because I'm using ""@RequiresRoles"" in my controller,</p>

<p>I found if I invoke XXXService(or any service) more than once,the exception occur(first time invoke XXXService,everything work fine),so,I'm try to test ""<strong>doGetAuthenticationInfo</strong>"" in same Realm which used for login,I invoked XXXService or other services several times in the method,it works fine,</p>

<p>and I also tried to change different datasource component,</p>

<p>so I think it's not datasource component bug,</p>

<p>I didn't find the reason.</p>

<p>When I was using dbcp datasource,exception like below:</p>

<pre><code>com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
</code></pre>

<p>No others are causing exception.</p>

<p>Any other place didn't found this problem.</p>

<p>Thanks for any help.</p>
","<spring><authorization><shiro>","-1","36301103"
"36348800","Shiro isPermitted returning false though the permission is defined in the database","<p>I am trying to authorize users based on there permissions provided. The multi level permission string that is provided in the database is as follows : </p>

<p>case:create,update,view;user:create,update,view;asset:create,update,view;account:create,update,view </p>

<p>So when I try to execute    SecurityUtils.getSubject().isPermitted(""case:create"") </p>

<p>it is returning false. </p>

<p>I am really stuck here and need some help. Please let me know how to define permissions for multiple resources and multiple actions. </p>

<p>Thanks for your time. </p>
","<permissions><authorization><shiro><jdbcrealm>","1",""
"43750657","Grails spring-security-core plugin, authenticating user programmatically","<p>I would like to programmatically authenticate a user using Grails spring-security-core but have been unable to find any code examples in the documentation or online. Any guidance would be most appreciated.</p>
","<grails><spring-security><shiro>","0",""
"23776121","Handling totally different user groups in Apache Shiro","<p>I have a system with 2 totally different groups of users, Customers and SysAds. They reside in different table structures.</p>

<p>I'm trying to see how to set up Apache Shiro to correctly authenticate these users separately.</p>

<p>I'm using Spring + Struts 2 in my web app, and I've thought about just using 2 different master Shiro filters in my web.xml like so:</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;authTravelAgentFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter&gt;
    &lt;filter-name&gt;authAdminFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;authAdminFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/admin/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;authCustomerFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/main/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Is this a valid way to set up Apache Shiro, or is there a more correct way?</p>
","<java><spring><apache><shiro>","0",""
"42312482","redirect to new server without login again in spring mvc","<p>I have two version of one project on two server and I want to redirect some of user to use second server for testing new version and they don't understand. I use spring MVC and apache shiro . how can I redirect user after login without making user to login again ?</p>
","<spring><apache><model-view-controller><shiro><mirroring>","0",""
"46830264","Customize/Extend Spring's @Async support for shiro","<p>I'm using Spring's <code>@EnableAsync</code> feature to execute methods asynchronously. For security I'm using Apache Shiro. In the code that is executed asynchronously I need to have access to the Shiro subject that was attached to the thread that triggered the async call.</p>

<p>Shiro supports using an existing subject in a different thread by associating the subject with the <code>Callable</code> that is to be executed on the different thread (see <a href=""https://shiro.apache.org/subject.html#a-different-thread"" rel=""nofollow noreferrer"">here</a>):</p>

<pre><code>Subject.associateWith(Callable)
</code></pre>

<p>Unfortunately I don't have direct access to the <code>Callable</code> as this stuff is encapsulated by Spring. I found that I would need to extend Spring's <code>AnnotationAsyncExecutionInterceptor</code> to associate my subject with the created <code>Callable</code> (that's the easy part).</p>

<p>By problem is now how to make Spring use my custom <code>AnnotationAsyncExecutionInterceptor</code> instead of the default one. The default one is created in <code>AsyncAnnotationAdvisor</code> and <code>AsyncAnnotationBeanPostProcessor</code>. I can of course extend these classes as well, but this only shifts to problem as I need the make Spring use my extended classes again.</p>

<p>Is there any way to achieve what I want?</p>

<p>I would be fine with adding a new custom async annotation as well. But I don't think this would be much of a help.</p>

<hr>

<p><strong>UPDATE:</strong>
Actually my finding that <code>AnnotationAsyncExecutionInterceptor</code> would need to be customized was wrong. By chance I stumbled across <code>org.apache.shiro.concurrent.SubjectAwareExecutorService</code> which does pretty exactly what I want and made me think I could simply provide a custom executor instead of customizing the interceptor. See my answer for details.</p>
","<java><spring><asynchronous><shiro>","0","46839178"
"46867015","what is current subject in Shiro?","<p>I'm new to Shiro and got confused about the current subject concept: </p>

<pre><code>Subject subject = SecurityUtils.getSubject(); // gets the current subject
subject.login(...); // do login
subject.logout(); // do logout
</code></pre>

<p>In my application I need to run work from different users concurrently, thus multiple users(subjects) co-exist concurrently, new users login and old users logout on the fly: clients sends work with [username, password] to server, the server do credential check by Shiro with the given [username, password], if [username, password] not exist in database, reject the work, if exist, login and dispatch the work to be processed, in the meanwhile other clients sends their work and login, my question is in a later time when the work for a user is done and I need to logout out the user, how do I get the subject for it?</p>
","<java><shiro>","0",""
"41140254","Date dependent login with shiro","<p>Is it possible creating date dependent logins with apache shiro? This would mean that I would be able to specify that a specific user can authenticate into an application only between certain dates.</p>
","<java><shiro>","1","41140712"
"45903343","Getting shiro session from atmosphereresource","<p>I am using the below code to get the session from an atmosphereresource:</p>

<pre><code> WebEnvironment env = WebUtils.getRequiredWebEnvironment(r.getAtmosphereConfig().getServletContext());

Session session = new WebSubject.Builder(env.getSecurityManager(), r.getRequest(), r.getResponse()).buildWebSubject().getSession();
</code></pre>

<p>I have also tried getting the session from session id in the following way:</p>

<pre><code>WebEnvironment env = WebUtils.getRequiredWebEnvironment(r.getAtmosphereConfig().getServletContext());
Session s = new Subject.Builder(env.getSecurityManager()).sessionId(sessionId).buildSubject().getSession();
</code></pre>

<p>However, it returns a session with null principals for a authenticated user with a valid session.</p>
","<java><session><shiro><atmosphere>","0","46067358"
"45831645","When trying to initiate Shiro SecurityManager from INI resource, encountered java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory","<p>I've just started trialling Shiro and was trying the code from <a href=""https://shiro.apache.org/configuration.html#Configuration-SecurityManagerfromanINIresource"" rel=""nofollow noreferrer"">SecurityManager from an INI resource</a> when I encountered </p>

<pre><code>java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
</code></pre>

<p>Extended message:</p>

<pre><code>Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
    at org.apache.commons.beanutils.ConvertUtilsBean.&lt;init&gt;(ConvertUtilsBean.java:154)
    at org.apache.commons.beanutils.BeanUtilsBean.&lt;init&gt;(BeanUtilsBean.java:113)
    at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:64)
    at org.apache.commons.beanutils.BeanUtilsBean$1.initialValue(BeanUtilsBean.java:60)
    at org.apache.commons.beanutils.ContextClassLoaderLocal.get(ContextClassLoaderLocal.java:154)
    at org.apache.commons.beanutils.BeanUtilsBean.getInstance(BeanUtilsBean.java:76)
    at org.apache.commons.beanutils.PropertyUtilsBean.getInstance(PropertyUtilsBean.java:107)
    at org.apache.commons.beanutils.PropertyUtils.getPropertyDescriptor(PropertyUtils.java:498)
    at org.apache.shiro.config.ReflectionBuilder.isTypedProperty(ReflectionBuilder.java:409)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:702)
    at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:364)
    at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:325)
    at org.apache.shiro.config.ReflectionBuilder$AssignmentStatement.doExecute(ReflectionBuilder.java:955)
    at org.apache.shiro.config.ReflectionBuilder$Statement.execute(ReflectionBuilder.java:887)
    at org.apache.shiro.config.ReflectionBuilder$BeanConfigurationProcessor.execute(ReflectionBuilder.java:765)
    at org.apache.shiro.config.ReflectionBuilder.buildObjects(ReflectionBuilder.java:260)
    at org.apache.shiro.config.IniSecurityManagerFactory.buildInstances(IniSecurityManagerFactory.java:167)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:130)
    at org.apache.shiro.config.IniSecurityManagerFactory.createSecurityManager(IniSecurityManagerFactory.java:108)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:94)
    at org.apache.shiro.config.IniSecurityManagerFactory.createInstance(IniSecurityManagerFactory.java:46)
    at org.apache.shiro.config.IniFactorySupport.createInstance(IniFactorySupport.java:123)
    at org.apache.shiro.util.AbstractFactory.getInstance(AbstractFactory.java:47)
    at core.Server.testShiro(Server.java:121)
    at core.Server.main(Server.java:57)
Caused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory
    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    ... 25 more
</code></pre>

<p>My code stated by <code>core.Server.testShiro(Server.java:121)</code> is:</p>

<blockquote>
  <p>org.apache.shiro.mgt.SecurityManager securityManager =
  factory.getInstance();</p>
</blockquote>

<p>My guess is, there is some issue with the shiro.ini file I specified in the previous line of code <code>Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");</code> and based on the error message, seems that the <code>beanutils</code> is the library that needs the <code>org.apache.commons.logging.LogFactory</code> class</p>

<p>My question is NOT how to correct the shiro.ini, but rather how to solve the ClassNotFoundException.</p>

<p>Note that I am using log4j2 and have already included the log4j2 jars, as well as the slf4j bridging adapters (my understanding is that Shiro need these) jars in my library:</p>

<ul>
<li>log4j-api-2.8.2.jar</li>
<li>log4j-core-2.8.2.jar</li>
<li>log4j-slf4j-impl-2.8.2.jar</li>
<li>slf4j-api-1.7.25.jar</li>
</ul>

<p>as well as Hibernate jars</p>

<p>I've done some search and saw Les Hazlewood's response to the Shiro User site's question <a href=""http://shiro-user.582556.n2.nabble.com/java-lang-NoClassDefFoundError-org-apache-commons-logging-LogFactory-td5135020.html"" rel=""nofollow noreferrer"">java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory</a> to look at <a href=""http://www.slf4j.org/faq.html#excludingJCL"" rel=""nofollow noreferrer"">explicitly excluding JCL</a>.  The three options stated from the directed site doesn't really apply as I am not using Maven-ized project, just a standalone java project in Netbeans.  However, I've tried including <code>commons-logging-1.2.jar</code> and <code>jcl-over-slf4j-1.7.25.jar</code> in my lib folder (which I gathered is similar to the ""provide scope"" instruction from the site) but that doesn't solve the exception.</p>

<p>I've also tried including <code>log4j-jcl-2.8.2.jar</code> in my lib folder, but the same exception still doesn't go away.</p>

<p>Any help and guidance will much appreciated.  Thanks in advance!  Cheers.</p>
","<slf4j><log4j2><shiro><apache-commons-logging>","0",""
"44783194","Blank page after authentication via getAuthenticationInfo","<p>I have created a Shiro Realm to use with x509 certs based on <a href=""https://github.com/eskatos/shiro-ext"" rel=""nofollow noreferrer"">this extension</a>.</p>

<p>The ""<code>protected X509AuthenticationInfo doGetX509AuthenticationInfo(X509AuthenticationToken token)</code>"" method is executed (i.e. <code>getAuthenticationInfo(token)</code>), validates my user and seems to execute the <code>return X509AuthenticationInfo</code>.</p>

<p>However, after that, the page stays blank! It is not redirected anywhere. If I use instead ""anon"", or the basic authentication, then my page is displayed correctly (to verify that the page should not be blank). What can be happening?</p>

<p><strong>shiro.ini</strong></p>

<pre><code>[main]
x509Realm = com.flowersforyou.shiro.myRealm
securityManager.realms = $x509Realm

x509 = org.apache.shiro.web.filter.authc.X509AuthenticationFilter

[urls]
/** = x509
</code></pre>

<hr>

<p><strong>EDIT</strong></p>

<p>I tried to use </p>

<pre><code>x509.loginUrl = /err.xhtml
[urls]
/err.xhtml = anon
/** = x509
</code></pre>

<p>But it is still showing a blank page so I don't think I was redirected anywhere when the validation failed</p>

<hr>

<p><strong>EDIT</strong></p>

<p>My answer explains what is possibly happening but now how to fix it. So I suppose that blank page is because something failed (null pointer or whatever). However, I suppose this should raise a 500 error via an Exception, as everything else. When the 500 error is raised, my app will capture it and show a custom error page. This is not happening here. Any solution to capture that error?</p>
","<shiro>","0","44785364"
"46622488","how to set zeppelin note permission access control","<p>I was trying to use LDAP authorization manner to login and looks like the Reader could edit the entire Note Permission which supposed to be read only.</p>

<p>For example I am UserA, I am the owner and writer of the Notebook, and set UserB as the reader. However, once UserB logged in, s/he could remove the owner (UserA) and becomes as the Owner of the Notebook.</p>

<p>Would you please help resolve?</p>

<p>Thank you!</p>
","<shiro><apache-zeppelin>","1",""
"47467236","Apache Shiro - ""Reverse"" Implies","<h2>Situation</h2>

<p>Assume you have the following permissions:<br>
<code>printer:my-printer:print</code><br>
<code>printer:my-printer-2:print</code></p>

<p>No I want to know if a user has the <code>print</code> permission on <strong>at least one</strong> printer, without knowing the list of printers.</p>

<h2>Trials</h2>

<p>At first I tried to check for <code>*:*:print</code>, but after reading the documentation it is clear that this will check if the user has the permission to print on <strong>all</strong> printers.</p>

<p>According to the documentation it only works the other way round as permissions are implied, so <code>printer:my-printer:*</code> will imply <code>printer:my-printer:print</code>.</p>

<p>Unfortunately I have not found a way to check for ""<strong>at least one</strong>"".
Is there something like <code>printer:+:print</code> (referring to regex here)?</p>

<hr>

<p>Any suggestions?</p>
","<java><permissions><shiro>","0",""
"47282490","Difference between MemoryConstrianedCacheManager and EhCacheManager","<p>I have more than two web applications deployed in tomcat. One of the application used apache shiro for session management . I need to get the session ID from the 1st application and use it in my other applications.</p>

<p>For Example</p>

<p>1st Application example uses <strong>MemoryConstrainedCacheManager</strong></p>

<p><strong>Shiro.ini</strong></p>

<pre><code>cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
</code></pre>

<p>For 2st Application , if i use the same configuration of 1st</p>

<pre><code>cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
</code></pre>

<p>SSO session management is not working. I need to login again .</p>

<p>If i use EhcacheManager in both the application by configuring cache in xml its working,</p>

<pre><code>ssoCacheManager = org.apache.shiro.cache.ehcache.EhCacheManager 
ssoCacheManager.cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $ssoCacheManager 
</code></pre>

<p>What is the difference between MemoryConstrained and EHCache manager ? Can i use memory constrained cache manager to store the session ID in tomcat container and use it in other web applications.</p>
","<shiro><java-security><security-framework>","0",""
"38787804","Apache Shiro how to authenticate REST service","<p>I want to create REST service which can be used on many clients. For security authenticaton I want to use Apache Shiro with OAuth to secure the REST service. How I can implement this?</p>
","<java><oauth-2.0><shiro>","0",""
"39064397","How shiro verified in different ways according to the URL prefix","<pre><code> &lt;Filter&gt;
            &lt;Filter-name&gt; shiroFilter &lt;/ filter-name&gt;
            &lt;Filter-class&gt; org.springframework.web.filter.DelegatingFilterProxy &lt;/ filter-class&gt;
            &lt;Init-param&gt;
                &lt;Param-name&gt; targetFilterLifecycle &lt;/ param-name&gt;
                &lt;Param-value&gt; true &lt;/ param-value&gt;
            &lt;/ Init-param&gt;
        &lt;/ Filter&gt;
            &lt;Filter-mapping&gt;
                &lt;Filter-name&gt; shiroFilter &lt;/ filter-name&gt;
                &lt;Url-pattern&gt; / admin / * &lt;/ url-pattern&gt;
            &lt;/ Filter-mapping&gt;
    
        &lt;Filter&gt;
        &lt;Filter-name&gt; menberShiroFilter &lt;/ filter-name&gt;
            &lt;Filter-class&gt; org.springframework.web.filter.DelegatingFilterProxy &lt;/ filter-class&gt;
            &lt;Init-param&gt;
                &lt;Param-name&gt; targetFilterLifecycle &lt;/ param-name&gt;
                &lt;Param-value&gt; true &lt;/ param-value&gt;
            &lt;/ Init-param&gt;
        &lt;/ Filter&gt;
            &lt;Filter-mapping&gt;
                &lt;Filter-name&gt; menberShiroFilter &lt;/ filter-name&gt;
                &lt;Url-pattern&gt; / menber / * &lt;/ url-pattern&gt;
            &lt;/ Filter-mapping&gt;
</code></pre>

<p>When shiro and web integration is configured in web.xml</p>

<p>The question now is: When in the same view, through access to the admin prefixed url successful login, jump to the home page, such as http: // localhost: 8080 / admin / index.do, then enter this browser window http: // localhost: 8080 / menber / index.do, the time to menber as it can directly access the URL prefix, and does not need to log in now demand is: If menber is not logged in URL prefix must be logged, how can we achieve it?</p>
","<java><shiro>","0",""
"29365940","Can i store shiro configuration in another datastore?","<p>Is it possible to store shiro configuration in some data store like ldap or oracle database?</p>

<p>Or only <strong>shiro.ini</strong> file is the way to load and store configuration?</p>

<p>Please suggest.</p>
","<apache><configuration><shiro>","0",""
"46629643","JSESSIONID cookie has '.node0' postfix while the server side sessionID doesn't","<p>I am using shiro for session management. When I get the sessionID in server side it is something like this:</p>

<pre><code>node0sicwaberf0z59o8qpehfpasf6
</code></pre>

<p>However, when I check the the JSESSIONID in my browser this value is saved as:</p>

<pre><code>node0sicwaberf0z59o8qpehfpasf6.node0
</code></pre>

<p>What exactly is this .node0 and why is this appended to the end of sessionID</p>

<p>It is also worth mentioning that I am using jetty 9 as my web server.</p>
","<java><cookies><jetty><shiro>","0",""
"45972621","Fail to use @autowired in realm extends AuthorizingRealm when use springMVC+mybatis+shiro","<p>I can use @Autowired in any other place successfully. For example, in a bean not extends AuthorizingRealm. But in the userRealm which extends AuthorizingRealm, permissionService and roleService is null. How can I solve it? </p>

<p>realm</p>

<pre><code>public class UserRealm extends AuthorizingRealm{

@Autowired
private PermissionService permissionService;
@Autowired
private RoleService roleService;

@Override
protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
    ...
}

@Override
protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
    ...
}
</code></pre>

<p>}</p>

<p>web.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
</code></pre>

<p>http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"" id=""WebApp_ID""
    version=""3.0""></p>

<pre><code>&lt;listener&gt;
    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;

&lt;context-param&gt;
    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
    &lt;param-value&gt;classpath:application-context-*.xml&lt;/param-value&gt;
&lt;/context-param&gt;

&lt;servlet&gt;
    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;dispatchOptionsRequest&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;throwExceptionIfNoHandlerFound&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;filter&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;forceEncoding&lt;/param-name&gt;
        &lt;param-value&gt;true&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;encoding&lt;/param-name&gt;
        &lt;param-value&gt;utf-8&lt;/param-value&gt;
    &lt;/init-param&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p></p>

<p>applicationContext config</p>

<pre><code>&lt;mvc:annotation-driven /&gt;

&lt;aop:aspectj-autoproxy proxy-target-class=""true"" /&gt;

&lt;context:component-scan base-package=""com.netease.ar.resource"" use-default-filters=""false""&gt;
    &lt;context:include-filter type=""annotation"" expression=""org.springframework.stereotype.Component"" /&gt;
    &lt;context:include-filter type=""annotation"" expression=""org.springframework.stereotype.Service"" /&gt;
    &lt;context:include-filter type=""annotation"" expression=""org.springframework.stereotype.Repository"" /&gt;
    &lt;context:include-filter type=""annotation"" expression=""org.springframework.web.bind.annotation.ControllerAdvice"" /&gt;
    &lt;context:include-filter type=""annotation"" expression=""org.springframework.stereotype.Controller"" /&gt;
&lt;/context:component-scan&gt;
</code></pre>

<p>shiro config</p>

<pre><code>&lt;bean id=""userRealm"" class=""com.realm.UserRealm""/&gt;

&lt;bean id=""securityManager"" class=""org.apache.shiro.web.mgt.DefaultWebSecurityManager""&gt;
    &lt;property name=""realm"" ref=""userRealm""/&gt;
&lt;/bean&gt;

&lt;bean class=""org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) --&gt;
&lt;bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean""&gt;
    &lt;property name=""staticMethod"" value=""org.apache.shiro.SecurityUtils.setSecurityManager""/&gt;
    &lt;property name=""arguments"" ref=""securityManager""/&gt;
&lt;/bean&gt;

&lt;bean id=""logout"" class=""org.apache.shiro.web.filter.authc.LogoutFilter""&gt;
    &lt;property name=""redirectUrl"" value=""/login"" /&gt;
&lt;/bean&gt;

&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""/login""/&gt;
    &lt;!--&lt;property name=""filters""&gt;--&gt;
        &lt;!--&lt;util:map&gt;--&gt;
            &lt;!--&lt;entry key=""sysUser"" value-ref=""sysUserFilter""/&gt;--&gt;
            &lt;!--&lt;entry key=""authc"" value-ref=""formAuthenticationFilter""/&gt;--&gt;
            &lt;!--&lt;entry key=""logout"" value-ref=""logout""/&gt;--&gt;
        &lt;!--&lt;/util:map&gt;--&gt;
    &lt;!--&lt;/property&gt;--&gt;
    &lt;!--&lt;property name=""filterChainDefinitions""&gt;--&gt;
        &lt;!--&lt;value&gt;--&gt;
            &lt;!--/ = authc--&gt;
            &lt;!--&amp;lt;!&amp;ndash;&amp;lt;!&amp;ndash;/logout = logout&amp;ndash;&amp;gt;&amp;ndash;&amp;gt;--&gt;
            &lt;!--&amp;lt;!&amp;ndash;/** = user&amp;ndash;&amp;gt;--&gt;
        &lt;!--&lt;/value&gt;--&gt;
    &lt;!--&lt;/property&gt;--&gt;
&lt;/bean&gt;

&lt;bean id=""lifecycleBeanPostProcessor"" class=""org.apache.shiro.spring.LifecycleBeanPostProcessor""/&gt;
</code></pre>

<p>mybatis config</p>

<pre><code>&lt;bean id=""dataSource"" class=""com.mchange.v2.c3p0.ComboPooledDataSource"" destroy-method=""close""&gt;
    ...
&lt;/bean&gt;

&lt;bean class=""org.mybatis.spring.mapper.MapperScannerConfigurer""&gt;
    &lt;property name=""processPropertyPlaceHolders"" value=""true"" /&gt;
    &lt;property name=""annotationClass"" value=""org.springframework.stereotype.Repository"" /&gt;
    &lt;property name=""basePackage"" value=""com.netease.ar.resource.dao"" /&gt;
&lt;/bean&gt;

&lt;bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean""&gt;
    &lt;property name=""mapperLocations"" value=""classpath:/sqlmap/*Mapper.xml"" /&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
&lt;/bean&gt;

&lt;tx:annotation-driven transaction-manager=""transactionManager"" /&gt;

&lt;bean id=""transactionManager"" class=""org.springframework.jdbc.datasource.DataSourceTransactionManager""&gt;
    &lt;property name=""dataSource"" ref=""dataSource"" /&gt;
&lt;/bean&gt;
</code></pre>
","<java><shiro><spring-mybatis>","0",""
"41801963","Can i do someting before view being generated using spring mvc jsp shiro","<p>I want to check session and add it's information to model, but i don't want to add code in every controller, so is there something I can use to solve this problem?</p>
","<java><jsp><spring-mvc><shiro>","-2","41802085"
"45604811","Has forking of picketlink features to keycloak completed?","<p>It is known that picketlink and keycloak are merged. Several parts of Picketlink were to be merged/forked with keycloak and future development is supposed to happen on keycloak.</p>

<p>Has forking of picketlink features with keycloak already done? If so can an existing picketlink application be upgraded to keycloak. What level of changes are required. Picketlink annotations/CDI are supported by keycloak by now?  </p>
","<jboss><shiro><keycloak><java-security><picketlink>","0",""
"39696315","How to create a p2 repository from Apache shiro library","<p>I am trying to setup a target definition for an eclipse-based project where I am planning to use Apache Shiro.</p>

<p>Ideally, thus, I would like to get the Apache Shiro jars from a p2 repository, but I cannot seem to be able to find one. Does anybody know if such a repository exist?</p>
","<shiro><p2>","0","41672462"
"36977326","Spring-Shiro Integration -- HTML page","<p>I have integrated my Spring MVC application Shiro for security reasons.</p>

<p>My all urls are working fine, but i have few html pages which can be directly accessed without being hit on my controllers.</p>

<p>How can i protect those pages, meaning if user is not logged in to application, and tries to <strong>open html page</strong>, he should be redirected to login page.</p>

<pre><code>&lt;filter&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy
        &lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;
            &lt;param-value&gt;true&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    &lt;filter-mapping&gt;
        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
</code></pre>

<p><strong>Application url</strong></p>

<blockquote>
  <p><a href=""http://ip:port"">http://ip:port</a> - works fine, redirects to login page</p>
  
  <p><a href=""http://ip:port/html/"">http://ip:port/html/</a> - opens html pages</p>
  
  <p>How can i protect this.</p>
</blockquote>
","<java><security><spring-mvc><shiro>","0",""
"45157925","How to update User data in domain classes of grails with shiro framework","<p>I am using grails 2.5.5 , hibernate4 - 4.3.10 &amp; shiro - 1.2.1. </p>

<p>Domain class looks like this :</p>

<pre><code>class Test{
String name
User createdBy
static constraints = {
}
def beforeValidate() {
    def subject

    try {
        subject = SecurityUtils.subject
    } catch (Exception e) {
        log.error ""Error obtaining the subject.  Message is [${e.message}]""
    }
    log.error ""createdBy :: [${createdBy}]""
    createdBy = (subject ? User.get( subject.principal ) :
            User.findByUsername(""ashutosh""))
    log.error ""createdBy :: [${createdBy}]""
    }
}
</code></pre>

<p>User class is :</p>

<pre><code>class User {
String username
String passwordHash

static hasMany = [ roles: Role, permissions: String ]

static constraints = {
    username(nullable: false, blank: false, unique: true)
}
</code></pre>

<p>}</p>

<p>I want to insert current logged in user as createdBy in test domain classes. </p>

<p>While running this code I am getting below error :</p>

<pre><code>Error obtaining the subject.  Message is [No such property: SecurityUtils for class: Test]
</code></pre>

<p>Please suggest how can I insert the current user data in Test while inserting it to database. </p>
","<hibernate><grails><groovy><shiro>","0",""
"46291378","Shiro with permission annotation not working","<p>now，i can check permission with java code correctly (like below):</p>

<pre><code>subject.isPermitted(""queryPrinter"")
</code></pre>

<p>But if i make it in annotation ,it's fail.</p>

<pre><code>@ResponseBody
@RequiresPermissions(""test::home"")
@RequiresAuthentication
@RequestMapping(value = ""/test/permission"", method = RequestMethod.POST)
public Object testPermission() {
    return PdMDMResultUtil.createSuccess();
}
</code></pre>

<p>This is my shiro configuration in applicationContext-shiro.xml</p>

<pre><code>&lt;bean id=""shiroFilter"" class=""org.apache.shiro.spring.web.ShiroFilterFactoryBean""&gt;
    &lt;property name=""securityManager"" ref=""securityManager""/&gt;
    &lt;property name=""loginUrl"" value=""${sso.server.url}""/&gt;
    &lt;property name=""successUrl"" value=""${upms.successUrl}""/&gt;
    &lt;property name=""unauthorizedUrl"" value=""${upms.unauthorizedUrl}""/&gt;
    &lt;property name=""filters""&gt;
        &lt;util:map&gt;
            &lt;entry key=""authc"" value-ref=""upmsAuthenticationFilter""/&gt;
            &lt;entry key=""permission"" value-ref=""upmsPermissionsAuthorizationFilter""/&gt;
        &lt;/util:map&gt;
    &lt;/property&gt;
    &lt;property name=""filterChainDefinitions""&gt;
        &lt;value&gt;
            /sso/login = anon
            /sso/logout = upmsSessionForceLogout
            /sso/** = authc,permission
            /** = anon
        &lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""upmsPermissionsAuthorizationFilter""
      class=""im.pudong.mdm.client.shiro.filter.UpmsPermissionsAuthorizationFilter""/&gt;
&lt;bean id=""upmsAuthenticationFilter"" class=""im.pudong.mdm.client.shiro.filter.UpmsAuthenticationFilter""/&gt;
&lt;bean id=""upmsSessionForceLogout"" class=""im.pudong.mdm.client.shiro.filter.UpmsSessionForceLogoutFilter""/&gt;
</code></pre>

<p>When i debug problem , i found that <a href=""https://i.stack.imgur.com/uyA8K.png"" rel=""nofollow noreferrer"">debug screenshot pic</a> .It show the mappedValue</p>

<p>is <strong>NULL</strong> , but i expected <strong>NOT NULL</strong>. Why ?? </p>

<pre><code>public class UpmsPermissionsAuthorizationFilter extends PermissionsAuthorizationFilter {

@Override
public boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) throws IOException {
    return super.isAccessAllowed(request, response, mappedValue);
}
</code></pre>

<p>}</p>
","<shiro>","0",""
"43726255","Grails upgrade 2.4.4 to 3.2.8, javascript and css sources producing blank, spring-security-shiro/core","<p>I am upgrading an application to grails version 3.2.8 and am using the grails spring-security-shiro plugin. My links to css files and javascript files are not working. I have copies of all static resources in <code>grails-app/assets</code>.</p>

<pre><code>grails-app/assets/js
grails-app/assets/css
grails-app/assets/images
grails-app/assets/fonts
</code></pre>

<p>I believe the spring-security-shiro (which ships with core) could be affecting rendering. Viewing the page source and clicking on one of the resources produces a blank page. Any guidance would be most appreciated.</p>
","<grails><spring-security><shiro>","0",""
"43785177","Apache Shiro 1.2.4 - 1.3.2","<p>Does anyone know where I can find the release notes from the version 1.2.4 until 1.3.2 for Apache Shiro.  I would like to know what is the difference is?  </p>
","<apache><shiro>","0","43797701"
"45427908","shiro DisabledSessionException","<p>I run a springmvc project with shiro.I want to config stateless,but failed.It reported that `HTTP Status 500 - javax.servlet.ServletException: org.apache.shiro.subject.support.DisabledSessionException: Session creation has been disabled for the current subject. This exception indicates that there is either a programming error (using a session when it should never be used) or that Shiro's configuration needs to be adjusted to allow Sessions to be created for the current Subject. See the org.apache.shiro.subject.support.DisabledSessionException JavaDoc for more.</p>

<p>` .And I can not find the problem.Thanks!!!</p>
","<spring><shiro>","0",""
"46809520","Shiro handling user attributes with principals or as session attribute(s)","<p>I'm using <code>Shiro</code> in a <code>JSF</code> application and look for guidance on how to handle user attributes like: Id (from the database), email etc. as part of the information held by the <code>Shiro Subject</code>.</p>

<p>Having read the <code>Shiro</code> manual, it seems to me that there's no reason for me to have a <code>SessionScoped</code> bean to hold the user information, as I already have the <code>Subject</code>. The question is how to best store the user information that is not part of the <code>Subject</code> by default.</p>

<p>I've seen different examples where some use <code>Principals</code> and other put a separate custom made <code>User</code> object in the current <code>Session</code> like:</p>

<pre><code>User user = userDAO.findByName(user.getUsername());
subject.getSession().setAttribute(""user"", user);
</code></pre>

<p>It would be elegant to get hold of - for example - the user id like this: </p>

<pre><code>userId = subject.getUserId();
</code></pre>

<p>or email:</p>

<pre><code>email = subject.getEmail();
</code></pre>

<p>But I guess that is not likely to be possible - so my question is: What is best practice for this? And I'd also like to ask: is there any good reason to keep a separate <code>SessionScoped</code> bean alive for the purpose of user sessions?</p>
","<session><jsf><shiro>","0",""
"33515946","Setup Shiro for non-mounted pages","<p>On my current project, I use wicket and Shiro for authentication and authorisation. The problem is that for pages with an error code 404 the session is lost. Only mounted pages i.e. pages with a fixed path (/home, /users...) get a session, so when I type server:port/giberish the session is lost and I see the login page in the header. It seems that this behaviour is implicit because I could not find anywhere configuration for this. </p>
","<wicket><shiro>","1",""
"37759507","Shiro custom realm restrict simple auth to certain users","<p>I'm using Shiro and have a custom realm.  My app has many users in a database, and I also want to support non-user process accounts for API access.  In my realm, I have implemented:</p>

<p><code>public boolean supports(AuthenticationToken at)</code></p>

<p><code>protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken)</code></p>

<p><code>protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)</code></p>

<p>This works great, we have a login form and process the UN/Password no problem.</p>

<p>I want to allow certain users to be able to use basic HTTP auth, and the rest to use form auth that is already working.  I can set the INI to allow either method but I don't see how to implement a check for the <strong>type</strong> of authentication used in the realm.</p>

<p>If I get a login attempt for a non-api user authenticated via HTTP headers, I want to reject the request.</p>

<p>How do I do this, write a filter and check for the HTTP header is the only way I can think of.</p>
","<shiro>","0",""
"46685400","Login to zeppelin issues with docker","<p>I've downloaded many zeppeling/spark images and with all of them I have trouble loggin in to the notebooks. This is the shiro.ini file inside the container:</p>

<pre><code>    ...
admin = password1
user1 = password2
user2 = password3

# Sample LDAP configuration, for user Authentication, currently tested for single Realm
[main]
#ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
#ldapRealm.userDnTemplate = cn={0},cn=engg,ou=testdomain,dc=testdomain,dc=com
#ldapRealm.contextFactory.url = ldap://ldaphost:389
#ldapRealm.contextFactory.authenticationMechanism = SIMPLE

[urls]
# anon means the access is anonymous.
# authcBasic means Basic Auth Security
# To enfore security, comment the line below and uncomment the next one
/** = anon
#/** = authcBasic
</code></pre>

<p>Right now I'm using this image: conker84/zeppelin. When I enter the admin and password1 user I got:</p>

<pre><code>The username and password that you entered don't match.
</code></pre>

<p>I've noticed that by inspecting chrome I get:</p>

<pre><code>api/login net::ERR_CONNECTION_REFUSED
</code></pre>

<p>I've checked the logs under incubator-zeppelin/logs#, and there's nothing  odd, just the server starting.</p>
","<apache-spark><docker><shiro><apache-zeppelin><zeppelin>","1","46685759"
"44992733","apache shiro cannot check md5 password with PasswordMatcher","<p>I am using shiro 1.4.0.</p>

<p>My password is MD5, iff I use <code>HashedCredentialsMatcher</code>, then I can login successful:</p>

<pre><code>  [main]

    shiro.loginUrl = /login.jsp
    shiro.successUrl = /home.jsp
 passwordMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
    passwordMatcher.hashAlgorithmName=MD5
    passwordMatcher.storedCredentialsHexEncoded=true

    ds = com.mchange.v2.c3p0.ComboPooledDataSource
    ds.driverClass = com.mysql.jdbc.Driver
    ds.jdbcUrl = jdbc:mysql://localhost:3306/simple_shiro_web_app
    ds.user = test
    ds.password = 123456

    jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
    jdbcRealm.permissionsLookupEnabled = true
    jdbcRealm.authenticationQuery = SELECT password FROM USERS WHERE username = ?
    jdbcRealm.userRolesQuery = SELECT role_name FROM USERS_ROLES WHERE username = ?
    jdbcRealm.permissionsQuery = SELECT permission_name FROM ROLES_PERMISSIONS WHERE role_name = ?
    jdbcRealm.credentialsMatcher = $passwordMatcher
    jdbcRealm.dataSource=$ds

    securityManager.realm = $jdbcRealm
</code></pre>

<p>But if I use <code>PasswordMatcher</code>(there is no any error message at tomcat startup), then I login failed:</p>

<pre><code>passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService.hashAlgorithmName=MD5
passwordMatcher.passwordService = $passwordService
</code></pre>

<p>It seems that is still use default <code>SHA-256</code>, why?</p>

<p>Also, in 1.4, there are same class as well as same package name(e.g. <code>org.apache.shiro.crypto.hash.DefaultHashService.class</code>) in <code>shiro-core.jar</code> and <code>shiro-crypto-hash.jar</code>, what are the difference and why?</p>

<p>-------------- <strong>UPDATED</strong> -------------------------</p>

<p>There is one log message : </p>

<pre><code>TRACE ClassUtils.forName - Unable to load class named [e10adc3949ba59abbe56e057f20f] from the current ClassLoader.  Trying the system/application ClassLoader...
</code></pre>

<p>While <code>e10adc3949ba59abbe56e057f20f</code> is my md5 password.</p>
","<shiro>","0",""
"45902413","AtmosphereServlet doPost does not get invoked","<p>I am using Shiro + Atmosphere in my application. What I really want to do is getting the subject in @ManagedService. ShiroInterceptor seems not working for my application configuration(It gets a subject which its session's attributes are all null. I Could not find out why). So I thought defining a Servlet class which extends from AmosphereServlet is a good idea for getting the subject. I put subject in the request(similar to what ShiroInterceptor does):</p>

<pre><code>@Override
    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {  
        req.setAttribute(""subject"", SecurityUtils.getSubject());
        super.doPost(req, res);
    }
</code></pre>

<p>However the this method does not gets invoked except when the servlet is instantiated. I want to put subject in req before every message gets delivered to the pusher. My transport configuration for  atmosphere is as follow:</p>

<ul>
<li>Default_Transport = ""websocket""</li>
<li>Fallback_Transport = ""streaming""</li>
<li>Failed_Transport = """"</li>
<li>BACKUP_Transport = ""long-polling""</li>
<li>ULTIMATE_BACKUP_Transport = ""jsonp"";</li>
</ul>

<p>I am testing my web application in Google Chrome so it does support web sockets.
The question is why it's not working? 
Also any other alternative solution which could get me the subject in my pusher is really appreciated.</p>
","<java><servlets><shiro><atmosphere>","0",""
"44731930","Apache Shiro - Subject Permissions and Target Allowances","<p>Let's say we have multiple users and documents.</p>

<p>Users can have access to documents using permissions, such as: document:id:action (e.g. document:1:edit, document:2:read).</p>

<p>Now I also like to have the option to grant access to multiple users from my document-side, e.g. (user:*:read) -> all users should have read-access.</p>

<p>Am I missing something obvious in Apache Shiro or is this not possible?</p>

<p><code>SecurityUtils.getSubject().isPermitted(document:8:read)</code> will only cover the direction user -> document. </p>

<p>How do I implement something like
<code>SecurityUtils.getTarget().allows(user:7:write)</code> ? </p>

<p>I can get all document-permissions as a List. How would I check against this list for a certain permission?  </p>

<p>Essentially I'm looking for a helper-function on Shiro's side such that I can do:</p>

<p><code>allPermissions = ['user:6:write', 'user:*:read']
permissionToCheck = 'user:95:read'
isPermitted(allPermissions, permissionToCheck)
</code></p>
","<authorization><shiro>","0","44742275"
"42797441","authorize users based on user name but not user roles in shiro.ini","<p>I connected my ldap account to shiro.ini. Is there a way in which I can configure shiro.ini to have user names instead of user roles.</p>

<p>eg:
Right now this is possible </p>

<p>[urls]</p>

<p>/api/interpreter/** = authc, roles[admin]</p>

<p>but is there a way like below:</p>

<p>[urls]</p>

<p>/api/interpreter/** = authc, users[user1]</p>
","<apache><authentication><cloudera><shiro><hortonworks-data-platform>","0","42813078"
"42504932","Issue with mentioning form action while shiro","<p>I am having a webapp where I am using apache shiro for authentication. My HTML is like</p>

<pre><code>&lt;form name=""loginform"" action="""" method=""POST"" accept-charset=""UTF-8"" role=""form""&gt;
                        &lt;fieldset&gt;
                            &lt;div class=""form-group""&gt;
                                &lt;input class=""form-control"" placeholder=""Username or Email"" name=""j_username"" type=""text""&gt;
                            &lt;/div&gt;
                            &lt;div class=""form-group""&gt;
                                &lt;input class=""form-control"" placeholder=""Password"" name=""j_password"" type=""password"" value=""""&gt;
                            &lt;/div&gt;
                            &lt;div class=""checkbox""&gt;
                                &lt;label&gt;
                                    &lt;input name=""rememberMe"" type=""checkbox"" value=""true""&gt; Remember Me
                                &lt;/label&gt;
                            &lt;/div&gt;
                            &lt;input class=""btn btn-lg btn-success btn-block"" type=""submit"" value=""Login""&gt;
                        &lt;/fieldset&gt;
                    &lt;/form&gt;
</code></pre>

<p>and my shiro.ini file is like </p>

<pre><code>authc.loginUrl = /login.html
authc.usernameParam = j_username
authc.passwordParam = j_password

/login.jsp = authc
/logout = logout
/** = authc
</code></pre>

<p>This is working fine. But if I mention action=""j_security_check"" then the authentication is not working.</p>

<p>I need to deploy the same app in wildfly with jass authentication also thats why i need to have action like that. Please let me know if there is a way to solve this issue with out having two separate html.</p>
","<java><shiro>","0",""
"42378379","Shiro.ini file requires glassfish clean wipe to update","<p>We're working with Apache Shiro for our user authentication on glassfish 4. We've run into an issue where any changes to the shiro.ini file don't properly get implemented. No matter how many times we push, even if we clean and build first, the system acts like it is using the old version of the .ini file. The only fix is to take everything off of glassfish, wipe it clean, and then a new install will work. This solution is obviously untenable, is there something we are missing? I'd like to include more information, but I don't know what else could be affecting this issue.</p>
","<java><authentication><shiro><glassfish-4>","0",""
"47281226","Java Security Apache Shiro vs Picketlink","<p>I've got an Java EE application running with Apache Shiro to secure and authenticate to the website.</p>

<p>However I want to implement Single Sign on with Picketlink.</p>

<p>Is it possible to implement it ""on top"" or do I have to disable Shiro and do the whole authentication with Picketlink?</p>

<p>On the web I couldn't find any reference.</p>
","<java><security><shiro><picketlink>","1",""
"37879247","Apache Shiro: Access WEB-INF from shiro.ini","<p>I am trying to use Shiro in order to authenticate the user of my web application (only one user).<br>
The <code>shiro.ini</code> file in under <code>WEB-INF</code>. <br>
Since there is only one user and password, they are stored in a file named <code>user.properties</code>. I am using the <code>PropertiesRealm</code> in order to verify the credentials. </p>

<p>My question is how can I set the source path to the <code>WEB-INF/user.properties</code> file?</p>

<p>Since the <code>classpath</code> refers to <code>WEB-INF/classes</code> I can put this line in the <code>shiro.ini</code> file: <code>realm.resourcePath = classpath:/../user.properties</code> works, but it looks like an ugly workaround.</p>

<p>Is there a correct way to set this file as the <code>resourcePath</code> in Shiro and web app?</p>
","<java><web-applications><shiro>","0",""
"43736522","Issue with shiro page redirection","<p>ini file is like</p>

<pre><code>[main]
authc.loginUrl = /login.html
authc.successUrl = /index.html
authc.usernameParam = j_username
authc.passwordParam = j_password

[users]
root = secret, admin

[roles]
admin = *

[urls]
/login.html = anon, roles[admin]
/index.html = authc, roles[admin]
</code></pre>

<p>when i try to hit the index.html I am getting the below error </p>

<pre><code>HTTP ERROR 404

Problem accessing /shiro-example/login.jsp. Reason:

    /shiro-example/login.jsp
Powered by Jetty://
</code></pre>

<p>my login.html file is like </p>

<pre><code>&lt;form name=""loginform"" action="""" method=""post"" &gt;

        &lt;p&gt;
            &lt;label&gt;Username&lt;/label&gt;
            &lt;input id=""username"" type=""text"" name=""j_username""&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;label&gt;Password&lt;/label&gt;
            &lt;input type=""password"" name=""j_password""&gt;
        &lt;/p&gt;
        &lt;input type=""submit"" value=""Log In""&gt;
&lt;/form&gt;
</code></pre>

<p>Please help me to resolve the issue.</p>
","<java><shiro>","0","43785974"
"44015076","How can be a realm has multiple principals in shiro?","<p>There's a method of PrincipalCollection : <code>Collection fromRealm(String realmName)</code> , but how can be one login assign muiltiple <code>Principal</code>s to a realm?  Thank you</p>
","<realm><shiro><principal>","0","44027581"
"47059538","JNDI Shiro PostgreSQL - Unable to look up javax.sql.DataSource with jndi name 'jdbc/postgres' in Apache Isis","<p>I have downloaded the Apache Isis' simple-app archetype 1.15.0. And I would like to integrate it with Apache Shiro following this <a href=""https://isis.apache.org/guides/ugsec/ugsec.html#_ugsec_shiro-realm-implementations_jdbc-realm"" rel=""nofollow noreferrer"">documentation</a> . But i got some error like this:</p>

<pre><code>java.lang.IllegalStateException: Unable to look up javax.sql.DataSource with jndi name 'jdbc/postgres'.
</code></pre>

<p>Have a look at my  in my <strong>web.xml</strong></p>

<pre><code>&lt;resource-ref&gt;
&lt;description&gt;db&lt;/description&gt;
&lt;res-ref-name&gt;jdbc/postgres&lt;/res-ref-name&gt;
&lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;
&lt;res-auth&gt;Container&lt;/res-auth&gt;
&lt;/resource-ref&gt;
</code></pre>

<p>and my <strong>shiro.ini</strong>:</p>

<pre><code>jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm        

jof = org.apache.shiro.jndi.JndiObjectFactory          
jof.resourceName = jdbc/postgres
jof.requiredType = javax.sql.DataSource
jof.resourceRef = true

jdbcRealm.dataSource = $jof

jdbcRealm.authenticationQuery =         \
        select password                 \
          from users                    \
         where username = ?

jdbcRealm.userRolesQuery =              \
        select r.label                  \
          from users_roles ur           \
    inner join roles r                  \
            on ur.role_id = r.id        \
         where user_id = (              \
            select id                   \
             from users                 \
            where username = ?);        \

jdbcRealm.permissionsQuery=             \
        select p.permission             \
          from roles_permissions rp     \
    inner join permissions p            \
            on rp.permission_id = p.id  \
         where rp.role_id = (           \
            select id                   \
             from roles                 \
            where label = ?);

jdbcRealm.permissionsLookupEnabled=true

dps = org.apache.shiro.authc.credential.DefaultPasswordService
pm = org.apache.shiro.authc.credential.PasswordMatcher
pm.passwordService = $dps
jdbcRealm.credentialsMatcher = $pm

securityManager.realms = $jdbcRealm
</code></pre>

<p>Am i missing something?</p>
","<postgresql><jndi><shiro><isis>","0",""
"43050970","Attributes are set to null in Apache ShiroSession","<p>I am using Apache shiro session in scala-play application. I am storing sessions in Cassandra. Everything worked fine for me but recently when I pushed new commits to production server, I observed that when I set some attribute using <code>session.setAttribute(key, value)</code> and then try to retrieve same attribute with <code>session.getAttribute(key)</code> I receive null value.</p>

<p>I am storing sessions in cassandra with help of: <a href=""https://github.com/lhazlewood/shiro-cassandra-sample"" rel=""nofollow noreferrer"">https://github.com/lhazlewood/shiro-cassandra-sample</a></p>

<p>I have not changed anything related to session in my code. I am not sure how to debug or fix this? If I revert back to earlier build, everything still works fine.
Can someone please suggest what to do here?</p>

<p>NOTE: I am using scala 2.10.5, Java 7, Play 2.3.9 and Apache Shiro 1.2.2, Cassandra 2.1.14. These values are same for earlier build(which works correctly) as well.</p>
","<java><scala><cassandra><playframework-2.0><shiro>","0",""
"46314500","Connecting Apache Shiro and Cassandra Database","<p>How to implement a connection between Apache Shiro and Cassandra Database in a web project so that shiro session management takes username and password from Cassandra database?</p>

<p>I have a web project(Marionette) in which there is a Login form. I want shiro to perform authentication based on usernames and passwords read from Cassandra database and not the shiro.ini file.</p>

<p>I am unable to establish a connection between the two.</p>

<p>I followed the following link but it is using shiro ini file to validate users instead of cassandra database.</p>

<p><a href=""https://github.com/lhazlewood/shiro-cassandra-sample"" rel=""nofollow noreferrer"">https://github.com/lhazlewood/shiro-cassandra-sample</a></p>
","<spring><apache><cassandra><marionette><shiro>","0",""
"46539753","Apache Shiro: dynamically enable/disable realm","<p>The Java EE 8 web application can have several realms: one that is always enabled for internal user storage, another one for auth/author against AD (for example).</p>

<p>So, the realms list is the following:</p>

<ol>
<li>Realm 1: LocalUserRealm extends AuthorizingRealm</li>
<li>Realm 2: ActiveDirectoryRealm (optional, should be enabled and configured via app by providing required settings: ldap url, usr, pwd, etc)</li>
</ol>

<p>Currently, <code>shiro.ini</code> looks like the following:</p>

<pre><code>[main]
...
localUserRealm = local.LocalUserRealm
...
adRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
...
securityManager.realms = $localUserRealm, $adRealm 
</code></pre>

<p>The question: what is the best way to enable / disable the optional <code>adRealm</code> on the fly, after pressing buttons in the app like ""enable AD integration"" / ""disable AD integration""?</p>

<ol>
<li>Is it valid approach to add realm during runtime via <code>SecurityUtils.getSecurityManager().setRealms(realmsList)</code>?</li>
<li>What would be the best way of disabling / destroying the realm (or just use <code>SecurityUtils.getSecurityManager().setRealms(realmsList)</code> again by excluding the disabled realms)? </li>
</ol>
","<java><shiro>","0","46555337"
"46644898","Exception with Shiro and Maven","<p>I'm trying to change a aplication to Maven. 
I'm working with NetBeans and GlassFish 3.1.2.2.
There is a problem that I can't solve. I have been searching and I have not found any solution.
My problem is with Shiro.
The GlassFish console show that:</p>

<blockquote>
  <p>Grave: java.lang.IllegalArgumentException: Configuration error.  Specified object [anyofroles] with property [loginUrl] without first defining that object's class.  Please first specify the class property first, e.g. myObject = fully_qualified_class_name and then define additional properties. 
  at org.apache.shiro.config.ReflectionBuilder.applySingleProperty(ReflectionBuilder.java:361)
  at org.apache.shiro.config.ReflectionBuilder.applyProperty(ReflectionBuilder.java:325)</p>
</blockquote>

<p>My Shiro versions are the same at the previous project:
* shiro-cas -> 1.2.0
* shiro-core -> 1.3.0
* shiro-web -> 1.3.0</p>

<p>My shiri.ini contains that:</p>

<pre><code>[main]
anyofroles.loginUrl = /login.xhtml
# realm to be used
secundaryRealm=com.asesoreslocales.security.SecondaryRealm
anyofroles = com.asesoreslocales.security.AnyRolesAuthorizationFilter
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

[users]

[urls]
/mantenimientos/** = anyofroles[""administrador,editor""]
/remesas/** = anyofroles[""administrador,editor""]
/alegaciones/** = anyofroles[""administrador,editor""]
/notificaciones/** = anyofroles[""administrador,editor""]

/expedientes/expedientes.xhtml = anyofroles[""administrador,editor""]
/expedientes/busquedaExpedientes.xhtml = anyofroles[""administrador,editor,consultor""]
</code></pre>

<p>At the previous project, Shiro worked normally.</p>

<p>Thank for your help and sorry for my english. </p>
","<maven><netbeans><glassfish><shiro>","0","46645132"
"47004035","doGetAuthorizationInfo in authorizing realm not getting called","<p>I added a custom realm on <code>shiro.ini</code> as shown below.</p>

<p>When I click on login of the UI page of >eppelin, <code>doGetAuthenticationInfo</code> is called but <code>doGetAuthorizationInfo</code> is not.</p>

<p>Can someone please answer why <code>doGetAuthorizationInfo</code> is not getting called as I want to add my roles in it?</p>

<pre><code>testRealm = com.skd.test.pyt.testZeppelin

securityManager.realms = $testfRealm
</code></pre>
","<shiro><apache-zeppelin>","0",""
"34893883","scheduling another page instead of home page while login","<p>I am working on a application having spring framework and implemented shiro filter for security.
Login url of my application login page is ""localhost:8082/"".
but I have changed the url manually ""localhost:8082/socialProfile?by=Followers"" at time of login.
What I was expecting, after login, instead of scheduling my application home page ""<a href=""http://localhost:8082/dashboard"" rel=""nofollow"">http://localhost:8082/dashboard</a>"", It should schedule ""socialProfile?by=Followers"" page.
But it is scheduling ""localhost:8082/dashboard"" page.
Is there any way to get desired result ?</p>
","<spring><url><shiro>","0",""
"35616378","How to prevent sensitive fields updated by client","<p>For example, in an web appliation, I have a user model:</p>

<pre><code>class User{
    String username;
    String email;
    String passowrd;


    boolean active;
    Set&lt;Role&gt; roles;
}
</code></pre>

<p>The following operations are supported:</p>

<pre><code>1 guest can register(create a new user)
2 user can upate its info
3 user with role of admin can set the `active` and `roles`
</code></pre>

<p>At the server side we use the <code>SpringMVC</code> to get the model <code>User</code> directly:</p>

<pre><code>@RequestMapping(value = """", method = RequestMethod.POST)
protected Result create(@Valid @RequestBody User user, BindingResult bindingResult) {
    .....
}
</code></pre>

<p>So far so good with normal workflow, but think about someone(not admin user) send that:</p>

<pre><code>/user  HTTP/Update

{
    ""username"":""jk"",
    ""active"":true,
    ""roles"":[{
        id:""role_admin_id""
    }]
}
</code></pre>

<p>If this requset is accepted, the user <code>jk</code> will have the role of <code>super_admin</code>, which is not expected.</p>

<p>How do you protect that?</p>
","<spring-mvc><authentication><shiro>","1",""
"47697292","How to get user information from ldap?","<p>I am using apache shiro for ldap authentification:</p>

<pre><code>Factory&lt;SecurityManager&gt; ldapFactory = new IniSecurityManagerFactory(""classpath:active.ini"");
SecurityManager sManager = ldapFactory.getInstance();
SecurityUtils.setSecurityManager(sManager);

Subject currentUser = SecurityUtils.getSubject();

        if (!currentUser.isAuthenticated()) {
            UsernamePasswordToken token = new UsernamePasswordToken(""user"", ""password"");
            try {
                currentUser.login(token);
            } catch (UnknownAccountException ex) {
                logger.info(""Unknown user"");
            } catch (IncorrectCredentialsException ex) {
                logger.info(""Incorrect credentials"");
            } catch (LockedAccountException ex) {
                logger.info(""Account is Locked"");
            } catch (AuthenticationException ex) {
                logger.info(""Authentication Exception"");
            }
        }

        logger.info(""User ["" + currentUser.getPrincipal() +""] logged succesfully"");
        currentUser.logout();
</code></pre>

<p>Calling <code>currentUser.getPrincipal()</code>, I've got only email address from the logged user.<br>
How to get more user information, for example lastname, firstname, etc?  </p>
","<java><ldap><shiro>","1",""
"47545345","Set JSESSION ID in cookie using Apache shiro in Java script","<p>I have a web application deployed in tomcat which uses the apache shiro memory constrained cache to handle authentication which is setting the JSESSION ID in the cookie for each servlet calls using <strong>ShiroModule</strong> and <strong>Guice</strong></p>

<pre><code>bind(CacheManager.class).to(EhCacheManager.class).asEagerSingleton();
</code></pre>

<p><strong>Request header</strong></p>

<blockquote>
  <p>Cookie:JSESSIONID=313B7FFB6C9B511C7F09D0BBF92268A6</p>
</blockquote>

<p>Also it has different java script projects(war files) deployed in same tomcat which internally having many servlet calls from Ajax . I need to set JSESSION ID in cookie for these calls made from java scripts using shiro.</p>

<pre><code>oSettings.jqXHR = $.ajax({
                    ""dataType"" : 'json',
                    ""type"" : ""POST"",
                    ""url"" : sSource,
                    ""data"" : aoData,
                    ""success"" : function(responseJson) {
                        _onSuccessCallBack(responseJson, fnCallback);
                    },
                    ""error"" : function() {
                        _onErrorCallBack(fnCallback);
                    }
                });
</code></pre>

<p>Steps i tried:</p>

<ol>
<li>I change the memory constrained cache manager to EHCache manager and
write the session Id to the disk ( using <strong>shiro.ini</strong> and
<strong>ehcache.xml</strong>)</li>
<li>Used the same shiro configurations in all the java script projects to use shiro filters.</li>
</ol>

<p>How can i set the JSESSION ID in cookie of the servlet calls made from java script to authenticate the session.</p>
","<javascript><session-cookies><shiro><jsessionid>","0",""
"47548066","@RequiresRoles annotation not working in shiro","<p>I am trying to explore on shiro framework. Authentication is working fine. I am facing an issue when authorizing. I am making use of shiro annotations @RequiresRoles for authorization. Eventhough I am using the annotation ,but it is not authorizing only for the role that I have specified. It is allowing all roles. Please find the code below that I have tried. I am using jersey and shiro.</p>

<p>Java Code:-</p>

<pre><code>package com.somecompany.rest;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.Response;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.annotation.RequiresRoles;

@Path(""/test"")
public class HelloWorldService {

      @GET
      @Path(""/{param}"")
      @RequiresRoles(value= {""admin_role""})
      public Response getMsg(@PathParam(""param"") String msg) {

            String output = ""Jersey say : "" + msg;
            System.out.println(SecurityUtils.getSubject().hasRole(""admin_role""));

        return Response.status(200).entity(output).build();

  }
</code></pre>

<p>}</p>

<p>Web.xml</p>

<pre><code>   &lt;servlet&gt;
            &lt;servlet-name&gt;jersey-serlvet&lt;/servlet-name&gt;
            &lt;servlet-class&gt;
                         com.sun.jersey.spi.container.servlet.ServletContainer
                    &lt;/servlet-class&gt;
            &lt;init-param&gt;
                 &lt;param-name&gt;com.sun.jersey.config.property.packages&lt;/param-name&gt;
                 &lt;param-value&gt;com.somecompany.rest&lt;/param-value&gt;
            &lt;/init-param&gt;
            &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
        &lt;/servlet&gt;

        &lt;servlet-mapping&gt;
            &lt;servlet-name&gt;jersey-serlvet&lt;/servlet-name&gt;
            &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
        &lt;/servlet-mapping&gt;


        &lt;listener&gt;
            &lt;listener-class&gt;org.apache.shiro.web.env.EnvironmentLoaderListener&lt;/listener-class&gt;
        &lt;/listener&gt;

        &lt;filter&gt;
            &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
            &lt;filter-class&gt;org.apache.shiro.web.servlet.ShiroFilter&lt;/filter-class&gt;
        &lt;/filter&gt;

        &lt;filter-mapping&gt;
            &lt;filter-name&gt;ShiroFilter&lt;/filter-name&gt;
            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
            &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
            &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;
            &lt;dispatcher&gt;INCLUDE&lt;/dispatcher&gt;
            &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;
        &lt;/filter-mapping&gt;
</code></pre>

<p>Pom.XML</p>

<p></p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
    &lt;version&gt;1.17&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-servlet&lt;/artifactId&gt;
    &lt;version&gt;1.17&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;
    &lt;version&gt;1.3.2&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;
    &lt;version&gt;1.3.2&lt;/version&gt;
&lt;/dependency&gt;
&lt;!-- Included commons logging for shiro --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;commons-logging&lt;/groupId&gt;
    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
    &lt;version&gt;1.1.1&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;
    &lt;artifactId&gt;shiro-aspectj&lt;/artifactId&gt;
    &lt;version&gt;1.3.2&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p></p>

<p>shiro.ini</p>

<pre><code>[users]
root = root,root_role
admin = admin,admin_role
test = test,test_role

[roles]
admin = *

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation

/rest/** = authcBasic
</code></pre>
","<java><annotations><jersey><shiro>","0",""
"47015135","Effects of Apache Shiro's roles and permissions in existing Data Access Objects classes","<p>I am using <code>spring-boot-dependencies 1.3.5.RELEASE</code> for my application and it runs on <code>Java SE 1.8</code>. I am using <code>Apache Shiro' to map</code>user<code>groups in</code>roles<code>to</code>user<code></code>permissions<code>whereas I am using</code>DAO<code>(</code>Data Access Object`) for accessing data from database. </p>

<p>Let's say we have an entities such that </p>

<ul>
<li><code>Employee</code> ""has-a"" <code>Department</code></li>
<li><code>Department</code> ""has-a"" <code>Domain</code> </li>
<li><code>User</code> ""has-a"" <code>Domain</code></li>
</ul>

<p>Entity Classes: Employee</p>

<pre><code>@Entity
@Table(name = ""EMPLOYEE"")
@Data
@EqualsAndHashCode(of = ""id"", callSuper = false)
public class Employee {

    @Id
    @GeneratedValue
    private int id;
    private String name;

    @ManyToOne
    @JoinColumn(name=""department_id"")
    private Department dept

}
</code></pre>

<p>Entity Classes: Department </p>

<pre><code>@Entity
@Table(name=""DEPARTMENT"")
@Data
@EqualsAndHashCode(of = ""id"", callSuper = false)
public class Department {

    @Id
    @GeneratedValue
    private int id;
    private String name;

    @ManyToOne
    @JoinColumn(name=""domain_id"")
    private Domain domain

    @OneToMany(mappedBy=""department"")
    private Set&lt;Employee&gt; employees;

}
</code></pre>

<p>Entity Classes: Domain</p>

<pre><code> @Entity
    @Table(name=""DOMAIN"")
    @Data
    @EqualsAndHashCode(of = ""id"", callSuper = false)
    public class Domain{

        @Id
        @GeneratedValue
        private int id;
        private String name;

    } 
</code></pre>

<p>Now I would like to restrict <code>User</code> (a login user) to see only those <code>Employees</code> which are associated with the <code>Departments</code> whose <code>Domain</code> has an access to the <code>User</code>. Is there any way to achieve this without changing queries in DAO classes OR to do this with minimum code changes? Thank You.</p>
","<spring-data><dao><shiro>","0",""
"46391337","How to point Apache Shiro to multiple dynamically generated LDAP servers?","<p>I lookup LDAP servers using this method . The list contains about 30 LDAP servers. In my Tomcat application I need to authorize users . I could't find any documentation for how to do this with Shiro. I know  how to point to one <code>LDAP</code>. But how can I point to multiple <code>LDAP</code> servers? Any of these <code>LDAP</code> servers could be down at any time. Most of them are up though usually.  Also how do I refresh the <code>LDAP</code> list periodically? I don't have any control over LDAP. So I need to point Shiro to what the below method returns </p>

<pre><code>    public List&lt;String&gt; getLdapServers (final String dnsServQuery)
    {
        final List&lt;String&gt; serverList = new ArrayList&lt;&gt;();
        try {
            final DirContext dnsContext = new InitialDirContext(env);
            final String dnsQueryType[] = { ""SRV"" };

           . . . blah blah 

        return serverList;
    }
</code></pre>
","<tomcat><ldap><shiro>","0",""
"25371977","exposing content that needs login to see to search engines","<p>I have a web based application that utilizes Apache Shiro for authentication/authorization. This means that only a logged in user can see the contents. I want to make those contents searchable to search engines. What are some of the ways that i can expose those contents to search engines?</p>
","<apache><shiro>","1","25379316"
"26752983","Is it possible to restrict copy paste to a page using apache shiro? If yes then how can I achieve it?","<p>I want to restrict copy paste of text on page using apache shiro for a web application. 
Does shiro has those capabilities. If yes then how can it be achieved? 
Any help much appreciated.</p>
","<shiro>","0",""
"41886917","Shiro HostAuthenticationToken in Spring mvc","<p>I need some help to create HostAuthenticationToken token and pass it to Realm's doGetAuthenticationInfo method calls?</p>

<p>Could you please help me to create Custom AuthenticationStrategy to create token?</p>

<p>Thanks in advance</p>
","<spring><token><shiro>","0",""
"46840263","Apache Shiro - Assign role to groups with same prefix","<p>I am trying to assign a role to ldap groups with same prefix, for example, all groups with starting with ""ABC"" have ""admin"" role. Can I configure this in shiro.ini file with ""groupRolesMap""? </p>

<p>Thanks in advance.</p>
","<java><ldap><shiro>","0","46913276"
"44963091","ModelAndView not work when Multiple Exception happend","<p>I want to return a new ModelAndView when <code>FileUploadBase.SizeLimitExceededException</code> happened. And this is my handler code:</p>

<pre><code>@SpringBootApplication
public class DemoApplication {

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }

    @Bean
    public MultipartConfigElement multipartConfigElement() {
        MultipartConfigFactory factory = new MultipartConfigFactory();
        factory.setMaxRequestSize(""256KB"");
        factory.setMaxFileSize(""128KB""); //KB,MB
        return factory.createMultipartConfig();
    }

    @Bean
    public MyExceptionResolver myExceptionResolver() {
        return new MyExceptionResolver();
    }
}

public class MyExceptionResolver implements HandlerExceptionResolver {

    @Override
    public ModelAndView resolveException(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e) {
        if (e instanceof MultipartException) {
            ModelAndView mv = new ModelAndView();
            mv.setViewName(""sizeOut"");
            return mv;
        }

        FileUploadBase.SizeLimitExceededException

        return null;
    }
}
</code></pre>

<p>and this is my html :</p>

<pre><code>&lt;form method=""post"" enctype=""multipart/form-data"" action=""/batch/upload""&gt;
    &lt;p&gt;文件1：&lt;input type=""file"" name=""file"" /&gt;&lt;/p&gt;
    &lt;p&gt;文件2：&lt;input type=""file"" name=""file"" /&gt;&lt;/p&gt;
    &lt;p&gt;文件3：&lt;input type=""file"" name=""file"" /&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input type=""submit"" value=""上传"" /&gt;&lt;/p&gt;
&lt;/form&gt;
</code></pre>

<p>the question is if one file's size is out, the <code>ModelAndView</code> will be okay. but if two or more files' size is out, the method of <code>resolveException</code> will execute twice and  the  <code>ModelAndView</code> won't work. </p>
","<spring-boot><shiro>","0",""
"37440287","How can I ask apache shiro about object ids","<p>Given a subject that has the following permissions:  </p>

<pre><code>printer:1:manage  
printer:2:manage  
printer:3:admin  
printer:1:print
printer:4:print
</code></pre>

<p>I know I can ask if:</p>

<pre><code>subject.isPermitted('printer:1:manage') 
</code></pre>

<p>But how do i ask shiro questions such as:    </p>

<ul>
<li><p>For which printer id's does the subject has a ""manage"" permission? (I want the answer 1,2)</p></li>
<li><p>For which printer id's does the subject has a permission (or any kind)? (I want the answer 1,2,3)</p></li>
<li><p>For which printer id's does the subject has a manage or admin permission? (I want the answer 1,4)</p></li>
</ul>
","<shiro>","0","37471533"
"38132759","Cookies from within shiro ldap realm code","<p>I'm using shiro in my grails app for authentication and authorization. Out corporate architecture uses a separate LDAP server for each country we have offices in. Its a lot. I'm trying to set a cookie from with in the shiro realm code that I can check on the next login. I've tried the grails cookie plugin but apparently can't get the injection to work into the realm code.</p>

<p>Has anyone gotten something similar to work, if so any hints?</p>
","<grails><cookies><ldap><shiro>","0",""
"43837151","Setting properties for Shiro in Guice","<p>I am trying to change the cookie name and the timeout for my web realm.</p>

<p>Here is my realm:-</p>

<pre><code>public class TTShiroWebModule extends ShiroWebModule
{
    public TTShiroWebModule(ServletContext inServletContext)
    {
        super(inServletContext);
    }

    @SuppressWarnings(""unchecked"")
    @Override
    protected void configureShiroWeb()
    {
        bind(CacheManager.class).to(MemoryConstrainedCacheManager.class);
        bindConstant().annotatedWith(Names.named(""sessionManager.cookie.name"")).to(""SECURITYSESSIONID"");
        bindConstant().annotatedWith(Names.named(""securityManager.sessionManager.globalSessionTimeout"")).to(3600000);
        expose(CacheManager.class);
        expose(WebSecurityManager.class);

        addFilterChain(""/login/*"", ANON);
        addFilterChain(""/markup/*"", USER, NO_SESSION_CREATION);

        bindRealm().to(TestRealm.class);
    }

    @Override
    protected void bindSessionManager(AnnotatedBindingBuilder&lt;SessionManager&gt; inBind)
    {
        inBind.to(DefaultWebSessionManager.class).asEagerSingleton();
    }
}
</code></pre>

<p>Looking at the response that comes back, it looks like we are still using JSESSIONID.  What am I doing wrong?</p>

<p>I have tried putting the bindConstant before installing TTShiroWebModule. Doesn't seem to work.</p>
","<shiro>","0",""
"46683221","Validate if the user belongs in active directory groups","<p>I connect with shiro to our active directory and try to configure it out, if an user is in particular group.  </p>

<p><code>Shiro.ini</code> file: </p>

<pre><code>[main]
realm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
realm.url = LDAP://example.com/
realm.systemUsername = admin@example.com
realm.systemPassword = password
realm.searchBase = ""OU=level2,OU=level1,DC=example,DC=com""
realm.groupRolesMap = ""CN=Group1,OU=level2,OU=level1,DC=example,DC=com"":""itadmins""

[roles]
itadmins = *
</code></pre>

<p>and the code:</p>

<pre><code>public class Quickstart {

  private static final transient Logger log = LoggerFactory.getLogger(Quickstart.class);
  public static final String userName = ""user1@example.com"";
  public static final String password = ""userpassword"";


  public static void main(String[] args) {

    // The easiest way to create a Shiro SecurityManager with configured
    // realms, users, roles and permissions is to use the simple INI config.
    // We'll do that by using a factory that can ingest a .ini file and
    // return a SecurityManager instance:

    // Use the shiro.ini file at the root of the classpath
    // (file: and url: prefixes load from files and urls respectively):
    Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(""classpath:shiro.ini"");
    SecurityManager securityManager = factory.getInstance();

    // for this simple example quickstart, make the SecurityManager
    // accessible as a JVM singleton.  Most applications wouldn't do this
    // and instead rely on their container configuration or web.xml for
    // webapps.  That is outside the scope of this simple quickstart, so
    // we'll just do the bare minimum so you can continue to get a feel
    // for things.
    SecurityUtils.setSecurityManager(securityManager);

    // Now that a simple Shiro environment is set up, let's see what you can do:
    UsernamePasswordToken token = new UsernamePasswordToken(userName, password);

    // get the currently executing user:
    Subject currentUser = SecurityUtils.getSubject();

    try {
      currentUser.login(token);
      System.out.println(""We've authenticated! :)"");
    } catch (AuthenticationException e) {
      System.out.println(""We did not authenticate :("");
      e.printStackTrace();
    }

    log.info(""User ["" + currentUser + ""] logged in successfully."");


    if (currentUser.hasRole(""hasRole"")) {
      System.out.println(""We're authorized! :)"");
    } else {
      System.out.println(""We are not authorized :("");
    }


        //all done - log out!
        currentUser.logout();

        System.exit(0);*/
  }
}
</code></pre>

<p>The user is authenticated but not authorized. What am I doing wrong?</p>
","<java><shiro>","0",""
"46593924","Apache Shiro redirects me to login page after successful authentication","<p>I am having some problems with apache shiro, it authenticate the user but when I try to redirect it keeps sending me back to the login page.</p>

<p>Here is my shiro.ini file:</p>

<pre><code>[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /pages/login-portal.xhtml
authc.successUrl = /pages/dashboard/portal-dashboard.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

# JDBC Realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Configure JDBC realm datasource.
dataSource = org.postgresql.ds.PGSimpleDataSource
dataSource.serverName = localhost
dataSource.databaseName = portal
dataSource.portNumber = 5432
dataSource.user = postgres
dataSource.password = postgres
jdbcRealm.dataSource = $dataSource


# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT pass FROM tb_users WHERE login = ?
jdbcRealm.userRolesQuery = SELECT description FROM tb_role r INNER JOIN tb_users u ON u.role = r.role_id and login = ?
jdbcRealm.permissionsLookupEnabled = false
#jdbcRealm.permissionsQuery = SELECT permission_name FROM ROLES_PERMISSIONS WHERE role_name = ?
#jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource = $dataSource

securityManager.realms = $jdbcRealm

[users]
admin = secret



 [urls]
/javax.faces.resource/** = anon
/login-portal.xhtml = authc
/** = authc, roles[admin]
</code></pre>

<p>My login page:</p>

<pre><code>&lt;h:form&gt;
                        &lt;span class=""label-input""&gt;Usuário&lt;/span&gt;
                        &lt;br/&gt;
                        &lt;p:inputText id=""login"" styleClass=""large-input"" value=""#{loginPortalBean.login}"" style=""font-family:'Roboto', sans serif,'FontAwesome'""/&gt;
                        &lt;p:watermark for=""login"" value=""&amp;#xf007;"" /&gt;
                        &lt;br/&gt;
                        &lt;span class=""label-input""&gt;Senha&lt;/span&gt;
                        &lt;br/&gt;
                        &lt;p:password id=""senha"" styleClass=""large-input"" value=""#{loginPortalBean.senha}"" style=""font-family:'Trebuchet MS','FontAwesome'"" /&gt;
                        &lt;p:watermark for=""senha"" value=""&amp;#xf023;"" /&gt;
                        &lt;br/&gt;
                        &lt;p:commandButton id=""bt"" styleClass=""large-button"" value=""Entrar"" action=""#{loginPortalBean.doLogin}""
                            ajax=""false"" /&gt;
                        &lt;p:messages id=""messages"" showDetail=""false"" autoUpdate=""true"" closable=""true"" /&gt;
&lt;/h:form&gt;
</code></pre>

<p>And the login method:</p>

<pre><code>public void doLogin () {
        Subject subject = SecurityUtils.getSubject();
        UsernamePasswordToken token = new UsernamePasswordToken(getLogin().trim(), getSenha().trim());

        try {
            subject.login(token);
            FacesContext.getCurrentInstance().getExternalContext().redirect(""/Portal/pages/dashboard/portal-dashboard.xhtml"");

        } catch (UnknownAccountException ex) {
            facesError(""Esse usuário não existe"");
            log.error(ex.getMessage(), ex);
        }
        catch (IncorrectCredentialsException ex) {
            facesError(""Senha incorreta"");
            log.error(ex.getMessage(), ex);
        }
        catch (LockedAccountException ex) {
            facesError(""Usuário Bloqueado"");
            log.error(ex.getMessage(), ex);
        }
        catch (AuthenticationException | IOException ex) {
            facesError(""Erro desconhecido: "" + ex.getMessage());
            log.error(ex.getMessage(), ex);
        }
        finally {
            token.clear();
        }
}
</code></pre>

<p>Can anyone help me with this? I looked other questions like this but I couldn't fix it. Thanks in advance.</p>
","<web><jsf-2><shiro>","0",""
"47152993","Can't config ShiroFilterFactoryBean filters which generate by spring","<p>When I configurate ShiroFilterFactoryBean like this:</p>

<pre><code>@Bean
public ShiroFilterFactoryBean shirFilter(SecurityManager securityManager) {
    ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();

    Map&lt;String, Filter&gt; filterMap = new HashMap&lt;&gt;();
    filterMap.put(""jwt"", new JwtFilter());
    shiroFilterFactoryBean.setFilters(filterMap);
}
</code></pre>

<p>JwtFilter is generated by myself.It success.But when I configurate jwtFilter generated by spring.It occured exception when web request access</p>

<pre><code>@Bean
public ShiroFilterFactoryBean shirFilter(SecurityManager securityManager, JWTFilter jwtFilter) {
    ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();

    Map&lt;String, Filter&gt; filterMap = new HashMap&lt;&gt;();
    filterMap.put(""jwt"", jwtFilter);
    shiroFilterFactoryBean.setFilters(filterMap);
}

Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.] with root cause

org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
    at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123) ~[shiro-core-1.3.2.jar:1.3.2]
    at org.apache.shiro.subject.Subject$Builder.&lt;init&gt;(Subject.java:627) ~[shiro-core-1.3.2.jar:1.3.2]
    at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56) ~[shiro-core-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.AccessControlFilter.getSubject(AccessControlFilter.java:97) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.authc.AuthenticationFilter.isAccessAllowed(AuthenticationFilter.java:80) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.authc.AuthenticatingFilter.isAccessAllowed(AuthenticatingFilter.java:123) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter.isAccessAllowed(BasicHttpAuthenticationFilter.java:210) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) ~[shiro-web-1.3.2.jar:1.3.2]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110) ~[spring-boot-actuator-1.5.4.RELEASE.jar:1.5.4.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
</code></pre>

<p>I found that the securityManager instance is null when invoke SecurityUtils.getSecurityManager().But I can't figure out why this happen.SecurityManager instance is generate by @Bean annotation and I didn't change it.(P.S. Not good at English.)</p>
","<spring><spring-mvc><shiro>","0",""
"47589610","org.apache.shiro.UnavailableSecurityManagerException","<p>God everyone, i have a big problem on my project.
I have looked everywhere in internet but nothin was found.
so this is my Bean</p>

<pre><code>@Named(value = ""loginBean"")
</code></pre>

<p>@SessionScoped
public class LoginBean implements Serializable {</p>

<pre><code>@EJB
private RoleServiceLocal rsbl;

@EJB
private ProfilServiceLocal psbl;

@EJB
private UtilisateurServiceLocal usbl;

private String username;
private String password;
private String newPass;
private String retapPass;
private String lastPass;
private String us = """";
private String per = """";
private String question;
private String recupResponse = """";
private String reponse;
private String creerDoleance, modifierDoleance,
        creerficheExec, modifierficheExec, creerRapportTest, modifierRapportTest, fiche, direction, creerDirection, modifierDirection,
        creerProduit, modifierProduit, creerClient, modifierClient, creerVersion, modifierVersion, technicien, creerTechnicien, modifierTechnicien,
        creerMAJ, modifierMAJ, MAJ, doleance, ficheExec, RapportTest, produit, client, version, technique, creerTechnique, modifierTechnique,
        profil, creerProfil, modifierProfil, associerProfil, associerRole, activerCompte, desactiverCompte, securite, administration;
private Utilisateur user;
private Utilisateur utilisateur;
private boolean remember = false;
private boolean admin;

@EJB //HUM Tu m'as vraiment dérangé.plus de 24h avant de me rappeller de te mettre.hum
private ProfilRoleServiceLocal prsbl;


public LoginBean() {
    user = new Utilisateur();
    utilisateur = new Utilisateur();

}

@PostConstruct
public void init() {

    List&lt;Role&gt; all = rsbl.getAll();
    if (all.isEmpty()) {
        this.rsbl.saveOne(new Role(1, ""Créer une Doléance"", ""doleance""));
        this.rsbl.saveOne(new Role(2, ""Modifier Doléance"", ""doleance""));
        this.rsbl.saveOne(new Role(3, ""Créer une fiche"", ""fiche""));
        this.rsbl.saveOne(new Role(4, ""Modifier une fiche"", ""fiche""));
        this.rsbl.saveOne(new Role(5, ""Créer une fiche d'exécution"", ""fiche d'exécution""));
        this.rsbl.saveOne(new Role(6, ""Modifier fiche d'exécution"", ""fiche d'exécution""));
        this.rsbl.saveOne(new Role(7, ""Créer une rapport de test"", ""rapport de test""));
        this.rsbl.saveOne(new Role(8, ""Modifier une rapport de test"", ""rapport de test""));
        this.rsbl.saveOne(new Role(9, ""Créer un produit"", ""produit""));
        this.rsbl.saveOne(new Role(10, ""Modifier un produit"", ""produit""));
        this.rsbl.saveOne(new Role(11, ""Créer un client"", ""client""));
        this.rsbl.saveOne(new Role(12, ""Modifier un client"", ""client""));
        this.rsbl.saveOne(new Role(13, ""Créer une direction"", ""direction""));
        this.rsbl.saveOne(new Role(14, ""Modifier une direction"", ""direction""));
        this.rsbl.saveOne(new Role(15, ""Créer une version"", ""version""));
        this.rsbl.saveOne(new Role(16, ""Modifier une version"", ""version""));
        this.rsbl.saveOne(new Role(17, ""Créer une mise à jour"", ""mise à jour""));
        this.rsbl.saveOne(new Role(18, ""Modifier une mise à jour"", ""mise à jour""));
        this.rsbl.saveOne(new Role(19, ""Créer une solution technique"", ""solution technique""));
        this.rsbl.saveOne(new Role(20, ""Modifier une solution technique"", ""solution technique""));
        this.rsbl.saveOne(new Role(21, ""Modifier planning"", ""planning""));
        this.rsbl.saveOne(new Role(22, ""Créer profil"", ""profil""));
        this.rsbl.saveOne(new Role(23, ""Modifier profil"", ""profil""));
        this.rsbl.saveOne(new Role(24, ""Créer securite"", ""securite""));
        this.rsbl.saveOne(new Role(25, ""Associer profil"", ""role""));
        this.rsbl.saveOne(new Role(26, ""Associer role"", ""role""));
        this.rsbl.saveOne(new Role(27, ""Activer compte"", ""compte""));
        this.rsbl.saveOne(new Role(28, ""Désactiver compte"", ""compte""));
        this.rsbl.saveOne(new Role(29, ""Modifier securite"", ""securite""));
    }

    List&lt;Profil&gt; alle = psbl.getAll();
    if (alle.isEmpty()) {
        this.psbl.saveOne(new Profil(1, ""Administrateur"", ""administrer""));
        this.psbl.saveOne(new Profil(2, ""Super Admin"", ""Super admin""));
        this.psbl.saveOne(new Profil(3, ""Directeur"", ""directeur""));
        this.psbl.saveOne(new Profil(4, ""Responsable"", ""Responsable""));
        this.psbl.saveOne(new Profil(5, ""Collaborateur"", ""collaborer""));
        this.psbl.saveOne(new Profil(6, ""Technicien"", ""technicien""));
    }

    List&lt;Profil&gt; profils = psbl.getBy(""nom"", ""Rohastrick"");
    UserTransaction tx = TransactionManager.getUserTransaction();
    if (profils.isEmpty()) {
        try {
            tx.begin();
            this.psbl.saveOne(new Profil(1, ""Rohastrick"", ""rot2rick""));
            List&lt;Role&gt; roles = this.rsbl.getAll();
            for (Role role : roles) {
                ProfilRole pr = new ProfilRole();
                pr.setRole(role);
                pr.setProfil(psbl.getOneBy(""nom"", ""Rohastrick""));
                prsbl.saveOne(pr);
            }

            Utilisateur ut = new Utilisateur();
            ut.setNom(""Rot2rick"");
            ut.setLogin(""Rohastrick"");
            ut.setPass(new Sha256Hash(""helen@"").toHex());
            ut.setEmail(""admin"");
            ut.setTelephone(""admin"");
            ut.setProfil(psbl.getOneBy(""nom"", ""Rohastrick""));
            ut.setActif(true);
            usbl.saveOne(ut);
            tx.commit();
        } catch (Exception e) {
            try {
                tx.rollback();
            } catch (IllegalStateException ex) {
                Logger.getLogger(FicheBean.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SecurityException ex) {
                Logger.getLogger(FicheBean.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SystemException ex) {
                Logger.getLogger(FicheBean.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AuthenticationException ex) {
                ex.printStackTrace();

            }
        }
    }

}

public boolean checkIntConnection() {
    boolean status = false;
    Socket sock = new Socket();
    InetSocketAddress address = new InetSocketAddress(""www.google.com"", 80);
    try {
        sock.connect(address, 3000);
        if (sock.isConnected()) {
            status = true;
        }
    } catch (Exception e) {

    } finally {
        try {
            sock.close();
        } catch (Exception e) {

        }
    }

    return status;
}

public void login() throws IOException {
    System.out.println(""Test Roler"");
    try {
        System.out.println(""user="" + username);
        System.out.println(""ps="" + password);
        user = usbl.getOneBy(""login"", username);
        if (user != null) {
            if (user.isActif() == false) {
                RequestContext context = RequestContext.getCurrentInstance();
                context.execute(""PF('error').show();"");
                username = """";
                return;
            }
        }

        if (user != null) {
            boolean test = new Sha256Hash(""admin"").toHex().equals(user.getPass());
            if (test &amp;&amp; user.isActif() == false) {

                RequestContext context = RequestContext.getCurrentInstance();
                context.execute(""PF('dialogpasse').show();"");
                return;
            }

        }

        UsernamePasswordToken token = new UsernamePasswordToken(username.trim(), password.trim());

        token.setRememberMe(false);

        try {
            SecurityUtils.getSubject().login(token);
        } catch (Exception e) {
            System.out.println(""""+ e.getMessage());
        }

        Subject subject = EntityRealm.getSubject();
        if (!username.equalsIgnoreCase(""admin"")) {

            if (subject.hasRole(""Créer une fiche"") || subject.hasRole(""Modifier une fiche"")
                    || subject.hasRole(""Créer une fiche d'exécution"") || subject.hasRole(""Modifier une fiche d'exécution"")
                    || subject.hasRole(""Créer une Doléance"") || subject.hasRole(""Modifier une Doléance"")
                    || subject.hasRole(""Créer un rapport de test"") || subject.hasRole(""Modifier un rapport de test"")
                    || subject.hasRole(""Créer un produit"") || subject.hasRole(""Modifier un produit"")
                    || subject.hasRole(""Créer une version à un produit"") || subject.hasRole(""Modifier une version du produit"")
                    || subject.hasRole(""Créer une mise à jour"") || subject.hasRole(""Modifier une mise à jour"")
                    || subject.hasRole(""Créer un Client"") || subject.hasRole(""Modifier Client"")
                    || subject.hasRole(""Créer un Technicien"") || subject.hasRole(""Modifier un Technicien"")
                    || subject.hasRole(""Créer une Solution Technique"") || subject.hasRole(""Modifier une Solution Technique"")
                    || subject.hasRole(""Créer une Direction"") || subject.hasRole(""Modifier une Direction"")) {
                this.administration = ""true"";
            } else {
                this.administration = ""false"";
            }

            //connexion();
            if (subject.hasRole(""Créer une fiche"")
                    || subject.hasRole(""Modifier fiche"") || subject.hasRole(""Modifier fiche"")
                    || subject.hasRole(""Supprimer fiche"")) {
                this.fiche = ""true"";
            } else {
                this.fiche = ""false"";
            }

            if (subject.hasRole(""Créer securite"") || subject.hasRole(""Modifier securite"")
                    || subject.hasRole(""Créer profil"") || subject.hasRole(""Modifier profil"")
                    || subject.hasRole(""Creer securite"") || subject.hasRole(""Associer profil"")
                    || subject.hasRole(""Associer role"") || subject.hasRole(""Activer compte"")
                    || subject.hasRole(""Désactiver compte"")) {
                this.securite = ""true"";
            } else {
                this.securite = ""false"";
            }

            if (subject.hasRole(""Créer une Doléance"")) {
                this.creerDoleance = ""true"";
            } else {
                this.creerDoleance = ""false"";
            }

            if (subject.hasRole(""Modifier une Doléance"")) {
                this.modifierDoleance = ""true"";
                this.doleance = ""true"";
            } else {
                this.modifierDoleance = ""false"";
                this.doleance = ""false"";
            }

            if (subject.hasRole(""Créer un rapport de test"") || subject.hasRole(""Modifier un rapport de test"")) {
                this.RapportTest = ""true"";
            } else {
                this.RapportTest = ""false"";
            }

            if (subject.hasRole(""Créer une fiche d'exécution"") || subject.hasRole(""Modifier une fiche d'exécution"")) {
                this.ficheExec = ""true"";
            } else {
                this.ficheExec = ""false"";
            }

            if (subject.hasRole(""Créer une fiche d'exécution"")) {
                this.creerficheExec = ""true"";
            } else {
                this.creerficheExec = ""false"";
            }

            if (subject.hasRole(""Modifier une fiche d'exécution"")) {
                this.modifierficheExec = ""true"";
            } else {
                this.modifierficheExec = ""false"";
            }

            if (subject.hasRole(""Créer un rapport de test"") || subject.hasRole(""Modifier un rapport de test"")) {
                this.RapportTest = ""true"";
            } else {
                this.RapportTest = ""false"";
            }

            if (subject.hasRole(""Créer un rapport de test"")) {
                this.creerRapportTest = ""true"";
            } else {
                this.creerRapportTest = ""false"";
            }

            if (subject.hasRole(""Modifier un rapport de test"")) {
                this.modifierRapportTest = ""true"";
            } else {
                this.modifierRapportTest = ""false"";
            }

            if (subject.hasRole(""Créer un produit"") || subject.hasRole(""Modifier un produit"")) {
                this.produit = ""true"";
            } else {
                this.produit = ""false"";
            }

            if (subject.hasRole(""Créer un produit"")) {
                this.creerProduit = ""true"";
            } else {
                this.creerProduit = ""false"";
            }

            if (subject.hasRole(""Modifier un produit"")) {
                this.modifierProduit = ""true"";
            } else {
                this.modifierProduit = ""false"";
            }

            if (subject.hasRole(""Créer un technicien"") || subject.hasRole(""Modifier un technicien"")) {
                this.technicien = ""true"";
            } else {
                this.technicien = ""false"";
            }

            if (subject.hasRole(""Créer un technicien"")) {
                this.creerTechnicien = ""true"";
            } else {
                this.creerTechnicien = ""false"";
            }

            if (subject.hasRole(""Modifier un technicien"")) {
                this.modifierTechnicien = ""true"";
            } else {
                this.modifierTechnicien = ""false"";
            }

            if (subject.hasRole(""Créer un client"") || subject.hasRole(""Modifier un client"")) {
                this.client = ""true"";
            } else {
                this.client = ""false"";
            }

            if (subject.hasRole(""Créer un client"")) {
                this.creerClient = ""true"";
            } else {
                this.creerClient = ""false"";
            }

            if (subject.hasRole(""Modifier un client"")) {
                this.modifierClient = ""true"";
            } else {
                this.modifierClient = ""false"";
            }

            if (subject.hasRole(""Créer un client"") || subject.hasRole(""Modifier un client"")) {
                this.client = ""true"";
            } else {
                this.client = ""false"";
            }

            if (subject.hasRole(""Créer un client"")) {
                this.creerClient = ""true"";
            } else {
                this.creerClient = ""false"";
            }

            if (subject.hasRole(""Modifier un client"")) {
                this.modifierClient = ""true"";
            } else {
                this.modifierClient = ""false"";
            }

            if (subject.hasRole(""Créer une solution technique"") || subject.hasRole(""Modifier une solution technique"")) {
                this.technique = ""true"";
            } else {
                this.technique = ""false"";
            }

            if (subject.hasRole(""Créer une solution technique"")) {
                this.creerTechnique = ""true"";
            } else {
                this.creerTechnique = ""false"";
            }

            if (subject.hasRole(""Modifier une solution technique"")) {
                this.modifierTechnique = ""true"";
            } else {
                this.modifierTechnique = ""false"";
            }

            if (subject.hasRole(""Créer une direction"") || subject.hasRole(""Modifier une direction"")) {
                this.direction = ""true"";
            } else {
                this.direction = ""false"";
            }

            if (subject.hasRole(""Créer une direction"")) {
                this.creerDirection = ""true"";
            } else {
                this.creerDirection = ""false"";
            }

            if (subject.hasRole(""Modifier une direction"")) {
                this.modifierDirection = ""true"";
            } else {
                this.modifierDirection = ""false"";
            }

            if (subject.hasRole(""Créer un produit"") || subject.hasRole(""Modifier un produit"")) {
                this.produit = ""true"";
            } else {
                this.produit = ""false"";
            }

            if (subject.hasRole(""Créer un produit"")) {
                this.creerProduit = ""true"";
            } else {
                this.creerProduit = ""false"";
            }

            if (subject.hasRole(""Modifier un produit"")) {
                this.modifierProduit = ""true"";
            } else {
                this.modifierProduit = ""false"";
            }

            if (subject.hasRole(""Créer une mise à jour"") || subject.hasRole(""Modifier une mise à jour"")) {
                this.MAJ = ""true"";
            } else {
                this.MAJ = ""false"";
            }

            if (subject.hasRole(""Créer une mise à jour"")) {
                this.creerMAJ = ""true"";
            } else {
                this.creerMAJ = ""false"";
            }

            if (subject.hasRole(""Modifier une mise à jour"")) {
                this.modifierMAJ = ""true"";
            } else {
                this.modifierMAJ = ""false"";
            }

            if (subject.hasRole(""Créer un client"") || subject.hasRole(""Modifier un client"")) {
                this.client = ""true"";
            } else {
                this.client = ""false"";
            }

            if (subject.hasRole(""Créer un client"")) {
                this.creerClient = ""true"";
            } else {
                this.creerClient = ""false"";
            }

            if (subject.hasRole(""Modifier un client"")) {
                this.modifierClient = ""true"";
            } else {
                this.modifierClient = ""false"";
            }

            if (subject.hasRole(""Créer un profil"") || subject.hasRole(""Modifier un profil"")) {
                this.profil = ""true"";
            } else {
                this.profil = ""false"";
            }

            if (subject.hasRole(""Créer un profil"")) {
                this.creerProfil = ""true"";
            } else {
                this.creerProfil = ""false"";
            }

            if (subject.hasRole(""Modifier un profil"")) {
                this.modifierProfil = ""true"";
            } else {
                this.modifierProfil = ""false"";
            }

            if (subject.hasRole(""Associer un profil"")) {
                this.associerProfil = ""true"";
            } else {
                this.associerProfil = ""false"";
            }

            if (subject.hasRole(""Associer role"")) {
                this.associerRole = ""true"";
            } else {
                this.associerRole = ""false"";
            }

            if (subject.hasRole(""Activer un compte"")) {
                this.activerCompte = ""true"";
            } else {
                this.activerCompte = ""false"";
            }

            if (subject.hasRole(""Désactiver un compte"")) {
                this.desactiverCompte = ""true"";
            } else {
                this.desactiverCompte = ""false"";
            }

        }

        SavedRequest savedRequest = WebUtils.getAndClearSavedRequest(Faces.getRequest());
        Faces.redirect(savedRequest != null ? savedRequest.getRequestUrl() : ""index.xhtml"");
    } catch (AuthenticationException e) {
        e.printStackTrace();
        FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                ""Nom d'utlisateur ou mot de passe incorrect"", """");
        FacesContext.getCurrentInstance().addMessage("""", mf);
    }
    //return ""index"";
}

public String currentUser() {
    Utilisateur user = EntityRealm.getUser();
    if (user == null) {
        return ""Admin"";
    }
    return EntityRealm.getUser().getLogin();
}

public Date sessionTime() {
    return EntityRealm.getSubject().getSession().getStartTimestamp();
}

public void logout() {
    try {
        EntityRealm.getSubject().logout();
        Faces.redirect(""login.xhtml"");
        username = """";
    } catch (IOException ex) {
    }

}

public void mot() {
    System.out.println(""test"");
}

public void modifierPasse() {
    System.out.println(""test"");
    System.out.println(newPass);
    System.out.println(retapPass);
    if (newPass.trim().equals(retapPass.trim())) {
        user.setPass(new Sha256Hash(newPass.trim()).toHex());
        user.setQuestion(question);
        user.setReponse(reponse);
        usbl.updateOne(user);
        question = """";
        reponse = """";
        RequestContext.getCurrentInstance().execute(""PF('dialogpasse').hide();"");

        FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_INFO,
                ""Mot de passe corriger"", """");
        FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
    } else {
        FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                ""Les mots de passe ne concorde pas"", """");
        FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
    }
}

public void modifierPasse2() {
    if (new Sha256Hash(lastPass).toHex().equals(EntityRealm.getUser().getPass())) {
        if (newPass.trim().equals(retapPass.trim())) {
            if (new Sha256Hash(newPass).toHex().equals(EntityRealm.getUser().getPass())) {
                FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                        ""Tapez un mot de passe différent de l'ancien"", """");
                FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
                newPass = """";
                lastPass = """";
                retapPass = """";
            } else {
                EntityRealm.getUser().setPass(new Sha256Hash(newPass.trim()).toHex());
                usbl.updateOne(EntityRealm.getUser());
                FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_INFO,
                        ""Mot de passe corrigé"", """");
                FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
                RequestContext context = RequestContext.getCurrentInstance();
                context.execute(""PF('dialogpasse').hide()"");
            }
        } else {
            FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                    ""Les mots de passe ne concorde pas"", """");
            FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
            newPass = """";
            lastPass = """";
            retapPass = """";
        }

    } else {
        FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                ""mot de passe incorrect!!!"", """");
        FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
        newPass = """";
        lastPass = """";
        retapPass = """";
    }
}

public void reinitialiserPasse() {
    Utilisateur u = this.usbl.getOneBy(""login"", per);
    if (u.isActif() == true) {
        if (reponse.equals(u.getReponse())) {
            u.setPass(new Sha256Hash(""admin"").toHex());
            u.setQuestion(null);
            u.setReponse(null);
            usbl.updateOne(u);
            question = """";
            reponse = """";
            RequestContext context = RequestContext.getCurrentInstance();
            context.execute(""PF('dialogRecup').hide();"");
            FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_INFO,
                    ""Mot de passe réinitialisé"", """");
            FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
        } else {
            FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                    ""La reponse est fausse"", """");
            FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
        }
    }

}

public String recupererQuestion() {
    if (!per.equals("""")) {
        Utilisateur u = this.usbl.getOneBy(""login"", per);
        String quest = """";
        if (u != null) {
            if (!u.getPass().equals(new Sha256Hash(""admin"").toHex())) {
                if (u.isActif() == true) {
                    quest = u.getQuestion();
                    RequestContext context = RequestContext.getCurrentInstance();
                    context.execute(""PF('dialogRecup').show();"");
                    context.execute(""PF('dialogOublie').hide();"");
                    return quest;
                } else {
                    per = """";
                    RequestContext context = RequestContext.getCurrentInstance();
                    context.execute(""PF('dialogOublie').hide();"");
                    FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                            ""Votre compte est inactif,contactez l'administrateur"", """");
                    FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
                }
            } else {
                RequestContext context = RequestContext.getCurrentInstance();
                context.execute(""PF('dialogOublie').hide();"");
                FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_INFO,
                        ""Connectez vous à votre compte pour changer votre mot de passe"", """");
                FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
            }
        } else {
            per = """";
            FacesMessage mf = new FacesMessage(FacesMessage.SEVERITY_FATAL,
                    ""le login saisi est inconnu"", """");
            FacesContext.getCurrentInstance().addMessage(""erreur_login"", mf);
        }
    }
    return """";
}

this is the JSF page
&lt;h:form id=""login"" &gt;
        &lt;p:growl id=""message"" life=""4000"" showSummary=""true"" /&gt;
        &lt;p:outputPanel autoUpdate=""true"" style=""background-image:""&gt;
            &lt;div class=""card login-panel ui-fluid"" style="" border-radius: 10px;""&gt;
                &lt;div class=""ui-g""&gt;
                    &lt;div class=""ui-g-12""&gt;
                        &lt;p:graphicImage name=""images/logo2x.png"" library=""ultima-layout"" /&gt;
                    &lt;/div&gt;
                    &lt;div class=""ui-g-12""&gt;
                        &lt;h:panelGroup styleClass=""md-inputfield""&gt;
                            &lt;p:inputText id=""identifiant"" value=""#{loginBean.username}"" /&gt;
                            &lt;label&gt;Email...&lt;/label&gt;
                        &lt;/h:panelGroup&gt;
                    &lt;/div&gt;
                    &lt;div class=""ui-g-12""&gt;
                        &lt;h:panelGroup styleClass=""md-inputfield""&gt;
                            &lt;p:password id=""motdepasse"" value=""#{loginBean.password}"" /&gt;
                            &lt;label&gt;Mot de Passe...&lt;/label&gt;
                        &lt;/h:panelGroup&gt;    
                    &lt;/div&gt;
                    &lt;div class=""ui-g-12""&gt;
                        &lt;p:commandButton process=""@form""  value=""Se connecter"" icon=""ui-icon-person"" update=""message"" actionListener=""#{loginBean.login()}"" /&gt;
                        &lt;p:commandButton value=""Mot de passe oublié"" icon=""ui-icon-help"" styleClass=""secondary"" onclick=""PF('dialogOublie').show()""/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/p:outputPanel&gt;
    &lt;/h:form&gt;
</code></pre>

<p>and the error</p>

<p>Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.</p>

<p>I'm so lost please just help me.</p>

<p>Thanks and have a nice day.</p>
","<shiro>","0",""
"42558355","Apache Shiro asks for certificate in anon mode","<p>I'm using Shiro with config having following URLS:</p>

<pre><code>[urls]

/api/version = anon
/** = anon
/callback = callbackFilter
/logout = logout
</code></pre>

<p>When accessing /api/login URL I get SunCertPathBuilderException: unable to find valid certification path to requested target.</p>

<p>So, basically, the certificate is still required, which I hoped it would be not, given anon access level.</p>

<p>Any ideas?</p>
","<shiro>","0",""
"39490060","Advice on using Shiro to restrict resultset","<p>We have an application that allows users to see a list of documents.</p>

<p>Depending on the role of the user and the properties of the document, we want to filter out some of the documents on the list. For example we want to allow the user to view a list with only  the documents that he created and a grey out line for the rest.</p>

<p>At the moment the application executes an SQL SELECT command which returns a list of entries that the user can and cannot see. We want afterwards to restrict this resultset according to the user's permissions and roles. 
Our questions are the following:</p>

<ul>
<li>Can this be done via Shiro?</li>
<li>What is the proper way to place such restrictions when using Shiro? e.g. shall we restrict the list from the start, using the SELECT statement ?</li>
</ul>
","<java><authorization><shiro>","0",""
"47265399","How to configure Shiro plugins in Grails 3?","<p>Grails3 is used in spring security Shiro, but do not know how to use, the feeling is basically used spring security core.</p>

<p>My configuration is as follows：</p>

<pre><code>package com.system

class Permission {

    Person person
    String permission

    Permission(Person person, String permission) {
        this.person = person
        this.permission = permission
    }

    static constraints = {
        authority nullable: true
        permission unique: ['person', 'authority']
    }
}

grails.plugin.springsecurity.userLookup.userDomainClassName = 
'com.system.Person'
grails.plugin.springsecurity.userLookup.authorityJoinClassName  = 
'com.system.PersonAuthority'
grails.plugin.springsecurity.authority.className = 'com.system.Authority'
grails.plugin.springsecurity.shiro.active = true
grails.plugin.springsecurity.logout.postOnly = false
grails.plugin.springsecurity.shiro.permissionDomainClassName = 
'com.system.Permission'
grails.plugin.springsecurity.controllerAnnotations.staticRules = [
    [pattern: '/',               access: ['permitAll']],
    [pattern: '/error',          access: ['permitAll']],
    [pattern: '/notFound',       access: ['permitAll']],
    [pattern: '/index',          access: ['permitAll']],
    [pattern: '/index.gsp',      access: ['permitAll']],
    [pattern: '/shutdown',       access: ['permitAll']],
    [pattern: '/assets/**',      access: ['permitAll']],
    [pattern: '/uploads/**',     access: ['permitAll']],
    [pattern: '/**/js/**',       access: ['permitAll']],
    [pattern: '/**/css/**',      access: ['permitAll']],
    [pattern: '/**/images/**',   access: ['permitAll']],
    [pattern: '/**/fonts/**',    access: ['permitAll']],
    [pattern: '/**/favicon.ico', access: ['permitAll']]
]

grails.plugin.springsecurity.filterChain.chainMap = [
    [pattern: '/assets/**',      filters: 'none'],
    [pattern: '/**/js/**',       filters: 'none'],
    [pattern: '/**/css/**',      filters: 'none'],
    [pattern: '/**/images/**',   filters: 'none'],
    [pattern: '/**/fonts',       filters: 'none'],
    [pattern: '/**/favicon.ico', filters: 'none'],
    [pattern: '/**',             filters: 'JOINED_FILTERS']
]
</code></pre>
","<shiro><grails3>","0",""
"47131535","JdbcRealm in apache shiro","<p>I am new to <code>apache-shiro</code>. I tried to implement my <code>CustomRealm</code>. But I am getting error.</p>

<pre class=""lang-java prettyprint-override""><code>public class MyCustomRealm extends JDBCRealm {

private Map&lt;String, String&gt; credentials = new HashMap&lt;&gt;();
private Map&lt;String, Set&lt;String&gt;&gt; roles = new HashMap&lt;&gt;();
private Map&lt;String, Set&lt;String&gt;&gt; perm = new HashMap&lt;&gt;();

{
    credentials.put(""user"", ""password"");
    credentials.put(""user2"", ""password2"");
    credentials.put(""user3"", ""password3"");

}

protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken token ) throws AuthenticationException
{

    UsernamePasswordToken uToken = (UsernamePasswordToken) token;

    if( uToken.getUsername() == null || uToken.getUsername().isEmpty()
            || !credentials.containsKey(uToken.getUsername()) )
    {
        throw new UnknownAccountException(""username not found!"");
    }

    return new SimpleAuthenticationInfo(uToken.getUsername(), credentials.get(uToken.getUsername()), getName());
}
}
</code></pre>

<p>and my <code>SecurityManager</code> implementation is</p>

<pre class=""lang-java prettyprint-override""><code>@Component
public class CustomSecurityManager {
public Subject getSubject()
{
    Realm realm = (Realm) new MyCustomRealm();
    SecurityManager securityManager = new DefaultSecurityManager(realm);
    SecurityUtils.setSecurityManager(securityManager);
    return SecurityUtils.getSubject();
}

}
</code></pre>

<p>But When I run the application, it throws error stating <code>Cannot cast MyCustomRealm to shiro.Realm</code></p>

<p>How can I implement my Custom Realm?</p>
","<spring-boot><shiro>","0",""
"47078762","Session expired but I can still visit block urls with Spring Shiro","<p>When the session expired,I can't read informations in session.But I can still visit my block urls.Then I can only by visit /logout after that the shiro work again.What happened ? I need shiro blocks when session expired,how can I do?</p>

<pre><code>Map&lt;String, String&gt; filterChainDefinitionMap = new LinkedHashMap&lt;String, String&gt;();

    filterChainDefinitionMap.put(""/favicon.ico"", ""anon"");
    filterChainDefinitionMap.put(""/images/**"", ""anon"");
    filterChainDefinitionMap.put(""/js/**"", ""anon"");
    filterChainDefinitionMap.put(""/css/**"", ""anon"");
    filterChainDefinitionMap.put(""/fonts/**"", ""anon"");

    filterChainDefinitionMap.put(""/logout"", ""logout"");

    filterChainDefinitionMap.put(""/login"", ""anon"");
    filterChainDefinitionMap.put(""/register"", ""anon"");
    filterChainDefinitionMap.put(""/admin/**"", ""roles[admin],perms[admin]"");
    filterChainDefinitionMap.put(""/confirmorder/**"", ""authc"");

    shiroFilterFactoryBean.setLoginUrl(""/login"");

    shiroFilterFactoryBean.setSuccessUrl(""/index"");
</code></pre>

<p>this is my shiroconfig </p>
","<spring-boot><shiro>","0",""
"46421057","what's different about sessionDAO's and securityManager's cacheManager in shiro ,can I use same one","<p>what's different about sessionDAO's cacheManager and securityManager's cacheManager in shiro ,can I use same one .
my cacheManager is redis cache implementation    。</p>

<pre><code>public class CacheSessionDAO extends EnterpriseCacheSessionDAO implements SessionDAO {
</code></pre>

<p>when I config sessionDAO and securityManager's use same one cacheManager . The readSession method will  often called .
I want to know what's happed?</p>
","<shiro>","0",""
"46295453","how to make wkhtmltopdf work under shiro?","<p>when I did not set shiro(org.apache.shiro.*) in my web app, the wkhtmltopdf work fine..
even after I set the code as follows, the page always loading to generate pdf...</p>

<pre><code>filterChainDefinitionMap.put(""/**"", ""anon"");
shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);
</code></pre>

<p>How to solve this issue?</p>
","<wkhtmltopdf><shiro>","0",""